{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/react/index.js","webpack:///./node_modules/lodash/fp.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/emptyObject.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/react-dom/index.js","webpack:///./src/constants.tsx","webpack:///./node_modules/three/build/three.module.js","webpack:///./src/game/Movable.tsx","webpack:///./src/game/Player.tsx","webpack:///./src/util.tsx","webpack:///./src/game/Renderer.tsx","webpack:///./src/game/Projectile.tsx","webpack:///./src/game/Client.tsx","webpack:///./src/game/Server.tsx","webpack:///./src/components/Debug.tsx","webpack:///./src/components/Game.tsx","webpack:///./src/index.tsx","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/style.css","webpack:///./src/style.css?7528","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/lodash/fp/placeholder.js","webpack:///./node_modules/lodash/fp/_mapping.js","webpack:///./node_modules/lodash/fp/_baseConvert.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/lodash.min.js","webpack:///./node_modules/fbjs/lib/isNode.js","webpack:///./node_modules/fbjs/lib/isTextNode.js","webpack:///./node_modules/fbjs/lib/containsNode.js","webpack:///./node_modules/fbjs/lib/shallowEqual.js","webpack:///./node_modules/fbjs/lib/getActiveElement.js","webpack:///./node_modules/fbjs/lib/ExecutionEnvironment.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/react/cjs/react.production.min.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_","runInContext","byteToHex","toString","substr","buf","offset","bth","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rnds","Array","Math","random","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","validateFormat","format","condition","a","b","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","arguments","length","key","v1","v4","uuid","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","GAME_WIDTH","GAME_HEIGHT","PLAYER_WIDTH","PLAYER_HEIGHT","PROJECTILE_WIDTH","PROJECTILE_HEIGHT","PLAYER_SPEED","PROJECTILE_SPEED","KEYCODES","LEFT","UP","RIGHT","DOWN","Q","EventDispatcher","Number","EPSILON","pow","isInteger","isFinite","floor","sign","x","Function","match","output","index","nextKey","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","min","max","vector","matrix","y","z","quaternion","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","Quaternion","w","_x","_y","_z","_w","Vector3","Matrix3","defineProperties","width","set","height","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","clone","constructor","copy","v","add","warn","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","compose","position","decompose","sx","sy","sz","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","points","closestPoint","box","p1","p2","sphere","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","data","Box3","Infinity","Sphere","Plane","constant","Frustum","p0","p3","p4","p5","planes","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","canvas","HTMLCanvasElement","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","getDataURL","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","hsl","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_pars_maps","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","isArray","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","UniformsLib","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAttributes","gl","buffers","WeakMap","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","q1","object3DId","Object3D","parent","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","Face3","materialIndex","vertexNormals","vertexColors","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","serialize","library","element","JSON","stringify","parameters","shape","material","uuids","extractFromCache","cache","values","recursive","parse","child","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","obj","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","isMesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","isPoints","isLine","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","morphAttribute","segCenter","segDir","startP","startEnd","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","MeshBasicMaterial","combine","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","setValues","ShaderMaterial","defines","linewidth","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Line3","Triangle","Mesh","drawMode","updateMorphTargets","absNumericalSort","CubeTexture","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isMeshBasicMaterial","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","edgeList","projectedPoint","minDistance","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","lines","addLineNumbers","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","logarithmicDepthBuffer","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","toneMapping","toneMappingName","getToneMappingFunction","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","capabilities","programs","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","allocateBones","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","painterSortStable","reversePainterSortStable","WebGLRenderLists","lists","scene","list","renderItems","renderItemsIndex","opaque","init","renderItem","intersectPoint","worldPosition","worldScale","matrixPosition","offsetMatrix","identityMatrix","WebGLLights","light","halfWidth","halfHeight","state","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderStates","renderStates","renderState","lightsArray","shadowsArray","spritesArray","setupLights","pushLight","pushShadow","shadowLight","pushSprite","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","result","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","groupMaterial","renderBufferDirect","autoUpdate","render","faceCount","_gl","_state","BLEND","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","CanvasTexture","WebGLSpriteRenderer","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","uvOffset","uvScale","fogType","fogDepth","fillStyle","fillRect","sprites","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","CULL_FACE","vertexAttribPointer","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","density","setBlending","setMask","drawElements","TRIANGLES","reset","WebGLTextures","utils","_canvas","_isWebGL2","WebGL2RenderingContext","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","filterFallback","NEAREST","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","deallocateTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","slot","frame","updateVideoTexture","__version","complete","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","textureNeedsPowerOfTwo","HTMLImageElement","ImageBitmap","makePowerOfTwo","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","uploadTexture","textureType","extension","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","device","frameData","poseTarget","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","userHeight","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLRenderer","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","background","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","_this","_isContextLost","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","maxAnisotropy","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","clearColor","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setMaterial","frontFaceCW","setLineWidth","lineWidth","SCISSOR_TEST","webglType","boundTexture","apply","calls","triangles","autoReset","mode","instanceCount","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","planeCamera","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","drawArraysInstancedANGLE","maxInstancedCount","drawElementsInstancedANGLE","vr","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","stopAnimation","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","compile","isLight","initMaterial","warned","isAnimating","onAnimationFrame","requestAnimationLoopFrame","requestAnimationFrame","animationLoop","time","renderObjects","overrideMaterial","isArrayCamera","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","animate","projectObject","isSprite","opaqueObjects","transparentObjects","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","pixels","texSubImage2D","FogExp2","Fog","Scene","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","CompressedTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","isSpriteMaterial","guessSizeSq","addLevel","getObjectForDistance","bone","isBone","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","isGroup","readyState","HAVE_CURRENT_DATA","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","sum","signedArea","insertNode","removeNode","again","three_module_area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","an","bp","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","extrudePts","splineTube","binormal","position2","ahole","hl","placeholder","curveSegments","steps","amount","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","DataTextureLoader","_parser","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","src","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","three_module_px","three_module_py","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","QuaternionLinearInterpolant","QuaternionKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","getValueSize","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","BlendingMode","textureLoader","materialLoader","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","lastIndexOf","JSONLoader","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","parseModel","influencesPerVertex","parseSkin","dstVertices","srcVertices","morphColors","parseMorphing","outputAnimations","morphAnimationClips","parseAnimations","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","then","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","instance","eyeSep","eyeRight","eyeLeft","AudioContext","webkitAudioContext","setContext","AudioLoader","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","decodeAudioData","audioBuffer","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","lineGeometry","coneGeometry","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","ascSort","intersectObject","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","RegExp","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","PointCloud","setFromCamera","coords","intersectObjects","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","Movable_Movable","[object Object]","history","fp","move","save","Player_Player","controls","down","speed","dt","super","drawGrid","spacing","beginPath","strokeStyle","stroke","vectorToString","frameDelta","clientFrame","serverFrame","htt","config","clientOWD","serverOWD","refreshRate","Renderer_Renderer","player","projectiles","ctx","boundTick","tick","clearRect","setInterval","clearInterval","projectile","clean","filteredProjectiles","deleted","Projectile_Projectile","isInPlay","Client_Client","keydown","keyup","click","server","reconciliation","reconcile","isMissing","isDeleted","prediction","isPressed","stopPropagation","keyCode","which","keypress","rect","getBoundingClientRect","clientX","clientY","Server_Server","client","updateState","updateDelete","isFound","components_Debug","react","props","boundUpdate","boundHandleCheck","handleCheck","boundHandleText","handleText","clientPosition","serverPosition","speedhack","checked","num","className","components_Game","p1Canvas","serverCanvas","ref","createElement","body","appendChild","react_dom","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","fn","memo","stylesInDom","isOldIE","all","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","refs","addStyle","listToStyles","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","attrs","addAttrs","el","setAttribute","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","childNodes","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals","rng","bytesToUuid","ii","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","getTime","nsecs","tmh","aliasToReal","each","eachRight","entries","entriesIn","extend","extendAll","extendAllWith","extendWith","first","conforms","__","F","allPass","always","any","anyPass","assoc","assocPath","complement","contains","dissoc","dissocPath","dropLast","dropLastWhile","identical","indexBy","invertObj","juxt","omitAll","nAry","pathEq","pathOr","pickAll","pipe","pluck","prop","propEq","propOr","symmetricDifference","symmetricDifferenceBy","symmetricDifferenceWith","takeLast","takeLastWhile","unapply","unnest","useWith","where","whereEq","zipObj","aryMethod","3","4","aryRearg","iterateeAry","dropRightWhile","dropWhile","every","find","findFrom","findIndex","findIndexFrom","findKey","findLast","findLastFrom","findLastIndex","findLastIndexFrom","findLastKey","flatMap","flatMapDeep","flatMapDepth","forEachRight","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","partition","reduce","reduceRight","reject","some","takeRightWhile","takeWhile","iterateeRearg","methodRearg","assignInAllWith","assignInWith","assignAllWith","assignWith","differenceBy","differenceWith","getOr","intersectionBy","intersectionWith","isEqualWith","isMatchWith","mergeAllWith","mergeWith","padChars","padCharsEnd","padCharsStart","pullAllBy","pullAllWith","rangeStep","rangeStepRight","setWith","sortedIndexBy","sortedLastIndexBy","unionBy","unionWith","updateWith","xorBy","xorWith","zipWith","methodSpread","assignAll","assignInAll","defaultsAll","defaultsDeepAll","invokeArgs","invokeArgsMap","mergeAll","partial","partialRight","without","zipAll","mutate","fill","pull","pullAll","pullAt","assignIn","defaults","defaultsDeep","unset","bindKey","curry","curryRight","realToAlias","remap","curryN","curryRightN","includesFrom","indexOfFrom","lastIndexOfFrom","propertyOf","restFrom","spreadFrom","trimChars","trimCharsEnd","trimCharsStart","skipFixed","castArray","flow","flowRight","iteratee","mixin","rearg","skipRearg","difference","eq","gt","gte","isEqual","lt","lte","matchesProperty","overArgs","rangeRight","subtract","zip","zipObject","zipObjectDeep","fallbackHolder","baseAry","cloneArray","wrapImmutable","cloner","baseConvert","util","setPlaceholder","isLib","isObj","cap","fixed","immutable","forceCurry","forceFixed","forceRearg","pristine","helpers","ary","isError","isFunction","isWeakMap","toInteger","toPath","aryMethodKeys","wrappers","arity","pairs","pair","nthArg","indexes","castCap","overArg","baseArity","castFixed","otherArgs","flatSpread","castRearg","cloneByPath","nested","createConverter","realName","methodName","oldOptions","newUtil","newFunc","newOptions","wrapped","wrapper","createCloner","aryKey","otherName","afterRearg","alias","webpackPolyfill","deprecate","eval","__WEBPACK_AMD_DEFINE_RESULT__","A","S","O","has","I","R","Un","W","L","U","D","Rn","On","Qn","M","$","NaN","Z","V","K","G","H","J","Y","X","nn","tn","rn","en","un","on","cn","ln","sn","hn","pn","_n","vn","gn","dn","yn","bn","xn","jn","wn","mn","An","kn","Sn","In","zn","Wn","Bn","Ln","\\","'","\n","\r"," "," ","Cn","Dn","Mn","global","Tn","self","$n","Fn","nodeType","Nn","Pn","Zn","process","qn","types","Vn","isArrayBuffer","Kn","isDate","Gn","isMap","Hn","isRegExp","Jn","isSet","Yn","Xn","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","nt","&","<",">","\"","tt","&amp;","&lt;","&gt;","&quot;","&#39;","rt","du","of","$e","En","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","__data__","uf","pf","Xu","Se","ir","it","au","st","ot","ft","ct","eo","Cr","zu","mi","writable","ht","Vu","Iu","_t","gu","input","Ur","_o","Ir","Ae","po","Mr","Wu","Dr","Rr","byteOffset","byteLength","zr","no","Yu","Ee","hf","lf","ve","_e","ni","yo","yt","bt","xt","ju","jt","wt","ke","mt","io","At","oo","Et","kt","Sr","De","St","Ot","wi","ci","It","Rt","zt","Wt","Ui","Lt","hr","qe","Ut","Mt","se","_i","he","$t","Ft","si","Me","qt","Tu","Jt","Ht","Pu","Vt","ze","Bi","Kt","Gt","lu","xe","We","Ie","Ru","Yt","bu","Su","Qt","Xt","ye","Wr","tr","lr","er","bi","ur","xr","Oi","Mi","or","fr","bo","Be","pr","_r","gr","dr","yr","br","lo","jr","wr","thisArg","mr","Ar","Er","kr","xo","Ou","Or","vi","Br","Li","Lr","Tr","$r","Oe","Fr","Nr","Zr","qr","Du","Cu","Vr","ro","Kr","ue","Jr","Gr","Hr","pe","thru","ge","so","Re","plant","Yr","Bt","Qr","Xr","ne","Si","re","mu","ee","ku","go","Le","ie","Ju","Au","oe","C","E","fe","fo","Pr","ri","le","Pe","Ki","$u","je","we","vu","gi","xi","Te","Ue","Ci","Ce","ui","Fe","Ne","Ze","Ve","Ke","Ti","Ge","He","Je","Ye","Xe","nu","uo","tu","ru","eu","ou","Ko","leading","maxWait","trailing","cancel","ao","flush","fu","hu","_u","yu","ai","xu","wu","ji","done","Lu","Eu","valueOf","Bu","Uu","Tf","Mu","Fu","chain","Nu","rr","Zu","qu","pick","Ku","Gu","Hu","Qu","ti","ei","oi","IE_PROTO","li","hi","Buffer","pi","Symbol","getPrototypeOf","di","yi","isConcatSpreadable","iterator","toStringTag","Ai","clearTimeout","Ei","ki","Ii","Ri","isBuffer","zi","Wi","Di","$i","Fi","Ni","Pi","Zi","qi","Vi","Gi","Hi","Ji","Yi","Qi","Xi","templateSettings","escape","interpolate","variable","imports","co","resolve","vo","jo","wo","mo","Ao","Eo","ko","So","Oo","Io","Ro","zo","Wo","Bo","Lo","Uo","Co","Do","Mo","To","$o","Fo","No","Po","Zo","qo","Vo","Go","Ho","Jo","Yo","Qo","Xo","nf","tf","rf","ef","ff","_f","vf","gf","yf","xf","jf","wf","Sf","mf","Af","Ef","kf","Of","If","nr","Rf","zf","Wf","Bf","Lf","Uf","Cf","Df","Mf","$f","Ff","Nf","Pf","Zf","qf","Vf","Kf","Gf","Hf","Jf","Yf","Qf","Xf","nc","tc","rc","ec","after","bindAll","chunk","compact","cond","vt","countBy","uu","iu","debounce","defer","delay","drop","dropRight","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","groupBy","initial","invert","invertBy","invokeMap","keyBy","keysIn","memoize","method","methodOf","omit","omitBy","once","orderBy","over","overEvery","overSome","pickBy","rest","shuffle","sortBy","sortedUniq","sortedUniqBy","spread","take","takeRight","tap","throttle","toPairs","toPairsIn","toPlainObject","unary","uniq","uniqBy","uniqWith","unzip","unzipWith","valuesIn","words","xor","attempt","camelCase","capitalize","cloneDeep","cloneDeepWith","cloneWith","conformsTo","deburr","defaultTo","endsWith","escapeRegExp","hasIn","includes","inRange","invoke","isArguments","isArrayLike","isArrayLikeObject","isBoolean","isElement","isLength","isMatch","isNative","isNil","isNull","isNumber","isObject","isObjectLike","isPlainObject","isSafeInteger","isString","isSymbol","isUndefined","isWeakSet","kebabCase","lowerCase","lowerFirst","maxBy","mean","meanBy","minBy","stubArray","stubFalse","stubObject","stubString","stubTrue","nth","noConflict","noop","pad","padEnd","padStart","sample","snakeCase","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","startCase","startsWith","sumBy","template","sourceURL","toFinite","toLength","toLower","toNumber","toSafeInteger","toUpper","trimEnd","trimStart","truncate","separator","omission","uniqueId","upperCase","upperFirst","commit","defaultView","ownerDocument","isNode","isTextNode","containsNode","innerNode","compareDocumentPosition","is","objA","objB","keysA","keysB","doc","activeElement","canUseDOM","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","isInWorker","ba","ea","fa","ja","ka","_caughtError","_hasCaughtError","_rethrowError","_hasRethrowError","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","hasCaughtError","clearCaughtError","rethrowCaughtError","oa","pa","ra","extractEvents","eventTypes","sa","phasedRegistrationNames","ta","registrationName","ua","va","dependencies","wa","xa","Ca","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Da","Ea","Fa","Ga","currentTarget","Ha","Ia","Ja","Ka","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","La","Ma","Na","Oa","stateNode","disabled","Pa","Qa","Ra","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","Sa","Ta","Ua","tag","Va","Xa","bb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","db","dispatchConfig","eb","_targetInst","fb","gb","hb","ib","jb","alternate","kb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","lb","mb","documentElement","_startText","_fallbackText","nb","ob","pb","eventPhase","bubbles","cancelable","timeStamp","defaultPrevented","isTrusted","nativeEvent","Interface","isDefaultPrevented","returnValue","sb","eventPool","tb","destructor","rb","getPooled","cancelBubble","persist","ub","vb","wb","xb","yb","documentMode","zb","Ab","Bb","Kb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","Lb","Mb","Nb","Ob","Rb","Pb","ctrlKey","altKey","metaKey","Qb","Sb","Tb","injectFiberControlledHostComponent","Ub","Vb","Wb","restoreControlledState","Xb","Yb","Zb","$b","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","cc","dc","fc","date","datetime","datetime-local","email","month","number","password","tel","week","gc","hc","correspondingUseElement","ic","jc","lc","_valueTracker","getOwnPropertyDescriptor","stopTracking","kc","mc","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","oc","pc","qc","sc","uc","vc","wc","xc","yc","zc","Ac","displayName","$$typeof","Bc","_debugOwner","_debugSource","fileName","lineNumber","Cc","Dc","Ec","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","Sc","Tc","Uc","Gc","Hc","Fc","setAttributeNS","Vc","defaultChecked","defaultValue","_wrapperState","initialChecked","Wc","Xc","initialValue","controlled","Yc","Zc","$c","tabIndex","change","cd","dd","ed","fd","gd","hd","jd","detachEvent","kd","ld","md","nd","od","pd","_isInputEventSupported","qd","rd","Alt","Control","Meta","Shift","sd","getModifierState","td","ud","screenX","screenY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","srcElement","toElement","vd","mouseEnter","mouseLeave","wd","parentWindow","xd","effectTag","yd","_reactInternalFiber","zd","Ad","sibling","Bd","Dd","animationName","pseudoElement","Ed","clipboardData","Fd","Gd","charCode","Hd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Id","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Jd","locale","Kd","dataTransfer","Ld","touches","targetTouches","changedTouches","Md","Nd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Od","Pd","Qd","isInteractive","Rd","isInteractiveTopLevelEventType","Sd","Td","Ud","targetInst","ancestors","containerInfo","topLevelType","Vd","Wd","Xd","Yd","Zd","$d","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","animationend","animationiteration","animationstart","transitionend","transition","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCancel","topChange","topClick","topClose","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topScroll","topSelectionChange","topTextInput","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topWheel","topAbort","topCanPlay","topCanPlayThrough","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topLoadedData","topLoadedMetadata","topPause","topPlay","topPlaying","topProgress","topRateChange","topSeeked","topSeeking","topStalled","topSuspend","topTimeUpdate","topVolumeChange","topWaiting","textContent","contentEditable","select","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","onSelect","pendingProps","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","isReactComponent","pendingChildren","implementation","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","baseState","callbackList","hasForceUpdate","isInitialized","capturedValues","Set","Qe","partialState","isReplace","isForced","capturedValue","_owner","_stringRef","Map","pendingContext","shouldSetTextContent","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","pushProvider","getMaskedContext","getUnmaskedContext","hasContextChanged","pushContextProvider","pushTopLevelContextObject","invalidateContextProvider","enterHydrationState","Wa","resetHydrationState","Cb","tryToClaimNextHydratableInstance","Jc","shouldComponentUpdate","isPureReactComponent","updater","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","getDerivedStateFromProps","cacheContext","isContextConsumer","isMounted","enqueueSetState","enqueueForceUpdate","adoptClassInstance","callGetDerivedStateFromProps","constructClassInstance","mountClassInstance","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","resumeMountClassInstance","updateClassInstance","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Kc","Lc","Db","Mc","Eb","beginWork","hydrate","_calculateChangedBits","_currentValue","_changedBits","unstable_observedBits","stack","suppressReactErrorLogging","Ya","Nc","ya","ca","pendingCommitExpirationTime","Oc","Za","getDerivedStateFromCatch","componentDidCatch","ia","za","da","Fb","xg","Ic","Pc","Gb","mg","Qc","lg","timeout","nextScheduledRoot","remainingExpirationTime","la","Hb","aa","$a","Ib","Aa","_onComplete","wg","Ba","Jb","finishedWork","firstBatch","_expirationTime","_defer","zg","kg","gg","Ag","hg","ig","jg","timeRemaining","Bg","createCursor","checkThatStackIsEmpty","resetStackAfterFatalErrorInDev","getChildHostContext","getRootHostContext","getHostContext","getRootHostContainer","popHostContainer","popHostContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","getChildContext","contextTypes","isContextProvider","popContextProvider","popTopLevelContextObject","cursor","processChildContext","__reactInternalMemoizedMergedChildContext","findCurrentUnmaskedContext","popProvider","hydration","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","mutation","completeWork","handler","throwException","unwindWork","unwindInterruptedWork","componentWillUnmount","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChildToContainer","insertInContainerBefore","removeChildFromContainer","commitBeforeMutationLifeCycles","__reactInternalSnapshotBeforeUpdate","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitErrorLogging","componentStack","commitAttachRef","commitDetachRef","scheduleDeferredCallback","cancelDeferredCallback","prepareForCommit","resetAfterCommit","Rc","recalculateCurrentTime","computeExpirationForFiber","scheduleWork","requestWork","flushRoot","batchedUpdates","unbatchedUpdates","flushSync","flushControlled","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","computeUniqueAsyncExpiration","legacyContext","createContainer","updateContainer","updateContainerAtExpirationTime","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","Cd","injectIntoDevTools","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","findHostInstanceByFiber","default","requestIdleCallback","cancelIdleCallback","didTimeout","postMessage","Children","selected","defaultSelected","wasMultiple","multiple","dangerouslySetInnerHTML","html","mathml","svg","namespaceURI","innerHTML","MSApp","execUnsafeLocalFunction","lastChild","nodeValue","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","orphans","tabSize","widows","zIndex","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","setProperty","menuitem","col","embed","img","keygen","param","wbr","ag","bg","cg","__html","onClick","onclick","dg","eg","fg","ng","og","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","form","pg","qg","rg","_callbacks","_next","_hasChildren","_didComplete","_children","sg","_didCommit","_onCommit","tg","_internalRoot","ug","vg","autoFocus","unmount","legacy_renderSubtreeIntoContainer","createBatch","tagName","focusedElem","selectionRange","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","hidden","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","Cg","Eg","_reactRootContainer","hasAttribute","Dg","Fg","Gg","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Hg","Ig","forceUpdate","__self","__source","defaultProps","keyPrefix","=",":","only","createRef","Component","PureComponent","createContext","_defaultValue","Provider","Consumer","forwardRef","Fragment","StrictMode","unstable_AsyncMode","cloneElement","createFactory","isValidElement"],"mappings":"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Aa,GAAAgvI,EAAArtI,mBCpGA1D,EAAAD,0BCJAA,EAAA4xI,aAGAC,KAAA,UACAC,UAAA,eACAC,QAAA,UACAC,UAAA,YACAC,OAAA,WACAC,UAAA,cACAC,cAAA,kBACAC,WAAA,eACAC,MAAA,OAGAC,SAAA,aACAjf,QAAA,UACA/xH,SAAA,MAGAixI,GAAA,cACAC,EAAA,YACA//C,EAAA,WACAw5C,IAAA,QACAwG,QAAA,YACAC,OAAA,WACAC,IAAA,OACAC,QAAA,WACAzxD,MAAA,SACA0xD,MAAA,MACAC,UAAA,MACAC,WAAA,SACAtyH,QAAA,YACAuyH,SAAA,WACAC,OAAA,QACAC,WAAA,QACAC,SAAA,YACAC,cAAA,iBACA37H,OAAA,UACA47H,UAAA,KACAC,QAAA,QACAv0E,KAAA,UACAw0E,UAAA,SACAC,KAAA,OACAC,QAAA,OACAC,KAAA,MACA9/E,KAAA,MACA+/E,OAAA,kBACAC,OAAA,QACA9uB,MAAA,KACA+uB,QAAA,OACAC,KAAA,OACAC,MAAA,MACAC,KAAA,MACAC,OAAA,kBACAC,OAAA,QACArK,MAAA,KACAsK,oBAAA,MACAC,sBAAA,QACAC,wBAAA,UACAC,SAAA,YACAC,cAAA,iBACAC,QAAA,OACAC,OAAA,UACAC,QAAA,WACAC,MAAA,aACAC,QAAA,UACAC,OAAA,aAIA70I,EAAA80I,WACAlyE,GACA,gEACA,oEACA,0EACA,2EACA,wEACA,6BAEAC,GACA,0EACA,iEACA,mEACA,sEACA,yEACA,yEACA,+DACA,iEACA,uEACA,mEACA,uEACA,wEACA,mEACA,yEACA,iEACA,wEACA,qEACA,wEACA,yEACA,uEACA,6DACA,iBAEAkyE,GACA,oEACA,sEACA,2EACA,wEACA,iEACA,uEACA,+DACA,uEACA,qBAEAC,GACA,gCAKAh1I,EAAAi1I,UACApyE,GAAA,KACAkyE,GAAA,OACAC,GAAA,UAIAh1I,EAAAk1I,aACAC,eAAA,EACAC,UAAA,EACAC,MAAA,EACA59E,OAAA,EACA69E,KAAA,EACAC,SAAA,EACAC,UAAA,EACAC,cAAA,EACAC,QAAA,EAC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AAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAC3OC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,I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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","export const GAME_WIDTH = 1024\nexport const GAME_HEIGHT = 300\nexport const PLAYER_WIDTH = 50\nexport const PLAYER_HEIGHT = 50\nexport const PROJECTILE_WIDTH = 10\nexport const PROJECTILE_HEIGHT = 10\n\nexport const PLAYER_SPEED = 0.300\nexport const PROJECTILE_SPEED = 0.400\n\nexport const KEYCODES = {\n  LEFT: [37, 65],\n  UP: [38, 87],\n  RIGHT: [39, 68],\n  DOWN: [40, 83],\n  Q: [81],\n}\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '92';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\t\\tscale *= float( gl_FrontFacing ) * 2.0 - 1.0;\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_pars_maps: lights_pars_maps,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\ttarget.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\ttarget.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) intersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tgl.uniform1f( this.addr, v );\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tgl.uniform1i( this.addr, v );\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t} else {\n\n\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tif ( v.x !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t} else {\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t} else {\n\n\t\t gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat3array.set( v.elements );\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat4array.set( v.elements );\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\tfor ( ; ; ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( shadowLight ) {\n\n\t\tspritesArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext ); /* global WebGL2RenderingContext */\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tstopAnimation();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar isAnimating = false;\n\tvar onAnimationFrame = null;\n\n\tfunction startAnimation() {\n\n\t\tif ( isAnimating ) return;\n\n\t\trequestAnimationLoopFrame();\n\n\t\tisAnimating = true;\n\n\t}\n\n\tfunction stopAnimation() {\n\n\t\tisAnimating = false;\n\n\t}\n\n\tfunction requestAnimationLoopFrame() {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tdevice.requestAnimationFrame( animationLoop );\n\n\t\t} else {\n\n\t\t\twindow.requestAnimationFrame( animationLoop );\n\n\t\t}\n\n\t}\n\n\tfunction animationLoop( time ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tonAnimationFrame( time );\n\n\t\trequestAnimationLoopFrame();\n\n\t}\n\n\tthis.animate = function ( callback ) {\n\n\t\tonAnimationFrame = callback;\n\t\tonAnimationFrame !== null ? startAnimation() : stopAnimation();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = null;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\t\tvar pixels = srcTexture.isDataTexture ? srcTexture.image.data : srcTexture.image;\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, pixels );\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color.getHex(), this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape, options );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON( shapes, data );\n\n};\n\n//\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\timage.addEventListener( 'load', function () {\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\t/*\n\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t}, false );\n\t\t*/\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && curve.isLineCurve ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function load( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, divisions, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, divisions, data ) {\n\n\tvar chars = String( text ).split( '' );\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, divisions, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, divisions, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","import { Vector2 } from 'three'\nimport { filter } from 'lodash/fp'\n\ninterface Move {\n  frame: number\n  delta: Vector2\n  position: Vector2\n}\n\nexport default class Movable {\n  public position: Vector2 = new Vector2(0, 0)\n  public history: Move[] = []\n\n  public reconcile(frame: number, position: Vector2) {\n    this.history = filter(move => move.frame > frame, this.history)\n\n    if (this.history.length === 0) {\n      return\n    }\n\n    this.position = position\n    for (const move of this.history) {\n      this.move(move.frame, move.delta)\n      move.position = this.position\n    }\n  }\n\n  protected move(frame: number, delta: Vector2, save: boolean = false) {\n    this.position.add(delta)\n\n    if (save) {\n      const move = {\n        frame,\n        delta,\n        position: this.position.clone(),\n      }\n\n      this.history.push(move)\n    }\n  }\n}\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PLAYER_WIDTH,\n  PLAYER_HEIGHT,\n  PLAYER_SPEED,\n} from '../constants'\nimport Movable from './Movable'\nimport { Vector2 } from 'three'\n\ninterface Controls {\n  up: boolean\n  down: boolean\n  left: boolean\n  right: boolean\n}\n\nexport default class Player extends Movable {\n  public controls: Controls = { up: false, down: false, left: false, right: false }\n  public speed = PLAYER_SPEED\n\n  public update(dt: number, frame: number, save: boolean = false) {\n    const direction = new Vector2(\n      (this.controls.left ? -1 : 0) +\n      (this.controls.right ? 1 : 0),\n      (this.controls.up ? -1 : 0) +\n      (this.controls.down ? 1 : 0)\n    )\n\n    const delta = direction.normalize().multiplyScalar(this.speed * dt)\n    this.move(frame, delta, save)\n  }\n\n  protected move(frame: number, delta: Vector2, save: boolean = false) {\n    super.move(frame, delta, save)\n\n    this.position.clamp(\n      new Vector2(PLAYER_WIDTH / 2, PLAYER_HEIGHT / 2),\n      new Vector2(GAME_WIDTH - PLAYER_WIDTH / 2, GAME_HEIGHT - PLAYER_HEIGHT / 2)\n    )\n  }\n}\n","import { GAME_WIDTH, GAME_HEIGHT } from './constants'\nimport { Vector2 } from 'three'\n\nexport const drawGrid = (context: CanvasRenderingContext2D,\n                         width: number,\n                         height: number,\n                         spacing: number = 100) => {\n\n  context.beginPath()\n\n  for (let x = 0; x < width; x += spacing) {\n    context.moveTo(x, 0)\n    context.lineTo(x, height)\n  }\n\n  for (let y = 0; y < height; y += spacing) {\n    context.moveTo(0, y)\n    context.lineTo(width, y)\n  }\n\n  context.strokeStyle = 'black'\n  context.stroke()\n}\n\nexport const vectorToString = (vector: Vector2) => {\n  return `(${Math.round(vector.x)}, ${Math.round(vector.y)})`\n}\n\nexport const frameDelta = (clientFrame: number, serverFrame: number) => {\n  const rtt = (window.config.clientOWD + window.config.serverOWD) / window.config.refreshRate\n  const htt = rtt / 2\n  const delta = htt + window.config.buffer\n  const result = Math.ceil(delta - Math.max(clientFrame - serverFrame, 0) + htt)\n\n  return result\n}\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PLAYER_WIDTH,\n  PLAYER_HEIGHT,\n  PROJECTILE_WIDTH,\n  PROJECTILE_HEIGHT,\n} from '../constants'\nimport Player from './Player'\nimport { GameState } from './types'\nimport { drawGrid } from '../util'\nimport { values, pickBy } from 'lodash/fp'\n\nexport default class Renderer {\n  public canvas: HTMLCanvasElement\n  public ctx: CanvasRenderingContext2D\n  public state: GameState = {\n    frame: 0,\n    player: new Player(),\n    projectiles: {}\n  }\n\n  private boundTick: (timestamp: number) => void\n  private id: number\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas\n    this.ctx = canvas.getContext('2d')\n\n    this.boundTick = this.tick.bind(this)\n  }\n\n  public clear() {\n    this.ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT)\n  }\n\n  public reset() {\n    this.clear()\n\n    this.state.player.position.set(\n      GAME_WIDTH / 2,\n      GAME_HEIGHT / 2\n    )\n    this.state.projectiles = {}\n  }\n\n  public start() {\n    this.id = window.setInterval(\n      this.boundTick,\n      window.config.refreshRate,\n      window.config.refreshRate\n    )\n  }\n\n  public stop() {\n    window.clearInterval(this.id)\n  }\n\n  protected update(dt: number, frame: number) {\n    throw new Error('Update is not implemented')\n  }\n\n  private render() {\n    this.clear()\n\n    drawGrid(this.ctx, GAME_WIDTH, GAME_HEIGHT)\n\n    const x = this.state.player.position.x - PLAYER_WIDTH / 2\n    const y = this.state.player.position.y - PLAYER_HEIGHT / 2\n    this.ctx.fillRect(x, y, PLAYER_WIDTH, PLAYER_HEIGHT)\n\n    values(this.state.projectiles).forEach(projectile => {\n      const px = projectile.position.x - PROJECTILE_WIDTH / 2\n      const py = projectile.position.y - PROJECTILE_HEIGHT / 2\n      this.ctx.fillRect(px, py, PROJECTILE_WIDTH, PROJECTILE_HEIGHT)\n    })\n  }\n\n  private tick(dt: number) {\n    this.state.frame += 1\n    this.update(dt, this.state.frame)\n\n    this.render()\n    this.clean()\n  }\n\n  private clean() {\n    const filteredProjectiles = pickBy(\n      projectile => !projectile.deleted,\n      this.state.projectiles\n    )\n\n    this.state.projectiles = filteredProjectiles\n  }\n}\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PROJECTILE_WIDTH,\n  PROJECTILE_HEIGHT,\n  PROJECTILE_SPEED,\n} from '../constants'\nimport Movable from './Movable'\nimport { Vector2 } from 'three'\n\nexport default class Projectile extends Movable {\n  public id: string\n  public direction: Vector2\n  public deleted: boolean = false\n\n  private buffer: number = 10\n\n  constructor(id: string, position: Vector2, direction: Vector2) {\n    super()\n\n    this.id = id\n    this.position = position.clone()\n    this.direction = direction.clone().normalize()\n  }\n\n  public updateDelete() {\n    const isInPlay =\n      this.position.x > -PROJECTILE_WIDTH - this.buffer\n      && this.position.x < GAME_WIDTH + PROJECTILE_WIDTH + this.buffer\n      && this.position.y > -PROJECTILE_HEIGHT - this.buffer\n      && this.position.y < GAME_HEIGHT + PROJECTILE_HEIGHT + this.buffer\n\n    this.deleted = !isInPlay\n  }\n\n  public update(dt: number, frame: number, save: boolean = false) {\n    const delta = this.direction.clone().multiplyScalar(PROJECTILE_SPEED * dt)\n    this.move(frame, delta, save)\n  }\n}\n","import {\n  PLAYER_SPEED,\n  KEYCODES,\n} from '../constants'\nimport Renderer from './Renderer'\nimport Server from './Server'\nimport Projectile from './Projectile'\nimport { GameState } from './types'\nimport { Vector2 } from 'three'\nimport { values, includes, cloneDeep } from 'lodash/fp'\nimport { v4 as uuid } from 'uuid'\nimport { frameDelta } from '../util'\n\nexport default class Client extends Renderer {\n  public server: Server\n\n  constructor(canvas: HTMLCanvasElement) {\n    super(canvas)\n\n    document.addEventListener('keydown', this.keydown.bind(this))\n    document.addEventListener('keyup', this.keyup.bind(this))\n    canvas.addEventListener('click', this.click.bind(this))\n  }\n\n  public connect(server: Server) {\n    this.server = server\n  }\n\n  public send(state: GameState) {\n    this.state.frame += frameDelta(this.state.frame, state.frame)\n\n    if (window.config.reconciliation) {\n      this.state.player.reconcile(state.frame, state.player.position)\n    } else {\n      this.state.player.position = state.player.position\n    }\n\n    values(state.projectiles).forEach(projectile => {\n      const isMissing = !this.state.projectiles[projectile.id]\n      const isDeleted = projectile.deleted\n\n      if (isMissing && isDeleted) {\n        return\n      }\n\n      if (isMissing) {\n        this.state.projectiles[projectile.id] = projectile\n      }\n\n      if (window.config.reconciliation) {\n        this.state.projectiles[projectile.id].deleted = projectile.deleted\n        this.state.projectiles[projectile.id].reconcile(state.frame, projectile.position)\n      } else {\n        this.state.projectiles[projectile.id] = projectile\n      }\n    })\n  }\n\n  protected update(dt: number, frame: number) {\n    if (window.config.prediction) {\n      this.state.player.update(dt, frame, window.config.reconciliation)\n      values(this.state.projectiles).forEach(projectile => {\n        projectile.update(dt, frame, window.config.reconciliation)\n      })\n    }\n\n    const state = cloneDeep(this.state)\n    window.setTimeout(() => {\n      this.server.send(state)\n    }, window.config.clientOWD)\n  }\n\n  private keypress(key: number, isPressed: boolean) {\n    if (includes(key, KEYCODES.LEFT)) {\n      this.state.player.controls.left = isPressed\n    } else if (includes(key, KEYCODES.RIGHT)) {\n      this.state.player.controls.right = isPressed\n    } else if (includes(key, KEYCODES.UP)) {\n      this.state.player.controls.up = isPressed\n    } else if (includes(key, KEYCODES.DOWN)) {\n      this.state.player.controls.down = isPressed\n    } else {\n      return\n    }\n\n    event.stopPropagation()\n  }\n\n  private keydown(event: KeyboardEvent) {\n    const key = event.keyCode || event.which\n    this.keypress(key, true)\n\n    if (includes(key, KEYCODES.Q)) {\n      if (this.state.player.speed === PLAYER_SPEED) {\n        this.state.player.speed = PLAYER_SPEED * 2\n      } else {\n        this.state.player.speed = PLAYER_SPEED\n      }\n    }\n  }\n\n  private keyup(event: KeyboardEvent) {\n    const key = event.keyCode || event.which\n    this.keypress(key, false)\n  }\n\n  private click(event: MouseEvent) {\n    const rect = this.canvas.getBoundingClientRect()\n    const direction = new Vector2(\n      event.clientX - rect.left,\n      event.clientY - rect.top\n    ).sub(this.state.player.position)\n\n    const projectile = new Projectile(uuid(), this.state.player.position, direction)\n\n    this.state.projectiles[projectile.id] = projectile\n  }\n}\n","import Renderer from './Renderer'\nimport Client from './Client'\nimport { GameState } from './types'\nimport { values, cloneDeep } from 'lodash/fp'\n\nexport default class Server extends Renderer {\n  public client: Client\n  private buffer: {\n    [frame: number]: GameState\n  } = {}\n\n  public connect(client: Client) {\n    this.client = client\n  }\n\n  public send(state: GameState) {\n    this.buffer[state.frame] = state\n  }\n\n  protected update(dt: number, frame: number) {\n    if (this.buffer[frame]) {\n      this.updateState(this.buffer[frame])\n      delete this.buffer[frame]\n    }\n\n    this.state.player.update(dt, frame)\n    values(this.state.projectiles).forEach(projectile => {\n      projectile.update(dt, frame)\n      projectile.updateDelete()\n    })\n\n    const state = cloneDeep(this.state)\n    window.setTimeout(() => {\n      this.client.send(state)\n    }, window.config.serverOWD)\n  }\n\n  private updateState(state: GameState) {\n    this.state.player.controls = state.player.controls\n\n    values(state.projectiles).forEach(projectile => {\n      const isFound = !!this.state.projectiles[projectile.id]\n      const isDeleted = projectile.deleted\n\n      if (isFound || isDeleted) {\n        return\n      }\n\n      this.state.projectiles[projectile.id] = projectile\n    })\n  }\n}\n","import * as React from 'react'\nimport { Vector2 } from 'three'\nimport { vectorToString } from '../util'\nimport { PLAYER_SPEED } from '../constants'\n\ninterface DebugState {\n  clientFrame: number\n  serverFrame: number\n  prediction: boolean\n  reconciliation: boolean\n  buffer: number\n  clientOWD: number\n  serverOWD: number\n  clientPosition: Vector2\n  serverPosition: Vector2\n  speedhack: boolean\n}\n\nclass Debug extends React.Component<{}, DebugState> {\n  private boundUpdate = this.update.bind(this)\n  private boundHandleCheck = this.handleCheck.bind(this)\n  private boundHandleText = this.handleText.bind(this)\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      clientFrame: 0,\n      serverFrame: 0,\n      clientPosition: new Vector2(0, 0),\n      serverPosition: new Vector2(0, 0),\n      speedhack: false,\n      buffer: window.config.buffer,\n      clientOWD: window.config.clientOWD,\n      serverOWD: window.config.serverOWD,\n      prediction: window.config.prediction,\n      reconciliation: window.config.reconciliation,\n    }\n  }\n\n  public componentDidMount() {\n    window.requestAnimationFrame(this.boundUpdate)\n  }\n\n  public handleCheck(event: any) {\n    const { checked, name } = event.target\n\n    if (name === 'prediction' && !checked) {\n      this.setState({\n        reconciliation: false\n      })\n      window.config.reconciliation = false\n    }\n\n    if (name === 'speedhack') {\n      const speed = PLAYER_SPEED * (checked ? 3 : 1)\n      window.client.state.player.speed = speed\n      this.setState({ speedhack: checked })\n    }\n\n    (window.config as any)[name] = checked\n    this.setState({\n      [name]: checked\n    })\n  }\n\n  public handleText(event: any) {\n    const { value, name } = event.target\n\n    const num = +value;\n    (window.config as any)[name] = num\n    this.setState({\n      [name]: num\n    })\n  }\n\n  public render() {\n    return (\n      <div className=\"debug\">\n        <div>Client Frame: {this.state.clientFrame}</div>\n        <div>Server Frame: {this.state.serverFrame}</div>\n        <div>Frame Delta: {this.state.clientFrame - this.state.serverFrame}</div>\n        <div>Client Position: {vectorToString(this.state.clientPosition)}</div>\n        <div>Server Position: {vectorToString(this.state.serverPosition)}</div>\n        <form>\n          <label>\n            Server Command Buffer:\n            <input\n              type=\"number\"\n              name=\"buffer\"\n              value={this.state.buffer}\n              onChange={this.boundHandleText}\n            />\n          </label>\n          <br />\n          <label>\n            Client Delay:\n            <input\n              type=\"number\"\n              name=\"clientOWD\"\n              value={this.state.clientOWD}\n              onChange={this.boundHandleText}\n            />\n          </label>\n          <br />\n          <label>\n            Server Delay:\n            <input\n              type=\"number\"\n              name=\"serverOWD\"\n              value={this.state.serverOWD}\n              onChange={this.boundHandleText}\n            />\n          </label>\n          <br />\n          <label>\n            Prediction:\n            <input\n              type=\"checkbox\"\n              name=\"prediction\"\n              checked={this.state.prediction}\n              onChange={this.boundHandleCheck}\n            />\n          </label>\n          <br />\n          <label>\n            Reconciliation:\n            <input\n              type=\"checkbox\"\n              name=\"reconciliation\"\n              checked={this.state.reconciliation}\n              onChange={this.boundHandleCheck}\n            />\n          </label>\n          <br />\n          <label>\n            Speed Hack:\n            <input\n              type=\"checkbox\"\n              name=\"speedhack\"\n              checked={this.state.speedhack}\n              onChange={this.boundHandleCheck}\n            />\n          </label>\n        </form>\n      </div>\n    )\n  }\n\n  private update() {\n    this.setState({\n      clientFrame: window.client.state.frame,\n      serverFrame: window.server.state.frame,\n      clientPosition: window.client.state.player.position,\n      serverPosition: window.server.state.player.position,\n    })\n\n    window.requestAnimationFrame(this.boundUpdate)\n  }\n}\n\nexport default Debug\n","import * as React from 'react'\nimport { GAME_HEIGHT, GAME_WIDTH } from '../constants'\nimport Client from '../game/Client'\nimport Server from '../game/Server'\nimport Debug from './Debug'\n\ndeclare global {\n  interface Window {\n    client: Client\n    server: Server\n    config: {\n      refreshRate: number\n      buffer: number\n      serverOWD: number\n      clientOWD: number\n      prediction: boolean\n      reconciliation: boolean\n    }\n  }\n}\n\nclass Game extends React.Component {\n  private client: Client\n  private server: Server\n\n  private p1Canvas: React.RefObject<HTMLCanvasElement>\n  private serverCanvas: React.RefObject<HTMLCanvasElement>\n\n  constructor(props: any) {\n    super(props)\n\n    window.config = {\n      refreshRate: 16,\n      buffer: 3,\n      clientOWD: 100,\n      serverOWD: 100,\n      prediction: true,\n      reconciliation: true,\n    }\n\n    this.p1Canvas = React.createRef()\n    this.serverCanvas = React.createRef()\n  }\n\n  public componentDidMount() {\n    const serverCanvas = this.serverCanvas.current\n    const p1Canvas = this.p1Canvas.current\n\n    this.server = new Server(serverCanvas)\n    this.client = new Client(p1Canvas)\n\n    this.server.connect(this.client)\n    this.client.connect(this.server)\n\n    window.client = this.client\n    window.server = this.server\n\n    this.server.reset()\n    this.server.start()\n\n    this.client.reset()\n    this.client.start()\n  }\n\n  public render() {\n    return (\n      <div>\n        <div className=\"title\">Player 1</div>\n        <canvas\n          ref={this.p1Canvas}\n          className=\"game\"\n          width={GAME_WIDTH}\n          height={GAME_HEIGHT}\n        />\n        <div className=\"title\">Server</div>\n        <canvas\n          ref={this.serverCanvas}\n          className=\"game\"\n          width={GAME_WIDTH}\n          height={GAME_HEIGHT}\n        />\n        <Debug />\n      </div>\n    )\n  }\n}\n\nexport default Game\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport Game from './components/Game'\nimport './style.css'\n\nconst root = document.createElement('div')\ndocument.body.appendChild(root)\n\nReactDOM.render(<Game />, root)\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.game {\\n  border: black 5px solid;\\n  margin: 15px;\\n}\\n\\n.title {\\n  font: 18px 'Courier New';\\n  margin: 15px;\\n}\\n\\n.debug {\\n  position: fixed;\\n  right: 15px;\\n  top: 15px;\\n  font: 12px 'Courier New';\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\n    'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1],\n  'reduceRight': [1, 0]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'rangeStep': [1, 2, 0],\n  'rangeStepRight': [1, 2, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'start': 0 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'start': 0 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'start': 0 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to track methods with placeholder support */\nexports.placeholder = {\n  'bind': true,\n  'bindKey': true,\n  'curry': true,\n  'curryRight': true,\n  'partial': true,\n  'partialRight': true\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'rangeStep': 'range',\n  'rangeStepRight': 'rangeRight',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n","var mapping = require('./_mapping'),\n    fallbackHolder = require('./placeholder');\n\n/** Built-in value reference. */\nvar push = Array.prototype.push;\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * A specialized version of `_.spread` which flattens the spread array into\n * the arguments of the invoked `func`.\n *\n * @private\n * @param {Function} func The function to spread arguments over.\n * @param {number} start The start position of the spread.\n * @returns {Function} Returns the new function.\n */\nfunction flatSpread(func, start) {\n  return function() {\n    var length = arguments.length,\n        lastIndex = length - 1,\n        args = Array(length);\n\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var array = args[start],\n        otherArgs = args.slice(0, start);\n\n    if (array) {\n      push.apply(otherArgs, array);\n    }\n    if (start != lastIndex) {\n      push.apply(otherArgs, args.slice(start + 1));\n    }\n    return func.apply(this, otherArgs);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var setPlaceholder,\n      isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      placeholder = isLib ? func : fallbackHolder,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isError': util.isError,\n    'isFunction': util.isFunction,\n    'isWeakMap': util.isWeakMap,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isError = helpers.isError,\n      isFunction = helpers.isFunction,\n      isWeakMap = helpers.isWeakMap,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null &&\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\n        nested[key] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var realName = mapping.aliasToReal[name] || name,\n        methodName = mapping.remap[realName] || realName,\n        oldOptions = options;\n\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[methodName] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, realName, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func) {\n    var result,\n        realName = mapping.aliasToReal[name] || name,\n        wrapped = func,\n        wrapper = wrappers[realName];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mapping.mutate.array[realName]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mapping.mutate.object[realName]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mapping.mutate.set[realName]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (realName == otherName) {\n          var data = mapping.methodSpread[realName],\n              afterRearg = data && data.afterRearg;\n\n          result = afterRearg\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\n\n          result = castCap(realName, result);\n          result = castCurry(realName, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(realName, func);\n    if (mapping.placeholder[realName]) {\n      setPlaceholder = true;\n      result.placeholder = func.placeholder = placeholder;\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  if (setPlaceholder) {\n    _.placeholder = placeholder;\n  }\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * @license\n * Lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE\n */\n;(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&false!==t(n[r],r,n););return n}function e(n,t){for(var r=null==n?0:n.length;r--&&false!==t(n[r],r,n););return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return false;\nreturn true}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!(null==n||!n.length)&&-1<v(n,t,0)}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return true;return false}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return true;return false}function p(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,false}),e}function _(n,t,r,e){var u=n.length;for(r+=e?1:-1;e?r--:++r<u;)if(t(n[r],r,n))return r;return-1}function v(n,t,r){if(t===t)n:{--r;for(var e=n.length;++r<e;)if(n[r]===t){n=r;break n}n=-1}else n=_(n,d,r);return n}function g(n,t,r,e){\n--r;for(var u=n.length;++r<u;)if(e(n[r],t))return r;return-1}function d(n){return n!==n}function y(n,t){var r=null==n?0:n.length;return r?m(n,t)/r:F}function b(n){return function(t){return null==t?T:t[n]}}function x(n){return function(t){return null==n?T:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=false,n):t(r,n,u,i)}),r}function w(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function m(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==T&&(r=r===T?i:r+i)}return r;\n}function A(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function E(n,t){return c(t,function(t){return[t,n[t]]})}function k(n){return function(t){return n(t)}}function S(n,t){return c(t,function(t){return n[t]})}function O(n,t){return n.has(t)}function I(n,t){for(var r=-1,e=n.length;++r<e&&-1<v(t,n[r],0););return r}function R(n,t){for(var r=n.length;r--&&-1<v(t,n[r],0););return r}function z(n){return\"\\\\\"+Un[n]}function W(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n];\n}),r}function B(n,t){return function(r){return n(t(r))}}function L(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&\"__lodash_placeholder__\"!==o||(n[r]=\"__lodash_placeholder__\",i[u++]=r)}return i}function U(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function C(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function D(n){if(Rn.test(n)){for(var t=On.lastIndex=0;On.test(n);)++t;n=t}else n=Qn(n);return n}function M(n){return Rn.test(n)?n.match(On)||[]:n.split(\"\");\n}var T,$=1/0,F=NaN,N=[[\"ary\",128],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",32],[\"partialRight\",64],[\"rearg\",256]],P=/\\b__p\\+='';/g,Z=/\\b(__p\\+=)''\\+/g,q=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,V=/&(?:amp|lt|gt|quot|#39);/g,K=/[&<>\"']/g,G=RegExp(V.source),H=RegExp(K.source),J=/<%-([\\s\\S]+?)%>/g,Y=/<%([\\s\\S]+?)%>/g,Q=/<%=([\\s\\S]+?)%>/g,X=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,nn=/^\\w*$/,tn=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,rn=/[\\\\^$.*+?()[\\]{}|]/g,en=RegExp(rn.source),un=/^\\s+|\\s+$/g,on=/^\\s+/,fn=/\\s+$/,cn=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,an=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,ln=/,? & /,sn=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,hn=/\\\\(\\\\)?/g,pn=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,_n=/\\w*$/,vn=/^[-+]0x[0-9a-f]+$/i,gn=/^0b[01]+$/i,dn=/^\\[object .+?Constructor\\]$/,yn=/^0o[0-7]+$/i,bn=/^(?:0|[1-9]\\d*)$/,xn=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,jn=/($^)/,wn=/['\\n\\r\\u2028\\u2029\\\\]/g,mn=\"[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?(?:\\\\u200d(?:[^\\\\ud800-\\\\udfff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?)*\",An=\"(?:[\\\\u2700-\\\\u27bf]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])\"+mn,En=\"(?:[^\\\\ud800-\\\\udfff][\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]?|[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\ud800-\\\\udfff])\",kn=RegExp(\"['\\u2019]\",\"g\"),Sn=RegExp(\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]\",\"g\"),On=RegExp(\"\\\\ud83c[\\\\udffb-\\\\udfff](?=\\\\ud83c[\\\\udffb-\\\\udfff])|\"+En+mn,\"g\"),In=RegExp([\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|$)|(?:[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde](?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])|$)|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?(?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?|\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])|\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])|\\\\d+\",An].join(\"|\"),\"g\"),Rn=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\\\\ufe0e\\\\ufe0f]\"),zn=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Wn=\"Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout\".split(\" \"),Bn={};\nBn[\"[object Float32Array]\"]=Bn[\"[object Float64Array]\"]=Bn[\"[object Int8Array]\"]=Bn[\"[object Int16Array]\"]=Bn[\"[object Int32Array]\"]=Bn[\"[object Uint8Array]\"]=Bn[\"[object Uint8ClampedArray]\"]=Bn[\"[object Uint16Array]\"]=Bn[\"[object Uint32Array]\"]=true,Bn[\"[object Arguments]\"]=Bn[\"[object Array]\"]=Bn[\"[object ArrayBuffer]\"]=Bn[\"[object Boolean]\"]=Bn[\"[object DataView]\"]=Bn[\"[object Date]\"]=Bn[\"[object Error]\"]=Bn[\"[object Function]\"]=Bn[\"[object Map]\"]=Bn[\"[object Number]\"]=Bn[\"[object Object]\"]=Bn[\"[object RegExp]\"]=Bn[\"[object Set]\"]=Bn[\"[object String]\"]=Bn[\"[object WeakMap]\"]=false;\nvar Ln={};Ln[\"[object Arguments]\"]=Ln[\"[object Array]\"]=Ln[\"[object ArrayBuffer]\"]=Ln[\"[object DataView]\"]=Ln[\"[object Boolean]\"]=Ln[\"[object Date]\"]=Ln[\"[object Float32Array]\"]=Ln[\"[object Float64Array]\"]=Ln[\"[object Int8Array]\"]=Ln[\"[object Int16Array]\"]=Ln[\"[object Int32Array]\"]=Ln[\"[object Map]\"]=Ln[\"[object Number]\"]=Ln[\"[object Object]\"]=Ln[\"[object RegExp]\"]=Ln[\"[object Set]\"]=Ln[\"[object String]\"]=Ln[\"[object Symbol]\"]=Ln[\"[object Uint8Array]\"]=Ln[\"[object Uint8ClampedArray]\"]=Ln[\"[object Uint16Array]\"]=Ln[\"[object Uint32Array]\"]=true,\nLn[\"[object Error]\"]=Ln[\"[object Function]\"]=Ln[\"[object WeakMap]\"]=false;var Un={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Cn=parseFloat,Dn=parseInt,Mn=typeof global==\"object\"&&global&&global.Object===Object&&global,Tn=typeof self==\"object\"&&self&&self.Object===Object&&self,$n=Mn||Tn||Function(\"return this\")(),Fn=typeof exports==\"object\"&&exports&&!exports.nodeType&&exports,Nn=Fn&&typeof module==\"object\"&&module&&!module.nodeType&&module,Pn=Nn&&Nn.exports===Fn,Zn=Pn&&Mn.process,qn=function(){\ntry{var n=Nn&&Nn.f&&Nn.f(\"util\").types;return n?n:Zn&&Zn.binding&&Zn.binding(\"util\")}catch(n){}}(),Vn=qn&&qn.isArrayBuffer,Kn=qn&&qn.isDate,Gn=qn&&qn.isMap,Hn=qn&&qn.isRegExp,Jn=qn&&qn.isSet,Yn=qn&&qn.isTypedArray,Qn=b(\"length\"),Xn=x({\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\n\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\n\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\n\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\n\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\n\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"}),nt=x({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"}),tt=x({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"}),rt=function x(mn){function An(n){if(du(n)&&!of(n)&&!(n instanceof Un)){if(n instanceof On)return n;if(ii.call(n,\"__wrapped__\"))return $e(n)}return new On(n)}function En(){}function On(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=T}function Un(n){this.__wrapped__=n,\nthis.__actions__=[],this.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Mn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Tn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Fn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Nn(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new Fn;++t<r;)this.add(n[t]);\n}function Zn(n){this.size=(this.__data__=new Tn(n)).size}function qn(n,t){var r,e=of(n),u=!e&&uf(n),i=!e&&!u&&cf(n),o=!e&&!u&&!i&&pf(n),u=(e=e||u||i||o)?A(n.length,Xu):[],f=u.length;for(r in n)!t&&!ii.call(n,r)||e&&(\"length\"==r||i&&(\"offset\"==r||\"parent\"==r)||o&&(\"buffer\"==r||\"byteLength\"==r||\"byteOffset\"==r)||Se(r,f))||u.push(r);return u}function Qn(n){var t=n.length;return t?n[ir(0,t-1)]:T}function et(n,t){return Ce(Ur(n),pt(t,0,n.length))}function ut(n){return Ce(Ur(n))}function it(n,t,r){(r===T||au(n[t],r))&&(r!==T||t in n)||st(n,t,r);\n}function ot(n,t,r){var e=n[t];ii.call(n,t)&&au(e,r)&&(r!==T||t in n)||st(n,t,r)}function ft(n,t){for(var r=n.length;r--;)if(au(n[r][0],t))return r;return-1}function ct(n,t,r,e){return eo(n,function(n,u,i){t(e,n,r(n),i)}),e}function at(n,t){return n&&Cr(t,zu(t),n)}function lt(n,t){return n&&Cr(t,Wu(t),n)}function st(n,t,r){\"__proto__\"==t&&mi?mi(n,t,{configurable:true,enumerable:true,value:r,writable:true}):n[t]=r}function ht(n,t){for(var r=-1,e=t.length,u=Vu(e),i=null==n;++r<e;)u[r]=i?T:Iu(n,t[r]);return u;\n}function pt(n,t,r){return n===n&&(r!==T&&(n=n<=r?n:r),t!==T&&(n=n>=t?n:t)),n}function _t(n,t,e,u,i,o){var f,c=1&t,a=2&t,l=4&t;if(e&&(f=i?e(n,u,i,o):e(n)),f!==T)return f;if(!gu(n))return n;if(u=of(n)){if(f=me(n),!c)return Ur(n,f)}else{var s=_o(n),h=\"[object Function]\"==s||\"[object GeneratorFunction]\"==s;if(cf(n))return Ir(n,c);if(\"[object Object]\"==s||\"[object Arguments]\"==s||h&&!i){if(f=a||h?{}:Ae(n),!c)return a?Mr(n,lt(f,n)):Dr(n,at(f,n))}else{if(!Ln[s])return i?n:{};f=Ee(n,s,c)}}if(o||(o=new Zn),\ni=o.get(n))return i;if(o.set(n,f),hf(n))return n.forEach(function(r){f.add(_t(r,t,e,r,n,o))}),f;if(lf(n))return n.forEach(function(r,u){f.set(u,_t(r,t,e,u,n,o))}),f;var a=l?a?ve:_e:a?Wu:zu,p=u?T:a(n);return r(p||n,function(r,u){p&&(u=r,r=n[u]),ot(f,u,_t(r,t,e,u,n,o))}),f}function vt(n){var t=zu(n);return function(r){return gt(r,n,t)}}function gt(n,t,r){var e=r.length;if(null==n)return!e;for(n=Yu(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===T&&!(u in n)||!i(o))return false}return true}function dt(n,t,r){if(typeof n!=\"function\")throw new ni(\"Expected a function\");\nreturn yo(function(){n.apply(T,r)},t)}function yt(n,t,r,e){var u=-1,i=o,a=true,l=n.length,s=[],h=t.length;if(!l)return s;r&&(t=c(t,k(r))),e?(i=f,a=false):200<=t.length&&(i=O,a=false,t=new Nn(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p),p=e||0!==p?p:0;if(a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function bt(n,t){var r=true;return eo(n,function(n,e,u){return r=!!t(n,e,u)}),r}function xt(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===T?o===o&&!ju(o):r(o,f)))var f=o,c=i;\n}return c}function jt(n,t){var r=[];return eo(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function wt(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=ke),u||(u=[]);++i<o;){var f=n[i];0<t&&r(f)?1<t?wt(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function mt(n,t){return n&&io(n,t,zu)}function At(n,t){return n&&oo(n,t,zu)}function Et(n,t){return i(t,function(t){return pu(n[t])})}function kt(n,t){t=Sr(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[De(t[r++])];return r&&r==e?n:T}function St(n,t,r){return t=t(n),\nof(n)?t:a(t,r(n))}function Ot(n){if(null==n)n=n===T?\"[object Undefined]\":\"[object Null]\";else if(wi&&wi in Yu(n)){var t=ii.call(n,wi),r=n[wi];try{n[wi]=T;var e=true}catch(n){}var u=ci.call(n);e&&(t?n[wi]=r:delete n[wi]),n=u}else n=ci.call(n);return n}function It(n,t){return n>t}function Rt(n,t){return null!=n&&ii.call(n,t)}function zt(n,t){return null!=n&&t in Yu(n)}function Wt(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=Vu(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,k(t))),s=Ui(p.length,s),\nl[a]=!r&&(t||120<=u&&120<=p.length)?new Nn(a&&p):T}var p=n[0],_=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],d=t?t(g):g,g=r||0!==g?g:0;if(v?!O(v,d):!e(h,d,r)){for(a=i;--a;){var y=l[a];if(y?!O(y,d):!e(n[a],d,r))continue n}v&&v.push(d),h.push(g)}}return h}function Bt(n,t,r){var e={};return mt(n,function(n,u,i){t(e,r(n),u,i)}),e}function Lt(t,r,e){return r=Sr(r,t),t=2>r.length?t:kt(t,hr(r,0,-1)),r=null==t?t:t[De(qe(r))],null==r?T:n(r,t,e)}function Ut(n){return du(n)&&\"[object Arguments]\"==Ot(n)}function Ct(n){\nreturn du(n)&&\"[object ArrayBuffer]\"==Ot(n)}function Dt(n){return du(n)&&\"[object Date]\"==Ot(n)}function Mt(n,t,r,e,u){if(n===t)t=true;else if(null==n||null==t||!du(n)&&!du(t))t=n!==n&&t!==t;else n:{var i=of(n),o=of(t),f=i?\"[object Array]\":_o(n),c=o?\"[object Array]\":_o(t),f=\"[object Arguments]\"==f?\"[object Object]\":f,c=\"[object Arguments]\"==c?\"[object Object]\":c,a=\"[object Object]\"==f,o=\"[object Object]\"==c;if((c=f==c)&&cf(n)){if(!cf(t)){t=false;break n}i=true,a=false}if(c&&!a)u||(u=new Zn),t=i||pf(n)?se(n,t,r,e,Mt,u):he(n,t,f,r,e,Mt,u);else{\nif(!(1&r)&&(i=a&&ii.call(n,\"__wrapped__\"),f=o&&ii.call(t,\"__wrapped__\"),i||f)){n=i?n.value():n,t=f?t.value():t,u||(u=new Zn),t=Mt(n,t,r,e,u);break n}if(c)t:if(u||(u=new Zn),i=1&r,f=_e(n),o=f.length,c=_e(t).length,o==c||i){for(a=o;a--;){var l=f[a];if(!(i?l in t:ii.call(t,l))){t=false;break t}}if((c=u.get(n))&&u.get(t))t=c==t;else{c=true,u.set(n,t),u.set(t,n);for(var s=i;++a<o;){var l=f[a],h=n[l],p=t[l];if(e)var _=i?e(p,h,l,t,n,u):e(h,p,l,n,t,u);if(_===T?h!==p&&!Mt(h,p,r,e,u):!_){c=false;break}s||(s=\"constructor\"==l);\n}c&&!s&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&&e instanceof e)&&(c=false)),u.delete(n),u.delete(t),t=c}}else t=false;else t=false}}return t}function Tt(n){return du(n)&&\"[object Map]\"==_o(n)}function $t(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=Yu(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return false}for(;++u<i;){var f=r[u],c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===T&&!(c in n))return false;\n}else{if(f=new Zn,e)var s=e(a,l,c,n,t,f);if(s===T?!Mt(l,a,3,e,f):!s)return false}}return true}function Ft(n){return!(!gu(n)||fi&&fi in n)&&(pu(n)?si:dn).test(Me(n))}function Nt(n){return du(n)&&\"[object RegExp]\"==Ot(n)}function Pt(n){return du(n)&&\"[object Set]\"==_o(n)}function Zt(n){return du(n)&&vu(n.length)&&!!Bn[Ot(n)]}function qt(n){return typeof n==\"function\"?n:null==n?Tu:typeof n==\"object\"?of(n)?Jt(n[0],n[1]):Ht(n):Pu(n)}function Vt(n){if(!ze(n))return Bi(n);var t,r=[];for(t in Yu(n))ii.call(n,t)&&\"constructor\"!=t&&r.push(t);\nreturn r}function Kt(n,t){return n<t}function Gt(n,t){var r=-1,e=lu(n)?Vu(n.length):[];return eo(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function Ht(n){var t=xe(n);return 1==t.length&&t[0][2]?We(t[0][0],t[0][1]):function(r){return r===n||$t(r,n,t)}}function Jt(n,t){return Ie(n)&&t===t&&!gu(t)?We(De(n),t):function(r){var e=Iu(r,n);return e===T&&e===t?Ru(r,n):Mt(t,e,3)}}function Yt(n,t,r,e,u){n!==t&&io(t,function(i,o){if(gu(i)){u||(u=new Zn);var f=u,c=\"__proto__\"==o?T:n[o],a=\"__proto__\"==o?T:t[o],l=f.get(a);\nif(l)it(n,o,l);else{var l=e?e(c,a,o+\"\",n,t,f):T,s=l===T;if(s){var h=of(a),p=!h&&cf(a),_=!h&&!p&&pf(a),l=a;h||p||_?of(c)?l=c:su(c)?l=Ur(c):p?(s=false,l=Ir(a,true)):_?(s=false,l=zr(a,true)):l=[]:bu(a)||uf(a)?(l=c,uf(c)?l=Su(c):(!gu(c)||r&&pu(c))&&(l=Ae(a))):s=false}s&&(f.set(a,l),Yt(l,a,r,e,f),f.delete(a)),it(n,o,l)}}else f=e?e(\"__proto__\"==o?T:n[o],i,o+\"\",n,t,u):T,f===T&&(f=i),it(n,o,f)},Wu)}function Qt(n,t){var r=n.length;if(r)return t+=0>t?r:0,Se(t,r)?n[t]:T}function Xt(n,t,r){var e=-1;return t=c(t.length?t:[Tu],k(ye())),\nn=Gt(n,function(n){return{a:c(t,function(t){return t(n)}),b:++e,c:n}}),w(n,function(n,t){var e;n:{e=-1;for(var u=n.a,i=t.a,o=u.length,f=r.length;++e<o;){var c=Wr(u[e],i[e]);if(c){e=e>=f?c:c*(\"desc\"==r[e]?-1:1);break n}}e=n.b-t.b}return e})}function nr(n,t){return tr(n,t,function(t,r){return Ru(n,r)})}function tr(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=kt(n,o);r(f,o)&&lr(i,Sr(o,n),f)}return i}function rr(n){return function(t){return kt(t,n)}}function er(n,t,r,e){var u=e?g:v,i=-1,o=t.length,f=n;\nfor(n===t&&(t=Ur(t)),r&&(f=c(n,k(r)));++i<o;)for(var a=0,l=t[i],l=r?r(l):l;-1<(a=u(f,l,a,e));)f!==n&&bi.call(f,a,1),bi.call(n,a,1);return n}function ur(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;Se(u)?bi.call(n,u,1):xr(n,u)}}}function ir(n,t){return n+Oi(Mi()*(t-n+1))}function or(n,t){var r=\"\";if(!n||1>t||9007199254740991<t)return r;do t%2&&(r+=n),(t=Oi(t/2))&&(n+=n);while(t);return r}function fr(n,t){return bo(Be(n,t,Tu),n+\"\")}function cr(n){return Qn(Lu(n))}function ar(n,t){\nvar r=Lu(n);return Ce(r,pt(t,0,r.length))}function lr(n,t,r,e){if(!gu(n))return n;t=Sr(t,n);for(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=De(t[u]),a=r;if(u!=o){var l=f[c],a=e?e(l,c,f):T;a===T&&(a=gu(l)?l:Se(t[u+1])?[]:{})}ot(f,c,a),f=f[c]}return n}function sr(n){return Ce(Lu(n))}function hr(n,t,r){var e=-1,u=n.length;for(0>t&&(t=-t>u?0:u+t),r=r>u?u:r,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Vu(u);++e<u;)r[e]=n[e+t];return r}function pr(n,t){var r;return eo(n,function(n,e,u){return r=t(n,e,u),\n!r}),!!r}function _r(n,t,r){var e=0,u=null==n?e:n.length;if(typeof t==\"number\"&&t===t&&2147483647>=u){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!ju(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return vr(n,t,Tu,r)}function vr(n,t,r,e){t=r(t);for(var u=0,i=null==n?0:n.length,o=t!==t,f=null===t,c=ju(t),a=t===T;u<i;){var l=Oi((u+i)/2),s=r(n[l]),h=s!==T,p=null===s,_=s===s,v=ju(s);(o?e||_:a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):p||v?0:e?s<=t:s<t)?u=l+1:i=l}return Ui(i,4294967294)}function gr(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){\nvar o=n[r],f=t?t(o):o;if(!r||!au(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function dr(n){return typeof n==\"number\"?n:ju(n)?F:+n}function yr(n){if(typeof n==\"string\")return n;if(of(n))return c(n,yr)+\"\";if(ju(n))return to?to.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-$?\"-0\":t}function br(n,t,r){var e=-1,u=o,i=n.length,c=true,a=[],l=a;if(r)c=false,u=f;else if(200<=i){if(u=t?null:lo(n))return U(u);c=false,u=O,l=new Nn}else l=t?[]:a;n:for(;++e<i;){var s=n[e],h=t?t(s):s,s=r||0!==s?s:0;if(c&&h===h){for(var p=l.length;p--;)if(l[p]===h)continue n;\nt&&l.push(h),a.push(s)}else u(l,h,r)||(l!==a&&l.push(h),a.push(s))}return a}function xr(n,t){return t=Sr(t,n),n=2>t.length?n:kt(n,hr(t,0,-1)),null==n||delete n[De(qe(t))]}function jr(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?hr(n,e?0:i,e?i+1:u):hr(n,e?i+1:0,e?u:i)}function wr(n,t){var r=n;return r instanceof Un&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mr(n,t,r){var e=n.length;if(2>e)return e?br(n[0]):[];for(var u=-1,i=Vu(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=yt(i[u]||o,n[f],t,r));\nreturn br(wt(i,1),t,r)}function Ar(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;)r(o,n[e],e<i?t[e]:T);return o}function Er(n){return su(n)?n:[]}function kr(n){return typeof n==\"function\"?n:Tu}function Sr(n,t){return of(n)?n:Ie(n,t)?[n]:xo(Ou(n))}function Or(n,t,r){var e=n.length;return r=r===T?e:r,!t&&r>=e?n:hr(n,t,r)}function Ir(n,t){if(t)return n.slice();var r=n.length,r=vi?vi(r):new n.constructor(r);return n.copy(r),r}function Rr(n){var t=new n.constructor(n.byteLength);return new _i(t).set(new _i(n)),\nt}function zr(n,t){return new n.constructor(t?Rr(n.buffer):n.buffer,n.byteOffset,n.length)}function Wr(n,t){if(n!==t){var r=n!==T,e=null===n,u=n===n,i=ju(n),o=t!==T,f=null===t,c=t===t,a=ju(t);if(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Br(n,t,r,e){var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Li(i-o,0),l=Vu(c+a);for(e=!e;++f<c;)l[f]=t[f];for(;++u<o;)(e||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];\nreturn l}function Lr(n,t,r,e){var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Li(i-f,0),s=Vu(l+a);for(e=!e;++u<l;)s[u]=n[u];for(l=u;++c<a;)s[l+c]=t[c];for(;++o<f;)(e||u<i)&&(s[l+r[o]]=n[u++]);return s}function Ur(n,t){var r=-1,e=n.length;for(t||(t=Vu(e));++r<e;)t[r]=n[r];return t}function Cr(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):T;c===T&&(c=n[f]),u?st(r,f,c):ot(r,f,c)}return r}function Dr(n,t){return Cr(n,ho(n),t)}function Mr(n,t){return Cr(n,po(n),t);\n}function Tr(n,r){return function(e,u){var i=of(e)?t:ct,o=r?r():{};return i(e,n,ye(u,2),o)}}function $r(n){return fr(function(t,r){var e=-1,u=r.length,i=1<u?r[u-1]:T,o=2<u?r[2]:T,i=3<n.length&&typeof i==\"function\"?(u--,i):T;for(o&&Oe(r[0],r[1],o)&&(i=3>u?T:i,u=1),t=Yu(t);++e<u;)(o=r[e])&&n(t,o,e,i);return t})}function Fr(n,t){return function(r,e){if(null==r)return r;if(!lu(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=Yu(r);(t?i--:++i<u)&&false!==e(o[i],i,o););return r}}function Nr(n){return function(t,r,e){\nvar u=-1,i=Yu(t);e=e(t);for(var o=e.length;o--;){var f=e[n?o:++u];if(false===r(i[f],f,i))break}return t}}function Pr(n,t,r){function e(){return(this&&this!==$n&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=1&t,i=Vr(n);return e}function Zr(n){return function(t){t=Ou(t);var r=Rn.test(t)?M(t):T,e=r?r[0]:t.charAt(0);return t=r?Or(r,1).join(\"\"):t.slice(1),e[n]()+t}}function qr(n){return function(t){return l(Du(Cu(t).replace(kn,\"\")),n,\"\")}}function Vr(n){return function(){var t=arguments;switch(t.length){\ncase 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=ro(n.prototype),t=n.apply(r,t);return gu(t)?t:r}}function Kr(t,r,e){function u(){for(var o=arguments.length,f=Vu(o),c=o,a=de(u);c--;)f[c]=arguments[c];return c=3>o&&f[0]!==a&&f[o-1]!==a?[]:L(f,a),\no-=c.length,o<e?ue(t,r,Jr,u.placeholder,T,f,c,T,T,e-o):n(this&&this!==$n&&this instanceof u?i:t,this,f)}var i=Vr(t);return u}function Gr(n){return function(t,r,e){var u=Yu(t);if(!lu(t)){var i=ye(r,3);t=zu(t),r=function(n){return i(u[n],n,u)}}return r=n(t,r,e),-1<r?u[i?t[r]:r]:T}}function Hr(n){return pe(function(t){var r=t.length,e=r,u=On.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(typeof i!=\"function\")throw new ni(\"Expected a function\");if(u&&!o&&\"wrapper\"==ge(i))var o=new On([],true)}for(e=o?e:r;++e<r;)var i=t[e],u=ge(i),f=\"wrapper\"==u?so(i):T,o=f&&Re(f[0])&&424==f[1]&&!f[4].length&&1==f[9]?o[ge(f[0])].apply(o,f[3]):1==i.length&&Re(i)?o[u]():o.thru(i);\nreturn function(){var n=arguments,e=n[0];if(o&&1==n.length&&of(e))return o.plant(e).value();for(var u=0,n=r?t[u].apply(this,n):e;++u<r;)n=t[u].call(this,n);return n}})}function Jr(n,t,r,e,u,i,o,f,c,a){function l(){for(var d=arguments.length,y=Vu(d),b=d;b--;)y[b]=arguments[b];if(_){var x,j=de(l),b=y.length;for(x=0;b--;)y[b]===j&&++x}if(e&&(y=Br(y,e,u,_)),i&&(y=Lr(y,i,o,_)),d-=x,_&&d<a)return j=L(y,j),ue(n,t,Jr,l.placeholder,r,y,j,f,c,a-d);if(j=h?r:this,b=p?j[n]:n,d=y.length,f){x=y.length;for(var w=Ui(f.length,x),m=Ur(y);w--;){\nvar A=f[w];y[w]=Se(A,x)?m[A]:T}}else v&&1<d&&y.reverse();return s&&c<d&&(y.length=c),this&&this!==$n&&this instanceof l&&(b=g||Vr(b)),b.apply(j,y)}var s=128&t,h=1&t,p=2&t,_=24&t,v=512&t,g=p?T:Vr(n);return l}function Yr(n,t){return function(r,e){return Bt(r,n,t(e))}}function Qr(n,t){return function(r,e){var u;if(r===T&&e===T)return t;if(r!==T&&(u=r),e!==T){if(u===T)return e;typeof r==\"string\"||typeof e==\"string\"?(r=yr(r),e=yr(e)):(r=dr(r),e=dr(e)),u=n(r,e)}return u}}function Xr(t){return pe(function(r){\nreturn r=c(r,k(ye())),fr(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ne(n,t){t=t===T?\" \":yr(t);var r=t.length;return 2>r?r?or(t,n):t:(r=or(t,Si(n/D(t))),Rn.test(t)?Or(M(r),0,n).join(\"\"):r.slice(0,n))}function te(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=Vu(l+c),h=this&&this!==$n&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];return n(h,o?e:this,s)}var o=1&r,f=Vr(t);return i}function re(n){return function(t,r,e){\ne&&typeof e!=\"number\"&&Oe(t,r,e)&&(r=e=T),t=mu(t),r===T?(r=t,t=0):r=mu(r),e=e===T?t<r?1:-1:mu(e);var u=-1;r=Li(Si((r-t)/(e||1)),0);for(var i=Vu(r);r--;)i[n?r:++u]=t,t+=e;return i}}function ee(n){return function(t,r){return typeof t==\"string\"&&typeof r==\"string\"||(t=ku(t),r=ku(r)),n(t,r)}}function ue(n,t,r,e,u,i,o,f,c,a){var l=8&t,s=l?o:T;o=l?T:o;var h=l?i:T;return i=l?T:i,t=(t|(l?32:64))&~(l?64:32),4&t||(t&=-4),u=[n,t,u,h,s,i,o,f,c,a],r=r.apply(T,u),Re(n)&&go(r,u),r.placeholder=e,Le(r,n,t)}function ie(n){\nvar t=Ju[n];return function(n,r){if(n=ku(n),r=null==r?0:Ui(Au(r),292)){var e=(Ou(n)+\"e\").split(\"e\"),e=t(e[0]+\"e\"+(+e[1]+r)),e=(Ou(e)+\"e\").split(\"e\");return+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function oe(n){return function(t){var r=_o(t);return\"[object Map]\"==r?W(t):\"[object Set]\"==r?C(t):E(t,n(t))}}function fe(n,t,r,e,u,i,o,f){var c=2&t;if(!c&&typeof n!=\"function\")throw new ni(\"Expected a function\");var a=e?e.length:0;if(a||(t&=-97,e=u=T),o=o===T?o:Li(Au(o),0),f=f===T?f:Au(f),a-=u?u.length:0,64&t){\nvar l=e,s=u;e=u=T}var h=c?T:so(n);return i=[n,t,r,e,u,l,s,i,o,f],h&&(r=i[1],n=h[1],t=r|n,e=128==n&&8==r||128==n&&256==r&&i[7].length<=h[8]||384==n&&h[7].length<=h[8]&&8==r,131>t||e)&&(1&n&&(i[2]=h[2],t|=1&r?0:4),(r=h[3])&&(e=i[3],i[3]=e?Br(e,r,h[4]):r,i[4]=e?L(i[3],\"__lodash_placeholder__\"):h[4]),(r=h[5])&&(e=i[5],i[5]=e?Lr(e,r,h[6]):r,i[6]=e?L(i[5],\"__lodash_placeholder__\"):h[6]),(r=h[7])&&(i[7]=r),128&n&&(i[8]=null==i[8]?h[8]:Ui(i[8],h[8])),null==i[9]&&(i[9]=h[9]),i[0]=h[0],i[1]=t),n=i[0],t=i[1],\nr=i[2],e=i[3],u=i[4],f=i[9]=i[9]===T?c?0:n.length:Li(i[9]-a,0),!f&&24&t&&(t&=-25),Le((h?fo:go)(t&&1!=t?8==t||16==t?Kr(n,t,f):32!=t&&33!=t||u.length?Jr.apply(T,i):te(n,t,r,e):Pr(n,t,r),i),n,t)}function ce(n,t,r,e){return n===T||au(n,ri[r])&&!ii.call(e,r)?t:n}function ae(n,t,r,e,u,i){return gu(n)&&gu(t)&&(i.set(t,n),Yt(n,t,T,ae,i),i.delete(t)),n}function le(n){return bu(n)?T:n}function se(n,t,r,e,u,i){var o=1&r,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return false;if((c=i.get(n))&&i.get(t))return c==t;var c=-1,a=true,l=2&r?new Nn:T;\nfor(i.set(n,t),i.set(t,n);++c<f;){var s=n[c],p=t[c];if(e)var _=o?e(p,s,c,t,n,i):e(s,p,c,n,t,i);if(_!==T){if(_)continue;a=false;break}if(l){if(!h(t,function(n,t){if(!O(l,t)&&(s===n||u(s,n,r,e,i)))return l.push(t)})){a=false;break}}else if(s!==p&&!u(s,p,r,e,i)){a=false;break}}return i.delete(n),i.delete(t),a}function he(n,t,r,e,u,i,o){switch(r){case\"[object DataView]\":if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)break;n=n.buffer,t=t.buffer;case\"[object ArrayBuffer]\":if(n.byteLength!=t.byteLength||!i(new _i(n),new _i(t)))break;\nreturn true;case\"[object Boolean]\":case\"[object Date]\":case\"[object Number]\":return au(+n,+t);case\"[object Error]\":return n.name==t.name&&n.message==t.message;case\"[object RegExp]\":case\"[object String]\":return n==t+\"\";case\"[object Map]\":var f=W;case\"[object Set]\":if(f||(f=U),n.size!=t.size&&!(1&e))break;return(r=o.get(n))?r==t:(e|=2,o.set(n,t),t=se(f(n),f(t),e,u,i,o),o.delete(n),t);case\"[object Symbol]\":if(no)return no.call(n)==no.call(t)}return false}function pe(n){return bo(Be(n,T,Pe),n+\"\")}function _e(n){\nreturn St(n,zu,ho)}function ve(n){return St(n,Wu,po)}function ge(n){for(var t=n.name+\"\",r=Ki[t],e=ii.call(Ki,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function de(n){return(ii.call(An,\"placeholder\")?An:n).placeholder}function ye(){var n=An.iteratee||$u,n=n===$u?qt:n;return arguments.length?n(arguments[0],arguments[1]):n}function be(n,t){var r=n.__data__,e=typeof t;return(\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==t:null===t)?r[typeof t==\"string\"?\"string\":\"hash\"]:r.map;\n}function xe(n){for(var t=zu(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,u===u&&!gu(u)]}return t}function je(n,t){var r=null==n?T:n[t];return Ft(r)?r:T}function we(n,t,r){t=Sr(t,n);for(var e=-1,u=t.length,i=false;++e<u;){var o=De(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&vu(u)&&Se(o,u)&&(of(n)||uf(n)))}function me(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&ii.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ae(n){\nreturn typeof n.constructor!=\"function\"||ze(n)?{}:ro(gi(n))}function Ee(n,t,r){var e=n.constructor;switch(t){case\"[object ArrayBuffer]\":return Rr(n);case\"[object Boolean]\":case\"[object Date]\":return new e(+n);case\"[object DataView]\":return t=r?Rr(n.buffer):n.buffer,new n.constructor(t,n.byteOffset,n.byteLength);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":\ncase\"[object Uint16Array]\":case\"[object Uint32Array]\":return zr(n,r);case\"[object Map]\":return new e;case\"[object Number]\":case\"[object String]\":return new e(n);case\"[object RegExp]\":return t=new n.constructor(n.source,_n.exec(n)),t.lastIndex=n.lastIndex,t;case\"[object Set]\":return new e;case\"[object Symbol]\":return no?Yu(no.call(n)):{}}}function ke(n){return of(n)||uf(n)||!!(xi&&n&&n[xi])}function Se(n,t){var r=typeof n;return t=null==t?9007199254740991:t,!!t&&(\"number\"==r||\"symbol\"!=r&&bn.test(n))&&-1<n&&0==n%1&&n<t;\n}function Oe(n,t,r){if(!gu(r))return false;var e=typeof t;return!!(\"number\"==e?lu(r)&&Se(t,r.length):\"string\"==e&&t in r)&&au(r[t],n)}function Ie(n,t){if(of(n))return false;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!ju(n))||(nn.test(n)||!X.test(n)||null!=t&&n in Yu(t))}function Re(n){var t=ge(n),r=An[t];return typeof r==\"function\"&&t in Un.prototype&&(n===r||(t=so(r),!!t&&n===t[0]))}function ze(n){var t=n&&n.constructor;return n===(typeof t==\"function\"&&t.prototype||ri)}function We(n,t){\nreturn function(r){return null!=r&&(r[n]===t&&(t!==T||n in Yu(r)))}}function Be(t,r,e){return r=Li(r===T?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Li(u.length-r,0),f=Vu(o);++i<o;)f[i]=u[r+i];for(i=-1,o=Vu(r+1);++i<r;)o[i]=u[i];return o[r]=e(f),n(t,this,o)}}function Le(n,t,r){var e=t+\"\";t=bo;var u,i=Te;return u=(u=e.match(an))?u[1].split(ln):[],r=i(u,r),(i=r.length)&&(u=i-1,r[u]=(1<i?\"& \":\"\")+r[u],r=r.join(2<i?\", \":\" \"),e=e.replace(cn,\"{\\n/* [wrapped with \"+r+\"] */\\n\")),t(n,e)}function Ue(n){\nvar t=0,r=0;return function(){var e=Ci(),u=16-(e-r);if(r=e,0<u){if(800<=++t)return arguments[0]}else t=0;return n.apply(T,arguments)}}function Ce(n,t){var r=-1,e=n.length,u=e-1;for(t=t===T?e:t;++r<t;){var e=ir(r,u),i=n[e];n[e]=n[r],n[r]=i}return n.length=t,n}function De(n){if(typeof n==\"string\"||ju(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-$?\"-0\":t}function Me(n){if(null!=n){try{return ui.call(n)}catch(n){}return n+\"\"}return\"\"}function Te(n,t){return r(N,function(r){var e=\"_.\"+r[0];t&r[1]&&!o(n,e)&&n.push(e);\n}),n.sort()}function $e(n){if(n instanceof Un)return n.clone();var t=new On(n.__wrapped__,n.__chain__);return t.__actions__=Ur(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function Fe(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:Au(r),0>r&&(r=Li(e+r,0)),_(n,ye(t,3),r)):-1}function Ne(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==T&&(u=Au(r),u=0>r?Li(e+u,0):Ui(u,e-1)),_(n,ye(t,3),u,true)}function Pe(n){return(null==n?0:n.length)?wt(n,1):[]}function Ze(n){\nreturn n&&n.length?n[0]:T}function qe(n){var t=null==n?0:n.length;return t?n[t-1]:T}function Ve(n,t){return n&&n.length&&t&&t.length?er(n,t):n}function Ke(n){return null==n?n:Ti.call(n)}function Ge(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){if(su(n))return t=Li(n.length,t),true}),A(t,function(t){return c(n,b(t))})}function He(t,r){if(!t||!t.length)return[];var e=Ge(t);return null==r?e:c(e,function(t){return n(r,T,t)})}function Je(n){return n=An(n),n.__chain__=true,n}function Ye(n,t){\nreturn t(n)}function Qe(){return this}function Xe(n,t){return(of(n)?r:eo)(n,ye(t,3))}function nu(n,t){return(of(n)?e:uo)(n,ye(t,3))}function tu(n,t){return(of(n)?c:Gt)(n,ye(t,3))}function ru(n,t,r){return t=r?T:t,t=n&&null==t?n.length:t,fe(n,128,T,T,T,T,t)}function eu(n,t){var r;if(typeof t!=\"function\")throw new ni(\"Expected a function\");return n=Au(n),function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=T),r}}function uu(n,t,r){return t=r?T:t,n=fe(n,8,T,T,T,T,T,t),n.placeholder=uu.placeholder,\nn}function iu(n,t,r){return t=r?T:t,n=fe(n,16,T,T,T,T,T,t),n.placeholder=iu.placeholder,n}function ou(n,t,r){function e(t){var r=c,e=a;return c=a=T,_=t,s=n.apply(e,r)}function u(n){var r=n-p;return n-=_,p===T||r>=t||0>r||g&&n>=l}function i(){var n=Ko();if(u(n))return o(n);var r,e=yo;r=n-_,n=t-(n-p),r=g?Ui(n,l-r):n,h=e(i,r)}function o(n){return h=T,d&&c?e(n):(c=a=T,s)}function f(){var n=Ko(),r=u(n);if(c=arguments,a=this,p=n,r){if(h===T)return _=n=p,h=yo(i,t),v?e(n):s;if(g)return h=yo(i,t),e(p)}return h===T&&(h=yo(i,t)),\ns}var c,a,l,s,h,p,_=0,v=false,g=false,d=true;if(typeof n!=\"function\")throw new ni(\"Expected a function\");return t=ku(t)||0,gu(r)&&(v=!!r.leading,l=(g=\"maxWait\"in r)?Li(ku(r.maxWait)||0,t):l,d=\"trailing\"in r?!!r.trailing:d),f.cancel=function(){h!==T&&ao(h),_=0,c=p=a=h=T},f.flush=function(){return h===T?s:o(Ko())},f}function fu(n,t){function r(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;return i.has(u)?i.get(u):(e=n.apply(this,e),r.cache=i.set(u,e)||i,e)}if(typeof n!=\"function\"||null!=t&&typeof t!=\"function\")throw new ni(\"Expected a function\");\nreturn r.cache=new(fu.Cache||Fn),r}function cu(n){if(typeof n!=\"function\")throw new ni(\"Expected a function\");return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function au(n,t){return n===t||n!==n&&t!==t}function lu(n){return null!=n&&vu(n.length)&&!pu(n)}function su(n){return du(n)&&lu(n)}function hu(n){if(!du(n))return false;var t=Ot(n);return\"[object Error]\"==t||\"[object DOMException]\"==t||typeof n.message==\"string\"&&typeof n.name==\"string\"&&!bu(n);\n}function pu(n){return!!gu(n)&&(n=Ot(n),\"[object Function]\"==n||\"[object GeneratorFunction]\"==n||\"[object AsyncFunction]\"==n||\"[object Proxy]\"==n)}function _u(n){return typeof n==\"number\"&&n==Au(n)}function vu(n){return typeof n==\"number\"&&-1<n&&0==n%1&&9007199254740991>=n}function gu(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function du(n){return null!=n&&typeof n==\"object\"}function yu(n){return typeof n==\"number\"||du(n)&&\"[object Number]\"==Ot(n)}function bu(n){return!(!du(n)||\"[object Object]\"!=Ot(n))&&(n=gi(n),\nnull===n||(n=ii.call(n,\"constructor\")&&n.constructor,typeof n==\"function\"&&n instanceof n&&ui.call(n)==ai))}function xu(n){return typeof n==\"string\"||!of(n)&&du(n)&&\"[object String]\"==Ot(n)}function ju(n){return typeof n==\"symbol\"||du(n)&&\"[object Symbol]\"==Ot(n)}function wu(n){if(!n)return[];if(lu(n))return xu(n)?M(n):Ur(n);if(ji&&n[ji]){n=n[ji]();for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}return t=_o(n),(\"[object Map]\"==t?W:\"[object Set]\"==t?U:Lu)(n)}function mu(n){return n?(n=ku(n),\nn===$||n===-$?1.7976931348623157e308*(0>n?-1:1):n===n?n:0):0===n?n:0}function Au(n){n=mu(n);var t=n%1;return n===n?t?n-t:n:0}function Eu(n){return n?pt(Au(n),0,4294967295):0}function ku(n){if(typeof n==\"number\")return n;if(ju(n))return F;if(gu(n)&&(n=typeof n.valueOf==\"function\"?n.valueOf():n,n=gu(n)?n+\"\":n),typeof n!=\"string\")return 0===n?n:+n;n=n.replace(un,\"\");var t=gn.test(n);return t||yn.test(n)?Dn(n.slice(2),t?2:8):vn.test(n)?F:+n}function Su(n){return Cr(n,Wu(n))}function Ou(n){return null==n?\"\":yr(n);\n}function Iu(n,t,r){return n=null==n?T:kt(n,t),n===T?r:n}function Ru(n,t){return null!=n&&we(n,t,zt)}function zu(n){return lu(n)?qn(n):Vt(n)}function Wu(n){if(lu(n))n=qn(n,true);else if(gu(n)){var t,r=ze(n),e=[];for(t in n)(\"constructor\"!=t||!r&&ii.call(n,t))&&e.push(t);n=e}else{if(t=[],null!=n)for(r in Yu(n))t.push(r);n=t}return n}function Bu(n,t){if(null==n)return{};var r=c(ve(n),function(n){return[n]});return t=ye(t),tr(n,r,function(n,r){return t(n,r[0])})}function Lu(n){return null==n?[]:S(n,zu(n));\n}function Uu(n){return Tf(Ou(n).toLowerCase())}function Cu(n){return(n=Ou(n))&&n.replace(xn,Xn).replace(Sn,\"\")}function Du(n,t,r){return n=Ou(n),t=r?T:t,t===T?zn.test(n)?n.match(In)||[]:n.match(sn)||[]:n.match(t)||[]}function Mu(n){return function(){return n}}function Tu(n){return n}function $u(n){return qt(typeof n==\"function\"?n:_t(n,1))}function Fu(n,t,e){var u=zu(t),i=Et(t,u);null!=e||gu(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=Et(t,zu(t)));var o=!(gu(e)&&\"chain\"in e&&!e.chain),f=pu(n);return r(i,function(r){\nvar e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;if(o||t){var r=n(this.__wrapped__);return(r.__actions__=Ur(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function Nu(){}function Pu(n){return Ie(n)?b(De(n)):rr(n)}function Zu(){return[]}function qu(){return false}mn=null==mn?$n:rt.defaults($n.Object(),mn,rt.pick($n,Wn));var Vu=mn.Array,Ku=mn.Date,Gu=mn.Error,Hu=mn.Function,Ju=mn.Math,Yu=mn.Object,Qu=mn.RegExp,Xu=mn.String,ni=mn.TypeError,ti=Vu.prototype,ri=Yu.prototype,ei=mn[\"__core-js_shared__\"],ui=Hu.prototype.toString,ii=ri.hasOwnProperty,oi=0,fi=function(){\nvar n=/[^.]+$/.exec(ei&&ei.keys&&ei.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),ci=ri.toString,ai=ui.call(Yu),li=$n._,si=Qu(\"^\"+ui.call(ii).replace(rn,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),hi=Pn?mn.Buffer:T,pi=mn.Symbol,_i=mn.Uint8Array,vi=hi?hi.g:T,gi=B(Yu.getPrototypeOf,Yu),di=Yu.create,yi=ri.propertyIsEnumerable,bi=ti.splice,xi=pi?pi.isConcatSpreadable:T,ji=pi?pi.iterator:T,wi=pi?pi.toStringTag:T,mi=function(){try{var n=je(Yu,\"defineProperty\");\nreturn n({},\"\",{}),n}catch(n){}}(),Ai=mn.clearTimeout!==$n.clearTimeout&&mn.clearTimeout,Ei=Ku&&Ku.now!==$n.Date.now&&Ku.now,ki=mn.setTimeout!==$n.setTimeout&&mn.setTimeout,Si=Ju.ceil,Oi=Ju.floor,Ii=Yu.getOwnPropertySymbols,Ri=hi?hi.isBuffer:T,zi=mn.isFinite,Wi=ti.join,Bi=B(Yu.keys,Yu),Li=Ju.max,Ui=Ju.min,Ci=Ku.now,Di=mn.parseInt,Mi=Ju.random,Ti=ti.reverse,$i=je(mn,\"DataView\"),Fi=je(mn,\"Map\"),Ni=je(mn,\"Promise\"),Pi=je(mn,\"Set\"),Zi=je(mn,\"WeakMap\"),qi=je(Yu,\"create\"),Vi=Zi&&new Zi,Ki={},Gi=Me($i),Hi=Me(Fi),Ji=Me(Ni),Yi=Me(Pi),Qi=Me(Zi),Xi=pi?pi.prototype:T,no=Xi?Xi.valueOf:T,to=Xi?Xi.toString:T,ro=function(){\nfunction n(){}return function(t){return gu(t)?di?di(t):(n.prototype=t,t=new n,n.prototype=T,t):{}}}();An.templateSettings={escape:J,evaluate:Y,interpolate:Q,variable:\"\",imports:{_:An}},An.prototype=En.prototype,An.prototype.constructor=An,On.prototype=ro(En.prototype),On.prototype.constructor=On,Un.prototype=ro(En.prototype),Un.prototype.constructor=Un,Mn.prototype.clear=function(){this.__data__=qi?qi(null):{},this.size=0},Mn.prototype.delete=function(n){return n=this.has(n)&&delete this.__data__[n],\nthis.size-=n?1:0,n},Mn.prototype.get=function(n){var t=this.__data__;return qi?(n=t[n],\"__lodash_hash_undefined__\"===n?T:n):ii.call(t,n)?t[n]:T},Mn.prototype.has=function(n){var t=this.__data__;return qi?t[n]!==T:ii.call(t,n)},Mn.prototype.set=function(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=qi&&t===T?\"__lodash_hash_undefined__\":t,this},Tn.prototype.clear=function(){this.__data__=[],this.size=0},Tn.prototype.delete=function(n){var t=this.__data__;return n=ft(t,n),!(0>n)&&(n==t.length-1?t.pop():bi.call(t,n,1),\n--this.size,true)},Tn.prototype.get=function(n){var t=this.__data__;return n=ft(t,n),0>n?T:t[n][1]},Tn.prototype.has=function(n){return-1<ft(this.__data__,n)},Tn.prototype.set=function(n,t){var r=this.__data__,e=ft(r,n);return 0>e?(++this.size,r.push([n,t])):r[e][1]=t,this},Fn.prototype.clear=function(){this.size=0,this.__data__={hash:new Mn,map:new(Fi||Tn),string:new Mn}},Fn.prototype.delete=function(n){return n=be(this,n).delete(n),this.size-=n?1:0,n},Fn.prototype.get=function(n){return be(this,n).get(n);\n},Fn.prototype.has=function(n){return be(this,n).has(n)},Fn.prototype.set=function(n,t){var r=be(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},Nn.prototype.add=Nn.prototype.push=function(n){return this.__data__.set(n,\"__lodash_hash_undefined__\"),this},Nn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.clear=function(){this.__data__=new Tn,this.size=0},Zn.prototype.delete=function(n){var t=this.__data__;return n=t.delete(n),this.size=t.size,n},Zn.prototype.get=function(n){\nreturn this.__data__.get(n)},Zn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.set=function(n,t){var r=this.__data__;if(r instanceof Tn){var e=r.__data__;if(!Fi||199>e.length)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new Fn(e)}return r.set(n,t),this.size=r.size,this};var eo=Fr(mt),uo=Fr(At,true),io=Nr(),oo=Nr(true),fo=Vi?function(n,t){return Vi.set(n,t),n}:Tu,co=mi?function(n,t){return mi(n,\"toString\",{configurable:true,enumerable:false,value:Mu(t),writable:true})}:Tu,ao=Ai||function(n){\nreturn $n.clearTimeout(n)},lo=Pi&&1/U(new Pi([,-0]))[1]==$?function(n){return new Pi(n)}:Nu,so=Vi?function(n){return Vi.get(n)}:Nu,ho=Ii?function(n){return null==n?[]:(n=Yu(n),i(Ii(n),function(t){return yi.call(n,t)}))}:Zu,po=Ii?function(n){for(var t=[];n;)a(t,ho(n)),n=gi(n);return t}:Zu,_o=Ot;($i&&\"[object DataView]\"!=_o(new $i(new ArrayBuffer(1)))||Fi&&\"[object Map]\"!=_o(new Fi)||Ni&&\"[object Promise]\"!=_o(Ni.resolve())||Pi&&\"[object Set]\"!=_o(new Pi)||Zi&&\"[object WeakMap]\"!=_o(new Zi))&&(_o=function(n){\nvar t=Ot(n);if(n=(n=\"[object Object]\"==t?n.constructor:T)?Me(n):\"\")switch(n){case Gi:return\"[object DataView]\";case Hi:return\"[object Map]\";case Ji:return\"[object Promise]\";case Yi:return\"[object Set]\";case Qi:return\"[object WeakMap]\"}return t});var vo=ei?pu:qu,go=Ue(fo),yo=ki||function(n,t){return $n.setTimeout(n,t)},bo=Ue(co),xo=function(n){n=fu(n,function(n){return 500===t.size&&t.clear(),n});var t=n.cache;return n}(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(tn,function(n,r,e,u){\nt.push(e?u.replace(hn,\"$1\"):r||n)}),t}),jo=fr(function(n,t){return su(n)?yt(n,wt(t,1,su,true)):[]}),wo=fr(function(n,t){var r=qe(t);return su(r)&&(r=T),su(n)?yt(n,wt(t,1,su,true),ye(r,2)):[]}),mo=fr(function(n,t){var r=qe(t);return su(r)&&(r=T),su(n)?yt(n,wt(t,1,su,true),T,r):[]}),Ao=fr(function(n){var t=c(n,Er);return t.length&&t[0]===n[0]?Wt(t):[]}),Eo=fr(function(n){var t=qe(n),r=c(n,Er);return t===qe(r)?t=T:r.pop(),r.length&&r[0]===n[0]?Wt(r,ye(t,2)):[]}),ko=fr(function(n){var t=qe(n),r=c(n,Er);return(t=typeof t==\"function\"?t:T)&&r.pop(),\nr.length&&r[0]===n[0]?Wt(r,T,t):[]}),So=fr(Ve),Oo=pe(function(n,t){var r=null==n?0:n.length,e=ht(n,t);return ur(n,c(t,function(n){return Se(n,r)?+n:n}).sort(Wr)),e}),Io=fr(function(n){return br(wt(n,1,su,true))}),Ro=fr(function(n){var t=qe(n);return su(t)&&(t=T),br(wt(n,1,su,true),ye(t,2))}),zo=fr(function(n){var t=qe(n),t=typeof t==\"function\"?t:T;return br(wt(n,1,su,true),T,t)}),Wo=fr(function(n,t){return su(n)?yt(n,t):[]}),Bo=fr(function(n){return mr(i(n,su))}),Lo=fr(function(n){var t=qe(n);return su(t)&&(t=T),\nmr(i(n,su),ye(t,2))}),Uo=fr(function(n){var t=qe(n),t=typeof t==\"function\"?t:T;return mr(i(n,su),T,t)}),Co=fr(Ge),Do=fr(function(n){var t=n.length,t=1<t?n[t-1]:T,t=typeof t==\"function\"?(n.pop(),t):T;return He(n,t)}),Mo=pe(function(n){function t(t){return ht(t,n)}var r=n.length,e=r?n[0]:0,u=this.__wrapped__;return!(1<r||this.__actions__.length)&&u instanceof Un&&Se(e)?(u=u.slice(e,+e+(r?1:0)),u.__actions__.push({func:Ye,args:[t],thisArg:T}),new On(u,this.__chain__).thru(function(n){return r&&!n.length&&n.push(T),\nn})):this.thru(t)}),To=Tr(function(n,t,r){ii.call(n,r)?++n[r]:st(n,r,1)}),$o=Gr(Fe),Fo=Gr(Ne),No=Tr(function(n,t,r){ii.call(n,r)?n[r].push(t):st(n,r,[t])}),Po=fr(function(t,r,e){var u=-1,i=typeof r==\"function\",o=lu(t)?Vu(t.length):[];return eo(t,function(t){o[++u]=i?n(r,t,e):Lt(t,r,e)}),o}),Zo=Tr(function(n,t,r){st(n,r,t)}),qo=Tr(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),Vo=fr(function(n,t){if(null==n)return[];var r=t.length;return 1<r&&Oe(n,t[0],t[1])?t=[]:2<r&&Oe(t[0],t[1],t[2])&&(t=[t[0]]),\nXt(n,wt(t,1),[])}),Ko=Ei||function(){return $n.Date.now()},Go=fr(function(n,t,r){var e=1;if(r.length)var u=L(r,de(Go)),e=32|e;return fe(n,e,t,r,u)}),Ho=fr(function(n,t,r){var e=3;if(r.length)var u=L(r,de(Ho)),e=32|e;return fe(t,e,n,r,u)}),Jo=fr(function(n,t){return dt(n,1,t)}),Yo=fr(function(n,t,r){return dt(n,ku(t)||0,r)});fu.Cache=Fn;var Qo=fr(function(t,r){r=1==r.length&&of(r[0])?c(r[0],k(ye())):c(wt(r,1),k(ye()));var e=r.length;return fr(function(u){for(var i=-1,o=Ui(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);\nreturn n(t,this,u)})}),Xo=fr(function(n,t){return fe(n,32,T,t,L(t,de(Xo)))}),nf=fr(function(n,t){return fe(n,64,T,t,L(t,de(nf)))}),tf=pe(function(n,t){return fe(n,256,T,T,T,t)}),rf=ee(It),ef=ee(function(n,t){return n>=t}),uf=Ut(function(){return arguments}())?Ut:function(n){return du(n)&&ii.call(n,\"callee\")&&!yi.call(n,\"callee\")},of=Vu.isArray,ff=Vn?k(Vn):Ct,cf=Ri||qu,af=Kn?k(Kn):Dt,lf=Gn?k(Gn):Tt,sf=Hn?k(Hn):Nt,hf=Jn?k(Jn):Pt,pf=Yn?k(Yn):Zt,_f=ee(Kt),vf=ee(function(n,t){return n<=t}),gf=$r(function(n,t){\nif(ze(t)||lu(t))Cr(t,zu(t),n);else for(var r in t)ii.call(t,r)&&ot(n,r,t[r])}),df=$r(function(n,t){Cr(t,Wu(t),n)}),yf=$r(function(n,t,r,e){Cr(t,Wu(t),n,e)}),bf=$r(function(n,t,r,e){Cr(t,zu(t),n,e)}),xf=pe(ht),jf=fr(function(n,t){n=Yu(n);var r=-1,e=t.length,u=2<e?t[2]:T;for(u&&Oe(t[0],t[1],u)&&(e=1);++r<e;)for(var u=t[r],i=Wu(u),o=-1,f=i.length;++o<f;){var c=i[o],a=n[c];(a===T||au(a,ri[c])&&!ii.call(n,c))&&(n[c]=u[c])}return n}),wf=fr(function(t){return t.push(T,ae),n(Sf,T,t)}),mf=Yr(function(n,t,r){\nnull!=t&&typeof t.toString!=\"function\"&&(t=ci.call(t)),n[t]=r},Mu(Tu)),Af=Yr(function(n,t,r){null!=t&&typeof t.toString!=\"function\"&&(t=ci.call(t)),ii.call(n,t)?n[t].push(r):n[t]=[r]},ye),Ef=fr(Lt),kf=$r(function(n,t,r){Yt(n,t,r)}),Sf=$r(function(n,t,r,e){Yt(n,t,r,e)}),Of=pe(function(n,t){var r={};if(null==n)return r;var e=false;t=c(t,function(t){return t=Sr(t,n),e||(e=1<t.length),t}),Cr(n,ve(n),r),e&&(r=_t(r,7,le));for(var u=t.length;u--;)xr(r,t[u]);return r}),If=pe(function(n,t){return null==n?{}:nr(n,t);\n}),Rf=oe(zu),zf=oe(Wu),Wf=qr(function(n,t,r){return t=t.toLowerCase(),n+(r?Uu(t):t)}),Bf=qr(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Lf=qr(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Uf=Zr(\"toLowerCase\"),Cf=qr(function(n,t,r){return n+(r?\"_\":\"\")+t.toLowerCase()}),Df=qr(function(n,t,r){return n+(r?\" \":\"\")+Tf(t)}),Mf=qr(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Tf=Zr(\"toUpperCase\"),$f=fr(function(t,r){try{return n(t,T,r)}catch(n){return hu(n)?n:new Gu(n)}}),Ff=pe(function(n,t){\nreturn r(t,function(t){t=De(t),st(n,t,Go(n[t],n))}),n}),Nf=Hr(),Pf=Hr(true),Zf=fr(function(n,t){return function(r){return Lt(r,n,t)}}),qf=fr(function(n,t){return function(r){return Lt(n,r,t)}}),Vf=Xr(c),Kf=Xr(u),Gf=Xr(h),Hf=re(),Jf=re(true),Yf=Qr(function(n,t){return n+t},0),Qf=ie(\"ceil\"),Xf=Qr(function(n,t){return n/t},1),nc=ie(\"floor\"),tc=Qr(function(n,t){return n*t},1),rc=ie(\"round\"),ec=Qr(function(n,t){return n-t},0);return An.after=function(n,t){if(typeof t!=\"function\")throw new ni(\"Expected a function\");\nreturn n=Au(n),function(){if(1>--n)return t.apply(this,arguments)}},An.ary=ru,An.assign=gf,An.assignIn=df,An.assignInWith=yf,An.assignWith=bf,An.at=xf,An.before=eu,An.bind=Go,An.bindAll=Ff,An.bindKey=Ho,An.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return of(n)?n:[n]},An.chain=Je,An.chunk=function(n,t,r){if(t=(r?Oe(n,t,r):t===T)?1:Li(Au(t),0),r=null==n?0:n.length,!r||1>t)return[];for(var e=0,u=0,i=Vu(Si(r/t));e<r;)i[u++]=hr(n,e,e+=t);return i},An.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){\nvar i=n[t];i&&(u[e++]=i)}return u},An.concat=function(){var n=arguments.length;if(!n)return[];for(var t=Vu(n-1),r=arguments[0];n--;)t[n-1]=arguments[n];return a(of(r)?Ur(r):[r],wt(t,1))},An.cond=function(t){var r=null==t?0:t.length,e=ye();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new ni(\"Expected a function\");return[e(n[0]),n[1]]}):[],fr(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})},An.conforms=function(n){return vt(_t(n,1))},An.constant=Mu,\nAn.countBy=To,An.create=function(n,t){var r=ro(n);return null==t?r:at(r,t)},An.curry=uu,An.curryRight=iu,An.debounce=ou,An.defaults=jf,An.defaultsDeep=wf,An.defer=Jo,An.delay=Yo,An.difference=jo,An.differenceBy=wo,An.differenceWith=mo,An.drop=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),hr(n,0>t?0:t,e)):[]},An.dropRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),t=e-t,hr(n,0,0>t?0:t)):[]},An.dropRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true,true):[];\n},An.dropWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true):[]},An.fill=function(n,t,r,e){var u=null==n?0:n.length;if(!u)return[];for(r&&typeof r!=\"number\"&&Oe(n,t,r)&&(r=0,e=u),u=n.length,r=Au(r),0>r&&(r=-r>u?0:u+r),e=e===T||e>u?u:Au(e),0>e&&(e+=u),e=r>e?0:Eu(e);r<e;)n[r++]=t;return n},An.filter=function(n,t){return(of(n)?i:jt)(n,ye(t,3))},An.flatMap=function(n,t){return wt(tu(n,t),1)},An.flatMapDeep=function(n,t){return wt(tu(n,t),$)},An.flatMapDepth=function(n,t,r){return r=r===T?1:Au(r),\nwt(tu(n,t),r)},An.flatten=Pe,An.flattenDeep=function(n){return(null==n?0:n.length)?wt(n,$):[]},An.flattenDepth=function(n,t){return null!=n&&n.length?(t=t===T?1:Au(t),wt(n,t)):[]},An.flip=function(n){return fe(n,512)},An.flow=Nf,An.flowRight=Pf,An.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e},An.functions=function(n){return null==n?[]:Et(n,zu(n))},An.functionsIn=function(n){return null==n?[]:Et(n,Wu(n))},An.groupBy=No,An.initial=function(n){\nreturn(null==n?0:n.length)?hr(n,0,-1):[]},An.intersection=Ao,An.intersectionBy=Eo,An.intersectionWith=ko,An.invert=mf,An.invertBy=Af,An.invokeMap=Po,An.iteratee=$u,An.keyBy=Zo,An.keys=zu,An.keysIn=Wu,An.map=tu,An.mapKeys=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,t(n,e,u),n)}),r},An.mapValues=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,e,t(n,e,u))}),r},An.matches=function(n){return Ht(_t(n,1))},An.matchesProperty=function(n,t){return Jt(n,_t(t,1))},An.memoize=fu,\nAn.merge=kf,An.mergeWith=Sf,An.method=Zf,An.methodOf=qf,An.mixin=Fu,An.negate=cu,An.nthArg=function(n){return n=Au(n),fr(function(t){return Qt(t,n)})},An.omit=Of,An.omitBy=function(n,t){return Bu(n,cu(ye(t)))},An.once=function(n){return eu(2,n)},An.orderBy=function(n,t,r,e){return null==n?[]:(of(t)||(t=null==t?[]:[t]),r=e?T:r,of(r)||(r=null==r?[]:[r]),Xt(n,t,r))},An.over=Vf,An.overArgs=Qo,An.overEvery=Kf,An.overSome=Gf,An.partial=Xo,An.partialRight=nf,An.partition=qo,An.pick=If,An.pickBy=Bu,An.property=Pu,\nAn.propertyOf=function(n){return function(t){return null==n?T:kt(n,t)}},An.pull=So,An.pullAll=Ve,An.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,ye(r,2)):n},An.pullAllWith=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,T,r):n},An.pullAt=Oo,An.range=Hf,An.rangeRight=Jf,An.rearg=tf,An.reject=function(n,t){return(of(n)?i:jt)(n,cu(ye(t,3)))},An.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=ye(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),\nu.push(e))}return ur(n,u),r},An.rest=function(n,t){if(typeof n!=\"function\")throw new ni(\"Expected a function\");return t=t===T?t:Au(t),fr(n,t)},An.reverse=Ke,An.sampleSize=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:Au(t),(of(n)?et:ar)(n,t)},An.set=function(n,t,r){return null==n?n:lr(n,t,r)},An.setWith=function(n,t,r,e){return e=typeof e==\"function\"?e:T,null==n?n:lr(n,t,r,e)},An.shuffle=function(n){return(of(n)?ut:sr)(n)},An.slice=function(n,t,r){var e=null==n?0:n.length;return e?(r&&typeof r!=\"number\"&&Oe(n,t,r)?(t=0,\nr=e):(t=null==t?0:Au(t),r=r===T?e:Au(r)),hr(n,t,r)):[]},An.sortBy=Vo,An.sortedUniq=function(n){return n&&n.length?gr(n):[]},An.sortedUniqBy=function(n,t){return n&&n.length?gr(n,ye(t,2)):[]},An.split=function(n,t,r){return r&&typeof r!=\"number\"&&Oe(n,t,r)&&(t=r=T),r=r===T?4294967295:r>>>0,r?(n=Ou(n))&&(typeof t==\"string\"||null!=t&&!sf(t))&&(t=yr(t),!t&&Rn.test(n))?Or(M(n),0,r):n.split(t,r):[]},An.spread=function(t,r){if(typeof t!=\"function\")throw new ni(\"Expected a function\");return r=null==r?0:Li(Au(r),0),\nfr(function(e){var u=e[r];return e=Or(e,0,r),u&&a(e,u),n(t,this,e)})},An.tail=function(n){var t=null==n?0:n.length;return t?hr(n,1,t):[]},An.take=function(n,t,r){return n&&n.length?(t=r||t===T?1:Au(t),hr(n,0,0>t?0:t)):[]},An.takeRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),t=e-t,hr(n,0>t?0:t,e)):[]},An.takeRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),false,true):[]},An.takeWhile=function(n,t){return n&&n.length?jr(n,ye(t,3)):[]},An.tap=function(n,t){return t(n),\nn},An.throttle=function(n,t,r){var e=true,u=true;if(typeof n!=\"function\")throw new ni(\"Expected a function\");return gu(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),ou(n,t,{leading:e,maxWait:t,trailing:u})},An.thru=Ye,An.toArray=wu,An.toPairs=Rf,An.toPairsIn=zf,An.toPath=function(n){return of(n)?c(n,De):ju(n)?[n]:Ur(xo(Ou(n)))},An.toPlainObject=Su,An.transform=function(n,t,e){var u=of(n),i=u||cf(n)||pf(n);if(t=ye(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:gu(n)&&pu(o)?ro(gi(n)):{};\n}return(i?r:mt)(n,function(n,r,u){return t(e,n,r,u)}),e},An.unary=function(n){return ru(n,1)},An.union=Io,An.unionBy=Ro,An.unionWith=zo,An.uniq=function(n){return n&&n.length?br(n):[]},An.uniqBy=function(n,t){return n&&n.length?br(n,ye(t,2)):[]},An.uniqWith=function(n,t){return t=typeof t==\"function\"?t:T,n&&n.length?br(n,T,t):[]},An.unset=function(n,t){return null==n||xr(n,t)},An.unzip=Ge,An.unzipWith=He,An.update=function(n,t,r){return null==n?n:lr(n,t,kr(r)(kt(n,t)),void 0)},An.updateWith=function(n,t,r,e){\nreturn e=typeof e==\"function\"?e:T,null!=n&&(n=lr(n,t,kr(r)(kt(n,t)),e)),n},An.values=Lu,An.valuesIn=function(n){return null==n?[]:S(n,Wu(n))},An.without=Wo,An.words=Du,An.wrap=function(n,t){return Xo(kr(t),n)},An.xor=Bo,An.xorBy=Lo,An.xorWith=Uo,An.zip=Co,An.zipObject=function(n,t){return Ar(n||[],t||[],ot)},An.zipObjectDeep=function(n,t){return Ar(n||[],t||[],lr)},An.zipWith=Do,An.entries=Rf,An.entriesIn=zf,An.extend=df,An.extendWith=yf,Fu(An,An),An.add=Yf,An.attempt=$f,An.camelCase=Wf,An.capitalize=Uu,\nAn.ceil=Qf,An.clamp=function(n,t,r){return r===T&&(r=t,t=T),r!==T&&(r=ku(r),r=r===r?r:0),t!==T&&(t=ku(t),t=t===t?t:0),pt(ku(n),t,r)},An.clone=function(n){return _t(n,4)},An.cloneDeep=function(n){return _t(n,5)},An.cloneDeepWith=function(n,t){return t=typeof t==\"function\"?t:T,_t(n,5,t)},An.cloneWith=function(n,t){return t=typeof t==\"function\"?t:T,_t(n,4,t)},An.conformsTo=function(n,t){return null==t||gt(n,t,zu(t))},An.deburr=Cu,An.defaultTo=function(n,t){return null==n||n!==n?t:n},An.divide=Xf,An.endsWith=function(n,t,r){\nn=Ou(n),t=yr(t);var e=n.length,e=r=r===T?e:pt(Au(r),0,e);return r-=t.length,0<=r&&n.slice(r,e)==t},An.eq=au,An.escape=function(n){return(n=Ou(n))&&H.test(n)?n.replace(K,nt):n},An.escapeRegExp=function(n){return(n=Ou(n))&&en.test(n)?n.replace(rn,\"\\\\$&\"):n},An.every=function(n,t,r){var e=of(n)?u:bt;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.find=$o,An.findIndex=Fe,An.findKey=function(n,t){return p(n,ye(t,3),mt)},An.findLast=Fo,An.findLastIndex=Ne,An.findLastKey=function(n,t){return p(n,ye(t,3),At);\n},An.floor=nc,An.forEach=Xe,An.forEachRight=nu,An.forIn=function(n,t){return null==n?n:io(n,ye(t,3),Wu)},An.forInRight=function(n,t){return null==n?n:oo(n,ye(t,3),Wu)},An.forOwn=function(n,t){return n&&mt(n,ye(t,3))},An.forOwnRight=function(n,t){return n&&At(n,ye(t,3))},An.get=Iu,An.gt=rf,An.gte=ef,An.has=function(n,t){return null!=n&&we(n,t,Rt)},An.hasIn=Ru,An.head=Ze,An.identity=Tu,An.includes=function(n,t,r,e){return n=lu(n)?n:Lu(n),r=r&&!e?Au(r):0,e=n.length,0>r&&(r=Li(e+r,0)),xu(n)?r<=e&&-1<n.indexOf(t,r):!!e&&-1<v(n,t,r);\n},An.indexOf=function(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:Au(r),0>r&&(r=Li(e+r,0)),v(n,t,r)):-1},An.inRange=function(n,t,r){return t=mu(t),r===T?(r=t,t=0):r=mu(r),n=ku(n),n>=Ui(t,r)&&n<Li(t,r)},An.invoke=Ef,An.isArguments=uf,An.isArray=of,An.isArrayBuffer=ff,An.isArrayLike=lu,An.isArrayLikeObject=su,An.isBoolean=function(n){return true===n||false===n||du(n)&&\"[object Boolean]\"==Ot(n)},An.isBuffer=cf,An.isDate=af,An.isElement=function(n){return du(n)&&1===n.nodeType&&!bu(n)},An.isEmpty=function(n){\nif(null==n)return true;if(lu(n)&&(of(n)||typeof n==\"string\"||typeof n.splice==\"function\"||cf(n)||pf(n)||uf(n)))return!n.length;var t=_o(n);if(\"[object Map]\"==t||\"[object Set]\"==t)return!n.size;if(ze(n))return!Vt(n).length;for(var r in n)if(ii.call(n,r))return false;return true},An.isEqual=function(n,t){return Mt(n,t)},An.isEqualWith=function(n,t,r){var e=(r=typeof r==\"function\"?r:T)?r(n,t):T;return e===T?Mt(n,t,T,r):!!e},An.isError=hu,An.isFinite=function(n){return typeof n==\"number\"&&zi(n)},An.isFunction=pu,\nAn.isInteger=_u,An.isLength=vu,An.isMap=lf,An.isMatch=function(n,t){return n===t||$t(n,t,xe(t))},An.isMatchWith=function(n,t,r){return r=typeof r==\"function\"?r:T,$t(n,t,xe(t),r)},An.isNaN=function(n){return yu(n)&&n!=+n},An.isNative=function(n){if(vo(n))throw new Gu(\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\");return Ft(n)},An.isNil=function(n){return null==n},An.isNull=function(n){return null===n},An.isNumber=yu,An.isObject=gu,An.isObjectLike=du,An.isPlainObject=bu,An.isRegExp=sf,\nAn.isSafeInteger=function(n){return _u(n)&&-9007199254740991<=n&&9007199254740991>=n},An.isSet=hf,An.isString=xu,An.isSymbol=ju,An.isTypedArray=pf,An.isUndefined=function(n){return n===T},An.isWeakMap=function(n){return du(n)&&\"[object WeakMap]\"==_o(n)},An.isWeakSet=function(n){return du(n)&&\"[object WeakSet]\"==Ot(n)},An.join=function(n,t){return null==n?\"\":Wi.call(n,t)},An.kebabCase=Bf,An.last=qe,An.lastIndexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;if(r!==T&&(u=Au(r),u=0>u?Li(e+u,0):Ui(u,e-1)),\nt===t){for(r=u+1;r--&&n[r]!==t;);n=r}else n=_(n,d,u,true);return n},An.lowerCase=Lf,An.lowerFirst=Uf,An.lt=_f,An.lte=vf,An.max=function(n){return n&&n.length?xt(n,Tu,It):T},An.maxBy=function(n,t){return n&&n.length?xt(n,ye(t,2),It):T},An.mean=function(n){return y(n,Tu)},An.meanBy=function(n,t){return y(n,ye(t,2))},An.min=function(n){return n&&n.length?xt(n,Tu,Kt):T},An.minBy=function(n,t){return n&&n.length?xt(n,ye(t,2),Kt):T},An.stubArray=Zu,An.stubFalse=qu,An.stubObject=function(){return{}},An.stubString=function(){\nreturn\"\"},An.stubTrue=function(){return true},An.multiply=tc,An.nth=function(n,t){return n&&n.length?Qt(n,Au(t)):T},An.noConflict=function(){return $n._===this&&($n._=li),this},An.noop=Nu,An.now=Ko,An.pad=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return!t||e>=t?n:(t=(t-e)/2,ne(Oi(t),r)+n+ne(Si(t),r))},An.padEnd=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return t&&e<t?n+ne(t-e,r):n},An.padStart=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return t&&e<t?ne(t-e,r)+n:n},An.parseInt=function(n,t,r){\nreturn r||null==t?t=0:t&&(t=+t),Di(Ou(n).replace(on,\"\"),t||0)},An.random=function(n,t,r){if(r&&typeof r!=\"boolean\"&&Oe(n,t,r)&&(t=r=T),r===T&&(typeof t==\"boolean\"?(r=t,t=T):typeof n==\"boolean\"&&(r=n,n=T)),n===T&&t===T?(n=0,t=1):(n=mu(n),t===T?(t=n,n=0):t=mu(t)),n>t){var e=n;n=t,t=e}return r||n%1||t%1?(r=Mi(),Ui(n+r*(t-n+Cn(\"1e-\"+((r+\"\").length-1))),t)):ir(n,t)},An.reduce=function(n,t,r){var e=of(n)?l:j,u=3>arguments.length;return e(n,ye(t,4),r,u,eo)},An.reduceRight=function(n,t,r){var e=of(n)?s:j,u=3>arguments.length;\nreturn e(n,ye(t,4),r,u,uo)},An.repeat=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:Au(t),or(Ou(n),t)},An.replace=function(){var n=arguments,t=Ou(n[0]);return 3>n.length?t:t.replace(n[1],n[2])},An.result=function(n,t,r){t=Sr(t,n);var e=-1,u=t.length;for(u||(u=1,n=T);++e<u;){var i=null==n?T:n[De(t[e])];i===T&&(e=u,i=r),n=pu(i)?i.call(n):i}return n},An.round=rc,An.runInContext=x,An.sample=function(n){return(of(n)?Qn:cr)(n)},An.size=function(n){if(null==n)return 0;if(lu(n))return xu(n)?D(n):n.length;\nvar t=_o(n);return\"[object Map]\"==t||\"[object Set]\"==t?n.size:Vt(n).length},An.snakeCase=Cf,An.some=function(n,t,r){var e=of(n)?h:pr;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.sortedIndex=function(n,t){return _r(n,t)},An.sortedIndexBy=function(n,t,r){return vr(n,t,ye(r,2))},An.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=_r(n,t);if(e<r&&au(n[e],t))return e}return-1},An.sortedLastIndex=function(n,t){return _r(n,t,true)},An.sortedLastIndexBy=function(n,t,r){return vr(n,t,ye(r,2),true);\n},An.sortedLastIndexOf=function(n,t){if(null==n?0:n.length){var r=_r(n,t,true)-1;if(au(n[r],t))return r}return-1},An.startCase=Df,An.startsWith=function(n,t,r){return n=Ou(n),r=null==r?0:pt(Au(r),0,n.length),t=yr(t),n.slice(r,r+t.length)==t},An.subtract=ec,An.sum=function(n){return n&&n.length?m(n,Tu):0},An.sumBy=function(n,t){return n&&n.length?m(n,ye(t,2)):0},An.template=function(n,t,r){var e=An.templateSettings;r&&Oe(n,t,r)&&(t=T),n=Ou(n),t=yf({},t,e,ce),r=yf({},t.imports,e.imports,ce);var u,i,o=zu(r),f=S(r,o),c=0;\nr=t.interpolate||jn;var a=\"__p+='\";r=Qu((t.escape||jn).source+\"|\"+r.source+\"|\"+(r===Q?pn:jn).source+\"|\"+(t.evaluate||jn).source+\"|$\",\"g\");var l=\"sourceURL\"in t?\"//# sourceURL=\"+t.sourceURL+\"\\n\":\"\";if(n.replace(r,function(t,r,e,o,f,l){return e||(e=o),a+=n.slice(c,l).replace(wn,z),r&&(u=true,a+=\"'+__e(\"+r+\")+'\"),f&&(i=true,a+=\"';\"+f+\";\\n__p+='\"),e&&(a+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),c=l+t.length,t}),a+=\"';\",(t=t.variable)||(a=\"with(obj){\"+a+\"}\"),a=(i?a.replace(P,\"\"):a).replace(Z,\"$1\").replace(q,\"$1;\"),\na=\"function(\"+(t||\"obj\")+\"){\"+(t?\"\":\"obj||(obj={});\")+\"var __t,__p=''\"+(u?\",__e=_.escape\":\"\")+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+a+\"return __p}\",t=$f(function(){return Hu(o,l+\"return \"+a).apply(T,f)}),t.source=a,hu(t))throw t;return t},An.times=function(n,t){if(n=Au(n),1>n||9007199254740991<n)return[];var r=4294967295,e=Ui(n,4294967295);for(t=ye(t),n-=4294967295,e=A(e,t);++r<n;)t(r);return e},An.toFinite=mu,An.toInteger=Au,An.toLength=Eu,An.toLower=function(n){\nreturn Ou(n).toLowerCase()},An.toNumber=ku,An.toSafeInteger=function(n){return n?pt(Au(n),-9007199254740991,9007199254740991):0===n?n:0},An.toString=Ou,An.toUpper=function(n){return Ou(n).toUpperCase()},An.trim=function(n,t,r){return(n=Ou(n))&&(r||t===T)?n.replace(un,\"\"):n&&(t=yr(t))?(n=M(n),r=M(t),t=I(n,r),r=R(n,r)+1,Or(n,t,r).join(\"\")):n},An.trimEnd=function(n,t,r){return(n=Ou(n))&&(r||t===T)?n.replace(fn,\"\"):n&&(t=yr(t))?(n=M(n),t=R(n,M(t))+1,Or(n,0,t).join(\"\")):n},An.trimStart=function(n,t,r){\nreturn(n=Ou(n))&&(r||t===T)?n.replace(on,\"\"):n&&(t=yr(t))?(n=M(n),t=I(n,M(t)),Or(n,t).join(\"\")):n},An.truncate=function(n,t){var r=30,e=\"...\";if(gu(t))var u=\"separator\"in t?t.separator:u,r=\"length\"in t?Au(t.length):r,e=\"omission\"in t?yr(t.omission):e;n=Ou(n);var i=n.length;if(Rn.test(n))var o=M(n),i=o.length;if(r>=i)return n;if(i=r-D(e),1>i)return e;if(r=o?Or(o,0,i).join(\"\"):n.slice(0,i),u===T)return r+e;if(o&&(i+=r.length-i),sf(u)){if(n.slice(i).search(u)){var f=r;for(u.global||(u=Qu(u.source,Ou(_n.exec(u))+\"g\")),\nu.lastIndex=0;o=u.exec(f);)var c=o.index;r=r.slice(0,c===T?i:c)}}else n.indexOf(yr(u),i)!=i&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},An.unescape=function(n){return(n=Ou(n))&&G.test(n)?n.replace(V,tt):n},An.uniqueId=function(n){var t=++oi;return Ou(n)+t},An.upperCase=Mf,An.upperFirst=Tf,An.each=Xe,An.eachRight=nu,An.first=Ze,Fu(An,function(){var n={};return mt(An,function(t,r){ii.call(An.prototype,r)||(n[r]=t)}),n}(),{chain:false}),An.VERSION=\"4.17.10\",r(\"bind bindKey curry curryRight partial partialRight\".split(\" \"),function(n){\nAn[n].placeholder=An}),r([\"drop\",\"take\"],function(n,t){Un.prototype[n]=function(r){r=r===T?1:Li(Au(r),0);var e=this.__filtered__&&!t?new Un(this):this.clone();return e.__filtered__?e.__takeCount__=Ui(r,e.__takeCount__):e.__views__.push({size:Ui(r,4294967295),type:n+(0>e.__dir__?\"Right\":\"\")}),e},Un.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=1==r||3==r;Un.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({\niteratee:ye(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){var r=\"take\"+(t?\"Right\":\"\");Un.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Un.prototype[n]=function(){return this.__filtered__?new Un(this):this[r](1)}}),Un.prototype.compact=function(){return this.filter(Tu)},Un.prototype.find=function(n){return this.filter(n).head()},Un.prototype.findLast=function(n){return this.reverse().find(n);\n},Un.prototype.invokeMap=fr(function(n,t){return typeof n==\"function\"?new Un(this):this.map(function(r){return Lt(r,n,t)})}),Un.prototype.reject=function(n){return this.filter(cu(ye(n)))},Un.prototype.slice=function(n,t){n=Au(n);var r=this;return r.__filtered__&&(0<n||0>t)?new Un(r):(0>n?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==T&&(t=Au(t),r=0>t?r.dropRight(-t):r.take(t-n)),r)},Un.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Un.prototype.toArray=function(){return this.take(4294967295);\n},mt(Un.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=An[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);u&&(An.prototype[t]=function(){function t(n){return n=u.apply(An,a([n],f)),e&&h?n[0]:n}var o=this.__wrapped__,f=e?[1]:arguments,c=o instanceof Un,l=f[0],s=c||of(o);s&&r&&typeof l==\"function\"&&1!=l.length&&(c=s=false);var h=this.__chain__,p=!!this.__actions__.length,l=i&&!h,c=c&&!p;return!i&&s?(o=c?o:new Un(this),o=n.apply(o,f),o.__actions__.push({\nfunc:Ye,args:[t],thisArg:T}),new On(o,h)):l&&c?n.apply(this,f):(o=this.thru(t),l?e?o.value()[0]:o.value():o)})}),r(\"pop push shift sort splice unshift\".split(\" \"),function(n){var t=ti[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);An.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(of(u)?u:[],n)}return this[r](function(r){return t.apply(of(r)?r:[],n)})}}),mt(Un.prototype,function(n,t){var r=An[t];if(r){var e=r.name+\"\";\n(Ki[e]||(Ki[e]=[])).push({name:t,func:r})}}),Ki[Jr(T,2).name]=[{name:\"wrapper\",func:T}],Un.prototype.clone=function(){var n=new Un(this.__wrapped__);return n.__actions__=Ur(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Ur(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Ur(this.__views__),n},Un.prototype.reverse=function(){if(this.__filtered__){var n=new Un(this);n.__dir__=-1,n.__filtered__=true}else n=this.clone(),n.__dir__*=-1;return n;\n},Un.prototype.value=function(){var n,t=this.__wrapped__.value(),r=this.__dir__,e=of(t),u=0>r,i=e?t.length:0;n=i;for(var o=this.__views__,f=0,c=-1,a=o.length;++c<a;){var l=o[c],s=l.size;switch(l.type){case\"drop\":f+=s;break;case\"dropRight\":n-=s;break;case\"take\":n=Ui(n,f+s);break;case\"takeRight\":f=Li(f,n-s)}}if(n={start:f,end:n},o=n.start,f=n.end,n=f-o,o=u?f:o-1,f=this.__iteratees__,c=f.length,a=0,l=Ui(n,this.__takeCount__),!e||!u&&i==n&&l==n)return wr(t,this.__actions__);e=[];n:for(;n--&&a<l;){for(o+=r,\nu=-1,i=t[o];++u<c;){var h=f[u],s=h.type,h=(0,h.iteratee)(i);if(2==s)i=h;else if(!h){if(1==s)continue n;break n}}e[a++]=i}return e},An.prototype.at=Mo,An.prototype.chain=function(){return Je(this)},An.prototype.commit=function(){return new On(this.value(),this.__chain__)},An.prototype.next=function(){this.__values__===T&&(this.__values__=wu(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?T:this.__values__[this.__index__++]}},An.prototype.plant=function(n){for(var t,r=this;r instanceof En;){\nvar e=$e(r);e.__index__=0,e.__values__=T,t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},An.prototype.reverse=function(){var n=this.__wrapped__;return n instanceof Un?(this.__actions__.length&&(n=new Un(this)),n=n.reverse(),n.__actions__.push({func:Ye,args:[Ke],thisArg:T}),new On(n,this.__chain__)):this.thru(Ke)},An.prototype.toJSON=An.prototype.valueOf=An.prototype.value=function(){return wr(this.__wrapped__,this.__actions__)},An.prototype.first=An.prototype.head,ji&&(An.prototype[ji]=Qe),\nAn}();typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?($n._=rt, define(function(){return rt})):Nn?((Nn.exports=rt)._=rt,Fn._=rt):$n._=rt}).call(this);\n","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;","/** @license React v16.3.2\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var ba=require(\"fbjs/lib/invariant\"),ea=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),A=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),fa=require(\"fbjs/lib/getActiveElement\"),ha=require(\"fbjs/lib/shallowEqual\"),ja=require(\"fbjs/lib/containsNode\"),ka=require(\"fbjs/lib/emptyObject\");\nfunction D(a){for(var b=arguments.length-1,c=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ea?void 0:D(\"227\");\nfunction ma(a,b,c,d,e,f,h,g,k){this._hasCaughtError=!1;this._caughtError=null;var v=Array.prototype.slice.call(arguments,3);try{b.apply(c,v)}catch(l){this._caughtError=l,this._hasCaughtError=!0}}\nvar E={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,h,g,k){ma.apply(E,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,h,g,k){E.invokeGuardedCallback.apply(this,arguments);if(E.hasCaughtError()){var v=E.clearCaughtError();E._hasRethrowError||(E._hasRethrowError=!0,E._rethrowError=v)}},rethrowCaughtError:function(){return na.apply(E,arguments)},hasCaughtError:function(){return E._hasCaughtError},clearCaughtError:function(){if(E._hasCaughtError){var a=\nE._caughtError;E._caughtError=null;E._hasCaughtError=!1;return a}D(\"198\")}};function na(){if(E._hasRethrowError){var a=E._rethrowError;E._rethrowError=null;E._hasRethrowError=!1;throw a;}}var oa=null,pa={};\nfunction qa(){if(oa)for(var a in pa){var b=pa[a],c=oa.indexOf(a);-1<c?void 0:D(\"96\",a);if(!ra[c]){b.extractEvents?void 0:D(\"97\",a);ra[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],h=b,g=d;sa.hasOwnProperty(g)?D(\"99\",g):void 0;sa[g]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ta(k[e],h,g);e=!0}else f.registrationName?(ta(f.registrationName,h,g),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction ta(a,b,c){ua[a]?D(\"100\",a):void 0;ua[a]=b;va[a]=b.eventTypes[c].dependencies}var ra=[],sa={},ua={},va={};function wa(a){oa?D(\"101\"):void 0;oa=Array.prototype.slice.call(a);qa()}function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];pa.hasOwnProperty(c)&&pa[c]===d||(pa[c]?D(\"102\",c):void 0,pa[c]=d,b=!0)}b&&qa()}\nvar Ca=Object.freeze({plugins:ra,eventNameDispatchConfigs:sa,registrationNameModules:ua,registrationNameDependencies:va,possibleRegistrationNames:null,injectEventPluginOrder:wa,injectEventPluginsByName:xa}),Da=null,Ea=null,Fa=null;function Ga(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Fa(d);E.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Ha(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ia(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ja=null;\nfunction Ka(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ga(a,b,c[e],d[e]);else c&&Ga(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function La(a){return Ka(a,!0)}function Ma(a){return Ka(a,!1)}var Na={injectEventPluginOrder:wa,injectEventPluginsByName:xa};\nfunction Oa(a,b){var c=a.stateNode;if(!c)return null;var d=Da(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function Pa(a,b){null!==a&&(Ja=Ha(Ja,a));a=Ja;Ja=null;a&&(b?Ia(a,La):Ia(a,Ma),Ja?D(\"95\"):void 0,E.rethrowCaughtError())}function Qa(a,b,c,d){for(var e=null,f=0;f<ra.length;f++){var h=ra[f];h&&(h=h.extractEvents(a,b,c,d))&&(e=Ha(e,h))}Pa(e,!1)}var Ra=Object.freeze({injection:Na,getListener:Oa,runEventsInBatch:Pa,runExtractedEventsInBatch:Qa}),Sa=Math.random().toString(36).slice(2),F=\"__reactInternalInstance$\"+Sa,Ta=\"__reactEventHandlers$\"+Sa;\nfunction Ua(a){if(a[F])return a[F];for(;!a[F];)if(a.parentNode)a=a.parentNode;else return null;a=a[F];return 5===a.tag||6===a.tag?a:null}function Va(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function Xa(a){return a[Ta]||null}var bb=Object.freeze({precacheFiberNode:function(a,b){b[F]=a},getClosestInstanceFromNode:Ua,getInstanceFromNode:function(a){a=a[F];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Va,getFiberCurrentPropsFromNode:Xa,updateFiberProps:function(a,b){a[Ta]=b}});\nfunction L(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function cb(a,b,c){for(var d=[];a;)d.push(a),a=L(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function db(a,b,c){if(b=Oa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a)}function eb(a){a&&a.dispatchConfig.phasedRegistrationNames&&cb(a._targetInst,db,a)}\nfunction fb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?L(b):null;cb(b,db,a)}}function gb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Oa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a))}function hb(a){a&&a.dispatchConfig.registrationName&&gb(a._targetInst,null,a)}function ib(a){Ia(a,eb)}\nfunction jb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,h=0,g=e;g;g=L(g))h++;g=0;for(var k=f;k;k=L(k))g++;for(;0<h-g;)e=L(e),h--;for(;0<g-h;)f=L(f),g--;for(;h--;){if(e===f||e===f.alternate)break a;e=L(e);f=L(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){h=c.alternate;if(null!==h&&h===f)break;e.push(c);c=L(c)}for(c=[];d&&d!==f;){h=d.alternate;if(null!==h&&h===f)break;c.push(d);d=L(d)}for(d=0;d<e.length;d++)gb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)gb(c[a],\"captured\",b)}\nvar kb=Object.freeze({accumulateTwoPhaseDispatches:ib,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ia(a,fb)},accumulateEnterLeaveDispatches:jb,accumulateDirectDispatches:function(a){Ia(a,hb)}}),lb=null;function mb(){!lb&&m.canUseDOM&&(lb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return lb}var M={_root:null,_startText:null,_fallbackText:null};\nfunction nb(){if(M._fallbackText)return M._fallbackText;var a,b=M._startText,c=b.length,d,e=ob(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var h=c-a;for(d=1;d<=h&&b[c-d]===e[f-d];d++);M._fallbackText=e.slice(a,1<d?1-d:void 0);return M._fallbackText}function ob(){return\"value\"in M._root?M._root.value:M._root[mb()]}\nvar pb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),qb={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction N(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nA(N.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<pb.length;a++)this[pb[a]]=null}});N.Interface=qb;N.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;A(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=A({},d.Interface,a);c.extend=d.extend;rb(c);return c};rb(N);\nfunction sb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function tb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function rb(a){a.eventPool=[];a.getPooled=sb;a.release=tb}var ub=N.extend({data:null}),vb=N.extend({data:null}),wb=[9,13,27,32],xb=m.canUseDOM&&\"CompositionEvent\"in window,yb=null;m.canUseDOM&&\"documentMode\"in document&&(yb=document.documentMode);\nvar zb=m.canUseDOM&&\"TextEvent\"in window&&!yb,Ab=m.canUseDOM&&(!xb||yb&&8<yb&&11>=yb),Bb=String.fromCharCode(32),Kb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},Lb=!1;\nfunction Mb(a,b){switch(a){case \"topKeyUp\":return-1!==wb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function Nb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Ob=!1;function Pb(a,b){switch(a){case \"topCompositionEnd\":return Nb(b);case \"topKeyPress\":if(32!==b.which)return null;Lb=!0;return Bb;case \"topTextInput\":return a=b.data,a===Bb&&Lb?null:a;default:return null}}\nfunction Qb(a,b){if(Ob)return\"topCompositionEnd\"===a||!xb&&Mb(a,b)?(a=nb(),M._root=null,M._startText=null,M._fallbackText=null,Ob=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return Ab?null:b.data;default:return null}}\nvar Rb={eventTypes:Kb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(xb)b:{switch(a){case \"topCompositionStart\":e=Kb.compositionStart;break b;case \"topCompositionEnd\":e=Kb.compositionEnd;break b;case \"topCompositionUpdate\":e=Kb.compositionUpdate;break b}e=void 0}else Ob?Mb(a,c)&&(e=Kb.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(e=Kb.compositionStart);e?(Ab&&(Ob||e!==Kb.compositionStart?e===Kb.compositionEnd&&Ob&&(f=nb()):(M._root=d,M._startText=ob(),Ob=!0)),e=ub.getPooled(e,\nb,c,d),f?e.data=f:(f=Nb(c),null!==f&&(e.data=f)),ib(e),f=e):f=null;(a=zb?Pb(a,c):Qb(a,c))?(b=vb.getPooled(Kb.beforeInput,b,c,d),b.data=a,ib(b)):b=null;return null===f?b:null===b?f:[f,b]}},Sb=null,Tb={injectFiberControlledHostComponent:function(a){Sb=a}},Ub=null,Vb=null;function Wb(a){if(a=Ea(a)){Sb&&\"function\"===typeof Sb.restoreControlledState?void 0:D(\"194\");var b=Da(a.stateNode);Sb.restoreControlledState(a.stateNode,a.type,b)}}function Xb(a){Ub?Vb?Vb.push(a):Vb=[a]:Ub=a}\nfunction Yb(){return null!==Ub||null!==Vb}function Zb(){if(Ub){var a=Ub,b=Vb;Vb=Ub=null;Wb(a);if(b)for(a=0;a<b.length;a++)Wb(b[a])}}var $b=Object.freeze({injection:Tb,enqueueStateRestore:Xb,needsStateRestore:Yb,restoreStateIfNeeded:Zb});function ac(a,b){return a(b)}function bc(a,b,c){return a(b,c)}function cc(){}var dc=!1;function ec(a,b){if(dc)return a(b);dc=!0;try{return ac(a,b)}finally{dc=!1,Yb()&&(cc(),Zb())}}\nvar fc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!fc[a.type]:\"textarea\"===b?!0:!1}function hc(a){a=a.target||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction ic(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function jc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction kc(a){var b=jc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction lc(a){a._valueTracker||(a._valueTracker=kc(a))}function mc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=jc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar nc=ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,O=\"function\"===typeof Symbol&&Symbol[\"for\"],oc=O?Symbol[\"for\"](\"react.element\"):60103,pc=O?Symbol[\"for\"](\"react.call\"):60104,qc=O?Symbol[\"for\"](\"react.return\"):60105,rc=O?Symbol[\"for\"](\"react.portal\"):60106,sc=O?Symbol[\"for\"](\"react.fragment\"):60107,tc=O?Symbol[\"for\"](\"react.strict_mode\"):60108,uc=O?Symbol[\"for\"](\"react.provider\"):60109,vc=O?Symbol[\"for\"](\"react.context\"):60110,wc=O?Symbol[\"for\"](\"react.async_mode\"):60111,\nxc=O?Symbol[\"for\"](\"react.forward_ref\"):60112,yc=\"function\"===typeof Symbol&&Symbol.iterator;function zc(a){if(null===a||\"undefined\"===typeof a)return null;a=yc&&a[yc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Ac(a){a=a.type;if(\"function\"===typeof a)return a.displayName||a.name;if(\"string\"===typeof a)return a;switch(a){case sc:return\"ReactFragment\";case rc:return\"ReactPortal\";case pc:return\"ReactCall\";case qc:return\"ReactReturn\"}if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case xc:return a=a.render.displayName||a.render.name||\"\",\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\"}return null}\nfunction Bc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=Ac(a);var f=null;c&&(f=Ac(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a[\"return\"]}while(a);return b}\nvar Cc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Dc={},Ec={};function Fc(a){if(Ec.hasOwnProperty(a))return!0;if(Dc.hasOwnProperty(a))return!1;if(Cc.test(a))return Ec[a]=!0;Dc[a]=!0;return!1}\nfunction Gc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Hc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Gc(a,b,c,d))return!0;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction U(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var V={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){V[a]=new U(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];V[b]=new U(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){V[a]=new U(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){V[a]=new U(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){V[a]=new U(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){V[a]=new U(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){V[a]=new U(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){V[a]=new U(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){V[a]=new U(a,5,!1,a.toLowerCase(),null)});var Sc=/[\\-:]([a-z])/g;function Tc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Sc,\nTc);V[b]=new U(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});V.tabIndex=new U(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Uc(a,b,c,d){var e=V.hasOwnProperty(b)?V[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Hc(b,c,e,d)&&(c=null),d||null===e?Fc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Vc(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Xc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Yc(a,b){b=b.checked;null!=b&&Uc(a,\"checked\",b,!1)}\nfunction Zc(a,b){Yc(a,b);var c=Xc(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?$c(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&$c(a,b.type,Xc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction ad(a,b){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\"))\"\"===a.value&&(a.value=\"\"+a._wrapperState.initialValue),a.defaultValue=\"\"+a._wrapperState.initialValue;b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function $c(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Xc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var bd={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function cd(a,b,c){a=N.getPooled(bd.change,a,b,c);a.type=\"change\";Xb(c);ib(a);return a}var dd=null,ed=null;function fd(a){Pa(a,!1)}\nfunction gd(a){var b=Va(a);if(mc(b))return a}function hd(a,b){if(\"topChange\"===a)return b}var id=!1;m.canUseDOM&&(id=ic(\"input\")&&(!document.documentMode||9<document.documentMode));function jd(){dd&&(dd.detachEvent(\"onpropertychange\",kd),ed=dd=null)}function kd(a){\"value\"===a.propertyName&&gd(ed)&&(a=cd(ed,a,hc(a)),ec(fd,a))}function ld(a,b,c){\"topFocus\"===a?(jd(),dd=b,ed=c,dd.attachEvent(\"onpropertychange\",kd)):\"topBlur\"===a&&jd()}\nfunction md(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return gd(ed)}function nd(a,b){if(\"topClick\"===a)return gd(b)}function od(a,b){if(\"topInput\"===a||\"topChange\"===a)return gd(b)}\nvar pd={eventTypes:bd,_isInputEventSupported:id,extractEvents:function(a,b,c,d){var e=b?Va(b):window,f=void 0,h=void 0,g=e.nodeName&&e.nodeName.toLowerCase();\"select\"===g||\"input\"===g&&\"file\"===e.type?f=hd:gc(e)?id?f=od:(f=md,h=ld):(g=e.nodeName)&&\"input\"===g.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=nd);if(f&&(f=f(a,b)))return cd(f,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&$c(e,\"number\",e.value)}},qd=N.extend({view:null,\ndetail:null}),rd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function sd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=rd[a])?!!b[a]:!1}function td(){return sd}\nvar ud=qd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:td,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),vd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},wd={eventTypes:vd,extractEvents:function(a,\nb,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?Ua(b):null):a=null;if(a===b)return null;var f=null==a?e:Va(a);e=null==b?e:Va(b);var h=ud.getPooled(vd.mouseLeave,a,c,d);h.type=\"mouseleave\";h.target=f;h.relatedTarget=e;c=ud.getPooled(vd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=\nf;jb(h,c,a,b);return[h,c]}};function xd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function yd(a){return(a=a._reactInternalFiber)?2===xd(a):!1}function zd(a){2!==xd(a)?D(\"188\"):void 0}\nfunction Ad(a){var b=a.alternate;if(!b)return b=xd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var h=e.child;h;){if(h===c)return zd(e),a;if(h===d)return zd(e),b;h=h.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{h=!1;for(var g=e.child;g;){if(g===c){h=!0;c=e;d=f;break}if(g===d){h=!0;d=e;c=f;break}g=g.sibling}if(!h){for(g=f.child;g;){if(g===c){h=!0;c=f;d=e;break}if(g===d){h=!0;d=f;c=e;break}g=g.sibling}h?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function Bd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction Cd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var Dd=N.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ed=N.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Fd=qd.extend({relatedTarget:null});\nfunction Gd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar Hd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Id={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Jd=qd.extend({key:function(a){if(a.key){var b=Hd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Gd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Id[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:td,charCode:function(a){return\"keypress\"===\na.type?Gd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?Gd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Kd=ud.extend({dataTransfer:null}),Ld=qd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:td}),Md=N.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Nd=ud.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Od={},Pd={};function Qd(a,b){var c=a[0].toUpperCase()+a.slice(1),d=\"on\"+c;c=\"top\"+c;b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Od[a]=b;Pd[c]=b}\n\"blur cancel click close contextMenu copy cut doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play rateChange reset seeked submit touchCancel touchEnd touchStart volumeChange\".split(\" \").forEach(function(a){Qd(a,!0)});\n\"abort animationEnd animationIteration animationStart canPlay canPlayThrough drag dragEnter dragExit dragLeave dragOver durationChange emptied encrypted ended error load loadedData loadedMetadata loadStart mouseMove mouseOut mouseOver playing progress scroll seeking stalled suspend timeUpdate toggle touchMove transitionEnd waiting wheel\".split(\" \").forEach(function(a){Qd(a,!1)});\nvar Rd={eventTypes:Od,isInteractiveTopLevelEventType:function(a){a=Pd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Pd[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Gd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Jd;break;case \"topBlur\":case \"topFocus\":a=Fd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=\nud;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=Kd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Ld;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Dd;break;case \"topTransitionEnd\":a=Md;break;case \"topScroll\":a=qd;break;case \"topWheel\":a=Nd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ed;break;default:a=\nN}b=a.getPooled(e,b,c,d);ib(b);return b}},Sd=Rd.isInteractiveTopLevelEventType,Td=[];function Ud(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Ua(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Qa(a.topLevelType,b,a.nativeEvent,hc(a.nativeEvent))}var Vd=!0;function Wd(a){Vd=!!a}\nfunction W(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!1)}function Zd(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!0)}function Xd(a,b){bc(Yd,a,b)}\nfunction Yd(a,b){if(Vd){var c=hc(b);c=Ua(c);null!==c&&\"number\"===typeof c.tag&&2!==xd(c)&&(c=null);if(Td.length){var d=Td.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{ec(Ud,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Td.length&&Td.push(a)}}}\nvar $d=Object.freeze({get _enabled(){return Vd},setEnabled:Wd,isEnabled:function(){return Vd},trapBubbledEvent:W,trapCapturedEvent:Zd,dispatchEvent:Yd});function ae(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar be={animationend:ae(\"Animation\",\"AnimationEnd\"),animationiteration:ae(\"Animation\",\"AnimationIteration\"),animationstart:ae(\"Animation\",\"AnimationStart\"),transitionend:ae(\"Transition\",\"TransitionEnd\")},ce={},de={};m.canUseDOM&&(de=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete be.animationend.animation,delete be.animationiteration.animation,delete be.animationstart.animation),\"TransitionEvent\"in window||delete be.transitionend.transition);\nfunction ee(a){if(ce[a])return ce[a];if(!be[a])return a;var b=be[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in de)return ce[a]=b[c];return a}\nvar fe={topAnimationEnd:ee(\"animationend\"),topAnimationIteration:ee(\"animationiteration\"),topAnimationStart:ee(\"animationstart\"),topBlur:\"blur\",topCancel:\"cancel\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",\ntopDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoad:\"load\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topScroll:\"scroll\",topSelectionChange:\"selectionchange\",topTextInput:\"textInput\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:ee(\"transitionend\"),topWheel:\"wheel\"},ge={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",\ntopStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\"},he={},ie=0,je=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function ke(a){Object.prototype.hasOwnProperty.call(a,je)||(a[je]=ie++,he[a[je]]={});return he[a[je]]}function le(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction me(a,b){var c=le(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=le(c)}}function ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar oe=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,pe={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},qe=null,re=null,se=null,te=!1;\nfunction ue(a,b){if(te||null==qe||qe!==fa())return null;var c=qe;\"selectionStart\"in c&&ne(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return se&&ha(se,c)?null:(se=c,a=N.getPooled(pe.select,re,a,b),a.type=\"select\",a.target=qe,ib(a),a)}\nvar ve={eventTypes:pe,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=ke(e);f=va.onSelect;for(var h=0;h<f.length;h++){var g=f[h];if(!e.hasOwnProperty(g)||!e[g]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Va(b):window;switch(a){case \"topFocus\":if(gc(e)||\"true\"===e.contentEditable)qe=e,re=b,se=null;break;case \"topBlur\":se=re=qe=null;break;case \"topMouseDown\":te=!0;break;case \"topContextMenu\":case \"topMouseUp\":return te=!1,ue(c,d);case \"topSelectionChange\":if(oe)break;\ncase \"topKeyDown\":case \"topKeyUp\":return ue(c,d)}return null}};Na.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));Da=bb.getFiberCurrentPropsFromNode;Ea=bb.getInstanceFromNode;Fa=bb.getNodeFromInstance;Na.injectEventPluginsByName({SimpleEventPlugin:Rd,EnterLeaveEventPlugin:wd,ChangeEventPlugin:pd,SelectEventPlugin:ve,BeforeInputEventPlugin:Rb});\nfunction xe(a,b,c,d){this.tag=a;this.key=c;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction ze(a,b,c){var d=a.alternate;null===d?(d=new xe(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Ae(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case sc:return Be(a.children,b,c,e);case wc:f=11;b|=3;break;case tc:f=11;b|=2;break;case pc:f=7;break;case qc:f=9;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case uc:f=13;break;case vc:f=12;break;case xc:f=14;break;default:if(\"number\"===typeof d.tag)return b=d,b.pendingProps=a,b.expirationTime=c,\nb;D(\"130\",null==d?d:typeof d,\"\")}else D(\"130\",null==d?d:typeof d,\"\")}b=new xe(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Be(a,b,c,d){a=new xe(10,a,d,b);a.expirationTime=c;return a}function Ce(a,b,c){a=new xe(6,a,null,b);a.expirationTime=c;return a}function De(a,b,c){b=new xe(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var Ee=null,Fe=null;\nfunction Ge(a){return function(b){try{return a(b)}catch(c){}}}function He(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ee=Ge(function(a){return b.onCommitFiberRoot(c,a)});Fe=Ge(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Ie(a){\"function\"===typeof Ee&&Ee(a)}function Je(a){\"function\"===typeof Fe&&Fe(a)}new Set;\nfunction Ke(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1,capturedValues:null}}function Le(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}var Me=void 0,Ne=void 0;\nfunction Oe(a){Me=Ne=null;var b=a.alternate,c=a.updateQueue;null===c&&(c=a.updateQueue=Ke(null));null!==b?(a=b.updateQueue,null===a&&(a=b.updateQueue=Ke(null))):a=null;Me=c;Ne=a!==c?a:null}function Pe(a,b){Oe(a);a=Me;var c=Ne;null===c?Le(a,b):null===a.last||null===c.last?(Le(a,b),Le(c,b)):(Le(a,b),c.last=b)}function Qe(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Re(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,capturedValues:c.capturedValues,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var h=!0,g=c.first,k=!1;null!==g;){var v=g.expirationTime;if(v>f){var l=c.expirationTime;if(0===l||l>v)c.expirationTime=v;k||(k=!0,c.baseState=a)}else{k||\n(c.first=g.next,null===c.first&&(c.last=null));if(g.isReplace)a=Qe(g,d,a,e),h=!0;else if(v=Qe(g,d,a,e))a=h?A({},a,v):A(a,v),h=!1;g.isForced&&(c.hasForceUpdate=!0);null!==g.callback&&(v=c.callbackList,null===v&&(v=c.callbackList=[]),v.push(g));null!==g.capturedValue&&(v=c.capturedValues,null===v?c.capturedValues=[g.capturedValue]:v.push(g.capturedValue))}g=g.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||null!==c.capturedValues||(b.updateQueue=null);k||(c.baseState=a);\nreturn a}function Se(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Te(a,b,c,d,e){function f(a,b,c,d,e,f){if(null===b||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)return!0;var n=a.stateNode;a=a.type;return\"function\"===typeof n.shouldComponentUpdate?n.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ha(b,c)||!ha(d,e):!0}function h(a,b){b.updater=r;a.stateNode=b;b._reactInternalFiber=a}function g(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&\nb.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&r.enqueueReplaceState(b,b.state,null)}function k(a,b,c,d){a=a.type;if(\"function\"===typeof a.getDerivedStateFromProps)return a.getDerivedStateFromProps.call(null,c,d)}var v=a.cacheContext,l=a.getMaskedContext,p=a.getUnmaskedContext,z=a.isContextConsumer,B=a.hasContextChanged,r={isMounted:yd,enqueueSetState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!1,isForced:!1,\ncapturedValue:null,next:null});b(a,f)},enqueueReplaceState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,capturedValue:null,next:null});b(a,f)},enqueueForceUpdate:function(a,d){a=a._reactInternalFiber;d=void 0===d?null:d;var e=c(a);Pe(a,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,capturedValue:null,next:null});b(a,e)}};return{adoptClassInstance:h,callGetDerivedStateFromProps:k,\nconstructClassInstance:function(a,b){var c=a.type,d=p(a),e=z(a),f=e?l(a,d):ka;c=new c(b,f);var n=null!==c.state&&void 0!==c.state?c.state:null;h(a,c);a.memoizedState=n;b=k(a,c,b,n);null!==b&&void 0!==b&&(a.memoizedState=A({},a.memoizedState,b));e&&v(a,d,f);return c},mountClassInstance:function(a,b){var c=a.type,d=a.alternate,e=a.stateNode,f=a.pendingProps,n=p(a);e.props=f;e.state=a.memoizedState;e.refs=ka;e.context=l(a,n);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\n\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(c=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),c!==e.state&&r.enqueueReplaceState(e,e.state,null),c=a.updateQueue,null!==c&&(e.state=Re(d,a,c,e,f,b)));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)},resumeMountClassInstance:function(a,b){var c=a.type,n=a.stateNode;n.props=a.memoizedProps;n.state=\na.memoizedState;var h=a.memoizedProps,r=a.pendingProps,z=n.context,q=p(a);q=l(a,q);(c=\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof n.getSnapshotBeforeUpdate)||\"function\"!==typeof n.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof n.componentWillReceiveProps||(h!==r||z!==q)&&g(a,n,r,q);z=a.memoizedState;b=null!==a.updateQueue?Re(null,a,a.updateQueue,n,r,b):z;var u=void 0;h!==r&&(u=k(a,n,r,b));if(null!==u&&void 0!==u){b=null===b||void 0===b?u:A({},b,u);var t=a.updateQueue;\nnull!==t&&(t.baseState=A({},t.baseState,u))}if(!(h!==r||z!==b||B()||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),!1;(h=f(a,h,r,z,b,q))?(c||\"function\"!==typeof n.UNSAFE_componentWillMount&&\"function\"!==typeof n.componentWillMount||(\"function\"===typeof n.componentWillMount&&n.componentWillMount(),\"function\"===typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount()),\"function\"===typeof n.componentDidMount&&(a.effectTag|=\n4)):(\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),d(a,r),e(a,b));n.props=r;n.state=b;n.context=q;return h},updateClassInstance:function(a,b,c){var n=b.type,x=b.stateNode;x.props=b.memoizedProps;x.state=b.memoizedState;var h=b.memoizedProps,r=b.pendingProps,q=x.context,u=p(b);u=l(b,u);(n=\"function\"===typeof n.getDerivedStateFromProps||\"function\"===typeof x.getSnapshotBeforeUpdate)||\"function\"!==typeof x.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof x.componentWillReceiveProps||\n(h!==r||q!==u)&&g(b,x,r,u);q=b.memoizedState;c=null!==b.updateQueue?Re(a,b,b.updateQueue,x,r,c):q;var t=void 0;h!==r&&(t=k(b,x,r,c));if(null!==t&&void 0!==t){c=null===c||void 0===c?t:A({},c,t);var y=b.updateQueue;null!==y&&(y.baseState=A({},y.baseState,t))}if(!(h!==r||q!==c||B()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=2048),!1;(t=f(b,h,r,q,c,u))?(n||\"function\"!==typeof x.UNSAFE_componentWillUpdate&&\"function\"!==typeof x.componentWillUpdate||(\"function\"===typeof x.componentWillUpdate&&x.componentWillUpdate(r,c,u),\"function\"===typeof x.UNSAFE_componentWillUpdate&&x.UNSAFE_componentWillUpdate(r,c,u)),\"function\"===typeof x.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof x.getSnapshotBeforeUpdate&&(b.effectTag|=2048)):(\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=2048),d(b,r),e(b,c));x.props=r;x.state=c;x.context=u;return t}}}var Ue=Array.isArray;\nfunction Ve(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?D(\"110\"):void 0,d=c.stateNode);d?void 0:D(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ka?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?D(\"148\"):void 0;c._owner?void 0:D(\"254\",a)}return a}\nfunction We(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Xe(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function g(a,b,c,d){if(null===b||6!==b.tag)return b=Ce(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ve(a,b,c),d[\"return\"]=a,d;d=Ae(c,a.mode,d);d.ref=Ve(a,b,c);d[\"return\"]=a;return d}function v(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDe(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function l(a,b,c,d,f){if(null===b||10!==b.tag)return b=Be(c,a.mode,d,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ce(\"\"+b,a.mode,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case oc:return c=Ae(b,a.mode,c),c.ref=Ve(a,null,b),c[\"return\"]=a,c;case rc:return b=De(b,a.mode,c),b[\"return\"]=a,b}if(Ue(b)||zc(b))return b=Be(b,\na.mode,c,null),b[\"return\"]=a,b;We(a,b)}return null}function z(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:g(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case oc:return c.key===e?c.type===sc?l(a,b,c.props.children,d,e):k(a,b,c,d):null;case rc:return c.key===e?v(a,b,c,d):null}if(Ue(c)||zc(c))return null!==e?null:l(a,b,c,d,null);We(a,c)}return null}function B(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,g(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case oc:return a=a.get(null===d.key?c:d.key)||null,d.type===sc?l(b,a,d.props.children,e,d.key):k(b,a,d,e);case rc:return a=a.get(null===d.key?c:d.key)||null,v(b,a,d,e)}if(Ue(d)||zc(d))return a=a.get(c)||null,l(b,a,d,e,null);We(b,d)}return null}function r(e,l,g,h){for(var r=null,k=null,q=l,u=l=0,t=null;null!==q&&u<g.length;u++){q.index>u?(t=q,q=null):t=q.sibling;var n=z(e,q,g[u],h);if(null===n){null===q&&(q=t);break}a&&q&&null===\nn.alternate&&b(e,q);l=f(n,l,u);null===k?r=n:k.sibling=n;k=n;q=t}if(u===g.length)return c(e,q),r;if(null===q){for(;u<g.length;u++)if(q=p(e,g[u],h))l=f(q,l,u),null===k?r=q:k.sibling=q,k=q;return r}for(q=d(e,q);u<g.length;u++)if(t=B(q,e,u,g[u],h)){if(a&&null!==t.alternate)q[\"delete\"](null===t.key?u:t.key);l=f(t,l,u);null===k?r=t:k.sibling=t;k=t}a&&q.forEach(function(a){return b(e,a)});return r}function Q(e,l,g,h){var r=zc(g);\"function\"!==typeof r?D(\"150\"):void 0;g=r.call(g);null==g?D(\"151\"):void 0;for(var k=\nr=null,q=l,u=l=0,t=null,n=g.next();null!==q&&!n.done;u++,n=g.next()){q.index>u?(t=q,q=null):t=q.sibling;var H=z(e,q,n.value,h);if(null===H){q||(q=t);break}a&&q&&null===H.alternate&&b(e,q);l=f(H,l,u);null===k?r=H:k.sibling=H;k=H;q=t}if(n.done)return c(e,q),r;if(null===q){for(;!n.done;u++,n=g.next())n=p(e,n.value,h),null!==n&&(l=f(n,l,u),null===k?r=n:k.sibling=n,k=n);return r}for(q=d(e,q);!n.done;u++,n=g.next())if(n=B(q,e,u,n.value,h),null!==n){if(a&&null!==n.alternate)q[\"delete\"](null===n.key?u:n.key);\nl=f(n,l,u);null===k?r=n:k.sibling=n;k=n}a&&q.forEach(function(a){return b(e,a)});return r}return function(a,d,f,l){\"object\"===typeof f&&null!==f&&f.type===sc&&null===f.key&&(f=f.props.children);var g=\"object\"===typeof f&&null!==f;if(g)switch(f.$$typeof){case oc:a:{var k=f.key;for(g=d;null!==g;){if(g.key===k)if(10===g.tag?f.type===sc:g.type===f.type){c(a,g.sibling);d=e(g,f.type===sc?f.props.children:f.props,l);d.ref=Ve(a,g,f);d[\"return\"]=a;a=d;break a}else{c(a,g);break}else b(a,g);g=g.sibling}f.type===\nsc?(d=Be(f.props.children,a.mode,l,f.key),d[\"return\"]=a,a=d):(l=Ae(f,a.mode,l),l.ref=Ve(a,d,f),l[\"return\"]=a,a=l)}return h(a);case rc:a:{for(g=f.key;null!==d;){if(d.key===g)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],l);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=De(f,a.mode,l);d[\"return\"]=a;a=d}return h(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&\n6===d.tag?(c(a,d.sibling),d=e(d,f,l),d[\"return\"]=a,a=d):(c(a,d),d=Ce(f,a.mode,l),d[\"return\"]=a,a=d),h(a);if(Ue(f))return r(a,d,f,l);if(zc(f))return Q(a,d,f,l);g&&We(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:l=a.type,D(\"152\",l.displayName||l.name||\"Component\")}return c(a,d)}}var Ye=Xe(!0),Ze=Xe(!1);\nfunction $e(a,b,c,d,e,f,h){function g(a,b,c){k(a,b,c,b.expirationTime)}function k(a,b,c,d){b.child=null===a?Ze(b,null,c,d):Ye(b,a.child,c,d)}function v(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function l(a,b,c,d,e,f){v(a,b);if(!c&&!e)return d&&y(b,!1),r(a,b);c=b.stateNode;nc.current=b;var l=e?null:c.render();b.effectTag|=1;e&&(k(a,b,null,f),b.child=null);k(a,b,l,f);b.memoizedState=c.state;b.memoizedProps=c.props;d&&y(b,!0);return b.child}function p(a){var b=a.stateNode;\nb.pendingContext?t(a,b.pendingContext,b.pendingContext!==b.context):b.context&&t(a,b.context,!1);Y(a,b.containerInfo)}function z(a,b,c,d){var e=a.child;for(null!==e&&(e[\"return\"]=a);null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var l=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==l&&(0===l.expirationTime||l.expirationTime>d)&&(l.expirationTime=d);else if(null!==l&&(0===l.expirationTime||l.expirationTime>d))l.expirationTime=\nd;else break;f=f[\"return\"]}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=e.child}if(null!==f)f[\"return\"]=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){f=e;break}f=f[\"return\"]}e=f}}function B(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps;if(!q()&&f===e)return b.stateNode=0,G(b),r(a,b);var l=e.value;b.memoizedProps=e;if(null===f)l=1073741823;else if(f.value===e.value){if(f.children===e.children)return b.stateNode=0,G(b),\nr(a,b);l=0}else{var h=f.value;if(h===l&&(0!==h||1/h===1/l)||h!==h&&l!==l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b);l=0}else if(l=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,l):1073741823,l|=0,0===l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b)}else z(b,d,l,c)}b.stateNode=l;G(b);g(a,b,e.children);return b.child}function r(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=ze(a,a.pendingProps,a.expirationTime);\nb.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ze(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}var Q=a.shouldSetTextContent,n=a.shouldDeprioritizeSubtree,x=b.pushHostContext,Y=b.pushHostContainer,G=d.pushProvider,R=c.getMaskedContext,S=c.getUnmaskedContext,q=c.hasContextChanged,u=c.pushContextProvider,t=c.pushTopLevelContextObject,y=c.invalidateContextProvider,H=e.enterHydrationState,Wa=e.resetHydrationState,Cb=e.tryToClaimNextHydratableInstance;\na=Te(c,f,h,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var Jc=a.adoptClassInstance,Kc=a.callGetDerivedStateFromProps,Lc=a.constructClassInstance,Db=a.mountClassInstance,Mc=a.resumeMountClassInstance,Eb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:p(b);break;case 2:u(b);break;case 4:Y(b,b.stateNode.containerInfo);break;case 13:G(b)}return null}switch(b.tag){case 0:null!==a?D(\"155\"):void 0;var d=b.type,\ne=b.pendingProps,f=S(b);f=R(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,\"function\"===typeof f.getDerivedStateFromProps&&(e=Kc(b,d,e,b.memoizedState),null!==e&&void 0!==e&&(b.memoizedState=A({},b.memoizedState,e))),e=u(b),Jc(b,d),Db(b,c),a=l(a,b,!0,e,!1,c)):(b.tag=1,g(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,q()||\nb.memoizedProps!==c?(d=S(b),d=R(b,d),e=e(c,d),b.effectTag|=1,g(a,b,e),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 2:e=u(b);null===a?null===b.stateNode?(Lc(b,b.pendingProps),Db(b,c),d=!0):d=Mc(b,c):d=Eb(a,b,c);f=!1;var h=b.updateQueue;null!==h&&null!==h.capturedValues&&(f=d=!0);return l(a,b,d,e,f,c);case 3:a:if(p(b),d=b.updateQueue,null!==d){f=b.memoizedState;e=Re(a,b,d,null,null,c);b.memoizedState=e;d=b.updateQueue;if(null!==d&&null!==d.capturedValues)d=null;else if(f===e){Wa();a=r(a,b);break a}else d=\ne.element;f=b.stateNode;(null===a||null===a.child)&&f.hydrate&&H(b)?(b.effectTag|=2,b.child=Ze(b,null,d,c)):(Wa(),g(a,b,d));b.memoizedState=e;a=b.child}else Wa(),a=r(a,b);return a;case 5:a:{x(b);null===a&&Cb(b);e=b.type;h=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!q()&&h===d){if(h=b.mode&1&&n(e,d))b.expirationTime=1073741823;if(!h||1073741823!==c){a=r(a,b);break a}}h=d.children;Q(e,d)?h=null:f&&Q(e,f)&&(b.effectTag|=16);v(a,b);1073741823!==c&&b.mode&1&&n(e,d)?(b.expirationTime=\n1073741823,b.memoizedProps=d,a=null):(g(a,b,h),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Cb(b),b.memoizedProps=b.pendingProps,null;case 8:b.tag=7;case 7:return e=b.pendingProps,q()||b.memoizedProps!==e||(e=b.memoizedProps),d=e.children,b.stateNode=null===a?Ze(b,b.stateNode,d,c):Ye(b,a.stateNode,d,c),b.memoizedProps=e,b.stateNode;case 9:return null;case 4:return Y(b,b.stateNode.containerInfo),e=b.pendingProps,q()||b.memoizedProps!==e?(null===a?b.child=Ye(b,null,e,c):g(a,b,e),b.memoizedProps=\ne,a=b.child):a=r(a,b),a;case 14:return c=b.type.render,c=c(b.pendingProps,b.ref),g(a,b,c),b.memoizedProps=c,b.child;case 10:return c=b.pendingProps,q()||b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 11:return c=b.pendingProps.children,q()||null!==c&&b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 13:return B(a,b,c);case 12:a:{d=b.type;f=b.pendingProps;h=b.memoizedProps;e=d._currentValue;var t=d._changedBits;if(q()||0!==t||h!==f){b.memoizedProps=\nf;var k=f.unstable_observedBits;if(void 0===k||null===k)k=1073741823;b.stateNode=k;if(0!==(t&k))z(b,d,t,c);else if(h===f){a=r(a,b);break a}c=f.children;c=c(e);g(a,b,c);a=b.child}else a=r(a,b)}return a;default:D(\"156\")}}}}\nfunction af(a,b,c,d,e){function f(a){a.effectTag|=4}var h=a.createInstance,g=a.createTextInstance,k=a.appendInitialChild,v=a.finalizeInitialChildren,l=a.prepareUpdate,p=a.persistence,z=b.getRootHostContainer,B=b.popHostContext,r=b.getHostContext,Q=b.popHostContainer,n=c.popContextProvider,x=c.popTopLevelContextObject,Y=d.popProvider,G=e.prepareToHydrateHostInstance,R=e.prepareToHydrateHostTextInstance,S=e.popHydrationState,q=void 0,u=void 0,t=void 0;a.mutation?(q=function(){},u=function(a,b,c){(b.updateQueue=\nc)&&f(b)},t=function(a,b,c,d){c!==d&&f(b)}):p?D(\"235\"):D(\"236\");return{completeWork:function(a,b,c){var d=b.pendingProps;switch(b.tag){case 1:return null;case 2:return n(b),a=b.stateNode,d=b.updateQueue,null!==d&&null!==d.capturedValues&&(b.effectTag&=-65,\"function\"===typeof a.componentDidCatch?b.effectTag|=256:d.capturedValues=null),null;case 3:Q(b);x(b);d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)S(b),b.effectTag&=-3;q(b);a=b.updateQueue;\nnull!==a&&null!==a.capturedValues&&(b.effectTag|=256);return null;case 5:B(b);c=z();var e=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,H=b.stateNode,y=r();H=l(H,e,p,d,c,y);u(a,b,H,e,p,d,c,y);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!d)return null===b.stateNode?D(\"166\"):void 0,null;a=r();if(S(b))G(b,c,a)&&f(b);else{p=h(e,d,c,a,b);a:for(y=b.child;null!==y;){if(5===y.tag||6===y.tag)k(p,y.stateNode);else if(4!==y.tag&&null!==y.child){y.child[\"return\"]=y;y=y.child;continue}if(y===b)break;\nfor(;null===y.sibling;){if(null===y[\"return\"]||y[\"return\"]===b)break a;y=y[\"return\"]}y.sibling[\"return\"]=y[\"return\"];y=y.sibling}v(p,e,d,c,a)&&f(b);b.stateNode=p}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)t(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d)return null===b.stateNode?D(\"166\"):void 0,null;a=z();c=r();S(b)?R(b)&&f(b):b.stateNode=g(d,a,c,b)}return null;case 7:(d=b.memoizedProps)?void 0:D(\"165\");b.tag=8;e=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==\np;){if(5===p.tag||6===p.tag||4===p.tag)D(\"247\");else if(9===p.tag)e.push(p.pendingProps.value);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=d.handler;d=p(d.props,e);b.child=Ye(b,null!==a?a.child:null,d,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 14:return null;case 10:return null;case 11:return null;case 4:return Q(b),q(b),null;\ncase 13:return Y(b),null;case 12:return null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction bf(a,b,c,d,e){var f=a.popHostContainer,h=a.popHostContext,g=b.popContextProvider,k=b.popTopLevelContextObject,v=c.popProvider;return{throwException:function(a,b,c){b.effectTag|=512;b.firstEffect=b.lastEffect=null;b={value:c,source:b,stack:Bc(b)};do{switch(a.tag){case 3:Oe(a);a.updateQueue.capturedValues=[b];a.effectTag|=1024;return;case 2:if(c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&!e(c)){Oe(a);c=a.updateQueue;var d=c.capturedValues;null===d?\nc.capturedValues=[b]:d.push(b);a.effectTag|=1024;return}}a=a[\"return\"]}while(null!==a)},unwindWork:function(a){switch(a.tag){case 2:g(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return f(a),k(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return h(a),null;case 4:return f(a),null;case 13:return v(a),null;default:return null}},unwindInterruptedWork:function(a){switch(a.tag){case 2:g(a);break;case 3:f(a);k(a);break;case 5:h(a);break;case 4:f(a);break;case 13:v(a)}}}}\nfunction cf(a,b){var c=b.source;null===b.stack&&Bc(c);null!==c&&Ac(c);b=b.value;null!==a&&2===a.tag&&Ac(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}\nfunction df(a,b,c,d,e){function f(a){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(t){b(a,t)}else c.current=null}function h(a){\"function\"===typeof Je&&Je(a);switch(a.tag){case 2:f(a);var c=a.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=a.memoizedProps,c.state=a.memoizedState,c.componentWillUnmount()}catch(t){b(a,t)}break;case 5:f(a);break;case 7:g(a.stateNode);break;case 4:p&&v(a)}}function g(a){for(var b=a;;)if(h(b),null===b.child||p&&4===b.tag){if(b===\na)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function k(a){return 5===a.tag||3===a.tag||4===a.tag}function v(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c[\"return\"]}c=!0}if(5===\nb.tag||6===b.tag)g(b),e?S(d,b.stateNode):R(d,b.stateNode);else if(4===b.tag?d=b.stateNode.containerInfo:h(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var l=a.getPublicInstance,p=a.mutation;a=a.persistence;p||(a?D(\"235\"):D(\"236\"));var z=p.commitMount,B=p.commitUpdate,r=p.resetTextContent,Q=p.commitTextUpdate,n=p.appendChild,\nx=p.appendChildToContainer,Y=p.insertBefore,G=p.insertInContainerBefore,R=p.removeChild,S=p.removeChildFromContainer;return{commitBeforeMutationLifeCycles:function(a,b){switch(b.tag){case 2:if(b.effectTag&2048&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;a.props=b.memoizedProps;a.state=b.memoizedState;b=a.getSnapshotBeforeUpdate(c,d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:break;default:D(\"163\")}},commitResetTextContent:function(a){r(a.stateNode)},\ncommitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(k(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(r(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||k(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==\nc.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):Y(b,e.stateNode,c):d?x(b,e.stateNode):n(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===a)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){v(a);\na[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&B(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;Q(b.stateNode,null!==a?a.memoizedProps:c,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b,c){switch(c.tag){case 2:a=\nc.stateNode;if(c.effectTag&4)if(null===b)a.props=c.memoizedProps,a.state=c.memoizedState,a.componentDidMount();else{var d=b.memoizedProps;b=b.memoizedState;a.props=c.memoizedProps;a.state=c.memoizedState;a.componentDidUpdate(d,b,a.__reactInternalSnapshotBeforeUpdate)}c=c.updateQueue;null!==c&&Se(c,a);break;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=l(c.child.stateNode);break;case 2:a=c.child.stateNode}Se(b,a)}break;case 5:a=c.stateNode;null===b&&c.effectTag&\n4&&z(a,c.type,c.memoizedProps,c);break;case 6:break;case 4:break;default:D(\"163\")}},commitErrorLogging:function(a,b){switch(a.tag){case 2:var c=a.type;b=a.stateNode;var d=a.updateQueue;null===d||null===d.capturedValues?D(\"264\"):void 0;var f=d.capturedValues;d.capturedValues=null;\"function\"!==typeof c.getDerivedStateFromCatch&&e(b);b.props=a.memoizedProps;b.state=a.memoizedState;for(c=0;c<f.length;c++){d=f[c];var l=d.value,g=d.stack;cf(a,d);b.componentDidCatch(l,{componentStack:null!==g?g:\"\"})}break;\ncase 3:c=a.updateQueue;null===c||null===c.capturedValues?D(\"264\"):void 0;f=c.capturedValues;c.capturedValues=null;for(c=0;c<f.length;c++)d=f[c],cf(a,d),b(d.value);break;default:D(\"265\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=l(c);break;default:a=c}\"function\"===typeof b?b(a):b.current=a}},commitDetachRef:function(a){a=a.ref;null!==a&&(\"function\"===typeof a?a(null):a.current=null)}}}var ef={};\nfunction ff(a,b){function c(a){a===ef?D(\"174\"):void 0;return a}var d=a.getChildHostContext,e=a.getRootHostContext;a=b.createCursor;var f=b.push,h=b.pop,g=a(ef),k=a(ef),v=a(ef);return{getHostContext:function(){return c(g.current)},getRootHostContainer:function(){return c(v.current)},popHostContainer:function(a){h(g,a);h(k,a);h(v,a)},popHostContext:function(a){k.current===a&&(h(g,a),h(k,a))},pushHostContainer:function(a,b){f(v,b,a);f(k,a,a);f(g,ef,a);b=e(b);h(g,a);f(g,b,a)},pushHostContext:function(a){var b=\nc(v.current),e=c(g.current);b=d(e,a.type,b);e!==b&&(f(k,a,a),f(g,b,a))}}}\nfunction gf(a){function b(a,b){var c=new xe(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=h(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];p=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,h=a.canHydrateTextInstance,g=a.getNextHydratableSibling,k=a.getFirstHydratableChild,v=a.hydrateInstance,l=a.hydrateTextInstance,p=null,z=null,B=!1;return{enterHydrationState:function(a){z=\nk(a.stateNode.containerInfo);p=a;return B=!0},resetHydrationState:function(){z=p=null;B=!1},tryToClaimNextHydratableInstance:function(a){if(B){var d=z;if(d){if(!c(a,d)){d=g(d);if(!d||!c(a,d)){a.effectTag|=2;B=!1;p=a;return}b(p,z)}p=a;z=k(d)}else a.effectTag|=2,B=!1,p=a}},prepareToHydrateHostInstance:function(a,b,c){b=v(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return l(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\np)return!1;if(!B)return d(a),B=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=z;c;)b(a,c),c=g(c);d(a);z=p?g(a.stateNode):null;return!0}}}\nfunction hf(a){function b(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function c(a){return 2===a.tag&&null!=a.type.childContextTypes}function d(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",Ac(a)||\"Unknown\",e);return A({},b,c)}var e=a.createCursor,f=a.push,h=a.pop,g=e(ka),k=e(!1),v=ka;return{getUnmaskedContext:function(a){return c(a)?\nv:g.current},cacheContext:b,getMaskedContext:function(a,c){var d=a.type.contextTypes;if(!d)return ka;var e=a.stateNode;if(e&&e.__reactInternalMemoizedUnmaskedChildContext===c)return e.__reactInternalMemoizedMaskedChildContext;var f={},g;for(g in d)f[g]=c[g];e&&b(a,c,f);return f},hasContextChanged:function(){return k.current},isContextConsumer:function(a){return 2===a.tag&&null!=a.type.contextTypes},isContextProvider:c,popContextProvider:function(a){c(a)&&(h(k,a),h(g,a))},popTopLevelContextObject:function(a){h(k,\na);h(g,a)},pushTopLevelContextObject:function(a,b,c){null!=g.cursor?D(\"168\"):void 0;f(g,b,a);f(k,c,a)},processChildContext:d,pushContextProvider:function(a){if(!c(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ka;v=g.current;f(g,b,a);f(k,k.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var e=d(a,v);c.__reactInternalMemoizedMergedChildContext=e;h(k,a);h(g,a);f(g,e,a)}else h(k,a);f(k,b,a)},findCurrentUnmaskedContext:function(a){for(2!==\nxd(a)||2!==a.tag?D(\"170\"):void 0;3!==a.tag;){if(c(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:D(\"171\")}return a.stateNode.context}}}\nfunction jf(a){var b=a.createCursor,c=a.push,d=a.pop,e=b(null),f=b(null),h=b(0);return{pushProvider:function(a){var b=a.type._context;c(h,b._changedBits,a);c(f,b._currentValue,a);c(e,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode},popProvider:function(a){var b=h.current,c=f.current;d(e,a);d(f,a);d(h,a);a=a.type._context;a._currentValue=c;a._changedBits=b}}}\nfunction kf(){var a=[],b=-1;return{createCursor:function(a){return{current:a}},isEmpty:function(){return-1===b},pop:function(c){0>b||(c.current=a[b],a[b]=null,b--)},push:function(c,d){b++;a[b]=c.current;c.current=d},checkThatStackIsEmpty:function(){},resetStackAfterFatalErrorInDev:function(){}}}\nfunction lf(a){function b(){if(null!==I)for(var a=I[\"return\"];null!==a;)Lc(a),a=a[\"return\"];Ya=null;Z=0;I=null;Nc=!1}function c(a){return null!==ya&&ya.has(a)}function d(a){for(;;){var b=a.alternate,c=a[\"return\"],d=a.sibling;if(0===(a.effectTag&512)){b=Cb(b,a,Z);var e=a;if(1073741823===Z||1073741823!==e.expirationTime){b:switch(e.tag){case 3:case 2:var f=e.updateQueue;f=null===f?0:f.expirationTime;break b;default:f=0}for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=\ng.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{Nc=!0;break}}else{a=Kc(a);if(null!==a)return a.effectTag&=2559,a;null!==c&&(c.firstEffect=c.lastEffect=\nnull,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}function e(a){var b=Wa(a.alternate,a,Z);null===b&&(b=d(a));nc.current=null;return b}function f(a,c,f){ca?D(\"243\"):void 0;ca=!0;if(c!==Z||a!==Ya||null===I)b(),Ya=a,Z=c,I=ze(Ya.current,null,Z),a.pendingCommitExpirationTime=0;var g=!1;do{try{if(f)for(;null!==I&&!S();)I=e(I);else for(;null!==I;)I=e(I)}catch(Oc){if(null===I){g=!0;q(Oc);break}f=I;var h=f[\"return\"];if(null===h){g=!0;q(Oc);break}Jc(h,f,Oc);I=d(f)}break}while(1);\nca=!1;if(g||null!==I)return null;if(Nc)return a.pendingCommitExpirationTime=c,a.current.alternate;D(\"262\")}function h(a,b,c,d){a={value:c,source:a,stack:Bc(a)};Pe(b,{expirationTime:d,partialState:null,callback:null,isReplace:!1,isForced:!1,capturedValue:a,next:null});v(b,d)}function g(a,b){a:{ca&&!Za?D(\"263\"):void 0;for(var d=a[\"return\"];null!==d;){switch(d.tag){case 2:var e=d.stateNode;if(\"function\"===typeof d.type.getDerivedStateFromCatch||\"function\"===typeof e.componentDidCatch&&!c(e)){h(a,d,b,\n1);a=void 0;break a}break;case 3:h(a,d,b,1);a=void 0;break a}d=d[\"return\"]}3===a.tag&&h(a,a,b,1);a=void 0}return a}function k(a){a=0!==ia?ia:ca?Za?1:Z:a.mode&1?za?10*(((l()+15)/10|0)+1):25*(((l()+500)/25|0)+1):1;za&&(0===da||a>da)&&(da=a);return a}function v(a,c){a:{for(;null!==a;){if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>c)&&(a.alternate.expirationTime=c);if(null===a[\"return\"])if(3===a.tag){var d=\na.stateNode;!ca&&0!==Z&&c<Z&&b();ca&&!Za&&Ya===d||B(d,c);Fb>xg&&D(\"185\")}else{c=void 0;break a}a=a[\"return\"]}c=void 0}return c}function l(){ye=Ic()-Pc;return yg=(ye/10|0)+2}function p(a,b,c,d,e){var f=ia;ia=1;try{return a(b,c,d,e)}finally{ia=f}}function z(a){if(0!==Gb){if(a>Gb)return;mg(Qc)}var b=Ic()-Pc;Gb=a;Qc=lg(Q,{timeout:10*(a-2)-b})}function B(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===K?(la=K=a,a.nextScheduledRoot=a):(K=K.nextScheduledRoot=a,K.nextScheduledRoot=la);\nelse{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}T||(J?Hb&&(aa=a,P=1,G(a,1,!1)):1===b?n():z(b))}function r(){var a=0,b=null;if(null!==K)for(var c=K,d=la;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===K?D(\"244\"):void 0;if(d===d.nextScheduledRoot){la=K=d.nextScheduledRoot=null;break}else if(d===la)la=e=d.nextScheduledRoot,K.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===K){K=c;K.nextScheduledRoot=la;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=\nd.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===K)break;c=d;d=d.nextScheduledRoot}}c=aa;null!==c&&c===b&&1===a?Fb++:Fb=0;aa=b;P=a}function Q(a){x(0,!0,a)}function n(){x(1,!1,null)}function x(a,b,c){$a=c;r();if(b)for(;null!==aa&&0!==P&&(0===a||a>=P)&&(!Ib||l()>=P);)G(aa,P,!Ib),r();else for(;null!==aa&&0!==P&&(0===a||a>=P);)G(aa,P,!1),r();null!==$a&&(Gb=0,Qc=-1);0!==P&&z(P);$a=null;Ib=!1;Y()}function Y(){Fb=0;if(null!==Aa){var a=Aa;Aa=null;for(var b=\n0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(wg){Ba||(Ba=!0,Jb=wg)}}}if(Ba)throw a=Jb,Jb=null,Ba=!1,a;}function G(a,b,c){T?D(\"245\"):void 0;T=!0;c?(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!0),null!==c&&(S()?a.finishedWork=c:R(a,c,b)))):(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!1),null!==c&&R(a,c,b)));T=!1}function R(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Aa?Aa=[d]:Aa.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=\n0;return}a.finishedWork=null;Za=ca=!0;c=b.stateNode;c.current===b?D(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?D(\"261\"):void 0;c.pendingCommitExpirationTime=0;var e=l();nc.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var f=b.firstEffect}else f=b;else f=b.firstEffect;zg(c.containerInfo);for(w=f;null!==w;){var h=!1,k=void 0;try{for(;null!==w;)w.effectTag&2048&&Db(w.alternate,w),w=w.nextEffect}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==\nw&&(w=w.nextEffect))}for(w=f;null!==w;){h=!1;k=void 0;try{for(;null!==w;){var p=w.effectTag;p&16&&Mc(w);if(p&128){var n=w.alternate;null!==n&&kg(n)}switch(p&14){case 2:Eb(w);w.effectTag&=-3;break;case 6:Eb(w);w.effectTag&=-3;we(w.alternate,w);break;case 4:we(w.alternate,w);break;case 8:gg(w)}w=w.nextEffect}}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==w&&(w=w.nextEffect))}Ag(c.containerInfo);c.current=b;for(w=f;null!==w;){p=!1;n=void 0;try{for(f=c,h=e,k=d;null!==w;){var r=w.effectTag;\nr&36&&hg(f,w.alternate,w,h,k);r&256&&ig(w,q);r&128&&jg(w);var t=w.nextEffect;w.nextEffect=null;w=t}}catch(ab){p=!0,n=ab}p&&(null===w?D(\"178\"):void 0,g(w,n),null!==w&&(w=w.nextEffect))}ca=Za=!1;\"function\"===typeof Ie&&Ie(b.stateNode);b=c.current.expirationTime;0===b&&(ya=null);a.remainingExpirationTime=b}function S(){return null===$a||$a.timeRemaining()>Bg?!1:Ib=!0}function q(a){null===aa?D(\"246\"):void 0;aa.remainingExpirationTime=0;Ba||(Ba=!0,Jb=a)}var u=kf(),t=ff(a,u),y=hf(u);u=jf(u);var H=gf(a),\nWa=$e(a,t,y,u,H,v,k).beginWork,Cb=af(a,t,y,u,H).completeWork;t=bf(t,y,u,v,c);var Jc=t.throwException,Kc=t.unwindWork,Lc=t.unwindInterruptedWork;t=df(a,g,v,k,function(a){null===ya?ya=new Set([a]):ya.add(a)},l);var Db=t.commitBeforeMutationLifeCycles,Mc=t.commitResetTextContent,Eb=t.commitPlacement,gg=t.commitDeletion,we=t.commitWork,hg=t.commitLifeCycles,ig=t.commitErrorLogging,jg=t.commitAttachRef,kg=t.commitDetachRef,Ic=a.now,lg=a.scheduleDeferredCallback,mg=a.cancelDeferredCallback,zg=a.prepareForCommit,\nAg=a.resetAfterCommit,Pc=Ic(),yg=2,ye=Pc,Rc=0,ia=0,ca=!1,I=null,Ya=null,Z=0,w=null,Za=!1,Nc=!1,ya=null,la=null,K=null,Gb=0,Qc=-1,T=!1,aa=null,P=0,da=0,Ib=!1,Ba=!1,Jb=null,$a=null,J=!1,Hb=!1,za=!1,Aa=null,xg=1E3,Fb=0,Bg=1;return{recalculateCurrentTime:l,computeExpirationForFiber:k,scheduleWork:v,requestWork:B,flushRoot:function(a,b){T?D(\"253\"):void 0;aa=a;P=b;G(a,b,!1);n();Y()},batchedUpdates:function(a,b){var c=J;J=!0;try{return a(b)}finally{(J=c)||T||n()}},unbatchedUpdates:function(a,b){if(J&&!Hb){Hb=\n!0;try{return a(b)}finally{Hb=!1}}return a(b)},flushSync:function(a,b){T?D(\"187\"):void 0;var c=J;J=!0;try{return p(a,b)}finally{J=c,n()}},flushControlled:function(a){var b=J;J=!0;try{p(a)}finally{(J=b)||T||x(1,!1,null)}},deferredUpdates:function(a){var b=ia;ia=25*(((l()+500)/25|0)+1);try{return a()}finally{ia=b}},syncUpdates:p,interactiveUpdates:function(a,b,c){if(za)return a(b,c);J||T||0===da||(x(da,!1,null),da=0);var d=za,e=J;J=za=!0;try{return a(b,c)}finally{za=d,(J=e)||T||n()}},flushInteractiveUpdates:function(){T||\n0===da||(x(da,!1,null),da=0)},computeUniqueAsyncExpiration:function(){var a=25*(((l()+500)/25|0)+1);a<=Rc&&(a=Rc+1);return Rc=a},legacyContext:y}}\nfunction mf(a){function b(a,b,c,d,e,h){d=b.current;if(c){c=c._reactInternalFiber;var l=g(c);c=k(c)?v(c,l):l}else c=ka;null===b.context?b.context=c:b.pendingContext=c;b=h;Pe(d,{expirationTime:e,partialState:{element:a},callback:void 0===b?null:b,isReplace:!1,isForced:!1,capturedValue:null,next:null});f(d,e);return e}var c=a.getPublicInstance;a=lf(a);var d=a.recalculateCurrentTime,e=a.computeExpirationForFiber,f=a.scheduleWork,h=a.legacyContext,g=h.findCurrentUnmaskedContext,k=h.isContextProvider,v=\nh.processChildContext;return{createContainer:function(a,b,c){b=new xe(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a},updateContainer:function(a,c,f,h){var g=c.current,k=d();g=e(g);return b(a,c,f,k,g,h)},updateContainerAtExpirationTime:function(a,c,e,f,g){var h=d();return b(a,c,e,h,f,g)},flushRoot:a.flushRoot,\nrequestWork:a.requestWork,computeUniqueAsyncExpiration:a.computeUniqueAsyncExpiration,batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,syncUpdates:a.syncUpdates,interactiveUpdates:a.interactiveUpdates,flushInteractiveUpdates:a.flushInteractiveUpdates,flushControlled:a.flushControlled,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},\nfindHostInstance:function(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?D(\"188\"):D(\"268\",Object.keys(a)));a=Bd(b);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=Cd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var b=a.findFiberByHostInstance;return He(A({},a,{findHostInstanceByFiber:function(a){a=Bd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}}}\nvar nf=Object.freeze({default:mf}),of=nf&&mf||nf,pf=of[\"default\"]?of[\"default\"]:of;function qf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:rc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var rf=\"object\"===typeof performance&&\"function\"===typeof performance.now,sf=void 0;sf=rf?function(){return performance.now()}:function(){return Date.now()};var tf=void 0,uf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var vf=null,wf=!1,xf=-1,yf=!1,zf=0,Af=33,Bf=33,Cf=void 0;Cf=rf?{didTimeout:!1,timeRemaining:function(){var a=zf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=zf-Date.now();return 0<a?a:0}};var Df=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Df){wf=!1;a=sf();if(0>=zf-a)if(-1!==\nxf&&xf<=a)Cf.didTimeout=!0;else{yf||(yf=!0,requestAnimationFrame(Ef));return}else Cf.didTimeout=!1;xf=-1;a=vf;vf=null;null!==a&&a(Cf)}},!1);var Ef=function(a){yf=!1;var b=a-zf+Bf;b<Bf&&Af<Bf?(8>b&&(b=8),Bf=b<Af?Af:b):Af=b;zf=a+Bf;wf||(wf=!0,window.postMessage(Df,\"*\"))};tf=function(a,b){vf=a;null!=b&&\"number\"===typeof b.timeout&&(xf=sf()+b.timeout);yf||(yf=!0,requestAnimationFrame(Ef));return 0};uf=function(){vf=null;wf=!1;xf=-1}}else tf=window.requestIdleCallback,uf=window.cancelIdleCallback;else tf=\nfunction(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity},didTimeout:!1})})},uf=function(a){clearTimeout(a)};function Ff(a){var b=\"\";ea.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function Gf(a,b){a=A({children:void 0},b);if(b=Ff(b.children))a.children=b;return a}\nfunction Hf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction If(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Jf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Kf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Lf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Mf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Nf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Of(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Pf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Of(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Qf=void 0,Rf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Nf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Qf=Qf||document.createElement(\"div\");Qf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Qf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Sf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Tf={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Uf=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Tf).forEach(function(a){Uf.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Tf[b]=Tf[a]})});\nfunction Vf(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Tf.hasOwnProperty(e)&&Tf[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Wf=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Xf(a,b,c){b&&(Wf[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction Yf(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Zf=C.thatReturns(\"\");\nfunction $f(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=ke(a);b=va[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?Zd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(Zd(\"topFocus\",\"focus\",a),Zd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(ic(\"cancel\",!0)&&Zd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(ic(\"close\",!0)&&Zd(\"topClose\",\"close\",a),c.topClose=!0):fe.hasOwnProperty(e)&&W(e,fe[e],a),c[e]=!0)}}\nfunction ag(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Nf.html&&(d=Of(a));d===Nf.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function bg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction cg(a,b,c,d){var e=Yf(b,c);switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);f=c;break;case \"source\":W(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);f=c;break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":W(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Wc(a,c);f=Vc(a,c);W(\"topInvalid\",\n\"invalid\",a);$f(d,\"onChange\");break;case \"option\":f=Gf(a,c);break;case \"select\":If(a,c);f=A({},c,{value:void 0});W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;case \"textarea\":Kf(a,c);f=Jf(a,c);W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;default:f=c}Xf(b,f,Zf);var h=f,g;for(g in h)if(h.hasOwnProperty(g)){var k=h[g];\"style\"===g?Vf(a,k,Zf):\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,null!=k&&Rf(a,k)):\"children\"===g?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Sf(a,k):\"number\"===typeof k&&\nSf(a,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(ua.hasOwnProperty(g)?null!=k&&$f(d,g):null!=k&&Uc(a,g,k,e))}switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Hf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Hf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=C)}}\nfunction dg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Vc(a,c);d=Vc(a,d);f=[];break;case \"option\":c=Gf(a,c);d=Gf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Jf(a,c);d=Jf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}Xf(b,d,Zf);b=a=void 0;var h=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var g=c[a];for(b in g)g.hasOwnProperty(b)&&(h||\n(h={}),h[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ua.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];g=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==g&&(null!=k||null!=g))if(\"style\"===a)if(g){for(b in g)!g.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(h||(h={}),h[b]=\"\");for(b in k)k.hasOwnProperty(b)&&g[b]!==k[b]&&(h||(h={}),h[b]=k[b])}else h||(f||(f=[]),f.push(a,h)),\nh=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,g=g?g.__html:void 0,null!=k&&g!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?g===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ua.hasOwnProperty(a)?(null!=k&&$f(e,a),f||g===k||(f=[])):(f=f||[]).push(a,k))}h&&(f=f||[]).push(\"style\",h);return f}\nfunction eg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Yc(a,e);Yf(c,d);d=Yf(c,e);for(var f=0;f<b.length;f+=2){var h=b[f],g=b[f+1];\"style\"===h?Vf(a,g,Zf):\"dangerouslySetInnerHTML\"===h?Rf(a,g):\"children\"===h?Sf(a,g):Uc(a,h,g,d)}switch(c){case \"input\":Zc(a,e);break;case \"textarea\":Lf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Hf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nHf(a,!!e.multiple,e.defaultValue,!0):Hf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction fg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);break;case \"source\":W(\"topError\",\"error\",a);break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);break;case \"details\":W(\"topToggle\",\"toggle\",a);break;case \"input\":Wc(a,c);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"select\":If(a,\nc);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"textarea\":Kf(a,c),W(\"topInvalid\",\"invalid\",a),$f(e,\"onChange\")}Xf(b,c,Zf);d=null;for(var h in c)c.hasOwnProperty(h)&&(f=c[h],\"children\"===h?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):ua.hasOwnProperty(h)&&null!=f&&$f(e,h));switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function ng(a,b){return a.nodeValue!==b}\nvar og=Object.freeze({createElement:ag,createTextNode:bg,setInitialProperties:cg,diffProperties:dg,updateProperties:eg,diffHydratedProperties:fg,diffHydratedText:ng,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Zc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Xa(d);e?void 0:D(\"90\");mc(d);Zc(d,e)}}}break;case \"textarea\":Lf(a,c);break;case \"select\":b=c.value,null!=b&&Hf(a,!!c.multiple,b,!1)}}});Tb.injectFiberControlledHostComponent(og);var pg=null,qg=null;\nfunction rg(a){this._expirationTime=X.computeUniqueAsyncExpiration();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}rg.prototype.render=function(a){this._defer?void 0:D(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new sg;X.updateContainerAtExpirationTime(a,b,null,c,d._onCommit);return d};\nrg.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nrg.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:D(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?D(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;X.flushRoot(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};rg.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function sg(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}sg.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nsg.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?D(\"191\",c):void 0;c()}}};function tg(a,b,c){this._internalRoot=X.createContainer(a,b,c)}tg.prototype.render=function(a,b){var c=this._internalRoot,d=new sg;b=void 0===b?null:b;null!==b&&d.then(b);X.updateContainer(a,c,null,d._onCommit);return d};\ntg.prototype.unmount=function(a){var b=this._internalRoot,c=new sg;a=void 0===a?null:a;null!==a&&c.then(a);X.updateContainer(null,b,null,c._onCommit);return c};tg.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new sg;c=void 0===c?null:c;null!==c&&e.then(c);X.updateContainer(b,d,a,e._onCommit);return e};\ntg.prototype.createBatch=function(){var a=new rg(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ug(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction vg(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nvar X=pf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Pf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Pf(a,b)}return a},getChildHostContext:function(a,b){return Pf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){pg=Vd;var a=fa();if(ne(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(B){b=null;break a}var f=0,h=-1,g=-1,k=0,v=0,l=a,p=null;b:for(;;){for(var z;;){l!==b||0!==d&&3!==l.nodeType||(h=f+d);l!==e||0!==c&&3!==l.nodeType||(g=f+c);3===l.nodeType&&(f+=l.nodeValue.length);if(null===(z=l.firstChild))break;p=l;l=z}for(;;){if(l===a)break b;p===b&&++k===d&&(h=f);p===e&&++v===c&&(g=f);if(null!==(z=l.nextSibling))break;l=p;p=l.parentNode}l=z}b=-1===h||-1===g?null:\n{start:h,end:g}}else b=null}b=b||{start:0,end:0}}else b=null;qg={focusedElem:a,selectionRange:b};Wd(!1)},resetAfterCommit:function(){var a=qg,b=fa(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ja(document.documentElement,c)){if(ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[mb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=me(c,a);var f=me(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var h=document.createRange();h.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(h),b.extend(f.node,f.offset)):(h.setEnd(f.node,f.offset),b.addRange(h))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,\na.element.scrollTop=a.top}qg=null;Wd(pg);pg=null},createInstance:function(a,b,c,d,e){a=ag(a,b,c,d);a[F]=e;a[Ta]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){cg(a,b,c,d);return vg(b,c)},prepareUpdate:function(a,b,c,d,e){return dg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===\ntypeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=bg(a,b);a[F]=d;return a},now:sf,mutation:{commitMount:function(a,b,c){vg(b,c)&&a.focus()},commitUpdate:function(a,b,c,d,e){a[Ta]=e;eg(a,b,c,d,e)},resetTextContent:function(a){Sf(a,\"\")},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},\ninsertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,b){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=\na.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[F]=f;a[Ta]=c;return fg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[F]=c;return ng(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},\ndidNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:tf,cancelDeferredCallback:uf}),Cg=X;ac=Cg.batchedUpdates;bc=Cg.interactiveUpdates;cc=Cg.flushInteractiveUpdates;\nfunction Dg(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new tg(a,!1,b)}\nfunction Eg(a,b,c,d,e){ug(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var h=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);h.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Dg(c,d);if(\"function\"===typeof e){var g=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);g.call(a)}}X.unbatchedUpdates(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return X.getPublicRootInstance(f._internalRoot)}\nfunction Fg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ug(b)?void 0:D(\"200\");return qf(a,b,null,c)}\nvar Gg={createPortal:Fg,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:X.findHostInstance(a)},hydrate:function(a,b,c){return Eg(null,a,b,!0,c)},render:function(a,b,c){return Eg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Eg(a,b,c,!1,d)},unmountComponentAtNode:function(a){ug(a)?void 0:D(\"40\");return a._reactRootContainer?(X.unbatchedUpdates(function(){Eg(null,null,a,!1,function(){a._reactRootContainer=\nnull})}),!0):!1},unstable_createPortal:function(){return Fg.apply(void 0,arguments)},unstable_batchedUpdates:X.batchedUpdates,unstable_deferredUpdates:X.deferredUpdates,flushSync:X.flushSync,unstable_flushControlled:X.flushControlled,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ra,EventPluginRegistry:Ca,EventPropagators:kb,ReactControlledComponent:$b,ReactDOMComponentTree:bb,ReactDOMEventListener:$d},unstable_createRoot:function(a,b){return new tg(a,!0,null!=b&&!0===b.hydrate)}};\nX.injectIntoDevTools({findFiberByHostInstance:Ua,bundleType:0,version:\"16.3.2\",rendererPackageName:\"react-dom\"});var Hg=Object.freeze({default:Gg}),Ig=Hg&&Gg||Hg;module.exports=Ig[\"default\"]?Ig[\"default\"]:Ig;\n","/** @license React v16.3.2\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol[\"for\"],t=r?Symbol[\"for\"](\"react.element\"):60103,u=r?Symbol[\"for\"](\"react.portal\"):60106,v=r?Symbol[\"for\"](\"react.fragment\"):60107,w=r?Symbol[\"for\"](\"react.strict_mode\"):60108,x=r?Symbol[\"for\"](\"react.provider\"):60109,y=r?Symbol[\"for\"](\"react.context\"):60110,z=r?Symbol[\"for\"](\"react.async_mode\"):60111,A=r?Symbol[\"for\"](\"react.forward_ref\"):\n60112,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=arguments.length-1,e=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};\nfunction E(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?C(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];d.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:I.current}}\nfunction M(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var N=/\\/+/g,O=[];function P(a,b,e,c){if(O.length){var d=O.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function Q(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>O.length&&O.push(a)}\nfunction R(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+S(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+S(d,h);g+=R(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+S(d,h++),g+=R(d,f,e,c);else\"object\"===d&&(e=\"\"+a,C(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function S(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function T(a,b){a.func.call(a.context,b,a.count++)}\nfunction U(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,e,q.thatReturnsArgument):null!=a&&(M(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(N,\"$\\x26/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function V(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(N,\"$\\x26/\")+\"/\");b=P(b,g,c,d);null==a||R(a,\"\",U,b);Q(b)}\nvar W={Children:{map:function(a,b,e){if(null==a)return a;var c=[];V(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=P(null,null,b,e);null==a||R(a,\"\",T,b);Q(b)},count:function(a){return null==a?0:R(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];V(a,b,null,q.thatReturnsArgument);return b},only:function(a){M(a)?void 0:C(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:y,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_changedBits:0,Provider:null,Consumer:null};a.Provider={$$typeof:x,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:A,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:z,createElement:L,cloneElement:function(a,b,e){null===a||void 0===a?C(\"267\",a):void 0;var c=void 0,d=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);var k=void 0;a.type&&a.type.defaultProps&&\n(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];d.children=k}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:M,version:\"16.3.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:m}},X=Object.freeze({default:W}),\nY=X&&W||X;module.exports=Y[\"default\"]?Y[\"default\"]:Y;\n"],"sourceRoot":""}