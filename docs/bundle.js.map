{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lodash/fp.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/emptyObject.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/react-dom/index.js","webpack:///./src/constants.tsx","webpack:///./node_modules/three/build/three.module.js","webpack:///./src/game/Movable.tsx","webpack:///./src/game/Player.tsx","webpack:///./src/game/Projectile.tsx","webpack:///./src/components/Game.tsx","webpack:///./src/index.tsx","webpack:///./src/game/server.tsx","webpack:///./src/game/client.tsx","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/style.css","webpack:///./src/style.css?7528","webpack:///./node_modules/uuid/v4.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/lodash/fp/placeholder.js","webpack:///./node_modules/lodash/fp/_mapping.js","webpack:///./node_modules/lodash/fp/_baseConvert.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lodash/lodash.min.js","webpack:///./node_modules/fbjs/lib/isNode.js","webpack:///./node_modules/fbjs/lib/isTextNode.js","webpack:///./node_modules/fbjs/lib/containsNode.js","webpack:///./node_modules/fbjs/lib/shallowEqual.js","webpack:///./node_modules/fbjs/lib/getActiveElement.js","webpack:///./node_modules/fbjs/lib/ExecutionEnvironment.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/react/cjs/react.production.min.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","_","runInContext","byteToHex","toString","substr","buf","offset","bth","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rnds","Array","Math","random","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","condition","format","a","b","f","error","Error","args","argIndex","replace","framesToPop","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","err","target","source","from","symbols","to","val","TypeError","arguments","length","key","v1","v4","uuid","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","GAME_WIDTH","GAME_HEIGHT","PLAYER_WIDTH","PLAYER_HEIGHT","PROJECTILE_WIDTH","PROJECTILE_HEIGHT","PLAYER_SPEED","PROJECTILE_SPEED","KEYCODES","LEFT","UP","RIGHT","DOWN","Q","EventDispatcher","Number","EPSILON","pow","isInteger","isFinite","floor","sign","x","Function","match","output","index","nextKey","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","min","max","vector","matrix","y","z","quaternion","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","Quaternion","w","_x","_y","_z","_w","Vector3","Matrix3","defineProperties","width","set","height","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","clone","constructor","copy","v","add","warn","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","compose","position","decompose","sx","sy","sz","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","points","closestPoint","box","p1","p2","sphere","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","undefined","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","data","Box3","Infinity","Sphere","Plane","constant","Frustum","p0","p3","p4","p5","planes","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","canvas","HTMLCanvasElement","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","hsl","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_pars_maps","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","isArray","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","UniformsLib","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","q1","object3DId","Object3D","parent","children","DefaultUp","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","Face3","materialIndex","vertexNormals","vertexColors","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","remove","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","serialize","library","element","JSON","stringify","parameters","shape","material","uuids","extractFromCache","cache","values","recursive","parse","child","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","obj","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","normalized","dynamic","updateRange","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","jl","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","isMesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","onUploadCallback","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","isInterleavedBufferAttribute","getAttribute","removeAttribute","clearGroups","setDrawRange","needsUpdate","isPoints","isLine","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","toNonIndexed","geometry2","array2","morphAttribute","segCenter","segDir","startP","startEnd","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","MeshBasicMaterial","combine","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","setValues","ShaderMaterial","defines","linewidth","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Line3","Triangle","Mesh","drawMode","updateMorphTargets","absNumericalSort","CubeTexture","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","emissiveIntensity","sizeAttenuation","gapSize","srcPlanes","dstPlanes","isMeshBasicMaterial","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","edgeList","projectedPoint","minDistance","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","flatten","nBlocks","blockSize","firstElem","allocTexUnits","renderer","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","SingleUniform","activeInfo","setValue","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","VERTEX_SHADER","lines","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLPrograms","capabilities","programs","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","maxBones","isSkinnedMesh","bones","skeleton","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getMaxPrecision","currentRenderTarget","getRenderTarget","supportsVertexTextures","vertexTextures","outputEncoding","gammaOutput","mapEncoding","gammaInput","envMapMode","envMapEncoding","envMapCubeUV","emissiveMapEncoding","useFog","fogExp","isFogExp2","logarithmicDepthBuffer","useVertexTexture","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMapEnabled","shadowMap","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","depthPacking","getProgramCode","acquireProgram","code","pl","programInfo","usedTimes","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","filter","customDefines","chunks","createProgram","isRawShaderMaterial","toneMappingName","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","getUniforms","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","destroy","deleteProgram","releaseProgram","pop","painterSortStable","reversePainterSortStable","intersectPoint","worldPosition","worldScale","matrixPosition","offsetMatrix","identityMatrix","WebGLRenderStates","renderStates","scene","renderState","light","halfWidth","halfHeight","state","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","lightsArray","shadowsArray","spritesArray","init","setupLights","pushLight","pushShadow","shadowLight","pushSprite","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","result","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","groupMaterial","renderBufferDirect","autoUpdate","render","faceCount","_gl","_state","BLEND","buffers","setClear","setTest","setScissorTest","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","clear","vpDimensions","CanvasTexture","WebGLSpriteRenderer","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","uvOffset","uvScale","fogType","fogDepth","fillStyle","fillRect","sprites","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","CULL_FACE","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","density","setBlending","setMask","drawElements","TRIANGLES","UNSIGNED_SHORT","reset","WebGLTextures","utils","_canvas","_isWebGL2","WebGL2RenderingContext","_videoTextures","clampToMaxSize","maxSize","textureNeedsGenerateMipmaps","generateMipmap","__maxMipLevel","LOG2E","filterFallback","NEAREST","LINEAR","onTextureDispose","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","isVideoTexture","memory","onRenderTargetDispose","renderTarget","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","frame","__version","complete","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","HTMLImageElement","ImageBitmap","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","texImage2D","isCompressedTexture","getCompressedTextureFormats","compressedTexImage2D","textureType","extension","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","TEXTURE_CUBE_MAP","isCompressed","cubeImage","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupRenderTarget","isCube","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","webglDepthTexture","createRenderbuffer","setupDepthRenderbuffer","updateRenderTargetMipmap","webglTexture","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","device","frameData","poseTarget","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","userHeight","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLRenderer","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","background","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","_this","_isContextLost","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","getShaderPrecisionFormat","rangeMin","rangeMax","message","initGLContext","getExtension","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","maxAnisotropy","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","MAX_TEXTURE_MAX_ANISOTROPY_EXT","colorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","clearColor","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","blendEquationSeparate","blendFuncSeparate","blendFunc","setFlipSided","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","factor","POLYGON_OFFSET_FILL","webglSlot","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","setMaterial","frontFaceCW","setLineWidth","lineWidth","SCISSOR_TEST","webglType","boundTexture","apply","calls","triangles","autoReset","mode","instanceCount","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","WeakMap","delete","deleteBuffer","buffer","bufferType","usage","DYNAMIC_DRAW","bytesPerElement","BYTES_PER_ELEMENT","bufferSubData","subarray","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","updateList","influencesList","objectInfluences","influences","lists","list","renderItems","renderItemsIndex","opaque","renderItem","planeCamera","planeMesh","boxMesh","clearAlpha","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","setMode","drawArrays","renderInstances","drawArraysInstancedANGLE","maxInstancedCount","drawElementsInstancedANGLE","vr","preventDefault","onMaterialDispose","releaseMaterialProgramReference","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","stopAnimation","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","compile","isLight","initMaterial","warned","isAnimating","onAnimationFrame","requestAnimationLoopFrame","requestAnimationFrame","animationLoop","time","renderObjects","overrideMaterial","isArrayCamera","camera2","isImmediateRenderObject","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","refreshUniformsCommon","isMeshToonMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsStandard","isMeshDepthMaterial","isLineBasicMaterial","isLineDashedMaterial","isPointsMaterial","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","animate","projectObject","isSprite","opaqueObjects","transparentObjects","textureUnit","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","pixels","texSubImage2D","FogExp2","Fog","Scene","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","CompressedTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","centroid","azi","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateSegment","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","isSpriteMaterial","guessSizeSq","addLevel","getObjectForDistance","bone","isBone","getBoneByName","gbone","pos","rotq","scl","sw","vec","skinWeight","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","isGroup","readyState","HAVE_CURRENT_DATA","linkedList","dim","clockwise","last","sum","insertNode","removeNode","filterPoints","again","steiner","three_module_area","prev","earcutLinked","ear","invSize","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","compareX","eliminateHole","hole","outerNode","hx","hy","mx","my","tanMin","getLeftmost","leftmost","px","py","inside","q2","Node","an","bp","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","holeIndices","removeDupEndPts","addContour","holeIndex","hasHoles","outerLen","queue","Earcut","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","extrudePts","splineTube","binormal","position2","ahole","hl","placeholder","curveSegments","steps","amount","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","ImageLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","setTimeout","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","header","open","callbacks","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","src","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","CubicBezier","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","QuaternionLinearInterpolant","QuaternionKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","getValueSize","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","BlendingMode","textureLoader","materialLoader","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","lastIndexOf","JSONLoader","setTexturePath","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","hasMaterial","faceA","faceB","uvLayer","nUvLayers","influencesPerVertex","dstVertices","srcVertices","morphColors","outputAnimations","morphAnimationClips","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","fetch","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","setOptions","then","res","blob","imageBitmap","catch","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","paths","chars","line_height","yMax","yMin","underlineThickness","ret","instance","eyeSep","eyeRight","eyeLeft","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","lineGeometry","coneGeometry","AudioContext","webkitAudioContext","setContext","AudioLoader","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","ascSort","intersectObject","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","Spline","decodeAudioData","audioBuffer","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","RegExp","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","PointCloud","setFromCamera","coords","intersectObjects","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","setPoint","setColor","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","Movable_Movable","[object Object]","history","timestamp","dt","speed","save","move","newHistory","fp","currPosition","currTimestamp","Player_Player","controls","down","Projectile_Projectile","super","createElement","body","appendChild","react_dom","react","Component","props","config","serverOWD","clientOWD","prediction","refs","game","server","playing","player","projectiles","lastTick","tick","filteredProjectiles","pickBy","projectile","client","has","setValid","cloneDeep","clean","ctx","keydown","keyup","click","clearRect","isPressed","keyCode","which","includes","stopPropagation","keypress","rect","getBoundingClientRect","clientX","clientY","reconcile","ref","className","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","fn","memo","stylesInDom","isOldIE","all","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","addStyle","listToStyles","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","attrs","addAttrs","el","setAttribute","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","btoa","link","rel","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","childNodes","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","mediaQuery","alreadyImportedModules","hmr","locals","rng","bytesToUuid","ii","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","getTime","nsecs","tmh","aliasToReal","each","eachRight","entries","entriesIn","extend","extendAll","extendAllWith","extendWith","first","conforms","__","F","allPass","always","any","anyPass","assoc","assocPath","complement","contains","dissoc","dissocPath","dropLast","dropLastWhile","identical","indexBy","invertObj","juxt","omitAll","nAry","pathEq","pathOr","pickAll","pipe","pluck","prop","propEq","propOr","symmetricDifference","symmetricDifferenceBy","symmetricDifferenceWith","takeLast","takeLastWhile","unapply","unnest","useWith","where","whereEq","zipObj","aryMethod","3","4","aryRearg","iterateeAry","dropRightWhile","dropWhile","every","find","findFrom","findIndex","findIndexFrom","findKey","findLast","findLastFrom","findLastIndex","findLastIndexFrom","findLastKey","flatMap","flatMapDeep","flatMapDepth","forEachRight","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","partition","reduce","reduceRight","reject","some","takeRightWhile","takeWhile","iterateeRearg","methodRearg","assignInAllWith","assignInWith","assignAllWith","assignWith","differenceBy","differenceWith","getOr","intersectionBy","intersectionWith","isEqualWith","isMatchWith","mergeAllWith","mergeWith","padChars","padCharsEnd","padCharsStart","pullAllBy","pullAllWith","rangeStep","rangeStepRight","setWith","sortedIndexBy","sortedLastIndexBy","unionBy","unionWith","updateWith","xorBy","xorWith","zipWith","methodSpread","assignAll","assignInAll","defaultsAll","defaultsDeepAll","invokeArgs","invokeArgsMap","mergeAll","partial","partialRight","without","zipAll","mutate","fill","pull","pullAll","pullAt","assignIn","defaults","defaultsDeep","unset","bindKey","curry","curryRight","realToAlias","remap","curryN","curryRightN","includesFrom","indexOfFrom","lastIndexOfFrom","propertyOf","restFrom","spreadFrom","trimChars","trimCharsEnd","trimCharsStart","skipFixed","castArray","flow","flowRight","iteratee","mixin","rearg","skipRearg","difference","eq","gt","gte","isEqual","lt","lte","matchesProperty","overArgs","rangeRight","subtract","zip","zipObject","zipObjectDeep","fallbackHolder","baseAry","cloneArray","wrapImmutable","cloner","baseConvert","util","setPlaceholder","isLib","isObj","cap","fixed","immutable","forceCurry","forceFixed","forceRearg","pristine","helpers","ary","isError","isFunction","isWeakMap","toInteger","toPath","aryMethodKeys","wrappers","arity","pairs","pair","nthArg","indexes","castCap","overArg","castFixed","otherArgs","castRearg","cloneByPath","nested","createConverter","realName","methodName","oldOptions","newUtil","newFunc","newOptions","wrapped","wrapper","aryKey","otherName","afterRearg","alias","webpackPolyfill","deprecate","eval","__WEBPACK_AMD_DEFINE_RESULT__","A","S","O","I","R","Un","W","L","U","D","Rn","On","Qn","M","$","NaN","Z","V","K","G","H","J","Y","X","nn","tn","rn","en","un","on","cn","ln","sn","hn","pn","_n","vn","gn","dn","yn","bn","xn","jn","wn","mn","An","kn","Sn","In","zn","Wn","Bn","Ln","\\","'","\n","\r"," "," ","Cn","Dn","Mn","global","Tn","self","$n","Fn","nodeType","Nn","Pn","Zn","process","qn","types","Vn","isArrayBuffer","Kn","isDate","Gn","isMap","Hn","isRegExp","Jn","isSet","Yn","Xn","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","nt","&","<",">","\"","tt","&amp;","&lt;","&gt;","&quot;","&#39;","rt","du","of","$e","En","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","__data__","uf","pf","Xu","Se","ir","it","au","st","ot","ft","ct","eo","Cr","zu","mi","writable","ht","Vu","Iu","_t","gu","input","Ur","_o","Ir","Ae","po","Wu","Rr","byteOffset","byteLength","zr","no","Yu","hf","lf","ve","_e","ni","yo","yt","bt","xt","ju","jt","wt","ke","mt","io","At","oo","Et","kt","Sr","De","St","Ot","wi","ci","It","Rt","zt","Wt","Ui","Lt","hr","qe","Ut","Mt","se","_i","$t","Ft","si","Me","qt","Tu","Jt","Ht","Pu","Vt","ze","Bi","Kt","Gt","lu","xe","We","Ie","Ru","Yt","bu","Su","Qt","Xt","ye","Wr","tr","lr","er","bi","ur","xr","Oi","Mi","or","fr","bo","Be","pr","_r","gr","dr","yr","br","lo","jr","wr","thisArg","mr","Ar","Er","kr","xo","Ou","Or","vi","Br","Li","Lr","Tr","$r","Oe","Fr","Nr","Zr","qr","Du","Cu","Vr","ro","Kr","ue","Jr","Gr","Hr","pe","thru","ge","so","Re","plant","Yr","Qr","Xr","ne","Si","re","mu","ee","ku","go","Le","ie","Ju","Au","oe","fe","fo","ri","le","Pe","Ki","$u","je","we","vu","gi","xi","Te","Ue","Ci","Ce","ui","Fe","Ne","Ze","Ve","Ke","Ti","Ge","He","Je","Ye","Xe","nu","uo","tu","ru","eu","ou","Ko","leading","maxWait","trailing","cancel","ao","flush","fu","hu","_u","yu","ai","xu","wu","ji","done","Lu","Eu","valueOf","Bu","Uu","Tf","Mu","Fu","chain","Nu","Zu","qu","pick","Ku","Gu","Hu","Qu","ti","ei","oi","IE_PROTO","li","hi","Buffer","pi","Symbol","getPrototypeOf","di","yi","isConcatSpreadable","iterator","toStringTag","Ai","clearTimeout","Ei","ki","Ii","Ri","isBuffer","zi","Wi","Di","$i","Fi","Ni","Pi","Zi","qi","Vi","Gi","Hi","Ji","Yi","Qi","Xi","templateSettings","escape","interpolate","variable","imports","co","resolve","vo","jo","wo","mo","Ao","Eo","ko","So","Oo","Io","Ro","zo","Wo","Bo","Lo","Uo","Co","Do","Mo","To","$o","Fo","No","Po","Zo","qo","Vo","Go","Ho","Jo","Yo","Qo","Xo","nf","tf","rf","ef","ff","_f","vf","gf","yf","xf","jf","wf","Sf","mf","Af","Ef","kf","Of","If","Rf","zf","Wf","Bf","Lf","Uf","Cf","Df","Mf","$f","Ff","Nf","Pf","Zf","qf","Vf","Kf","Gf","Hf","Jf","Yf","Qf","Xf","nc","tc","rc","ec","after","bindAll","chunk","compact","cond","countBy","uu","iu","debounce","defer","delay","drop","dropRight","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","groupBy","initial","invert","invertBy","invokeMap","keyBy","keysIn","memoize","method","methodOf","omit","omitBy","once","orderBy","over","overEvery","overSome","rest","shuffle","sortBy","sortedUniq","sortedUniqBy","spread","take","takeRight","tap","throttle","toPairs","toPairsIn","toPlainObject","unary","uniq","uniqBy","uniqWith","unzip","unzipWith","valuesIn","words","xor","attempt","camelCase","capitalize","cloneDeepWith","cloneWith","conformsTo","deburr","defaultTo","endsWith","escapeRegExp","hasIn","inRange","invoke","isArguments","isArrayLike","isArrayLikeObject","isBoolean","isElement","isLength","isMatch","isNative","isNil","isNull","isNumber","isObject","isObjectLike","isPlainObject","isSafeInteger","isString","isSymbol","isUndefined","isWeakSet","kebabCase","lowerCase","lowerFirst","maxBy","mean","meanBy","minBy","stubArray","stubFalse","stubObject","stubString","stubTrue","nth","noConflict","noop","pad","padEnd","padStart","sample","snakeCase","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","startCase","startsWith","sumBy","template","sourceURL","toFinite","toLength","toLower","toNumber","toSafeInteger","toUpper","trimEnd","trimStart","truncate","separator","omission","uniqueId","upperCase","upperFirst","commit","defaultView","ownerDocument","isNode","isTextNode","containsNode","innerNode","compareDocumentPosition","is","objA","objB","keysA","keysB","doc","activeElement","canUseDOM","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","isInWorker","ba","ea","C","fa","ja","ka","E","_caughtError","_hasCaughtError","_rethrowError","_hasRethrowError","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","hasCaughtError","clearCaughtError","rethrowCaughtError","oa","pa","ra","extractEvents","eventTypes","sa","phasedRegistrationNames","ta","registrationName","ua","va","dependencies","wa","xa","Ca","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Da","Ea","Fa","Ga","currentTarget","Ha","Ia","Ja","Ka","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","La","Ma","Na","Oa","stateNode","disabled","Pa","Qa","Ra","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","Sa","Ta","Ua","tag","Va","Xa","bb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","return","db","dispatchConfig","eb","_targetInst","fb","gb","hb","ib","jb","alternate","kb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","lb","mb","documentElement","_startText","_fallbackText","nb","ob","pb","eventPhase","bubbles","cancelable","timeStamp","defaultPrevented","isTrusted","nativeEvent","Interface","isDefaultPrevented","returnValue","sb","eventPool","tb","destructor","rb","getPooled","cancelBubble","persist","ub","vb","wb","xb","yb","documentMode","zb","Ab","Bb","Kb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","Lb","Mb","Nb","Ob","Rb","ctrlKey","altKey","metaKey","Sb","Tb","injectFiberControlledHostComponent","Ub","Vb","Wb","restoreControlledState","Xb","Yb","Zb","$b","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","cc","dc","fc","date","datetime","datetime-local","email","month","number","password","tel","week","gc","hc","correspondingUseElement","ic","jc","lc","_valueTracker","getOwnPropertyDescriptor","stopTracking","mc","checked","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","for","oc","pc","qc","sc","uc","vc","wc","xc","yc","zc","Ac","displayName","$$typeof","Bc","_debugOwner","_debugSource","fileName","lineNumber","Cc","Dc","Ec","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","Sc","Tc","Uc","setAttributeNS","Vc","defaultChecked","defaultValue","_wrapperState","initialChecked","Wc","Xc","initialValue","controlled","Yc","Zc","$c","tabIndex","change","cd","dd","ed","fd","gd","hd","jd","detachEvent","kd","ld","md","nd","od","pd","_isInputEventSupported","qd","rd","Alt","Control","Meta","Shift","sd","getModifierState","td","ud","screenX","screenY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","srcElement","toElement","vd","mouseEnter","mouseLeave","wd","parentWindow","xd","effectTag","yd","_reactInternalFiber","zd","Ad","sibling","Bd","Dd","animationName","pseudoElement","Ed","clipboardData","Fd","Gd","charCode","Hd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Id","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Jd","locale","Kd","dataTransfer","Ld","touches","targetTouches","changedTouches","Md","Nd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Od","Pd","Qd","isInteractive","Rd","isInteractiveTopLevelEventType","Sd","Td","Ud","targetInst","ancestors","containerInfo","topLevelType","Vd","Wd","Xd","Yd","Zd","$d","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","animationend","animationiteration","animationstart","transitionend","transition","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCancel","topChange","topClick","topClose","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topScroll","topSelectionChange","topTextInput","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topWheel","topAbort","topCanPlay","topCanPlayThrough","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topLoadedData","topLoadedMetadata","topPause","topPlay","topPlaying","topProgress","topRateChange","topSeeked","topSeeking","topStalled","topSuspend","topTimeUpdate","topVolumeChange","topWaiting","he","textContent","contentEditable","select","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","onSelect","pendingProps","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","isReactComponent","pendingChildren","implementation","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","Ee","baseState","callbackList","hasForceUpdate","isInitialized","capturedValues","Set","Qe","partialState","isReplace","isForced","capturedValue","_owner","_stringRef","Map","pendingContext","shouldSetTextContent","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","pushProvider","getMaskedContext","getUnmaskedContext","hasContextChanged","pushContextProvider","pushTopLevelContextObject","invalidateContextProvider","enterHydrationState","Wa","resetHydrationState","Cb","tryToClaimNextHydratableInstance","Jc","shouldComponentUpdate","isPureReactComponent","updater","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","getDerivedStateFromProps","cacheContext","isContextConsumer","isMounted","enqueueSetState","enqueueForceUpdate","adoptClassInstance","callGetDerivedStateFromProps","constructClassInstance","mountClassInstance","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","resumeMountClassInstance","updateClassInstance","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Kc","Lc","Db","Mc","Eb","beginWork","hydrate","_calculateChangedBits","_currentValue","_changedBits","unstable_observedBits","stack","suppressReactErrorLogging","Ya","Nc","ya","ca","pendingCommitExpirationTime","Oc","Za","getDerivedStateFromCatch","componentDidCatch","ia","za","da","Fb","xg","Ic","Pc","Gb","mg","Qc","lg","timeout","nextScheduledRoot","remainingExpirationTime","la","Hb","aa","$a","Ib","Aa","_onComplete","wg","Ba","Jb","finishedWork","firstBatch","_expirationTime","_defer","zg","kg","gg","Ag","hg","ig","jg","timeRemaining","Bg","createCursor","checkThatStackIsEmpty","resetStackAfterFatalErrorInDev","getChildHostContext","getRootHostContext","getHostContext","getRootHostContainer","popHostContainer","popHostContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","getChildContext","contextTypes","isContextProvider","popContextProvider","popTopLevelContextObject","cursor","processChildContext","__reactInternalMemoizedMergedChildContext","findCurrentUnmaskedContext","popProvider","hydration","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","mutation","completeWork","handler","throwException","unwindWork","unwindInterruptedWork","componentWillUnmount","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChildToContainer","insertInContainerBefore","removeChildFromContainer","commitBeforeMutationLifeCycles","__reactInternalSnapshotBeforeUpdate","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitErrorLogging","componentStack","commitAttachRef","commitDetachRef","scheduleDeferredCallback","cancelDeferredCallback","prepareForCommit","resetAfterCommit","Rc","recalculateCurrentTime","computeExpirationForFiber","scheduleWork","requestWork","flushRoot","batchedUpdates","unbatchedUpdates","flushSync","flushControlled","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","computeUniqueAsyncExpiration","legacyContext","createContainer","updateContainer","updateContainerAtExpirationTime","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","findHostInstanceByFiber","requestIdleCallback","cancelIdleCallback","didTimeout","postMessage","Children","selected","defaultSelected","wasMultiple","multiple","dangerouslySetInnerHTML","html","mathml","svg","namespaceURI","innerHTML","MSApp","execUnsafeLocalFunction","lastChild","nodeValue","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","orphans","tabSize","widows","zIndex","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","setProperty","menuitem","col","embed","img","keygen","param","wbr","ag","bg","cg","__html","onClick","onclick","dg","eg","fg","ng","og","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","form","pg","qg","rg","_callbacks","_next","_hasChildren","_didComplete","_children","sg","_didCommit","_onCommit","tg","_internalRoot","ug","vg","autoFocus","unmount","legacy_renderSubtreeIntoContainer","createBatch","tagName","focusedElem","selectionRange","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","hidden","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","Cg","Eg","_reactRootContainer","hasAttribute","Fg","Gg","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Hg","Ig","forceUpdate","__self","__source","defaultProps","keyPrefix","=",":","only","createRef","PureComponent","createContext","_defaultValue","Provider","Consumer","forwardRef","Fragment","StrictMode","unstable_AsyncMode","cloneElement","createFactory","isValidElement"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,gBACAC,cACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,YAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAAoB,SAC3B,WAAiC,OAAApB,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAW,EAAAC,GAAsD,OAAAX,OAAAY,UAAAC,eAAApB,KAAAiB,EAAAC,IAGtDzB,EAAA4B,EAAA,GAIA5B,IAAA6B,EAAA,eAAAC,EAAAC,EAAAV,GCnEA,IAAAW,EAAAhC,EAAA,IAAAiC,eACA9B,EAAAD,QAAAF,EAAA,GAAAA,CAAAgC,mCCEA7B,EAAAD,QAAAF,EAAA,cAAA8B,EAAAC,GCEA,IADA,IAAAG,KACA9B,EAAA,EAAeA,EAAA,MAASA,EACxB8B,EAAA9B,MAAA,KAAA+B,SAAA,IAAAC,OAAA,GAgBAjC,EAAAD,QAbA,SAAAmC,EAAAC,GACA,IAAAlC,EAAAkC,GAAA,EACAC,EAAAL,EACA,OAAAK,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MAAA,IACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MAAA,IACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MAAA,IACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MAAA,IACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,MACAmC,EAAAF,EAAAjC,MAAAmC,EAAAF,EAAAjC,sBCbA,IAAAoC,EAAA,oBAAAC,eAAAD,gBAAAE,KAAAD,SACA,oBAAAE,mBAAAH,gBAAAE,KAAAC,UACA,GAAAH,EAAA,CAEA,IAAAI,EAAA,IAAAC,WAAA,IAEA1C,EAAAD,QAAA,WAEA,OADAsC,EAAAI,GACAA,OAEC,CAKD,IAAAE,EAAA,IAAAC,MAAA,IAEA5C,EAAAD,QAAA,WACA,QAAAiB,EAAAf,EAAA,EAAsBA,EAAA,GAAQA,IAC9B,MAAAA,KAAAe,EAAA,WAAA6B,KAAAC,UACAH,EAAA1C,GAAAe,MAAA,EAAAf,IAAA,OAGA,OAAA0C,kCClBA,SAAAI,EAAAC,GACA,kBACA,OAAAA,GASA,IAAAC,EAAA,aAEAA,EAAAC,YAAAH,EACAE,EAAAE,iBAAAJ,MACAE,EAAAG,gBAAAL,MACAE,EAAAI,gBAAAN,EAAA,MACAE,EAAAK,gBAAA,WACA,OAAAC,MAEAN,EAAAO,oBAAA,SAAAR,GACA,OAAAA,GAGAhD,EAAAD,QAAAkD,gCCnBAjD,EAAAD,yCCoCAC,EAAAD,QArBA,SAAA0D,EAAAC,EAAAC,EAAAC,EAAAtD,EAAAC,EAAAqB,EAAAiC,GAGA,IAAAJ,EAAA,CACA,IAAAK,EACA,YAAAJ,EACAI,EAAA,IAAAC,MAAA,qIACK,CACL,IAAAC,GAAAL,EAAAC,EAAAtD,EAAAC,EAAAqB,EAAAiC,GACAI,EAAA,GACAH,EAAA,IAAAC,MAAAL,EAAAQ,QAAA,iBACA,OAAAF,EAAAC,SAEAzD,KAAA,sBAIA,MADAsD,EAAAK,YAAA,EACAL;;;;;ECxCA,IAAAM,EAAAzD,OAAAyD,sBACA5C,EAAAb,OAAAY,UAAAC,eACA6C,EAAA1D,OAAAY,UAAA+C,qBAsDAtE,EAAAD,QA5CA,WACA,IACA,IAAAY,OAAA4D,OACA,SAMA,IAAAC,EAAA,IAAAC,OAAA,OAEA,GADAD,EAAA,QACA,MAAA7D,OAAA+D,oBAAAF,GAAA,GACA,SAKA,IADA,IAAAG,KACA1E,EAAA,EAAiBA,EAAA,GAAQA,IACzB0E,EAAA,IAAAF,OAAAG,aAAA3E,MAKA,kBAHAU,OAAA+D,oBAAAC,GAAAE,IAAA,SAAA3D,GACA,OAAAyD,EAAAzD,KAEA4D,KAAA,IACA,SAIA,IAAAC,KAIA,MAHA,uBAAAC,MAAA,IAAAC,QAAA,SAAAC,GACAH,EAAAG,OAGA,yBADAvE,OAAAwE,KAAAxE,OAAA4D,UAAkCQ,IAAAD,KAAA,IAMhC,MAAAM,GAEF,UAxCA,GA4CAzE,OAAA4D,OAAA,SAAAc,EAAAC,GAKA,IAJA,IAAAC,EAEAC,EADAC,EAtDA,SAAAC,GACA,UAAAA,cACA,UAAAC,UAAA,yDAGA,OAAAhF,OAAA+E,GALA,CAsDAL,GAGA3D,EAAA,EAAgBA,EAAAkE,UAAAC,OAAsBnE,IAAA,CAGtC,QAAAoE,KAFAP,EAAA5E,OAAAiF,UAAAlE,IAGAF,EAAApB,KAAAmF,EAAAO,KACAL,EAAAK,GAAAP,EAAAO,IAIA,GAAA1B,EAAA,CACAoB,EAAApB,EAAAmB,GACA,QAAAtF,EAAA,EAAkBA,EAAAuF,EAAAK,OAAoB5F,IACtCoE,EAAAjE,KAAAmF,EAAAC,EAAAvF,MACAwF,EAAAD,EAAAvF,IAAAsF,EAAAC,EAAAvF,MAMA,OAAAwF,oBCxFA,IAAAM,EAAAlG,EAAA,IACAmG,EAAAnG,EAAA,IAEAoG,EAAAD,EACAC,EAAAF,KACAE,EAAAD,KAEAhG,EAAAD,QAAAkG,iCCLA,SAAAC,IAEA,GACA,oBAAAC,gCACA,mBAAAA,+BAAAD,SAcA,IAEAC,+BAAAD,YACG,MAAAd,GAGHgB,QAAAtC,MAAAsB,IAxBA,GAgCApF,EAAAD,QAAAF,EAAA,cAAA8B,EAAAC,EAAAV,GAAA,aAAAA,EAAAF,EAAAY,GAAA,IAAAZ,EAAAE,EAAA,GAAAjB,EAAAiB,EAAA,GClCO,MAAMmF,EAAa,IACbC,EAAc,IACdC,EAAe,GACfC,EAAgB,GAChBC,EAAmB,GACnBC,EAAoB,GAEpBC,EAAe,GACfC,EAAmB,GAEnBC,GACXC,MAAO,GAAI,IACXC,IAAK,GAAI,IACTC,OAAQ,GAAI,IACZC,MAAO,GAAI,IACXC,GAAI,KCsFN,SAAAC,cAnGAC,OAAAC,UAEAD,OAAAC,QAAAxE,KAAAyE,IAAA,iBAIAF,OAAAG,YAKAH,OAAAG,UAAA,SAAAtG,GAEA,uBAAAA,GAAAuG,SAAAvG,IAAA4B,KAAA4E,MAAAxG,kBAQA4B,KAAA6E,OAIA7E,KAAA6E,KAAA,SAAAC,GAEA,OAAAA,EAAA,KAAAA,EAAA,KAAAA,IAMA,SAAAC,SAAArG,cAKAZ,OAAAC,eAAAgH,SAAArG,UAAA,QAEAR,IAAA,WAEA,OAAAwC,KAAAvB,WAAA6F,MAAA,4CAQAlH,OAAA4D,SAOA5D,OAAA4D,OAAA,SAAAc,GAEA,YAAAA,GAAA,OAAAA,EAEA,UAAAM,UAAA,8CAMA,IAFA,IAAAmC,EAAAnH,OAAA0E,GAEA0C,EAAA,EAAuBA,EAAAnC,UAAAC,OAA0BkC,IAAA,CAEjD,IAAAzC,EAAAM,UAAAmC,GAEA,YAAAzC,GAAA,OAAAA,EAEA,QAAA0C,KAAA1C,EAEA3E,OAAAY,UAAAC,eAAApB,KAAAkF,EAAA0C,KAEAF,EAAAE,GAAA1C,EAAA0C,IAUA,OAAAF,IAcAnH,OAAA4D,OAAA4C,EAAA5F,WAEA0G,iBAAA,SAAAC,EAAAC,YAEA5E,KAAA6E,aAAA7E,KAAA6E,eAEA,IAAAC,EAAA9E,KAAA6E,oBAEAC,EAAAH,KAEAG,EAAAH,QAIA,IAAAG,EAAAH,GAAAI,QAAAH,IAEAE,EAAAH,GAAAK,KAAAJ,IAMAK,iBAAA,SAAAN,EAAAC,GAEA,YAAA5E,KAAA6E,WAAA,SAEA,IAAAC,EAAA9E,KAAA6E,WAEA,gBAAAC,EAAAH,KAAA,IAAAG,EAAAH,GAAAI,QAAAH,IAIAM,oBAAA,SAAAP,EAAAC,GAEA,YAAA5E,KAAA6E,WAAA,CAEA,IACAM,EADAnF,KAAA6E,WACAF,GAEA,YAAAQ,EAAA,CAEA,IAAAX,EAAAW,EAAAJ,QAAAH,IAEA,IAAAJ,GAEAW,EAAAC,OAAAZ,EAAA,MAQAa,cAAA,SAAAC,GAEA,YAAAtF,KAAA6E,WAAA,CAEA,IACAM,EADAnF,KAAA6E,WACAS,EAAAX,MAEA,YAAAQ,EAAA,CAEAG,EAAAxD,OAAA9B,KAIA,IAFA,IAAAuF,EAAAJ,EAAAK,MAAA,GAEA9I,EAAA,EAAAC,EAAA4I,EAAAjD,OAAqC5F,EAAAC,EAAOD,IAE5C6I,EAAA7I,GAAAG,KAAAmD,KAAAsF,QAUA,IA6jBAG,EACAC,EA48BAC,EACAC,EAhcAxB,EACAyB,EACAC,EAtMAtD,EAymDAuD,EAh/EAC,EAAA,KAEAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAKAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAGAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEAC,GAAA,KACAC,GAAA,KACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MAEAC,GAAA,KAKAC,GAAA,KAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAEAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KAOAC,IAEAC,QAAArO,KAAAsO,GAAA,IACAC,QAAA,IAAAvO,KAAAsO,GAEAE,aAAA,WAMA,IAFA,IAAAC,KAEArR,EAAA,EAAkBA,EAAA,IAASA,IAE3BqR,EAAArR,MAAA,WAAA2B,EAAAI,SAAA,IAIA,kBAEA,IAAAuP,EAAA,WAAA1O,KAAAC,SAAA,EACA0O,EAAA,WAAA3O,KAAAC,SAAA,EACA2O,EAAA,WAAA5O,KAAAC,SAAA,EACA4O,EAAA,WAAA7O,KAAAC,SAAA,EAOA,OANAwO,EAAA,IAAAC,GAAAD,EAAAC,GAAA,OAAAD,EAAAC,GAAA,QAAAD,EAAAC,GAAA,YACAD,EAAA,IAAAE,GAAAF,EAAAE,GAAA,WAAAF,EAAAE,GAAA,UAAAF,EAAAE,GAAA,YACAF,EAAA,GAAAG,EAAA,KAAAH,EAAAG,GAAA,WAAAH,EAAAG,GAAA,QAAAH,EAAAG,GAAA,QACAH,EAAA,IAAAI,GAAAJ,EAAAI,GAAA,OAAAJ,EAAAI,GAAA,QAAAJ,EAAAI,GAAA,SAGAC,eAxBA,GA8BAC,MAAA,SAAA3Q,EAAA+H,EAAAC,GAEA,OAAApG,KAAAoG,IAAAD,EAAAnG,KAAAmG,IAAAC,EAAAhI,KAOA4Q,gBAAA,SAAA3Q,EAAAb,GAEA,OAAAa,EAAAb,QAMAyR,UAAA,SAAAnK,EAAAoK,EAAAC,EAAAC,EAAAC,GAEA,OAAAD,GAAAtK,EAAAoK,IAAAG,EAAAD,IAAAD,EAAAD,IAMAI,KAAA,SAAAxK,EAAAyB,EAAAzH,GAEA,SAAAA,GAAAgG,EAAAhG,EAAAyH,GAMAgJ,WAAA,SAAAzK,EAAAqB,EAAAC,GAEA,OAAAtB,GAAAqB,EAAA,EACArB,GAAAsB,EAAA,GAEAtB,KAAAqB,IAAAC,EAAAD,IAEArB,GAAA,IAAAA,IAIA0K,aAAA,SAAA1K,EAAAqB,EAAAC,GAEA,OAAAtB,GAAAqB,EAAA,EACArB,GAAAsB,EAAA,GAEAtB,KAAAqB,IAAAC,EAAAD,IAEArB,QAAA,EAAAA,EAAA,SAMA2K,QAAA,SAAAC,EAAAC,GAEA,OAAAD,EAAA1P,KAAA4E,MAAA5E,KAAAC,UAAA0P,EAAAD,EAAA,KAMAE,UAAA,SAAAF,EAAAC,GAEA,OAAAD,EAAA1P,KAAAC,UAAA0P,EAAAD,IAMAG,gBAAA,SAAAC,GAEA,OAAAA,GAAA,GAAA9P,KAAAC,WAIA8P,SAAA,SAAAC,GAEA,OAAAA,EAAA5B,GAAAC,SAIA4B,SAAA,SAAAC,GAEA,OAAAA,EAAA9B,GAAAG,SAIA4B,aAAA,SAAA/R,GAEA,WAAAA,IAAA,QAAAA,GAIAgS,eAAA,SAAAhS,GAEA,OAAA4B,KAAAyE,IAAA,EAAAzE,KAAAqQ,KAAArQ,KAAAsQ,IAAAlS,GAAA4B,KAAAuQ,OAIAC,gBAAA,SAAApS,GAEA,OAAA4B,KAAAyE,IAAA,EAAAzE,KAAA4E,MAAA5E,KAAAsQ,IAAAlS,GAAA4B,KAAAuQ,QAaA,SAAAE,GAAA3L,EAAAyB,GAEA7F,KAAAoE,KAAA,EACApE,KAAA6F,KAAA,EA8eA,SAAAmK,KAEAhQ,KAAAiQ,UAEA,QACA,QACA,QACA,SAIA5N,UAAAC,OAAA,GAEAO,QAAAtC,MAAA,iFAu4BA,SAAA2P,GAAA9L,EAAAyB,EAAAC,EAAAqK,GAEAnQ,KAAAoQ,GAAAhM,GAAA,EACApE,KAAAqQ,GAAAxK,GAAA,EACA7F,KAAAsQ,GAAAxK,GAAA,EACA9F,KAAAuQ,YAAAJ,IAAA,EA6lBA,SAAAK,GAAApM,EAAAyB,EAAAC,GAEA9F,KAAAoE,KAAA,EACApE,KAAA6F,KAAA,EACA7F,KAAA8F,KAAA,EA8sBA,SAAA2K,KAEAzQ,KAAAiQ,UAEA,MACA,MACA,OAIA5N,UAAAC,OAAA,GAEAO,QAAAtC,MAAA,iFA9rFAnD,OAAAsT,iBAAAX,GAAA/R,WAEA2S,OAEAnT,IAAA,WAEA,OAAAwC,KAAAoE,GAIAwM,IAAA,SAAAlT,GAEAsC,KAAAoE,EAAA1G,IAMAmT,QAEArT,IAAA,WAEA,OAAAwC,KAAA6F,GAIA+K,IAAA,SAAAlT,GAEAsC,KAAA6F,EAAAnI,MAQAN,OAAA4D,OAAA+O,GAAA/R,WAEA8S,aAEAF,IAAA,SAAAxM,EAAAyB,GAKA,OAHA7F,KAAAoE,IACApE,KAAA6F,IAEA7F,MAIA+Q,UAAA,SAAAC,GAKA,OAHAhR,KAAAoE,EAAA4M,EACAhR,KAAA6F,EAAAmL,EAEAhR,MAIAiR,KAAA,SAAA7M,GAIA,OAFApE,KAAAoE,IAEApE,MAIAkR,KAAA,SAAArL,GAIA,OAFA7F,KAAA6F,IAEA7F,MAIAmR,aAAA,SAAA3M,EAAA9G,GAEA,OAAA8G,GAEA,OAAAxE,KAAAoE,EAAA1G,EAA0B,MAC1B,OAAAsC,KAAA6F,EAAAnI,EAA0B,MAC1B,kBAAA8C,MAAA,0BAAAgE,GAIA,OAAAxE,MAIAoR,aAAA,SAAA5M,GAEA,OAAAA,GAEA,cAAAxE,KAAAoE,EACA,cAAApE,KAAA6F,EACA,kBAAArF,MAAA,0BAAAgE,KAMA6M,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAoE,EAAApE,KAAA6F,IAIA0L,KAAA,SAAAC,GAKA,OAHAxR,KAAAoE,EAAAoN,EAAApN,EACApE,KAAA6F,EAAA2L,EAAA3L,EAEA7F,MAIAyR,IAAA,SAAAD,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,yFACA1R,KAAA2R,WAAAH,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EAEA7F,OAIA4R,UAAA,SAAAzT,GAKA,OAHA6B,KAAAoE,GAAAjG,EACA6B,KAAA6F,GAAA1H,EAEA6B,MAIA2R,WAAA,SAAAvR,EAAAC,GAKA,OAHAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EAEA7F,MAIA6R,gBAAA,SAAAL,EAAArT,GAKA,OAHA6B,KAAAoE,GAAAoN,EAAApN,EAAAjG,EACA6B,KAAA6F,GAAA2L,EAAA3L,EAAA1H,EAEA6B,MAIA8R,IAAA,SAAAN,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,yFACA1R,KAAA+R,WAAAP,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EAEA7F,OAIAgS,UAAA,SAAA7T,GAKA,OAHA6B,KAAAoE,GAAAjG,EACA6B,KAAA6F,GAAA1H,EAEA6B,MAIA+R,WAAA,SAAA3R,EAAAC,GAKA,OAHAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EAEA7F,MAIAiS,SAAA,SAAAT,GAKA,OAHAxR,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EAEA7F,MAIAkS,eAAA,SAAAlB,GAKA,OAHAhR,KAAAoE,GAAA4M,EACAhR,KAAA6F,GAAAmL,EAEAhR,MAIAmS,OAAA,SAAAX,GAKA,OAHAxR,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EAEA7F,MAIAoS,aAAA,SAAApB,GAEA,OAAAhR,KAAAkS,eAAA,EAAAlB,IAIAqB,aAAA,SAAAvV,GAEA,IAAAsH,EAAApE,KAAAoE,EAAAyB,EAAA7F,KAAA6F,EACAxH,EAAAvB,EAAAmT,SAKA,OAHAjQ,KAAAoE,EAAA/F,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GACA2B,KAAA6F,EAAAxH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAEA2B,MAIAyF,IAAA,SAAA+L,GAKA,OAHAxR,KAAAoE,EAAA9E,KAAAmG,IAAAzF,KAAAoE,EAAAoN,EAAApN,GACApE,KAAA6F,EAAAvG,KAAAmG,IAAAzF,KAAA6F,EAAA2L,EAAA3L,GAEA7F,MAIA0F,IAAA,SAAA8L,GAKA,OAHAxR,KAAAoE,EAAA9E,KAAAoG,IAAA1F,KAAAoE,EAAAoN,EAAApN,GACApE,KAAA6F,EAAAvG,KAAAoG,IAAA1F,KAAA6F,EAAA2L,EAAA3L,GAEA7F,MAIAqO,MAAA,SAAA5I,EAAAC,GAOA,OAHA1F,KAAAoE,EAAA9E,KAAAoG,IAAAD,EAAArB,EAAA9E,KAAAmG,IAAAC,EAAAtB,EAAApE,KAAAoE,IACApE,KAAA6F,EAAAvG,KAAAoG,IAAAD,EAAAI,EAAAvG,KAAAmG,IAAAC,EAAAG,EAAA7F,KAAA6F,IAEA7F,MAIAsS,aAEA7M,EAAA,IAAAsK,GACArK,EAAA,IAAAqK,GAEA,SAAAwC,EAAAC,GAKA,OAHA/M,EAAAmL,IAAA2B,KACA7M,EAAAkL,IAAA4B,KAEAxS,KAAAqO,MAAA5I,EAAAC,KAMA+M,YAAA,SAAAhN,EAAAC,GAEA,IAAApD,EAAAtC,KAAAsC,SAEA,OAAAtC,KAAAoS,aAAA9P,GAAA,GAAA4P,eAAA5S,KAAAoG,IAAAD,EAAAnG,KAAAmG,IAAAC,EAAApD,MAIA4B,MAAA,WAKA,OAHAlE,KAAAoE,EAAA9E,KAAA4E,MAAAlE,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAA4E,MAAAlE,KAAA6F,GAEA7F,MAIA2P,KAAA,WAKA,OAHA3P,KAAAoE,EAAA9E,KAAAqQ,KAAA3P,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAAqQ,KAAA3P,KAAA6F,GAEA7F,MAIA0S,MAAA,WAKA,OAHA1S,KAAAoE,EAAA9E,KAAAoT,MAAA1S,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAAoT,MAAA1S,KAAA6F,GAEA7F,MAIA2S,YAAA,WAKA,OAHA3S,KAAAoE,EAAApE,KAAAoE,EAAA,EAAA9E,KAAAqQ,KAAA3P,KAAAoE,GAAA9E,KAAA4E,MAAAlE,KAAAoE,GACApE,KAAA6F,EAAA7F,KAAA6F,EAAA,EAAAvG,KAAAqQ,KAAA3P,KAAA6F,GAAAvG,KAAA4E,MAAAlE,KAAA6F,GAEA7F,MAIA4S,OAAA,WAKA,OAHA5S,KAAAoE,GAAApE,KAAAoE,EACApE,KAAA6F,GAAA7F,KAAA6F,EAEA7F,MAIA6S,IAAA,SAAArB,GAEA,OAAAxR,KAAAoE,EAAAoN,EAAApN,EAAApE,KAAA6F,EAAA2L,EAAA3L,GAIAiN,SAAA,WAEA,OAAA9S,KAAAoE,EAAApE,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA6F,GAIAvD,OAAA,WAEA,OAAAhD,KAAAyT,KAAA/S,KAAAoE,EAAApE,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA6F,IAIAmN,gBAAA,WAEA,OAAA1T,KAAA2T,IAAAjT,KAAAoE,GAAA9E,KAAA2T,IAAAjT,KAAA6F,IAIAqN,UAAA,WAEA,OAAAlT,KAAAoS,aAAApS,KAAAsC,UAAA,IAIA6Q,MAAA,WAIA,IAAAA,EAAA7T,KAAA8T,MAAApT,KAAA6F,EAAA7F,KAAAoE,GAIA,OAFA+O,EAAA,IAAAA,GAAA,EAAA7T,KAAAsO,IAEAuF,GAIAE,WAAA,SAAA7B,GAEA,OAAAlS,KAAAyT,KAAA/S,KAAAsT,kBAAA9B,KAIA8B,kBAAA,SAAA9B,GAEA,IAAA+B,EAAAvT,KAAAoE,EAAAoN,EAAApN,EAAAoP,EAAAxT,KAAA6F,EAAA2L,EAAA3L,EACA,OAAA0N,IAAAC,KAIAC,oBAAA,SAAAjC,GAEA,OAAAlS,KAAA2T,IAAAjT,KAAAoE,EAAAoN,EAAApN,GAAA9E,KAAA2T,IAAAjT,KAAA6F,EAAA2L,EAAA3L,IAIA6N,UAAA,SAAApR,GAEA,OAAAtC,KAAAkT,YAAAhB,eAAA5P,IAIAsM,KAAA,SAAA4C,EAAAmC,GAKA,OAHA3T,KAAAoE,IAAAoN,EAAApN,EAAApE,KAAAoE,GAAAuP,EACA3T,KAAA6F,IAAA2L,EAAA3L,EAAA7F,KAAA6F,GAAA8N,EAEA3T,MAIA4T,YAAA,SAAApR,EAAAqR,EAAAF,GAEA,OAAA3T,KAAA+R,WAAA8B,EAAArR,GAAA0P,eAAAyB,GAAAlC,IAAAjP,IAIAsR,OAAA,SAAAtC,GAEA,OAAAA,EAAApN,IAAApE,KAAAoE,GAAAoN,EAAA3L,IAAA7F,KAAA6F,GAIAkO,UAAA,SAAAxO,EAAA3G,GAOA,gBALAA,MAAA,GAEAoB,KAAAoE,EAAAmB,EAAA3G,GACAoB,KAAA6F,EAAAN,EAAA3G,EAAA,GAEAoB,MAIAgU,QAAA,SAAAzO,EAAA3G,GAQA,gBANA2G,mBACA3G,MAAA,GAEA2G,EAAA3G,GAAAoB,KAAAoE,EACAmB,EAAA3G,EAAA,GAAAoB,KAAA6F,EAEAN,GAIA0O,oBAAA,SAAAC,EAAA1P,EAAA5F,GAWA,gBATAA,GAEAiE,QAAA6O,KAAA,uEAIA1R,KAAAoE,EAAA8P,EAAAC,KAAA3P,GACAxE,KAAA6F,EAAAqO,EAAAE,KAAA5P,GAEAxE,MAIAqU,aAAA,SAAAC,EAAAnB,GAEA,IAAApW,EAAAuC,KAAAiV,IAAApB,GAAAhV,EAAAmB,KAAAkV,IAAArB,GAEA/O,EAAApE,KAAAoE,EAAAkQ,EAAAlQ,EACAyB,EAAA7F,KAAA6F,EAAAyO,EAAAzO,EAKA,OAHA7F,KAAAoE,IAAArH,EAAA8I,EAAA1H,EAAAmW,EAAAlQ,EACApE,KAAA6F,EAAAzB,EAAAjG,EAAA0H,EAAA9I,EAAAuX,EAAAzO,EAEA7F,QAsCA5C,OAAA4D,OAAAgP,GAAAhS,WAEAyW,aAEA7D,IAAA,SAAA8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAA1V,KAAAiQ,SAOA,OALAyF,EAAA,GAAAhB,EAAgBgB,EAAA,GAAAf,EAAee,EAAA,GAAAd,EAAec,EAAA,IAAAb,EAC9Ca,EAAA,GAAAZ,EAAgBY,EAAA,GAAAX,EAAeW,EAAA,GAAAV,EAAeU,EAAA,IAAAT,EAC9CS,EAAA,GAAAR,EAAgBQ,EAAA,GAAAP,EAAeO,EAAA,IAAAN,EAAgBM,EAAA,IAAAL,EAC/CK,EAAA,GAAAJ,EAAgBI,EAAA,GAAAH,EAAeG,EAAA,IAAAF,EAAgBE,EAAA,IAAAD,EAE/CzV,MAIA2V,SAAA,WAWA,OATA3V,KAAA4Q,IAEA,QACA,QACA,QACA,SAIA5Q,MAIAqR,MAAA,WAEA,WAAArB,IAAA+D,UAAA/T,KAAAiQ,WAIAsB,KAAA,SAAAzU,GAEA,IAAA4Y,EAAA1V,KAAAiQ,SACA2F,EAAA9Y,EAAAmT,SAOA,OALAyF,EAAA,GAAAE,EAAA,GAAoBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GAC1DF,EAAA,GAAAE,EAAA,GAAoBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GAC1DF,EAAA,GAAAE,EAAA,GAAoBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,IAAAE,EAAA,IAAqBF,EAAA,IAAAE,EAAA,IAC5DF,EAAA,IAAAE,EAAA,IAAsBF,EAAA,IAAAE,EAAA,IAAqBF,EAAA,IAAAE,EAAA,IAAqBF,EAAA,IAAAE,EAAA,IAEhE5V,MAIA6V,aAAA,SAAA/Y,GAEA,IAAA4Y,EAAA1V,KAAAiQ,SAAA2F,EAAA9Y,EAAAmT,SAMA,OAJAyF,EAAA,IAAAE,EAAA,IACAF,EAAA,IAAAE,EAAA,IACAF,EAAA,IAAAE,EAAA,IAEA5V,MAIA8V,aAAA,SAAAC,EAAAC,EAAAC,GAMA,OAJAF,EAAAG,oBAAAlW,KAAA,GACAgW,EAAAE,oBAAAlW,KAAA,GACAiW,EAAAC,oBAAAlW,KAAA,GAEAA,MAIAmW,UAAA,SAAAJ,EAAAC,EAAAC,GASA,OAPAjW,KAAA4Q,IACAmF,EAAA3R,EAAA4R,EAAA5R,EAAA6R,EAAA7R,EAAA,EACA2R,EAAAlQ,EAAAmQ,EAAAnQ,EAAAoQ,EAAApQ,EAAA,EACAkQ,EAAAjQ,EAAAkQ,EAAAlQ,EAAAmQ,EAAAnQ,EAAA,EACA,SAGA9F,MAIAoW,iBAEA5T,EAAA,IAAAgO,GAEA,SAAA1T,GAEA,IAAA4Y,EAAA1V,KAAAiQ,SACA2F,EAAA9Y,EAAAmT,SAEAoG,EAAA,EAAA7T,EAAA0T,oBAAApZ,EAAA,GAAAwF,SACAgU,EAAA,EAAA9T,EAAA0T,oBAAApZ,EAAA,GAAAwF,SACAiU,EAAA,EAAA/T,EAAA0T,oBAAApZ,EAAA,GAAAwF,SAcA,OAZAoT,EAAA,GAAAE,EAAA,GAAAS,EACAX,EAAA,GAAAE,EAAA,GAAAS,EACAX,EAAA,GAAAE,EAAA,GAAAS,EAEAX,EAAA,GAAAE,EAAA,GAAAU,EACAZ,EAAA,GAAAE,EAAA,GAAAU,EACAZ,EAAA,GAAAE,EAAA,GAAAU,EAEAZ,EAAA,GAAAE,EAAA,GAAAW,EACAb,EAAA,GAAAE,EAAA,GAAAW,EACAb,EAAA,IAAAE,EAAA,IAAAW,EAEAvW,OAMAwW,sBAAA,SAAAC,GAEAA,KAAAC,SAEA7T,QAAAtC,MAAA,yGAIA,IAAAmV,EAAA1V,KAAAiQ,SAEA7L,EAAAqS,EAAArS,EAAAyB,EAAA4Q,EAAA5Q,EAAAC,EAAA2Q,EAAA3Q,EACA1F,EAAAd,KAAAiV,IAAAnQ,GAAA/D,EAAAf,KAAAkV,IAAApQ,GACArH,EAAAuC,KAAAiV,IAAA1O,GAAA7I,EAAAsC,KAAAkV,IAAA3O,GACAxH,EAAAiB,KAAAiV,IAAAzO,GAAAxF,EAAAhB,KAAAkV,IAAA1O,GAEA,WAAA2Q,EAAAE,MAAA,CAEA,IAAAC,EAAAxW,EAAA/B,EAAAwY,EAAAzW,EAAAE,EAAAwW,EAAAzW,EAAAhC,EAAA0Y,EAAA1W,EAAAC,EAEAoV,EAAA,GAAA3Y,EAAAsB,EACAqX,EAAA,IAAA3Y,EAAAuD,EACAoV,EAAA,GAAA1Y,EAEA0Y,EAAA,GAAAmB,EAAAC,EAAA9Z,EACA0Y,EAAA,GAAAkB,EAAAG,EAAA/Z,EACA0Y,EAAA,IAAArV,EAAAtD,EAEA2Y,EAAA,GAAAqB,EAAAH,EAAA5Z,EACA0Y,EAAA,GAAAoB,EAAAD,EAAA7Z,EACA0Y,EAAA,IAAAtV,EAAArD,OAEG,WAAA0Z,EAAAE,MAAA,CAEH,IAAAK,EAAAja,EAAAsB,EAAA4Y,EAAAla,EAAAuD,EAAA4W,EAAAla,EAAAqB,EAAA8Y,EAAAna,EAAAsD,EAEAoV,EAAA,GAAAsB,EAAAG,EAAA9W,EACAqV,EAAA,GAAAwB,EAAA7W,EAAA4W,EACAvB,EAAA,GAAAtV,EAAApD,EAEA0Y,EAAA,GAAAtV,EAAAE,EACAoV,EAAA,GAAAtV,EAAA/B,EACAqX,EAAA,IAAArV,EAEAqV,EAAA,GAAAuB,EAAA5W,EAAA6W,EACAxB,EAAA,GAAAyB,EAAAH,EAAA3W,EACAqV,EAAA,IAAAtV,EAAArD,OAEG,WAAA0Z,EAAAE,MAEHK,EAAAja,EAAAsB,EAAA4Y,EAAAla,EAAAuD,EAAA4W,EAAAla,EAAAqB,EAAA8Y,EAAAna,EAAAsD,EAEAoV,EAAA,GAAAsB,EAAAG,EAAA9W,EACAqV,EAAA,IAAAtV,EAAAE,EACAoV,EAAA,GAAAwB,EAAAD,EAAA5W,EAEAqV,EAAA,GAAAuB,EAAAC,EAAA7W,EACAqV,EAAA,GAAAtV,EAAA/B,EACAqX,EAAA,GAAAyB,EAAAH,EAAA3W,EAEAqV,EAAA,IAAAtV,EAAApD,EACA0Y,EAAA,GAAArV,EACAqV,EAAA,IAAAtV,EAAArD,OAEG,WAAA0Z,EAAAE,MAEHC,EAAAxW,EAAA/B,EAAAwY,EAAAzW,EAAAE,EAAAwW,EAAAzW,EAAAhC,EAAA0Y,EAAA1W,EAAAC,EAEAoV,EAAA,GAAA3Y,EAAAsB,EACAqX,EAAA,GAAAoB,EAAA9Z,EAAA6Z,EACAnB,EAAA,GAAAkB,EAAA5Z,EAAA+Z,EAEArB,EAAA,GAAA3Y,EAAAuD,EACAoV,EAAA,GAAAqB,EAAA/Z,EAAA4Z,EACAlB,EAAA,GAAAmB,EAAA7Z,EAAA8Z,EAEApB,EAAA,IAAA1Y,EACA0Y,EAAA,GAAArV,EAAAtD,EACA2Y,EAAA,IAAAtV,EAAArD,OAEG,WAAA0Z,EAAAE,MAAA,CAEH,IAAAS,EAAAhX,EAAArD,EAAAsa,EAAAjX,EAAApD,EAAAsa,EAAAjX,EAAAtD,EAAAwa,EAAAlX,EAAArD,EAEA0Y,EAAA,GAAA3Y,EAAAsB,EACAqX,EAAA,GAAA6B,EAAAH,EAAA9W,EACAoV,EAAA,GAAA4B,EAAAhX,EAAA+W,EAEA3B,EAAA,GAAApV,EACAoV,EAAA,GAAAtV,EAAA/B,EACAqX,EAAA,IAAArV,EAAAhC,EAEAqX,EAAA,IAAA1Y,EAAAqB,EACAqX,EAAA,GAAA2B,EAAA/W,EAAAgX,EACA5B,EAAA,IAAA0B,EAAAG,EAAAjX,MAEG,QAAAmW,EAAAE,QAEHS,EAAAhX,EAAArD,EAAAsa,EAAAjX,EAAApD,EAAAsa,EAAAjX,EAAAtD,EAAAwa,EAAAlX,EAAArD,EAEA0Y,EAAA,GAAA3Y,EAAAsB,EACAqX,EAAA,IAAApV,EACAoV,EAAA,GAAA1Y,EAAAqB,EAEAqX,EAAA,GAAA0B,EAAA9W,EAAAiX,EACA7B,EAAA,GAAAtV,EAAA/B,EACAqX,EAAA,GAAA2B,EAAA/W,EAAAgX,EAEA5B,EAAA,GAAA4B,EAAAhX,EAAA+W,EACA3B,EAAA,GAAArV,EAAAhC,EACAqX,EAAA,IAAA6B,EAAAjX,EAAA8W,GAeA,OAVA1B,EAAA,KACAA,EAAA,KACAA,EAAA,MAGAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MAEA1V,MAIAwX,2BAAA,SAAAC,GAEA,IAAA/B,EAAA1V,KAAAiQ,SAEA7L,EAAAqT,EAAArH,GAAAvK,EAAA4R,EAAApH,GAAAvK,EAAA2R,EAAAnH,GAAAH,EAAAsH,EAAAlH,GACAmH,EAAAtT,IAAAuT,EAAA9R,IAAA+R,EAAA9R,IACA+R,EAAAzT,EAAAsT,EAAAI,EAAA1T,EAAAuT,EAAAI,EAAA3T,EAAAwT,EACAI,EAAAnS,EAAA8R,EAAAM,EAAApS,EAAA+R,EAAAM,EAAApS,EAAA8R,EACAO,EAAAhI,EAAAuH,EAAAU,EAAAjI,EAAAwH,EAAAU,EAAAlI,EAAAyH,EAyBA,OAvBAlC,EAAA,MAAAsC,EAAAE,GACAxC,EAAA,GAAAoC,EAAAO,EACA3C,EAAA,GAAAqC,EAAAK,EAEA1C,EAAA,GAAAoC,EAAAO,EACA3C,EAAA,MAAAmC,EAAAK,GACAxC,EAAA,GAAAuC,EAAAE,EAEAzC,EAAA,GAAAqC,EAAAK,EACA1C,EAAA,GAAAuC,EAAAE,EACAzC,EAAA,OAAAmC,EAAAG,GAGAtC,EAAA,KACAA,EAAA,KACAA,EAAA,MAGAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MAEA1V,MAIAsY,QAEAlU,EAAA,IAAAoM,GACA3K,EAAA,IAAA2K,GACA1K,EAAA,IAAA0K,GAEA,SAAA+H,EAAAzW,EAAA0W,GAEA,IAAA9C,EAAA1V,KAAAiQ,SAyCA,OAvCAnK,EAAAiM,WAAAwG,EAAAzW,GAEA,IAAAgE,EAAAgN,aAIAhN,IAAA,GAIAA,EAAAoN,YACA9O,EAAAqU,aAAAD,EAAA1S,GAEA,IAAA1B,EAAA0O,aAIA,IAAAxT,KAAA2T,IAAAuF,EAAA1S,GAEAA,EAAA1B,GAAA,KAIA0B,KAAA,KAIAA,EAAAoN,YACA9O,EAAAqU,aAAAD,EAAA1S,IAIA1B,EAAA8O,YACArN,EAAA4S,aAAA3S,EAAA1B,GAEAsR,EAAA,GAAAtR,IAAiBsR,EAAA,GAAA7P,EAAAzB,EAAesR,EAAA,GAAA5P,EAAA1B,EAChCsR,EAAA,GAAAtR,EAAAyB,EAAiB6P,EAAA,GAAA7P,IAAe6P,EAAA,GAAA5P,EAAAD,EAChC6P,EAAA,GAAAtR,EAAA0B,EAAiB4P,EAAA,GAAA7P,EAAAC,EAAe4P,EAAA,IAAA5P,IAEhC9F,OAMAiS,SAAA,SAAAnV,EAAAa,GAEA,gBAAAA,GAEAkF,QAAA6O,KAAA,oGACA1R,KAAA0Y,iBAAA5b,EAAAa,IAIAqC,KAAA0Y,iBAAA1Y,KAAAlD,IAIA6b,YAAA,SAAA7b,GAEA,OAAAkD,KAAA0Y,iBAAA5b,EAAAkD,OAIA0Y,iBAAA,SAAAtY,EAAAC,GAEA,IAAAuW,EAAAxW,EAAA6P,SACA6G,EAAAzW,EAAA4P,SACAyF,EAAA1V,KAAAiQ,SAEA2I,EAAAhC,EAAA,GAAAiC,EAAAjC,EAAA,GAAAkC,EAAAlC,EAAA,GAAAmC,EAAAnC,EAAA,IACAoC,EAAApC,EAAA,GAAAqC,EAAArC,EAAA,GAAAsC,EAAAtC,EAAA,GAAAuC,EAAAvC,EAAA,IACAwC,EAAAxC,EAAA,GAAAyC,EAAAzC,EAAA,GAAA0C,EAAA1C,EAAA,IAAA2C,EAAA3C,EAAA,IACA4C,EAAA5C,EAAA,GAAA6C,EAAA7C,EAAA,GAAA8C,EAAA9C,EAAA,IAAA+C,EAAA/C,EAAA,IAEAgD,EAAA9C,EAAA,GAAA+C,EAAA/C,EAAA,GAAAgD,EAAAhD,EAAA,GAAAiD,EAAAjD,EAAA,IACAkD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,GAAAoD,EAAApD,EAAA,GAAAqD,EAAArD,EAAA,IACAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,IAAAyD,EAAAzD,EAAA,IACA0D,EAAA1D,EAAA,GAAA2D,EAAA3D,EAAA,GAAA4D,EAAA5D,EAAA,IAAA6D,EAAA7D,EAAA,IAsBA,OApBApB,EAAA,GAAAkD,EAAAgB,EAAAf,EAAAmB,EAAAlB,EAAAsB,EAAArB,EAAAyB,EACA9E,EAAA,GAAAkD,EAAAiB,EAAAhB,EAAAoB,EAAAnB,EAAAuB,EAAAtB,EAAA0B,EACA/E,EAAA,GAAAkD,EAAAkB,EAAAjB,EAAAqB,EAAApB,EAAAwB,EAAAvB,EAAA2B,EACAhF,EAAA,IAAAkD,EAAAmB,EAAAlB,EAAAsB,EAAArB,EAAAyB,EAAAxB,EAAA4B,EAEAjF,EAAA,GAAAsD,EAAAY,EAAAX,EAAAe,EAAAd,EAAAkB,EAAAjB,EAAAqB,EACA9E,EAAA,GAAAsD,EAAAa,EAAAZ,EAAAgB,EAAAf,EAAAmB,EAAAlB,EAAAsB,EACA/E,EAAA,GAAAsD,EAAAc,EAAAb,EAAAiB,EAAAhB,EAAAoB,EAAAnB,EAAAuB,EACAhF,EAAA,IAAAsD,EAAAe,EAAAd,EAAAkB,EAAAjB,EAAAqB,EAAApB,EAAAwB,EAEAjF,EAAA,GAAA0D,EAAAQ,EAAAP,EAAAW,EAAAV,EAAAc,EAAAb,EAAAiB,EACA9E,EAAA,GAAA0D,EAAAS,EAAAR,EAAAY,EAAAX,EAAAe,EAAAd,EAAAkB,EACA/E,EAAA,IAAA0D,EAAAU,EAAAT,EAAAa,EAAAZ,EAAAgB,EAAAf,EAAAmB,EACAhF,EAAA,IAAA0D,EAAAW,EAAAV,EAAAc,EAAAb,EAAAiB,EAAAhB,EAAAoB,EAEAjF,EAAA,GAAA8D,EAAAI,EAAAH,EAAAO,EAAAN,EAAAU,EAAAT,EAAAa,EACA9E,EAAA,GAAA8D,EAAAK,EAAAJ,EAAAQ,EAAAP,EAAAW,EAAAV,EAAAc,EACA/E,EAAA,IAAA8D,EAAAM,EAAAL,EAAAS,EAAAR,EAAAY,EAAAX,EAAAe,EACAhF,EAAA,IAAA8D,EAAAO,EAAAN,EAAAU,EAAAT,EAAAa,EAAAZ,EAAAgB,EAEA3a,MAIAkS,eAAA,SAAA/T,GAEA,IAAAuX,EAAA1V,KAAAiQ,SAOA,OALAyF,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,IAAAvX,EAAcuX,EAAA,KAAAvX,EAC3CuX,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,IAAAvX,EAAcuX,EAAA,KAAAvX,EAC3CuX,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,KAAAvX,EAAeuX,EAAA,KAAAvX,EAC5CuX,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,KAAAvX,EAAeuX,EAAA,KAAAvX,EAE5C6B,MAIA4a,uBAAA,WAEA,IAAApY,EAAA,IAAAgO,GAEA,gBAAA0D,GAEA,QAAAxX,EAAA,EAAAC,EAAAuX,EAAA2G,MAAwCne,EAAAC,EAAOD,IAE/C8F,EAAA4B,EAAA8P,EAAAC,KAAAzX,GACA8F,EAAAqD,EAAAqO,EAAAE,KAAA1X,GACA8F,EAAAsD,EAAAoO,EAAA4G,KAAApe,GAEA8F,EAAAuY,aAAA/a,MAEAkU,EAAA8G,OAAAte,EAAA8F,EAAA4B,EAAA5B,EAAAqD,EAAArD,EAAAsD,GAIA,OAAAoO,GAlBA,GAwBA+G,YAAA,WAEA,IAAAvF,EAAA1V,KAAAiQ,SAEAyE,EAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAd,EAAAc,EAAA,GAAAb,EAAAa,EAAA,IACAZ,EAAAY,EAAA,GAAAX,EAAAW,EAAA,GAAAV,EAAAU,EAAA,GAAAT,EAAAS,EAAA,IACAR,EAAAQ,EAAA,GAAAP,EAAAO,EAAA,GAAAN,EAAAM,EAAA,IAAAL,EAAAK,EAAA,IAMA,OALAA,EAAA,KAOAb,EAAAG,EAAAG,EACAP,EAAAK,EAAAE,EACAN,EAAAE,EAAAK,EACAT,EAAAM,EAAAG,EACAR,EAAAG,EAAAM,EACAV,EAAAK,EAAAK,GAZAK,EAAA,KAeAhB,EAAAM,EAAAK,EACAX,EAAAO,EAAAG,EACAP,EAAAC,EAAAM,EACAR,EAAAE,EAAAO,EACAT,EAAAK,EAAAC,EACAL,EAAAG,EAAAE,GApBAQ,EAAA,MAuBAhB,EAAAO,EAAAE,EACAT,EAAAK,EAAAM,EACAR,EAAAC,EAAAK,EACAR,EAAAG,EAAAO,EACAR,EAAAE,EAAAG,EACAP,EAAAM,EAAAC,GA5BAQ,EAAA,MA+BAd,EAAAG,EAAAG,EACAR,EAAAM,EAAAG,EACAT,EAAAK,EAAAK,EACAR,EAAAE,EAAAK,EACAR,EAAAG,EAAAM,EACAT,EAAAK,EAAAE,IAOAgG,UAAA,WAEA,IACAC,EADAzF,EAAA1V,KAAAiQ,SAWA,OARAkL,EAAAzF,EAAA,GAAgBA,EAAA,GAAAA,EAAA,GAAmBA,EAAA,GAAAyF,EACnCA,EAAAzF,EAAA,GAAgBA,EAAA,GAAAA,EAAA,GAAmBA,EAAA,GAAAyF,EACnCA,EAAAzF,EAAA,GAAgBA,EAAA,GAAAA,EAAA,GAAmBA,EAAA,GAAAyF,EAEnCA,EAAAzF,EAAA,GAAgBA,EAAA,GAAAA,EAAA,IAAoBA,EAAA,IAAAyF,EACpCA,EAAAzF,EAAA,GAAgBA,EAAA,GAAAA,EAAA,IAAoBA,EAAA,IAAAyF,EACpCA,EAAAzF,EAAA,IAAiBA,EAAA,IAAAA,EAAA,IAAqBA,EAAA,IAAAyF,EAEtCnb,MAIAob,YAAA,SAAA5J,GAEA,IAAAkE,EAAA1V,KAAAiQ,SAMA,OAJAyF,EAAA,IAAAlE,EAAApN,EACAsR,EAAA,IAAAlE,EAAA3L,EACA6P,EAAA,IAAAlE,EAAA1L,EAEA9F,MAIAqb,WAAA,SAAAve,EAAAwe,GAGA,IAAA5F,EAAA1V,KAAAiQ,SACA2F,EAAA9Y,EAAAmT,SAEAyE,EAAAkB,EAAA,GAAAd,EAAAc,EAAA,GAAAV,EAAAU,EAAA,GAAAN,EAAAM,EAAA,GACAjB,EAAAiB,EAAA,GAAAb,EAAAa,EAAA,GAAAT,EAAAS,EAAA,GAAAL,EAAAK,EAAA,GACAhB,EAAAgB,EAAA,GAAAZ,EAAAY,EAAA,GAAAR,EAAAQ,EAAA,IAAAJ,EAAAI,EAAA,IACAf,EAAAe,EAAA,IAAAX,EAAAW,EAAA,IAAAP,EAAAO,EAAA,IAAAH,EAAAG,EAAA,IAEA2F,EAAAvG,EAAAK,EAAAE,EAAAN,EAAAG,EAAAG,EAAAN,EAAAE,EAAAK,EAAAT,EAAAM,EAAAG,EAAAR,EAAAG,EAAAM,EAAAV,EAAAK,EAAAK,EACA+F,EAAA3G,EAAAO,EAAAG,EAAAX,EAAAS,EAAAE,EAAAV,EAAAM,EAAAK,EAAAb,EAAAU,EAAAG,EAAAZ,EAAAO,EAAAM,EAAAd,EAAAS,EAAAK,EACAgG,EAAA7G,EAAAK,EAAAM,EAAAV,EAAAG,EAAAO,EAAAV,EAAAE,EAAAS,EAAAb,EAAAM,EAAAO,EAAAZ,EAAAG,EAAAU,EAAAd,EAAAK,EAAAS,EACAiG,EAAA7G,EAAAG,EAAAG,EAAAP,EAAAK,EAAAE,EAAAN,EAAAE,EAAAK,EAAAT,EAAAM,EAAAG,EAAAR,EAAAG,EAAAM,EAAAV,EAAAK,EAAAK,EAEAsG,EAAAjH,EAAA6G,EAAAzG,EAAA0G,EAAAtG,EAAAuG,EAAAnG,EAAAoG,EAEA,OAAAC,EAAA,CAEA,IAAAC,EAAA,qEAEA,QAAAN,EAEA,UAAA9a,MAAAob,GAQA,OAJA/Y,QAAA6O,KAAAkK,GAIA5b,KAAA2V,WAIA,IAAAkG,EAAA,EAAAF,EAsBA,OApBAjG,EAAA,GAAA6F,EAAAM,EACAnG,EAAA,IAAAT,EAAAG,EAAAE,EAAAN,EAAAK,EAAAC,EAAAL,EAAAC,EAAAM,EAAAV,EAAAO,EAAAG,EAAAR,EAAAE,EAAAO,EAAAX,EAAAM,EAAAK,GAAAoG,EACAnG,EAAA,IAAAX,EAAAM,EAAAC,EAAAL,EAAAE,EAAAG,EAAAL,EAAAC,EAAAK,EAAAT,EAAAO,EAAAE,EAAAR,EAAAG,EAAAO,EAAAX,EAAAK,EAAAM,GAAAoG,EACAnG,EAAA,IAAAV,EAAAG,EAAAG,EAAAP,EAAAK,EAAAE,EAAAN,EAAAE,EAAAK,EAAAT,EAAAM,EAAAG,EAAAR,EAAAG,EAAAM,EAAAV,EAAAK,EAAAK,GAAAqG,EAEAnG,EAAA,GAAA8F,EAAAK,EACAnG,EAAA,IAAAd,EAAAS,EAAAC,EAAAT,EAAAO,EAAAE,EAAAT,EAAAK,EAAAM,EAAAd,EAAAW,EAAAG,EAAAZ,EAAAM,EAAAO,EAAAf,EAAAU,EAAAK,GAAAoG,EACAnG,EAAA,IAAAb,EAAAM,EAAAG,EAAAX,EAAAU,EAAAC,EAAAT,EAAAK,EAAAK,EAAAb,EAAAW,EAAAE,EAAAZ,EAAAO,EAAAO,EAAAf,EAAAS,EAAAM,GAAAoG,EACAnG,EAAA,IAAAf,EAAAS,EAAAE,EAAAV,EAAAO,EAAAG,EAAAV,EAAAM,EAAAK,EAAAb,EAAAU,EAAAG,EAAAZ,EAAAO,EAAAM,EAAAd,EAAAS,EAAAK,GAAAqG,EAEAnG,EAAA,GAAA+F,EAAAI,EACAnG,EAAA,IAAAb,EAAAG,EAAAM,EAAAV,EAAAK,EAAAK,EAAAT,EAAAC,EAAAU,EAAAd,EAAAO,EAAAO,EAAAZ,EAAAE,EAAAW,EAAAf,EAAAM,EAAAS,GAAAoG,EACAnG,EAAA,KAAAf,EAAAM,EAAAK,EAAAT,EAAAE,EAAAO,EAAAT,EAAAC,EAAAS,EAAAb,EAAAO,EAAAM,EAAAZ,EAAAG,EAAAW,EAAAf,EAAAK,EAAAU,GAAAoG,EACAnG,EAAA,KAAAd,EAAAG,EAAAO,EAAAX,EAAAK,EAAAM,EAAAV,EAAAE,EAAAS,EAAAb,EAAAM,EAAAO,EAAAZ,EAAAG,EAAAU,EAAAd,EAAAK,EAAAS,GAAAqG,EAEAnG,EAAA,IAAAgG,EAAAG,EACAnG,EAAA,KAAAd,EAAAK,EAAAC,EAAAL,EAAAG,EAAAE,EAAAL,EAAAC,EAAAM,EAAAV,EAAAO,EAAAG,EAAAR,EAAAE,EAAAO,EAAAX,EAAAM,EAAAK,GAAAwG,EACAnG,EAAA,KAAAb,EAAAE,EAAAG,EAAAP,EAAAM,EAAAC,EAAAL,EAAAC,EAAAK,EAAAT,EAAAO,EAAAE,EAAAR,EAAAG,EAAAO,EAAAX,EAAAK,EAAAM,GAAAwG,EACAnG,EAAA,KAAAf,EAAAK,EAAAE,EAAAN,EAAAG,EAAAG,EAAAN,EAAAE,EAAAK,EAAAT,EAAAM,EAAAG,EAAAR,EAAAG,EAAAM,EAAAV,EAAAK,EAAAK,GAAAyG,EAEA7b,MAIA8b,MAAA,SAAAtK,GAEA,IAAAkE,EAAA1V,KAAAiQ,SACA7L,EAAAoN,EAAApN,EAAAyB,EAAA2L,EAAA3L,EAAAC,EAAA0L,EAAA1L,EAOA,OALA4P,EAAA,IAAAtR,EAAesR,EAAA,IAAA7P,EAAc6P,EAAA,IAAA5P,EAC7B4P,EAAA,IAAAtR,EAAesR,EAAA,IAAA7P,EAAc6P,EAAA,IAAA5P,EAC7B4P,EAAA,IAAAtR,EAAesR,EAAA,IAAA7P,EAAc6P,EAAA,KAAA5P,EAC7B4P,EAAA,IAAAtR,EAAesR,EAAA,IAAA7P,EAAc6P,EAAA,KAAA5P,EAE7B9F,MAIA+b,kBAAA,WAEA,IAAArG,EAAA1V,KAAAiQ,SAEA+L,EAAAtG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAuG,EAAAvG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAwG,EAAAxG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAEA,OAAApW,KAAAyT,KAAAzT,KAAAoG,IAAAsW,EAAAC,EAAAC,KAIAC,gBAAA,SAAA/X,EAAAyB,EAAAC,GAWA,OATA9F,KAAA4Q,IAEA,MAAAxM,EACA,MAAAyB,EACA,MAAAC,EACA,SAIA9F,MAIAoc,cAAA,SAAAC,GAEA,IAAAtf,EAAAuC,KAAAiV,IAAA8H,GAAAle,EAAAmB,KAAAkV,IAAA6H,GAWA,OATArc,KAAA4Q,IAEA,QACA,EAAA7T,GAAAoB,EAAA,EACA,EAAAA,EAAApB,EAAA,EACA,SAIAiD,MAIAsc,cAAA,SAAAD,GAEA,IAAAtf,EAAAuC,KAAAiV,IAAA8H,GAAAle,EAAAmB,KAAAkV,IAAA6H,GAWA,OATArc,KAAA4Q,IAEA7T,EAAA,EAAAoB,EAAA,EACA,SACAA,EAAA,EAAApB,EAAA,EACA,SAIAiD,MAIAuc,cAAA,SAAAF,GAEA,IAAAtf,EAAAuC,KAAAiV,IAAA8H,GAAAle,EAAAmB,KAAAkV,IAAA6H,GAWA,OATArc,KAAA4Q,IAEA7T,GAAAoB,EAAA,IACAA,EAAApB,EAAA,IACA,QACA,SAIAiD,MAIAwc,iBAAA,SAAAC,EAAAtJ,GAIA,IAAApW,EAAAuC,KAAAiV,IAAApB,GACAhV,EAAAmB,KAAAkV,IAAArB,GACA/U,EAAA,EAAArB,EACAqH,EAAAqY,EAAArY,EAAAyB,EAAA4W,EAAA5W,EAAAC,EAAA2W,EAAA3W,EACA4W,EAAAte,EAAAgG,EAAAuY,EAAAve,EAAAyH,EAWA,OATA7F,KAAA4Q,IAEA8L,EAAAtY,EAAArH,EAAA2f,EAAA7W,EAAA1H,EAAA2H,EAAA4W,EAAA5W,EAAA3H,EAAA0H,EAAA,EACA6W,EAAA7W,EAAA1H,EAAA2H,EAAA6W,EAAA9W,EAAA9I,EAAA4f,EAAA7W,EAAA3H,EAAAiG,EAAA,EACAsY,EAAA5W,EAAA3H,EAAA0H,EAAA8W,EAAA7W,EAAA3H,EAAAiG,EAAAhG,EAAA0H,IAAA/I,EAAA,EACA,SAIAiD,MAIA4c,UAAA,SAAAxY,EAAAyB,EAAAC,GAWA,OATA9F,KAAA4Q,IAEAxM,EAAA,MACA,EAAAyB,EAAA,IACA,IAAAC,EAAA,EACA,SAIA9F,MAIA6c,UAAA,SAAAzY,EAAAyB,EAAAC,GAWA,OATA9F,KAAA4Q,IAEA,EAAA/K,EAAAC,EAAA,EACA1B,EAAA,EAAA0B,EAAA,EACA1B,EAAAyB,EAAA,IACA,SAIA7F,MAIA8c,QAAA,SAAAC,EAAAhX,EAAA+V,GAMA,OAJA9b,KAAAwX,2BAAAzR,GACA/F,KAAA8b,SACA9b,KAAAob,YAAA2B,GAEA/c,MAIAgd,WAEArX,EAAA,IAAA6K,GACA5K,EAAA,IAAAoK,GAEA,SAAA+M,EAAAhX,EAAA+V,GAEA,IAAApG,EAAA1V,KAAAiQ,SAEAgN,EAAAtX,EAAAiL,IAAA8E,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAApT,SACA4a,EAAAvX,EAAAiL,IAAA8E,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAApT,SACA6a,EAAAxX,EAAAiL,IAAA8E,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAApT,SAGAtC,KAAAib,cACA,IAAAgC,MAEAF,EAAA3Y,EAAAsR,EAAA,IACAqH,EAAAlX,EAAA6P,EAAA,IACAqH,EAAAjX,EAAA4P,EAAA,IAGA9P,EAAA2L,KAAAvR,MAEA,IAAAod,EAAA,EAAAH,EACAI,EAAA,EAAAH,EACAI,EAAA,EAAAH,EAoBA,OAlBAvX,EAAAqK,SAAA,IAAAmN,EACAxX,EAAAqK,SAAA,IAAAmN,EACAxX,EAAAqK,SAAA,IAAAmN,EAEAxX,EAAAqK,SAAA,IAAAoN,EACAzX,EAAAqK,SAAA,IAAAoN,EACAzX,EAAAqK,SAAA,IAAAoN,EAEAzX,EAAAqK,SAAA,IAAAqN,EACA1X,EAAAqK,SAAA,IAAAqN,EACA1X,EAAAqK,SAAA,KAAAqN,EAEAvX,EAAAwX,sBAAA3X,GAEAkW,EAAA1X,EAAA6Y,EACAnB,EAAAjW,EAAAqX,EACApB,EAAAhW,EAAAqX,EAEAnd,OAMAwd,gBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,YAEAA,GAEAjb,QAAA6O,KAAA,wGAIA,IAAAgE,EAAA1V,KAAAiQ,SACA7L,EAAA,EAAAyZ,GAAAH,EAAAD,GACA5X,EAAA,EAAAgY,GAAAF,EAAAC,GAEAxd,GAAAsd,EAAAD,IAAAC,EAAAD,GACApd,GAAAsd,EAAAC,IAAAD,EAAAC,GACA7gB,IAAA+gB,EAAAD,IAAAC,EAAAD,GACA7gB,GAAA,EAAA8gB,EAAAD,GAAAC,EAAAD,GAOA,OALAnI,EAAA,GAAAtR,EAAcsR,EAAA,KAAaA,EAAA,GAAAtV,EAAasV,EAAA,MACxCA,EAAA,KAAcA,EAAA,GAAA7P,EAAa6P,EAAA,GAAArV,EAAaqV,EAAA,MACxCA,EAAA,KAAcA,EAAA,KAAaA,EAAA,IAAA3Y,EAAc2Y,EAAA,IAAA1Y,EACzC0Y,EAAA,KAAcA,EAAA,KAAaA,EAAA,OAAgBA,EAAA,MAE3C1V,MAIA+d,iBAAA,SAAAN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAApI,EAAA1V,KAAAiQ,SACAE,EAAA,GAAAuN,EAAAD,GACAO,EAAA,GAAAL,EAAAC,GACA1f,EAAA,GAAA4f,EAAAD,GAEAzZ,GAAAsZ,EAAAD,GAAAtN,EACAtK,GAAA8X,EAAAC,GAAAI,EACAlY,GAAAgY,EAAAD,GAAA3f,EAOA,OALAwX,EAAA,KAAAvF,EAAkBuF,EAAA,KAAaA,EAAA,KAAaA,EAAA,KAAAtR,EAC5CsR,EAAA,KAAcA,EAAA,KAAAsI,EAAiBtI,EAAA,KAAaA,EAAA,KAAA7P,EAC5C6P,EAAA,KAAcA,EAAA,KAAaA,EAAA,OAAAxX,EAAoBwX,EAAA,KAAA5P,EAC/C4P,EAAA,KAAcA,EAAA,KAAaA,EAAA,MAAcA,EAAA,MAEzC1V,MAIA8T,OAAA,SAAAlO,GAKA,IAHA,IAAA8P,EAAA1V,KAAAiQ,SACA2F,EAAAhQ,EAAAqK,SAEAvT,EAAA,EAAkBA,EAAA,GAAQA,IAE1B,GAAAgZ,EAAAhZ,KAAAkZ,EAAAlZ,GAAA,SAIA,UAIAqX,UAAA,SAAAxO,EAAA3G,YAEAA,MAAA,GAEA,QAAAlC,EAAA,EAAkBA,EAAA,GAAQA,IAE1BsD,KAAAiQ,SAAAvT,GAAA6I,EAAA7I,EAAAkC,GAIA,OAAAoB,MAIAgU,QAAA,SAAAzO,EAAA3G,YAEA2G,mBACA3G,MAAA,GAEA,IAAA8W,EAAA1V,KAAAiQ,SAsBA,OApBA1K,EAAA3G,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GAEAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GAEAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,IAAA8W,EAAA,IACAnQ,EAAA3G,EAAA,IAAA8W,EAAA,IAEAnQ,EAAA3G,EAAA,IAAA8W,EAAA,IACAnQ,EAAA3G,EAAA,IAAA8W,EAAA,IACAnQ,EAAA3G,EAAA,IAAA8W,EAAA,IACAnQ,EAAA3G,EAAA,IAAA8W,EAAA,IAEAnQ,KAsBAnI,OAAA4D,OAAAkP,IAEA+N,MAAA,SAAAC,EAAAC,EAAAC,EAAAhgB,GAEA,OAAAggB,EAAA7M,KAAA2M,GAAAD,MAAAE,EAAA/f,IAIAigB,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvgB,GAIA,IAAAwgB,EAAAJ,EAAAC,EAAA,GACAI,EAAAL,EAAAC,EAAA,GACAK,EAAAN,EAAAC,EAAA,GACAM,EAAAP,EAAAC,EAAA,GAEAO,EAAAN,EAAAC,EAAA,GACAM,EAAAP,EAAAC,EAAA,GACAO,EAAAR,EAAAC,EAAA,GACAQ,EAAAT,EAAAC,EAAA,GAEA,GAAAI,IAAAI,GAAAP,IAAAI,GAAAH,IAAAI,GAAAH,IAAAI,EAAA,CAEA,IAAA/gB,EAAA,EAAAC,EAEAmW,EAAAqK,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAEAC,EAAA7K,GAAA,OACA8K,EAAA,EAAA9K,IAGA,GAAA8K,EAAAxb,OAAAC,QAAA,CAEA,IAAA0Q,EAAAlV,KAAAyT,KAAAsM,GACAC,EAAAhgB,KAAA8T,MAAAoB,EAAAD,EAAA6K,GAEAjhB,EAAAmB,KAAAkV,IAAArW,EAAAmhB,GAAA9K,EACApW,EAAAkB,KAAAkV,IAAApW,EAAAkhB,GAAA9K,EAIA,IAAA+K,EAAAnhB,EAAAghB,EAQA,GANAR,IAAAzgB,EAAA6gB,EAAAO,EACAV,IAAA1gB,EAAA8gB,EAAAM,EACAT,IAAA3gB,EAAA+gB,EAAAK,EACAR,IAAA5gB,EAAAghB,EAAAI,EAGAphB,IAAA,EAAAC,EAAA,CAEA,IAAAkC,EAAA,EAAAhB,KAAAyT,KAAA6L,IAAAC,IAAAC,IAAAC,KAEAH,GAAAte,EACAue,GAAAve,EACAwe,GAAAxe,EACAye,GAAAze,GAMAge,EAAAC,GAAAK,EACAN,EAAAC,EAAA,GAAAM,EACAP,EAAAC,EAAA,GAAAO,EACAR,EAAAC,EAAA,GAAAQ,KAMA3hB,OAAAsT,iBAAAR,GAAAlS,WAEAoG,GAEA5G,IAAA,WAEA,OAAAwC,KAAAoQ,IAIAQ,IAAA,SAAAlT,GAEAsC,KAAAoQ,GAAA1S,EACAsC,KAAAwf,qBAMA3Z,GAEArI,IAAA,WAEA,OAAAwC,KAAAqQ,IAIAO,IAAA,SAAAlT,GAEAsC,KAAAqQ,GAAA3S,EACAsC,KAAAwf,qBAMA1Z,GAEAtI,IAAA,WAEA,OAAAwC,KAAAsQ,IAIAM,IAAA,SAAAlT,GAEAsC,KAAAsQ,GAAA5S,EACAsC,KAAAwf,qBAMArP,GAEA3S,IAAA,WAEA,OAAAwC,KAAAuQ,IAIAK,IAAA,SAAAlT,GAEAsC,KAAAuQ,GAAA7S,EACAsC,KAAAwf,uBAQApiB,OAAA4D,OAAAkP,GAAAlS,WAEA4S,IAAA,SAAAxM,EAAAyB,EAAAC,EAAAqK,GASA,OAPAnQ,KAAAoQ,GAAAhM,EACApE,KAAAqQ,GAAAxK,EACA7F,KAAAsQ,GAAAxK,EACA9F,KAAAuQ,GAAAJ,EAEAnQ,KAAAwf,mBAEAxf,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAoQ,GAAApQ,KAAAqQ,GAAArQ,KAAAsQ,GAAAtQ,KAAAuQ,KAIAgB,KAAA,SAAAxL,GASA,OAPA/F,KAAAoQ,GAAArK,EAAA3B,EACApE,KAAAqQ,GAAAtK,EAAAF,EACA7F,KAAAsQ,GAAAvK,EAAAD,EACA9F,KAAAuQ,GAAAxK,EAAAoK,EAEAnQ,KAAAwf,mBAEAxf,MAIAyf,aAAA,SAAAhJ,EAAAiJ,GAEA,IAAAjJ,MAAAC,QAEA,UAAAlW,MAAA,oGAIA,IAAA4D,EAAAqS,EAAArG,GAAAvK,EAAA4Q,EAAApG,GAAAvK,EAAA2Q,EAAAnG,GAAAqG,EAAAF,EAAAE,MAMApC,EAAAjV,KAAAiV,IACAC,EAAAlV,KAAAkV,IAEAmL,EAAApL,EAAAnQ,EAAA,GACAwb,EAAArL,EAAA1O,EAAA,GACAga,EAAAtL,EAAAzO,EAAA,GAEAga,EAAAtL,EAAApQ,EAAA,GACA2b,EAAAvL,EAAA3O,EAAA,GACAma,EAAAxL,EAAA1O,EAAA,GAgDA,MA9CA,QAAA6Q,GAEA3W,KAAAoQ,GAAA0P,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAhgB,KAAAqQ,GAAAsP,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACAhgB,KAAAsQ,GAAAqP,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACA7f,KAAAuQ,GAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAArJ,GAEH3W,KAAAoQ,GAAA0P,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAhgB,KAAAqQ,GAAAsP,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACAhgB,KAAAsQ,GAAAqP,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACA7f,KAAAuQ,GAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAArJ,GAEH3W,KAAAoQ,GAAA0P,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAhgB,KAAAqQ,GAAAsP,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACAhgB,KAAAsQ,GAAAqP,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACA7f,KAAAuQ,GAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAArJ,GAEH3W,KAAAoQ,GAAA0P,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAhgB,KAAAqQ,GAAAsP,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACAhgB,KAAAsQ,GAAAqP,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACA7f,KAAAuQ,GAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAArJ,GAEH3W,KAAAoQ,GAAA0P,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAhgB,KAAAqQ,GAAAsP,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACAhgB,KAAAsQ,GAAAqP,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACA7f,KAAAuQ,GAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEG,QAAArJ,IAEH3W,KAAAoQ,GAAA0P,EAAAF,EAAAC,EAAAF,EAAAI,EAAAC,EACAhgB,KAAAqQ,GAAAsP,EAAAI,EAAAF,EAAAC,EAAAF,EAAAI,EACAhgB,KAAAsQ,GAAAqP,EAAAC,EAAAI,EAAAF,EAAAC,EAAAF,EACA7f,KAAAuQ,GAAAoP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,QAIAN,GAAA1f,KAAAwf,mBAEAxf,MAIAigB,iBAAA,SAAAxD,EAAAtJ,GAMA,IAAA+M,EAAA/M,EAAA,EAAAhV,EAAAmB,KAAAkV,IAAA0L,GASA,OAPAlgB,KAAAoQ,GAAAqM,EAAArY,EAAAjG,EACA6B,KAAAqQ,GAAAoM,EAAA5W,EAAA1H,EACA6B,KAAAsQ,GAAAmM,EAAA3W,EAAA3H,EACA6B,KAAAuQ,GAAAjR,KAAAiV,IAAA2L,GAEAlgB,KAAAwf,mBAEAxf,MAIAud,sBAAA,SAAAzgB,GAMA,IAOAqB,EAPAuX,EAAA5Y,EAAAmT,SAEAkQ,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAA2K,EAAA3K,EAAA,GACA4K,EAAA5K,EAAA,GAAA6K,EAAA7K,EAAA,GAAA8K,EAAA9K,EAAA,GACA+K,EAAA/K,EAAA,GAAAgL,EAAAhL,EAAA,GAAAiL,EAAAjL,EAAA,IAEAkL,EAAAT,EAAAI,EAAAI,EA2CA,OAxCAC,EAAA,GAEAziB,EAAA,GAAAmB,KAAAyT,KAAA6N,EAAA,GAEA5gB,KAAAuQ,GAAA,IAAApS,EACA6B,KAAAoQ,IAAAsQ,EAAAF,GAAAriB,EACA6B,KAAAqQ,IAAAgQ,EAAAI,GAAAtiB,EACA6B,KAAAsQ,IAAAgQ,EAAAF,GAAAjiB,GAEGgiB,EAAAI,GAAAJ,EAAAQ,GAEHxiB,EAAA,EAAAmB,KAAAyT,KAAA,EAAAoN,EAAAI,EAAAI,GAEA3gB,KAAAuQ,IAAAmQ,EAAAF,GAAAriB,EACA6B,KAAAoQ,GAAA,IAAAjS,EACA6B,KAAAqQ,IAAA+P,EAAAE,GAAAniB,EACA6B,KAAAsQ,IAAA+P,EAAAI,GAAAtiB,GAEGoiB,EAAAI,GAEHxiB,EAAA,EAAAmB,KAAAyT,KAAA,EAAAwN,EAAAJ,EAAAQ,GAEA3gB,KAAAuQ,IAAA8P,EAAAI,GAAAtiB,EACA6B,KAAAoQ,IAAAgQ,EAAAE,GAAAniB,EACA6B,KAAAqQ,GAAA,IAAAlS,EACA6B,KAAAsQ,IAAAkQ,EAAAE,GAAAviB,IAIAA,EAAA,EAAAmB,KAAAyT,KAAA,EAAA4N,EAAAR,EAAAI,GAEAvgB,KAAAuQ,IAAA+P,EAAAF,GAAAjiB,EACA6B,KAAAoQ,IAAAiQ,EAAAI,GAAAtiB,EACA6B,KAAAqQ,IAAAmQ,EAAAE,GAAAviB,EACA6B,KAAAsQ,GAAA,IAAAnS,GAIA6B,KAAAwf,mBAEAxf,MAIA6gB,mBAAA,WAIA,IACApjB,EADA+E,EAAA,IAAAgO,GAKA,gBAAAsQ,EAAAC,GA+BA,gBA7BAve,MAAA,IAAAgO,KAEA/S,EAAAqjB,EAAAjO,IAAAkO,GAAA,GANA,MAUAtjB,EAAA,EAEA6B,KAAA2T,IAAA6N,EAAA1c,GAAA9E,KAAA2T,IAAA6N,EAAAhb,GAEAtD,EAAAoO,KAAAkQ,EAAAjb,EAAAib,EAAA1c,EAAA,GAIA5B,EAAAoO,IAAA,GAAAkQ,EAAAhb,EAAAgb,EAAAjb,IAMArD,EAAAiW,aAAAqI,EAAAC,GAIA/gB,KAAAoQ,GAAA5N,EAAA4B,EACApE,KAAAqQ,GAAA7N,EAAAqD,EACA7F,KAAAsQ,GAAA9N,EAAAsD,EACA9F,KAAAuQ,GAAA9S,EAEAuC,KAAAkT,aAxCA,GA8CA8N,QAAA,WAIA,OAAAhhB,KAAAihB,aAIAA,UAAA,WAQA,OANAjhB,KAAAoQ,KAAA,EACApQ,KAAAqQ,KAAA,EACArQ,KAAAsQ,KAAA,EAEAtQ,KAAAwf,mBAEAxf,MAIA6S,IAAA,SAAArB,GAEA,OAAAxR,KAAAoQ,GAAAoB,EAAApB,GAAApQ,KAAAqQ,GAAAmB,EAAAnB,GAAArQ,KAAAsQ,GAAAkB,EAAAlB,GAAAtQ,KAAAuQ,GAAAiB,EAAAjB,IAIAuC,SAAA,WAEA,OAAA9S,KAAAoQ,GAAApQ,KAAAoQ,GAAApQ,KAAAqQ,GAAArQ,KAAAqQ,GAAArQ,KAAAsQ,GAAAtQ,KAAAsQ,GAAAtQ,KAAAuQ,GAAAvQ,KAAAuQ,IAIAjO,OAAA,WAEA,OAAAhD,KAAAyT,KAAA/S,KAAAoQ,GAAApQ,KAAAoQ,GAAApQ,KAAAqQ,GAAArQ,KAAAqQ,GAAArQ,KAAAsQ,GAAAtQ,KAAAsQ,GAAAtQ,KAAAuQ,GAAAvQ,KAAAuQ,KAIA2C,UAAA,WAEA,IAAAvW,EAAAqD,KAAAsC,SAsBA,OApBA,IAAA3F,GAEAqD,KAAAoQ,GAAA,EACApQ,KAAAqQ,GAAA,EACArQ,KAAAsQ,GAAA,EACAtQ,KAAAuQ,GAAA,IAIA5T,EAAA,EAAAA,EAEAqD,KAAAoQ,GAAApQ,KAAAoQ,GAAAzT,EACAqD,KAAAqQ,GAAArQ,KAAAqQ,GAAA1T,EACAqD,KAAAsQ,GAAAtQ,KAAAsQ,GAAA3T,EACAqD,KAAAuQ,GAAAvQ,KAAAuQ,GAAA5T,GAIAqD,KAAAwf,mBAEAxf,MAIAiS,SAAA,SAAAwF,EAAAvZ,GAEA,gBAAAA,GAEA2E,QAAA6O,KAAA,0GACA1R,KAAAkhB,oBAAAzJ,EAAAvZ,IAIA8B,KAAAkhB,oBAAAlhB,KAAAyX,IAIAkB,YAAA,SAAAlB,GAEA,OAAAzX,KAAAkhB,oBAAAzJ,EAAAzX,OAIAkhB,oBAAA,SAAA9gB,EAAAC,GAIA,IAAA8gB,EAAA/gB,EAAAgQ,GAAAgR,EAAAhhB,EAAAiQ,GAAAgR,EAAAjhB,EAAAkQ,GAAAgR,EAAAlhB,EAAAmQ,GACAgR,EAAAlhB,EAAA+P,GAAAoR,EAAAnhB,EAAAgQ,GAAAoR,EAAAphB,EAAAiQ,GAAAoR,EAAArhB,EAAAkQ,GASA,OAPAvQ,KAAAoQ,GAAA+Q,EAAAO,EAAAJ,EAAAC,EAAAH,EAAAK,EAAAJ,EAAAG,EACAxhB,KAAAqQ,GAAA+Q,EAAAM,EAAAJ,EAAAE,EAAAH,EAAAE,EAAAJ,EAAAM,EACAzhB,KAAAsQ,GAAA+Q,EAAAK,EAAAJ,EAAAG,EAAAN,EAAAK,EAAAJ,EAAAG,EACAvhB,KAAAuQ,GAAA+Q,EAAAI,EAAAP,EAAAI,EAAAH,EAAAI,EAAAH,EAAAI,EAEAzhB,KAAAwf,mBAEAxf,MAIAie,MAAA,SAAAE,EAAA/f,GAEA,OAAAA,EAAA,OAAA4B,KACA,OAAA5B,EAAA,OAAA4B,KAAAuR,KAAA4M,GAEA,IAAA/Z,EAAApE,KAAAoQ,GAAAvK,EAAA7F,KAAAqQ,GAAAvK,EAAA9F,KAAAsQ,GAAAH,EAAAnQ,KAAAuQ,GAIAoR,EAAAxR,EAAAgO,EAAA5N,GAAAnM,EAAA+Z,EAAA/N,GAAAvK,EAAAsY,EAAA9N,GAAAvK,EAAAqY,EAAA7N,GAiBA,GAfAqR,EAAA,GAEA3hB,KAAAuQ,IAAA4N,EAAA5N,GACAvQ,KAAAoQ,IAAA+N,EAAA/N,GACApQ,KAAAqQ,IAAA8N,EAAA9N,GACArQ,KAAAsQ,IAAA6N,EAAA7N,GAEAqR,MAIA3hB,KAAAuR,KAAA4M,GAIAwD,GAAA,EAOA,OALA3hB,KAAAuQ,GAAAJ,EACAnQ,KAAAoQ,GAAAhM,EACApE,KAAAqQ,GAAAxK,EACA7F,KAAAsQ,GAAAxK,EAEA9F,KAIA,IAAA4hB,EAAAtiB,KAAAyT,KAAA,EAAA4O,KAEA,GAAAriB,KAAA2T,IAAA2O,GAAA,KAOA,OALA5hB,KAAAuQ,GAAA,IAAAJ,EAAAnQ,KAAAuQ,IACAvQ,KAAAoQ,GAAA,IAAAhM,EAAApE,KAAAoQ,IACApQ,KAAAqQ,GAAA,IAAAxK,EAAA7F,KAAAqQ,IACArQ,KAAAsQ,GAAA,IAAAxK,EAAA9F,KAAAsQ,IAEAtQ,KAIA,IAAA6hB,EAAAviB,KAAA8T,MAAAwO,EAAAD,GACAG,EAAAxiB,KAAAkV,KAAA,EAAApW,GAAAyjB,GAAAD,EACAG,EAAAziB,KAAAkV,IAAApW,EAAAyjB,GAAAD,EASA,OAPA5hB,KAAAuQ,GAAAJ,EAAA2R,EAAA9hB,KAAAuQ,GAAAwR,EACA/hB,KAAAoQ,GAAAhM,EAAA0d,EAAA9hB,KAAAoQ,GAAA2R,EACA/hB,KAAAqQ,GAAAxK,EAAAic,EAAA9hB,KAAAqQ,GAAA0R,EACA/hB,KAAAsQ,GAAAxK,EAAAgc,EAAA9hB,KAAAsQ,GAAAyR,EAEA/hB,KAAAwf,mBAEAxf,MAIA8T,OAAA,SAAA/N,GAEA,OAAAA,EAAAqK,KAAApQ,KAAAoQ,IAAArK,EAAAsK,KAAArQ,KAAAqQ,IAAAtK,EAAAuK,KAAAtQ,KAAAsQ,IAAAvK,EAAAwK,KAAAvQ,KAAAuQ,IAIAwD,UAAA,SAAAxO,EAAA3G,GAWA,gBATAA,MAAA,GAEAoB,KAAAoQ,GAAA7K,EAAA3G,GACAoB,KAAAqQ,GAAA9K,EAAA3G,EAAA,GACAoB,KAAAsQ,GAAA/K,EAAA3G,EAAA,GACAoB,KAAAuQ,GAAAhL,EAAA3G,EAAA,GAEAoB,KAAAwf,mBAEAxf,MAIAgU,QAAA,SAAAzO,EAAA3G,GAUA,gBARA2G,mBACA3G,MAAA,GAEA2G,EAAA3G,GAAAoB,KAAAoQ,GACA7K,EAAA3G,EAAA,GAAAoB,KAAAqQ,GACA9K,EAAA3G,EAAA,GAAAoB,KAAAsQ,GACA/K,EAAA3G,EAAA,GAAAoB,KAAAuQ,GAEAhL,GAIAyc,SAAA,SAAAC,GAIA,OAFAjiB,KAAAwf,iBAAAyC,EAEAjiB,MAIAwf,iBAAA,eAqBApiB,OAAA4D,OAAAwP,GAAAxS,WAEAkkB,aAEAtR,IAAA,SAAAxM,EAAAyB,EAAAC,GAMA,OAJA9F,KAAAoE,IACApE,KAAA6F,IACA7F,KAAA8F,IAEA9F,MAIA+Q,UAAA,SAAAC,GAMA,OAJAhR,KAAAoE,EAAA4M,EACAhR,KAAA6F,EAAAmL,EACAhR,KAAA8F,EAAAkL,EAEAhR,MAIAiR,KAAA,SAAA7M,GAIA,OAFApE,KAAAoE,IAEApE,MAIAkR,KAAA,SAAArL,GAIA,OAFA7F,KAAA6F,IAEA7F,MAIAmiB,KAAA,SAAArc,GAIA,OAFA9F,KAAA8F,IAEA9F,MAIAmR,aAAA,SAAA3M,EAAA9G,GAEA,OAAA8G,GAEA,OAAAxE,KAAAoE,EAAA1G,EAA0B,MAC1B,OAAAsC,KAAA6F,EAAAnI,EAA0B,MAC1B,OAAAsC,KAAA8F,EAAApI,EAA0B,MAC1B,kBAAA8C,MAAA,0BAAAgE,GAIA,OAAAxE,MAIAoR,aAAA,SAAA5M,GAEA,OAAAA,GAEA,cAAAxE,KAAAoE,EACA,cAAApE,KAAA6F,EACA,cAAA7F,KAAA8F,EACA,kBAAAtF,MAAA,0BAAAgE,KAMA6M,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA8F,IAIAyL,KAAA,SAAAC,GAMA,OAJAxR,KAAAoE,EAAAoN,EAAApN,EACApE,KAAA6F,EAAA2L,EAAA3L,EACA7F,KAAA8F,EAAA0L,EAAA1L,EAEA9F,MAIAyR,IAAA,SAAAD,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,yFACA1R,KAAA2R,WAAAH,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EACA7F,KAAA8F,GAAA0L,EAAA1L,EAEA9F,OAIA4R,UAAA,SAAAzT,GAMA,OAJA6B,KAAAoE,GAAAjG,EACA6B,KAAA6F,GAAA1H,EACA6B,KAAA8F,GAAA3H,EAEA6B,MAIA2R,WAAA,SAAAvR,EAAAC,GAMA,OAJAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EACA7F,KAAA8F,EAAA1F,EAAA0F,EAAAzF,EAAAyF,EAEA9F,MAIA6R,gBAAA,SAAAL,EAAArT,GAMA,OAJA6B,KAAAoE,GAAAoN,EAAApN,EAAAjG,EACA6B,KAAA6F,GAAA2L,EAAA3L,EAAA1H,EACA6B,KAAA8F,GAAA0L,EAAA1L,EAAA3H,EAEA6B,MAIA8R,IAAA,SAAAN,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,yFACA1R,KAAA+R,WAAAP,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EACA7F,KAAA8F,GAAA0L,EAAA1L,EAEA9F,OAIAgS,UAAA,SAAA7T,GAMA,OAJA6B,KAAAoE,GAAAjG,EACA6B,KAAA6F,GAAA1H,EACA6B,KAAA8F,GAAA3H,EAEA6B,MAIA+R,WAAA,SAAA3R,EAAAC,GAMA,OAJAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EACA7F,KAAA8F,EAAA1F,EAAA0F,EAAAzF,EAAAyF,EAEA9F,MAIAiS,SAAA,SAAAT,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,mGACA1R,KAAAoiB,gBAAA5Q,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EACA7F,KAAA8F,GAAA0L,EAAA1L,EAEA9F,OAIAkS,eAAA,SAAAlB,GAMA,OAJAhR,KAAAoE,GAAA4M,EACAhR,KAAA6F,GAAAmL,EACAhR,KAAA8F,GAAAkL,EAEAhR,MAIAoiB,gBAAA,SAAAhiB,EAAAC,GAMA,OAJAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EACA7F,KAAA8F,EAAA1F,EAAA0F,EAAAzF,EAAAyF,EAEA9F,MAIAqiB,YAEAtc,EAAA,IAAAmK,GAEA,SAAAuG,GAQA,OANAA,KAAAC,SAEA7T,QAAAtC,MAAA,+FAIAP,KAAAsiB,gBAAAvc,EAAA0Z,aAAAhJ,MAMA8L,eAAA,WAEA,IAAAxc,EAAA,IAAAmK,GAEA,gBAAAuM,EAAAtJ,GAEA,OAAAnT,KAAAsiB,gBAAAvc,EAAAka,iBAAAxD,EAAAtJ,KANA,GAYAd,aAAA,SAAAvV,GAEA,IAAAsH,EAAApE,KAAAoE,EAAAyB,EAAA7F,KAAA6F,EAAAC,EAAA9F,KAAA8F,EACAzH,EAAAvB,EAAAmT,SAMA,OAJAjQ,KAAAoE,EAAA/F,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EACA9F,KAAA6F,EAAAxH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EACA9F,KAAA8F,EAAAzH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EAEA9F,MAIA+a,aAAA,SAAAje,GAEA,IAAAsH,EAAApE,KAAAoE,EAAAyB,EAAA7F,KAAA6F,EAAAC,EAAA9F,KAAA8F,EACAzH,EAAAvB,EAAAmT,SAEAE,EAAA,GAAA9R,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,IAAAyH,EAAAzH,EAAA,KAMA,OAJA2B,KAAAoE,GAAA/F,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EAAAzH,EAAA,KAAA8R,EACAnQ,KAAA6F,GAAAxH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EAAAzH,EAAA,KAAA8R,EACAnQ,KAAA8F,GAAAzH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,IAAAyH,EAAAzH,EAAA,KAAA8R,EAEAnQ,MAIAsiB,gBAAA,SAAA7K,GAEA,IAAArT,EAAApE,KAAAoE,EAAAyB,EAAA7F,KAAA6F,EAAAC,EAAA9F,KAAA8F,EACA0c,EAAA/K,EAAArT,EAAAqe,EAAAhL,EAAA5R,EAAA6c,EAAAjL,EAAA3R,EAAA6c,EAAAlL,EAAAtH,EAIAyS,EAAAD,EAAAve,EAAAqe,EAAA3c,EAAA4c,EAAA7c,EACAgd,EAAAF,EAAA9c,EAAA6c,EAAAte,EAAAoe,EAAA1c,EACAgd,EAAAH,EAAA7c,EAAA0c,EAAA3c,EAAA4c,EAAAre,EACA2e,GAAAP,EAAApe,EAAAqe,EAAA5c,EAAA6c,EAAA5c,EAQA,OAJA9F,KAAAoE,EAAAwe,EAAAD,EAAAI,GAAAP,EAAAK,GAAAH,EAAAI,GAAAL,EACAziB,KAAA6F,EAAAgd,EAAAF,EAAAI,GAAAN,EAAAK,GAAAN,EAAAI,GAAAF,EACA1iB,KAAA8F,EAAAgd,EAAAH,EAAAI,GAAAL,EAAAE,GAAAH,EAAAI,GAAAL,EAEAxiB,MAIAgjB,QAAA,WAEA,IAAApd,EAAA,IAAAoK,GAEA,gBAAAiT,GAGA,OADArd,EAAA8S,iBAAAuK,EAAAC,iBAAAtd,EAAAyV,WAAA4H,EAAAE,cACAnjB,KAAA+a,aAAAnV,IAPA,GAaAwd,UAAA,WAEA,IAAAxd,EAAA,IAAAoK,GAEA,gBAAAiT,GAGA,OADArd,EAAA8S,iBAAAuK,EAAAE,YAAAvd,EAAAyV,WAAA4H,EAAAC,mBACAljB,KAAA+a,aAAAnV,IAPA,GAaAyd,mBAAA,SAAAvmB,GAKA,IAAAsH,EAAApE,KAAAoE,EAAAyB,EAAA7F,KAAA6F,EAAAC,EAAA9F,KAAA8F,EACAzH,EAAAvB,EAAAmT,SAMA,OAJAjQ,KAAAoE,EAAA/F,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EACA9F,KAAA6F,EAAAxH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EACA9F,KAAA8F,EAAAzH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,IAAAyH,EAEA9F,KAAAkT,aAIAf,OAAA,SAAAX,GAMA,OAJAxR,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EACA7F,KAAA8F,GAAA0L,EAAA1L,EAEA9F,MAIAoS,aAAA,SAAApB,GAEA,OAAAhR,KAAAkS,eAAA,EAAAlB,IAIAvL,IAAA,SAAA+L,GAMA,OAJAxR,KAAAoE,EAAA9E,KAAAmG,IAAAzF,KAAAoE,EAAAoN,EAAApN,GACApE,KAAA6F,EAAAvG,KAAAmG,IAAAzF,KAAA6F,EAAA2L,EAAA3L,GACA7F,KAAA8F,EAAAxG,KAAAmG,IAAAzF,KAAA8F,EAAA0L,EAAA1L,GAEA9F,MAIA0F,IAAA,SAAA8L,GAMA,OAJAxR,KAAAoE,EAAA9E,KAAAoG,IAAA1F,KAAAoE,EAAAoN,EAAApN,GACApE,KAAA6F,EAAAvG,KAAAoG,IAAA1F,KAAA6F,EAAA2L,EAAA3L,GACA7F,KAAA8F,EAAAxG,KAAAoG,IAAA1F,KAAA8F,EAAA0L,EAAA1L,GAEA9F,MAIAqO,MAAA,SAAA5I,EAAAC,GAQA,OAJA1F,KAAAoE,EAAA9E,KAAAoG,IAAAD,EAAArB,EAAA9E,KAAAmG,IAAAC,EAAAtB,EAAApE,KAAAoE,IACApE,KAAA6F,EAAAvG,KAAAoG,IAAAD,EAAAI,EAAAvG,KAAAmG,IAAAC,EAAAG,EAAA7F,KAAA6F,IACA7F,KAAA8F,EAAAxG,KAAAoG,IAAAD,EAAAK,EAAAxG,KAAAmG,IAAAC,EAAAI,EAAA9F,KAAA8F,IAEA9F,MAIAsS,YAAA,WAEA,IAAA7M,EAAA,IAAA+K,GACA9K,EAAA,IAAA8K,GAEA,gBAAA+B,EAAAC,GAKA,OAHA/M,EAAAmL,IAAA2B,OACA7M,EAAAkL,IAAA4B,OAEAxS,KAAAqO,MAAA5I,EAAAC,IAVA,GAgBA+M,YAAA,SAAAhN,EAAAC,GAEA,IAAApD,EAAAtC,KAAAsC,SAEA,OAAAtC,KAAAoS,aAAA9P,GAAA,GAAA4P,eAAA5S,KAAAoG,IAAAD,EAAAnG,KAAAmG,IAAAC,EAAApD,MAIA4B,MAAA,WAMA,OAJAlE,KAAAoE,EAAA9E,KAAA4E,MAAAlE,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAA4E,MAAAlE,KAAA6F,GACA7F,KAAA8F,EAAAxG,KAAA4E,MAAAlE,KAAA8F,GAEA9F,MAIA2P,KAAA,WAMA,OAJA3P,KAAAoE,EAAA9E,KAAAqQ,KAAA3P,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAAqQ,KAAA3P,KAAA6F,GACA7F,KAAA8F,EAAAxG,KAAAqQ,KAAA3P,KAAA8F,GAEA9F,MAIA0S,MAAA,WAMA,OAJA1S,KAAAoE,EAAA9E,KAAAoT,MAAA1S,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAAoT,MAAA1S,KAAA6F,GACA7F,KAAA8F,EAAAxG,KAAAoT,MAAA1S,KAAA8F,GAEA9F,MAIA2S,YAAA,WAMA,OAJA3S,KAAAoE,EAAApE,KAAAoE,EAAA,EAAA9E,KAAAqQ,KAAA3P,KAAAoE,GAAA9E,KAAA4E,MAAAlE,KAAAoE,GACApE,KAAA6F,EAAA7F,KAAA6F,EAAA,EAAAvG,KAAAqQ,KAAA3P,KAAA6F,GAAAvG,KAAA4E,MAAAlE,KAAA6F,GACA7F,KAAA8F,EAAA9F,KAAA8F,EAAA,EAAAxG,KAAAqQ,KAAA3P,KAAA8F,GAAAxG,KAAA4E,MAAAlE,KAAA8F,GAEA9F,MAIA4S,OAAA,WAMA,OAJA5S,KAAAoE,GAAApE,KAAAoE,EACApE,KAAA6F,GAAA7F,KAAA6F,EACA7F,KAAA8F,GAAA9F,KAAA8F,EAEA9F,MAIA6S,IAAA,SAAArB,GAEA,OAAAxR,KAAAoE,EAAAoN,EAAApN,EAAApE,KAAA6F,EAAA2L,EAAA3L,EAAA7F,KAAA8F,EAAA0L,EAAA1L,GAMAgN,SAAA,WAEA,OAAA9S,KAAAoE,EAAApE,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA6F,EAAA7F,KAAA8F,EAAA9F,KAAA8F,GAIAxD,OAAA,WAEA,OAAAhD,KAAAyT,KAAA/S,KAAAoE,EAAApE,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA6F,EAAA7F,KAAA8F,EAAA9F,KAAA8F,IAIAkN,gBAAA,WAEA,OAAA1T,KAAA2T,IAAAjT,KAAAoE,GAAA9E,KAAA2T,IAAAjT,KAAA6F,GAAAvG,KAAA2T,IAAAjT,KAAA8F,IAIAoN,UAAA,WAEA,OAAAlT,KAAAoS,aAAApS,KAAAsC,UAAA,IAIAoR,UAAA,SAAApR,GAEA,OAAAtC,KAAAkT,YAAAhB,eAAA5P,IAIAsM,KAAA,SAAA4C,EAAAmC,GAMA,OAJA3T,KAAAoE,IAAAoN,EAAApN,EAAApE,KAAAoE,GAAAuP,EACA3T,KAAA6F,IAAA2L,EAAA3L,EAAA7F,KAAA6F,GAAA8N,EACA3T,KAAA8F,IAAA0L,EAAA1L,EAAA9F,KAAA8F,GAAA6N,EAEA3T,MAIA4T,YAAA,SAAApR,EAAAqR,EAAAF,GAEA,OAAA3T,KAAA+R,WAAA8B,EAAArR,GAAA0P,eAAAyB,GAAAlC,IAAAjP,IAIA8gB,MAAA,SAAA9R,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,6FACA1R,KAAAyY,aAAAjH,EAAArB,IAIAnQ,KAAAyY,aAAAzY,KAAAwR,IAIAiH,aAAA,SAAArY,EAAAC,GAEA,IAAAkjB,EAAAnjB,EAAAgE,EAAAof,EAAApjB,EAAAyF,EAAA4d,EAAArjB,EAAA0F,EACA4d,EAAArjB,EAAA+D,EAAAuf,EAAAtjB,EAAAwF,EAAA+d,EAAAvjB,EAAAyF,EAMA,OAJA9F,KAAAoE,EAAAof,EAAAI,EAAAH,EAAAE,EACA3jB,KAAA6F,EAAA4d,EAAAC,EAAAH,EAAAK,EACA5jB,KAAA8F,EAAAyd,EAAAI,EAAAH,EAAAE,EAEA1jB,MAIA6jB,gBAAA,SAAAle,GAEA,IAAAqL,EAAArL,EAAAkN,IAAA7S,MAAA2F,EAAAmN,WAEA,OAAA9S,KAAAuR,KAAA5L,GAAAuM,eAAAlB,IAIA8S,eAAA,WAEA,IAAAthB,EAAA,IAAAgO,GAEA,gBAAAuT,GAIA,OAFAvhB,EAAA+O,KAAAvR,MAAA6jB,gBAAAE,GAEA/jB,KAAA8R,IAAAtP,IARA,GAcAwhB,QAAA,WAKA,IAAAxhB,EAAA,IAAAgO,GAEA,gBAAAyT,GAEA,OAAAjkB,KAAA8R,IAAAtP,EAAA+O,KAAA0S,GAAA/R,eAAA,EAAAlS,KAAA6S,IAAAoR,MATA,GAeAC,QAAA,SAAA1S,GAEA,IAAA6K,EAAArc,KAAA6S,IAAArB,GAAAlS,KAAAyT,KAAA/S,KAAA8S,WAAAtB,EAAAsB,YAIA,OAAAxT,KAAA6kB,KAAAzW,GAAAW,MAAAgO,GAAA,OAIAhJ,WAAA,SAAA7B,GAEA,OAAAlS,KAAAyT,KAAA/S,KAAAsT,kBAAA9B,KAIA8B,kBAAA,SAAA9B,GAEA,IAAA+B,EAAAvT,KAAAoE,EAAAoN,EAAApN,EAAAoP,EAAAxT,KAAA6F,EAAA2L,EAAA3L,EAAAue,EAAApkB,KAAA8F,EAAA0L,EAAA1L,EAEA,OAAAyN,IAAAC,IAAA4Q,KAIA3Q,oBAAA,SAAAjC,GAEA,OAAAlS,KAAA2T,IAAAjT,KAAAoE,EAAAoN,EAAApN,GAAA9E,KAAA2T,IAAAjT,KAAA6F,EAAA2L,EAAA3L,GAAAvG,KAAA2T,IAAAjT,KAAA8F,EAAA0L,EAAA1L,IAIAue,iBAAA,SAAAlmB,GAEA,IAAAmmB,EAAAhlB,KAAAkV,IAAArW,EAAAomB,KAAApmB,EAAAqmB,OAMA,OAJAxkB,KAAAoE,EAAAkgB,EAAAhlB,KAAAkV,IAAArW,EAAAke,OACArc,KAAA6F,EAAAvG,KAAAiV,IAAApW,EAAAomB,KAAApmB,EAAAqmB,OACAxkB,KAAA8F,EAAAwe,EAAAhlB,KAAAiV,IAAApW,EAAAke,OAEArc,MAIAykB,mBAAA,SAAA1nB,GAMA,OAJAiD,KAAAoE,EAAArH,EAAAynB,OAAAllB,KAAAkV,IAAAzX,EAAAsf,OACArc,KAAA6F,EAAA9I,EAAA8I,EACA7F,KAAA8F,EAAA/I,EAAAynB,OAAAllB,KAAAiV,IAAAxX,EAAAsf,OAEArc,MAIA0kB,sBAAA,SAAA5nB,GAEA,IAAAuB,EAAAvB,EAAAmT,SAMA,OAJAjQ,KAAAoE,EAAA/F,EAAA,IACA2B,KAAA6F,EAAAxH,EAAA,IACA2B,KAAA8F,EAAAzH,EAAA,IAEA2B,MAIA2kB,mBAAA,SAAA7nB,GAEA,IAAAmgB,EAAAjd,KAAAkW,oBAAApZ,EAAA,GAAAwF,SACA4a,EAAAld,KAAAkW,oBAAApZ,EAAA,GAAAwF,SACA6a,EAAAnd,KAAAkW,oBAAApZ,EAAA,GAAAwF,SAMA,OAJAtC,KAAAoE,EAAA6Y,EACAjd,KAAA6F,EAAAqX,EACAld,KAAA8F,EAAAqX,EAEAnd,MAIAkW,oBAAA,SAAApZ,EAAA0H,GAEA,OAAAxE,KAAA+T,UAAAjX,EAAAmT,SAAA,EAAAzL,IAIAsP,OAAA,SAAAtC,GAEA,OAAAA,EAAApN,IAAApE,KAAAoE,GAAAoN,EAAA3L,IAAA7F,KAAA6F,GAAA2L,EAAA1L,IAAA9F,KAAA8F,GAIAiO,UAAA,SAAAxO,EAAA3G,GAQA,gBANAA,MAAA,GAEAoB,KAAAoE,EAAAmB,EAAA3G,GACAoB,KAAA6F,EAAAN,EAAA3G,EAAA,GACAoB,KAAA8F,EAAAP,EAAA3G,EAAA,GAEAoB,MAIAgU,QAAA,SAAAzO,EAAA3G,GASA,gBAPA2G,mBACA3G,MAAA,GAEA2G,EAAA3G,GAAAoB,KAAAoE,EACAmB,EAAA3G,EAAA,GAAAoB,KAAA6F,EACAN,EAAA3G,EAAA,GAAAoB,KAAA8F,EAEAP,GAIA0O,oBAAA,SAAAC,EAAA1P,EAAA5F,GAYA,gBAVAA,GAEAiE,QAAA6O,KAAA,uEAIA1R,KAAAoE,EAAA8P,EAAAC,KAAA3P,GACAxE,KAAA6F,EAAAqO,EAAAE,KAAA5P,GACAxE,KAAA8F,EAAAoO,EAAA4G,KAAAtW,GAEAxE,QA+BA5C,OAAA4D,OAAAyP,GAAAzS,WAEA4mB,aAEAhU,IAAA,SAAA8D,EAAAC,EAAAC,EAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAC,GAEA,IAAAM,EAAA1V,KAAAiQ,SAMA,OAJAyF,EAAA,GAAAhB,EAAgBgB,EAAA,GAAAZ,EAAeY,EAAA,GAAAR,EAC/BQ,EAAA,GAAAf,EAAgBe,EAAA,GAAAX,EAAeW,EAAA,GAAAP,EAC/BO,EAAA,GAAAd,EAAgBc,EAAA,GAAAV,EAAeU,EAAA,GAAAN,EAE/BpV,MAIA2V,SAAA,WAUA,OARA3V,KAAA4Q,IAEA,MACA,MACA,OAIA5Q,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAyC,UAAA/T,KAAAiQ,WAIAsB,KAAA,SAAAzU,GAEA,IAAA4Y,EAAA1V,KAAAiQ,SACA2F,EAAA9Y,EAAAmT,SAMA,OAJAyF,EAAA,GAAAE,EAAA,GAAoBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GACvCF,EAAA,GAAAE,EAAA,GAAoBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GACvCF,EAAA,GAAAE,EAAA,GAAoBF,EAAA,GAAAE,EAAA,GAAmBF,EAAA,GAAAE,EAAA,GAEvC5V,MAIA6kB,eAAA,SAAA/nB,GAEA,IAAA8Y,EAAA9Y,EAAAmT,SAUA,OARAjQ,KAAA4Q,IAEAgF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAIA5V,MAIA4a,uBAAA,WAEA,IAAApY,EAAA,IAAAgO,GAEA,gBAAA0D,GAEA,QAAAxX,EAAA,EAAAC,EAAAuX,EAAA2G,MAAwCne,EAAAC,EAAOD,IAE/C8F,EAAA4B,EAAA8P,EAAAC,KAAAzX,GACA8F,EAAAqD,EAAAqO,EAAAE,KAAA1X,GACA8F,EAAAsD,EAAAoO,EAAA4G,KAAApe,GAEA8F,EAAA6P,aAAArS,MAEAkU,EAAA8G,OAAAte,EAAA8F,EAAA4B,EAAA5B,EAAAqD,EAAArD,EAAAsD,GAIA,OAAAoO,GAlBA,GAwBAjC,SAAA,SAAAnV,GAEA,OAAAkD,KAAA0Y,iBAAA1Y,KAAAlD,IAIA6b,YAAA,SAAA7b,GAEA,OAAAkD,KAAA0Y,iBAAA5b,EAAAkD,OAIA0Y,iBAAA,SAAAtY,EAAAC,GAEA,IAAAuW,EAAAxW,EAAA6P,SACA6G,EAAAzW,EAAA4P,SACAyF,EAAA1V,KAAAiQ,SAEA2I,EAAAhC,EAAA,GAAAiC,EAAAjC,EAAA,GAAAkC,EAAAlC,EAAA,GACAoC,EAAApC,EAAA,GAAAqC,EAAArC,EAAA,GAAAsC,EAAAtC,EAAA,GACAwC,EAAAxC,EAAA,GAAAyC,EAAAzC,EAAA,GAAA0C,EAAA1C,EAAA,GAEAgD,EAAA9C,EAAA,GAAA+C,EAAA/C,EAAA,GAAAgD,EAAAhD,EAAA,GACAkD,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,GAAAoD,EAAApD,EAAA,GACAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAcA,OAZApB,EAAA,GAAAkD,EAAAgB,EAAAf,EAAAmB,EAAAlB,EAAAsB,EACA1E,EAAA,GAAAkD,EAAAiB,EAAAhB,EAAAoB,EAAAnB,EAAAuB,EACA3E,EAAA,GAAAkD,EAAAkB,EAAAjB,EAAAqB,EAAApB,EAAAwB,EAEA5E,EAAA,GAAAsD,EAAAY,EAAAX,EAAAe,EAAAd,EAAAkB,EACA1E,EAAA,GAAAsD,EAAAa,EAAAZ,EAAAgB,EAAAf,EAAAmB,EACA3E,EAAA,GAAAsD,EAAAc,EAAAb,EAAAiB,EAAAhB,EAAAoB,EAEA5E,EAAA,GAAA0D,EAAAQ,EAAAP,EAAAW,EAAAV,EAAAc,EACA1E,EAAA,GAAA0D,EAAAS,EAAAR,EAAAY,EAAAX,EAAAe,EACA3E,EAAA,GAAA0D,EAAAU,EAAAT,EAAAa,EAAAZ,EAAAgB,EAEAta,MAIAkS,eAAA,SAAA/T,GAEA,IAAAuX,EAAA1V,KAAAiQ,SAMA,OAJAyF,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,IAAAvX,EAC7BuX,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,IAAAvX,EAC7BuX,EAAA,IAAAvX,EAAeuX,EAAA,IAAAvX,EAAcuX,EAAA,IAAAvX,EAE7B6B,MAIAib,YAAA,WAEA,IAAAvF,EAAA1V,KAAAiQ,SAEA7P,EAAAsV,EAAA,GAAArV,EAAAqV,EAAA,GAAA3Y,EAAA2Y,EAAA,GACA1Y,EAAA0Y,EAAA,GAAArX,EAAAqX,EAAA,GAAApV,EAAAoV,EAAA,GACAoP,EAAApP,EAAA,GAAAsI,EAAAtI,EAAA,GAAAhZ,EAAAgZ,EAAA,GAEA,OAAAtV,EAAA/B,EAAA3B,EAAA0D,EAAAE,EAAA0d,EAAA3d,EAAArD,EAAAN,EAAA2D,EAAAC,EAAAwkB,EAAA/nB,EAAAC,EAAAghB,EAAAjhB,EAAAsB,EAAAymB,GAIAzJ,WAAA,SAAAzV,EAAA0V,GAEA1V,KAAA6O,WAEA5R,QAAAtC,MAAA,oEAIA,IAAAqV,EAAAhQ,EAAAqK,SACAyF,EAAA1V,KAAAiQ,SAEAyE,EAAAkB,EAAA,GAAAd,EAAAc,EAAA,GAAAV,EAAAU,EAAA,GACAjB,EAAAiB,EAAA,GAAAb,EAAAa,EAAA,GAAAT,EAAAS,EAAA,GACAhB,EAAAgB,EAAA,GAAAZ,EAAAY,EAAA,GAAAR,EAAAQ,EAAA,GAEA2F,EAAAnG,EAAAL,EAAAI,EAAAH,EACAwG,EAAArG,EAAAP,EAAAQ,EAAAT,EACA8G,EAAAzG,EAAAL,EAAAI,EAAAH,EAEA+G,EAAAjH,EAAA6G,EAAAzG,EAAA0G,EAAAtG,EAAAuG,EAEA,OAAAE,EAAA,CAEA,IAAAC,EAAA,qEAEA,QAAAN,EAEA,UAAA9a,MAAAob,GAQA,OAJA/Y,QAAA6O,KAAAkK,GAIA5b,KAAA2V,WAIA,IAAAkG,EAAA,EAAAF,EAcA,OAZAjG,EAAA,GAAA6F,EAAAM,EACAnG,EAAA,IAAAR,EAAAF,EAAAI,EAAAN,GAAA+G,EACAnG,EAAA,IAAAP,EAAAL,EAAAI,EAAAH,GAAA8G,EAEAnG,EAAA,GAAA8F,EAAAK,EACAnG,EAAA,IAAAN,EAAAV,EAAAQ,EAAAN,GAAAiH,EACAnG,EAAA,IAAAR,EAAAP,EAAAQ,EAAAT,GAAAmH,EAEAnG,EAAA,GAAA+F,EAAAI,EACAnG,EAAA,IAAAZ,EAAAF,EAAAI,EAAAN,GAAAmH,EACAnG,EAAA,IAAAX,EAAAL,EAAAI,EAAAH,GAAAkH,EAEA7b,MAIAkb,UAAA,WAEA,IAAAC,EAAAre,EAAAkD,KAAAiQ,SAMA,OAJAkL,EAAAre,EAAA,GAAeA,EAAA,GAAAA,EAAA,GAAiBA,EAAA,GAAAqe,EAChCA,EAAAre,EAAA,GAAeA,EAAA,GAAAA,EAAA,GAAiBA,EAAA,GAAAqe,EAChCA,EAAAre,EAAA,GAAeA,EAAA,GAAAA,EAAA,GAAiBA,EAAA,GAAAqe,EAEhCnb,MAIA+kB,gBAAA,SAAAC,GAEA,OAAAhlB,KAAA6kB,eAAAG,GAAA3J,WAAArb,MAAAkb,aAIA+J,mBAAA,SAAAxnB,GAEA,IAAAX,EAAAkD,KAAAiQ,SAYA,OAVAxS,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GACAW,EAAA,GAAAX,EAAA,GAEAkD,MAIAklB,eAAA,SAAAxI,EAAAC,EAAAM,EAAAC,EAAAiI,EAAAC,EAAAC,GAEA,IAAAtoB,EAAAuC,KAAAiV,IAAA4Q,GACAhnB,EAAAmB,KAAAkV,IAAA2Q,GAEAnlB,KAAA4Q,IACAqM,EAAAlgB,EAAAkgB,EAAA9e,GAAA8e,GAAAlgB,EAAAqoB,EAAAjnB,EAAAknB,GAAAD,EAAA1I,GACAQ,EAAA/e,EAAA+e,EAAAngB,GAAAmgB,IAAA/e,EAAAinB,EAAAroB,EAAAsoB,KAAA1I,EACA,QAKAb,MAAA,SAAAmB,EAAAC,GAEA,IAAAxH,EAAA1V,KAAAiQ,SAKA,OAHAyF,EAAA,IAAAuH,EAAgBvH,EAAA,IAAAuH,EAAevH,EAAA,IAAAuH,EAC/BvH,EAAA,IAAAwH,EAAgBxH,EAAA,IAAAwH,EAAexH,EAAA,IAAAwH,EAE/Bld,MAIAslB,OAAA,SAAAjJ,GAEA,IAAAtf,EAAAuC,KAAAiV,IAAA8H,GACAle,EAAAmB,KAAAkV,IAAA6H,GAEA3G,EAAA1V,KAAAiQ,SAEA2I,EAAAlD,EAAA,GAAAmD,EAAAnD,EAAA,GAAAoD,EAAApD,EAAA,GACAsD,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAA,GAAAwD,EAAAxD,EAAA,GAUA,OARAA,EAAA,GAAA3Y,EAAA6b,EAAAza,EAAA6a,EACAtD,EAAA,GAAA3Y,EAAA8b,EAAA1a,EAAA8a,EACAvD,EAAA,GAAA3Y,EAAA+b,EAAA3a,EAAA+a,EAEAxD,EAAA,IAAAvX,EAAAya,EAAA7b,EAAAic,EACAtD,EAAA,IAAAvX,EAAA0a,EAAA9b,EAAAkc,EACAvD,EAAA,IAAAvX,EAAA2a,EAAA/b,EAAAmc,EAEAlZ,MAIAulB,UAAA,SAAA7I,EAAAC,GAEA,IAAAjH,EAAA1V,KAAAiQ,SAKA,OAHAyF,EAAA,IAAAgH,EAAAhH,EAAA,GAA0BA,EAAA,IAAAgH,EAAAhH,EAAA,GAAyBA,EAAA,IAAAgH,EAAAhH,EAAA,GACnDA,EAAA,IAAAiH,EAAAjH,EAAA,GAA0BA,EAAA,IAAAiH,EAAAjH,EAAA,GAAyBA,EAAA,IAAAiH,EAAAjH,EAAA,GAEnD1V,MAIA8T,OAAA,SAAAlO,GAKA,IAHA,IAAA8P,EAAA1V,KAAAiQ,SACA2F,EAAAhQ,EAAAqK,SAEAvT,EAAA,EAAkBA,EAAA,EAAOA,IAEzB,GAAAgZ,EAAAhZ,KAAAkZ,EAAAlZ,GAAA,SAIA,UAIAqX,UAAA,SAAAxO,EAAA3G,YAEAA,MAAA,GAEA,QAAAlC,EAAA,EAAkBA,EAAA,EAAOA,IAEzBsD,KAAAiQ,SAAAvT,GAAA6I,EAAA7I,EAAAkC,GAIA,OAAAoB,MAIAgU,QAAA,SAAAzO,EAAA3G,YAEA2G,mBACA3G,MAAA,GAEA,IAAA8W,EAAA1V,KAAAiQ,SAcA,OAZA1K,EAAA3G,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GAEAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GAEAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GACAnQ,EAAA3G,EAAA,GAAA8W,EAAA,GAEAnQ,KAYA,IAgmDAigB,GA1OAC,GAsTAC,GAghBAC,GACAC,GA3DAC,GAloEAC,GAAA,EAEA,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,EAAAC,GAEAnpB,OAAAC,eAAA2C,KAAA,MAAqCtC,MAAAooB,OAErC9lB,KAAA0C,KAAAgL,GAAAI,eAEA9N,KAAA/C,KAAA,GAEA+C,KAAAgmB,mBAAAD,GAAAS,cACAxmB,KAAAymB,WAEAzmB,KAAAimB,qBAAAF,GAAAW,gBAEA1mB,KAAAkmB,mBAAAxc,GACA1J,KAAAmmB,mBAAAzc,GAEA1J,KAAAomB,uBAAArc,GACA/J,KAAAqmB,uBAAApc,GAEAjK,KAAAsmB,wBAAA,EAEAtmB,KAAAG,oBAAA6K,GACAhL,KAAA2E,kBAAAuF,GAEAlK,KAAApB,OAAA,IAAAmR,GAAA,KACA/P,KAAA2mB,OAAA,IAAA5W,GAAA,KACA/P,KAAAsU,OAAA,IAAAvE,GAAA,KACA/P,KAAAmlB,SAAA,EAEAnlB,KAAA4mB,oBACA5mB,KAAA4F,OAAA,IAAA6K,GAEAzQ,KAAA6mB,mBACA7mB,KAAA8mB,oBACA9mB,KAAA+mB,SACA/mB,KAAAgnB,gBAAA,EAMAhnB,KAAAumB,sBAAAtZ,GAEAjN,KAAAinB,QAAA,EACAjnB,KAAAknB,SAAA,KAuRA,SAAAC,GAAA/iB,EAAAyB,EAAAC,EAAAqK,GAEAnQ,KAAAoE,KAAA,EACApE,KAAA6F,KAAA,EACA7F,KAAA8F,KAAA,EACA9F,KAAAmQ,eAAA,EAinBA,SAAAiX,GAAAzW,EAAAE,EAAAwW,GAEArnB,KAAA2Q,QACA3Q,KAAA6Q,SAEA7Q,KAAAsnB,QAAA,IAAAH,GAAA,IAAAxW,EAAAE,GACA7Q,KAAAunB,eAEAvnB,KAAAwnB,SAAA,IAAAL,GAAA,IAAAxW,EAAAE,aAEAwW,SAEAhB,YAAAgB,EAAAhB,UAAAtc,IAEA/J,KAAAynB,QAAA,IAAA1B,eAAA2B,EAAAL,EAAAnB,MAAAmB,EAAAlB,MAAAkB,EAAAjB,UAAAiB,EAAAhB,UAAAgB,EAAAlnB,OAAAknB,EAAA1iB,KAAA0iB,EAAAf,WAAAe,EAAAd,UAEAvmB,KAAA2nB,qBAAAN,EAAAM,aAAAN,EAAAM,YACA3nB,KAAA4nB,uBAAAP,EAAAO,eAAAP,EAAAO,cACA5nB,KAAA6nB,sBAAAR,EAAAQ,aAAAR,EAAAQ,aAAA,KA6DA,SAAAC,GAAAnX,EAAAE,EAAAwW,GAEAD,GAAAvqB,KAAAmD,KAAA2Q,EAAAE,EAAAwW,GAEArnB,KAAA+nB,eAAA,EACA/nB,KAAAgoB,kBAAA,EAaA,SAAAC,GAAAC,EAAAvX,EAAAE,EAAA1Q,EAAAwE,EAAAshB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAR,GAAAlpB,KAAAmD,KAAA,KAAAimB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,EAAAC,GAEAvmB,KAAAgmB,OAAekC,OAAAvX,QAAAE,UAEf7Q,KAAAomB,uBAAAxc,GACA5J,KAAAqmB,uBAAAzc,GAEA5J,KAAA6mB,mBACA7mB,KAAA+mB,SACA/mB,KAAAgnB,gBAAA,EAcA,SAAAmB,GAAA1iB,EAAAC,GAEA1F,KAAAyF,iBAAA,IAAA+K,GAAA4X,aACApoB,KAAA0F,iBAAA,IAAA8K,SAAA4X,UAgmBA,SAAAC,GAAA/T,EAAAkQ,GAEAxkB,KAAAsU,oBAAA,IAAA9D,GACAxQ,KAAAwkB,oBAAA,EA2KA,SAAA8D,GAAArE,EAAAsE,GAIAvoB,KAAAikB,oBAAA,IAAAzT,GAAA,OACAxQ,KAAAuoB,sBAAA,EA6OA,SAAAC,GAAAC,EAAA9C,EAAAC,EAAA8C,EAAAC,EAAAC,GAEA5oB,KAAA6oB,iBAEAJ,IAAA,IAAAH,YACA3C,IAAA,IAAA2C,YACA1C,IAAA,IAAA0C,YACAI,IAAA,IAAAJ,YACAK,IAAA,IAAAL,YACAM,IAAA,IAAAN,IA/gEAvC,GAAAS,qBACAT,GAAAW,gBA51GA,IA81GAX,GAAA/nB,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAAyU,GAEAgD,aAEAC,aAAA,WAEAhpB,KAAA4F,OAAAsf,eAAAllB,KAAApB,OAAAwF,EAAApE,KAAApB,OAAAiH,EAAA7F,KAAA2mB,OAAAviB,EAAApE,KAAA2mB,OAAA9gB,EAAA7F,KAAAmlB,SAAAnlB,KAAAsU,OAAAlQ,EAAApE,KAAAsU,OAAAzO,IAIAwL,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAkCA,OAhCA/B,KAAA/C,KAAA8E,EAAA9E,KAEA+C,KAAAgmB,MAAAjkB,EAAAikB,MACAhmB,KAAAymB,QAAA1kB,EAAA0kB,QAAAjhB,MAAA,GAEAxF,KAAAimB,QAAAlkB,EAAAkkB,QAEAjmB,KAAAkmB,MAAAnkB,EAAAmkB,MACAlmB,KAAAmmB,MAAApkB,EAAAokB,MAEAnmB,KAAAomB,UAAArkB,EAAAqkB,UACApmB,KAAAqmB,UAAAtkB,EAAAskB,UAEArmB,KAAAsmB,WAAAvkB,EAAAukB,WAEAtmB,KAAAG,OAAA4B,EAAA5B,OACAH,KAAA2E,KAAA5C,EAAA4C,KAEA3E,KAAApB,OAAA2S,KAAAxP,EAAAnD,QACAoB,KAAA2mB,OAAApV,KAAAxP,EAAA4kB,QACA3mB,KAAAsU,OAAA/C,KAAAxP,EAAAuS,QACAtU,KAAAmlB,SAAApjB,EAAAojB,SAEAnlB,KAAA4mB,iBAAA7kB,EAAA6kB,iBACA5mB,KAAA4F,OAAA2L,KAAAxP,EAAA6D,QAEA5F,KAAA6mB,gBAAA9kB,EAAA8kB,gBACA7mB,KAAA8mB,iBAAA/kB,EAAA+kB,iBACA9mB,KAAA+mB,MAAAhlB,EAAAglB,MACA/mB,KAAAgnB,gBAAAjlB,EAAAilB,gBACAhnB,KAAAumB,SAAAxkB,EAAAwkB,SAEAvmB,MAIAipB,OAAA,SAAAC,GAEA,IAAAC,WAAAD,GAAA,iBAAAA,EAEA,IAAAC,YAAAD,EAAAE,SAAAppB,KAAA0C,MAEA,OAAAwmB,EAAAE,SAAAppB,KAAA0C,MA4CA,IAAA6B,GAEA8kB,UACApC,QAAA,IACAtiB,KAAA,UACA2kB,UAAA,kBAGA5mB,KAAA1C,KAAA0C,KACAzF,KAAA+C,KAAA/C,KAEAgpB,QAAAjmB,KAAAimB,QAEAU,QAAA3mB,KAAA2mB,OAAAviB,EAAApE,KAAA2mB,OAAA9gB,GACAjH,QAAAoB,KAAApB,OAAAwF,EAAApE,KAAApB,OAAAiH,GACAyO,QAAAtU,KAAAsU,OAAAlQ,EAAApE,KAAAsU,OAAAzO,GACAsf,SAAAnlB,KAAAmlB,SAEAoE,MAAAvpB,KAAAkmB,MAAAlmB,KAAAmmB,OAEAhmB,OAAAH,KAAAG,OACAkmB,UAAArmB,KAAAqmB,UACAD,UAAApmB,KAAAomB,UACAE,WAAAtmB,KAAAsmB,WAEAS,MAAA/mB,KAAA+mB,OAIA,YAAA/mB,KAAAgmB,MAAA,CAIA,IAAAA,EAAAhmB,KAAAgmB,eAEAA,EAAAtjB,OAEAsjB,EAAAtjB,KAAAgL,GAAAI,gBAIAqb,YAAAD,EAAAM,OAAAxD,EAAAtjB,QAEAwmB,EAAAM,OAAAxD,EAAAtjB,OACAA,KAAAsjB,EAAAtjB,KACA+mB,IArFA,SAAAzD,GAEA,IAAA0D,EAEA,GAAA1D,aAAA2D,kBAEAD,EAAA1D,MAEI,EAEJ0D,EAAAE,SAAAC,gBAAA,0CACAlZ,MAAAqV,EAAArV,MACA+Y,EAAA7Y,OAAAmV,EAAAnV,OAEA,IAAAiZ,EAAAJ,EAAAK,WAAA,MAEA/D,aAAAgE,UAEAF,EAAAG,aAAAjE,EAAA,KAIA8D,EAAAI,UAAAlE,EAAA,IAAAA,EAAArV,MAAAqV,EAAAnV,QAMA,OAAA6Y,EAAA/Y,MAAA,MAAA+Y,EAAA7Y,OAAA,KAEA6Y,EAAAS,UAAA,iBAIAT,EAAAS,UAAA,aAlCA,CAqFAnE,KAKAzhB,EAAAyhB,QAAAtjB,KAUA,OANAymB,IAEAD,EAAAE,SAAAppB,KAAA0C,MAAA6B,GAIAA,GAIA6lB,QAAA,WAEApqB,KAAAqF,eAAuBV,KAAA,aAIvB0lB,YAAA,SAAAC,GAEA,GAhhHA,MAghHAtqB,KAAAimB,QAAA,CAIA,GAFAqE,EAAAjY,aAAArS,KAAA4F,QAEA0kB,EAAAlmB,EAAA,GAAAkmB,EAAAlmB,EAAA,EAEA,OAAApE,KAAAkmB,OAEA,KAAAzc,GAEA6gB,EAAAlmB,EAAAkmB,EAAAlmB,EAAA9E,KAAA4E,MAAAomB,EAAAlmB,GACA,MAEA,KAAAsF,GAEA4gB,EAAAlmB,EAAAkmB,EAAAlmB,EAAA,MACA,MAEA,KAAAuF,GAEA,IAAArK,KAAA2T,IAAA3T,KAAA4E,MAAAomB,EAAAlmB,GAAA,GAEAkmB,EAAAlmB,EAAA9E,KAAAqQ,KAAA2a,EAAAlmB,GAAAkmB,EAAAlmB,EAIAkmB,EAAAlmB,EAAAkmB,EAAAlmB,EAAA9E,KAAA4E,MAAAomB,EAAAlmB,GASA,GAAAkmB,EAAAzkB,EAAA,GAAAykB,EAAAzkB,EAAA,EAEA,OAAA7F,KAAAmmB,OAEA,KAAA1c,GAEA6gB,EAAAzkB,EAAAykB,EAAAzkB,EAAAvG,KAAA4E,MAAAomB,EAAAzkB,GACA,MAEA,KAAA6D,GAEA4gB,EAAAzkB,EAAAykB,EAAAzkB,EAAA,MACA,MAEA,KAAA8D,GAEA,IAAArK,KAAA2T,IAAA3T,KAAA4E,MAAAomB,EAAAzkB,GAAA,GAEAykB,EAAAzkB,EAAAvG,KAAAqQ,KAAA2a,EAAAzkB,GAAAykB,EAAAzkB,EAIAykB,EAAAzkB,EAAAykB,EAAAzkB,EAAAvG,KAAA4E,MAAAomB,EAAAzkB,GASA7F,KAAA+mB,QAEAuD,EAAAzkB,EAAA,EAAAykB,EAAAzkB,OAQAzI,OAAAC,eAAA0oB,GAAA/nB,UAAA,eAEA4S,IAAA,SAAAlT,QAEAA,GAAAsC,KAAAinB,aAuBA7pB,OAAA4D,OAAAmmB,GAAAnpB,WAEAusB,aAEA3Z,IAAA,SAAAxM,EAAAyB,EAAAC,EAAAqK,GAOA,OALAnQ,KAAAoE,IACApE,KAAA6F,IACA7F,KAAA8F,IACA9F,KAAAmQ,IAEAnQ,MAIA+Q,UAAA,SAAAC,GAOA,OALAhR,KAAAoE,EAAA4M,EACAhR,KAAA6F,EAAAmL,EACAhR,KAAA8F,EAAAkL,EACAhR,KAAAmQ,EAAAa,EAEAhR,MAIAiR,KAAA,SAAA7M,GAIA,OAFApE,KAAAoE,IAEApE,MAIAkR,KAAA,SAAArL,GAIA,OAFA7F,KAAA6F,IAEA7F,MAIAmiB,KAAA,SAAArc,GAIA,OAFA9F,KAAA8F,IAEA9F,MAIAwqB,KAAA,SAAAra,GAIA,OAFAnQ,KAAAmQ,IAEAnQ,MAIAmR,aAAA,SAAA3M,EAAA9G,GAEA,OAAA8G,GAEA,OAAAxE,KAAAoE,EAAA1G,EAA0B,MAC1B,OAAAsC,KAAA6F,EAAAnI,EAA0B,MAC1B,OAAAsC,KAAA8F,EAAApI,EAA0B,MAC1B,OAAAsC,KAAAmQ,EAAAzS,EAA0B,MAC1B,kBAAA8C,MAAA,0BAAAgE,GAIA,OAAAxE,MAIAoR,aAAA,SAAA5M,GAEA,OAAAA,GAEA,cAAAxE,KAAAoE,EACA,cAAApE,KAAA6F,EACA,cAAA7F,KAAA8F,EACA,cAAA9F,KAAAmQ,EACA,kBAAA3P,MAAA,0BAAAgE,KAMA6M,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA8F,EAAA9F,KAAAmQ,IAIAoB,KAAA,SAAAC,GAOA,OALAxR,KAAAoE,EAAAoN,EAAApN,EACApE,KAAA6F,EAAA2L,EAAA3L,EACA7F,KAAA8F,EAAA0L,EAAA1L,EACA9F,KAAAmQ,WAAAqB,EAAArB,EAAAqB,EAAArB,EAAA,EAEAnQ,MAIAyR,IAAA,SAAAD,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,yFACA1R,KAAA2R,WAAAH,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EACA7F,KAAA8F,GAAA0L,EAAA1L,EACA9F,KAAAmQ,GAAAqB,EAAArB,EAEAnQ,OAIA4R,UAAA,SAAAzT,GAOA,OALA6B,KAAAoE,GAAAjG,EACA6B,KAAA6F,GAAA1H,EACA6B,KAAA8F,GAAA3H,EACA6B,KAAAmQ,GAAAhS,EAEA6B,MAIA2R,WAAA,SAAAvR,EAAAC,GAOA,OALAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EACA7F,KAAA8F,EAAA1F,EAAA0F,EAAAzF,EAAAyF,EACA9F,KAAAmQ,EAAA/P,EAAA+P,EAAA9P,EAAA8P,EAEAnQ,MAIA6R,gBAAA,SAAAL,EAAArT,GAOA,OALA6B,KAAAoE,GAAAoN,EAAApN,EAAAjG,EACA6B,KAAA6F,GAAA2L,EAAA3L,EAAA1H,EACA6B,KAAA8F,GAAA0L,EAAA1L,EAAA3H,EACA6B,KAAAmQ,GAAAqB,EAAArB,EAAAhS,EAEA6B,MAIA8R,IAAA,SAAAN,EAAArB,GAEA,gBAAAA,GAEAtN,QAAA6O,KAAA,yFACA1R,KAAA+R,WAAAP,EAAArB,KAIAnQ,KAAAoE,GAAAoN,EAAApN,EACApE,KAAA6F,GAAA2L,EAAA3L,EACA7F,KAAA8F,GAAA0L,EAAA1L,EACA9F,KAAAmQ,GAAAqB,EAAArB,EAEAnQ,OAIAgS,UAAA,SAAA7T,GAOA,OALA6B,KAAAoE,GAAAjG,EACA6B,KAAA6F,GAAA1H,EACA6B,KAAA8F,GAAA3H,EACA6B,KAAAmQ,GAAAhS,EAEA6B,MAIA+R,WAAA,SAAA3R,EAAAC,GAOA,OALAL,KAAAoE,EAAAhE,EAAAgE,EAAA/D,EAAA+D,EACApE,KAAA6F,EAAAzF,EAAAyF,EAAAxF,EAAAwF,EACA7F,KAAA8F,EAAA1F,EAAA0F,EAAAzF,EAAAyF,EACA9F,KAAAmQ,EAAA/P,EAAA+P,EAAA9P,EAAA8P,EAEAnQ,MAIAkS,eAAA,SAAAlB,GAOA,OALAhR,KAAAoE,GAAA4M,EACAhR,KAAA6F,GAAAmL,EACAhR,KAAA8F,GAAAkL,EACAhR,KAAAmQ,GAAAa,EAEAhR,MAIA+a,aAAA,SAAAje,GAEA,IAAAsH,EAAApE,KAAAoE,EAAAyB,EAAA7F,KAAA6F,EAAAC,EAAA9F,KAAA8F,EAAAqK,EAAAnQ,KAAAmQ,EACA9R,EAAAvB,EAAAmT,SAOA,OALAjQ,KAAAoE,EAAA/F,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EAAAzH,EAAA,IAAA8R,EACAnQ,KAAA6F,EAAAxH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,GAAAyH,EAAAzH,EAAA,IAAA8R,EACAnQ,KAAA8F,EAAAzH,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,IAAAyH,EAAAzH,EAAA,IAAA8R,EACAnQ,KAAAmQ,EAAA9R,EAAA,GAAA+F,EAAA/F,EAAA,GAAAwH,EAAAxH,EAAA,IAAAyH,EAAAzH,EAAA,IAAA8R,EAEAnQ,MAIAoS,aAAA,SAAApB,GAEA,OAAAhR,KAAAkS,eAAA,EAAAlB,IAIAyZ,2BAAA,SAAAhT,GAMAzX,KAAAmQ,EAAA,EAAA7Q,KAAA6kB,KAAA1M,EAAAtH,GAEA,IAAAhS,EAAAmB,KAAAyT,KAAA,EAAA0E,EAAAtH,EAAAsH,EAAAtH,GAgBA,OAdAhS,EAAA,MAEA6B,KAAAoE,EAAA,EACApE,KAAA6F,EAAA,EACA7F,KAAA8F,EAAA,IAIA9F,KAAAoE,EAAAqT,EAAArT,EAAAjG,EACA6B,KAAA6F,EAAA4R,EAAA5R,EAAA1H,EACA6B,KAAA8F,EAAA2R,EAAA3R,EAAA3H,GAIA6B,MAIA0qB,+BAAA,SAAA5tB,GAMA,IAAAqW,EAAA/O,EAAAyB,EAAAC,EAIA4P,EAAA5Y,EAAAmT,SAEAkQ,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAA2K,EAAA3K,EAAA,GACA4K,EAAA5K,EAAA,GAAA6K,EAAA7K,EAAA,GAAA8K,EAAA9K,EAAA,GACA+K,EAAA/K,EAAA,GAAAgL,EAAAhL,EAAA,GAAAiL,EAAAjL,EAAA,IAEA,GAAApW,KAAA2T,IAAAmN,EAAAE,GATA,KAUAhhB,KAAA2T,IAAAoN,EAAAI,GAVA,KAWAnhB,KAAA2T,IAAAuN,EAAAE,GAXA,IAWA,CAMA,GAAAphB,KAAA2T,IAAAmN,EAAAE,GAhBA,IAiBAhhB,KAAA2T,IAAAoN,EAAAI,GAjBA,IAkBAnhB,KAAA2T,IAAAuN,EAAAE,GAlBA,IAmBAphB,KAAA2T,IAAAkN,EAAAI,EAAAI,EAAA,GAnBA,GAyBA,OAFA3gB,KAAA4Q,IAAA,SAEA5Q,KAMAmT,EAAA7T,KAAAsO,GAEA,IAAAiK,GAAAsI,EAAA,KACAnI,GAAAuI,EAAA,KACArI,GAAAyI,EAAA,KACA7I,GAAAsI,EAAAE,GAAA,EACAvI,GAAAsI,EAAAI,GAAA,EACAxI,GAAAuI,EAAAE,GAAA,EA4DA,OA1DA7I,EAAAG,GAAAH,EAAAK,EAIAL,EA7CA,KA+CAzT,EAAA,EACAyB,EAAA,WACAC,EAAA,aAKAD,EAAAiS,GADA1T,EAAA9E,KAAAyT,KAAA8E,IAEA/R,EAAAiS,EAAA3T,GAII4T,EAAAE,EAIJF,EA/DA,KAiEA5T,EAAA,WACAyB,EAAA,EACAC,EAAA,aAKA1B,EAAA0T,GADAjS,EAAAvG,KAAAyT,KAAAiF,IAEAlS,EAAAmS,EAAApS,GAQAqS,EAjFA,KAmFA9T,EAAA,WACAyB,EAAA,WACAC,EAAA,IAKA1B,EAAA2T,GADAjS,EAAAxG,KAAAyT,KAAAmF,IAEArS,EAAAoS,EAAAnS,GAMA9F,KAAA4Q,IAAAxM,EAAAyB,EAAAC,EAAAqN,GAEAnT,KAMA,IAAA7B,EAAAmB,KAAAyT,MAAA2N,EAAAF,IAAAE,EAAAF,IACAH,EAAAI,IAAAJ,EAAAI,IACAH,EAAAF,IAAAE,EAAAF,IAYA,OAVA9gB,KAAA2T,IAAA9U,GAAA,OAAAA,EAAA,GAKA6B,KAAAoE,GAAAsc,EAAAF,GAAAriB,EACA6B,KAAA6F,GAAAwa,EAAAI,GAAAtiB,EACA6B,KAAA8F,GAAAwa,EAAAF,GAAAjiB,EACA6B,KAAAmQ,EAAA7Q,KAAA6kB,MAAAhE,EAAAI,EAAAI,EAAA,MAEA3gB,MAIAyF,IAAA,SAAA+L,GAOA,OALAxR,KAAAoE,EAAA9E,KAAAmG,IAAAzF,KAAAoE,EAAAoN,EAAApN,GACApE,KAAA6F,EAAAvG,KAAAmG,IAAAzF,KAAA6F,EAAA2L,EAAA3L,GACA7F,KAAA8F,EAAAxG,KAAAmG,IAAAzF,KAAA8F,EAAA0L,EAAA1L,GACA9F,KAAAmQ,EAAA7Q,KAAAmG,IAAAzF,KAAAmQ,EAAAqB,EAAArB,GAEAnQ,MAIA0F,IAAA,SAAA8L,GAOA,OALAxR,KAAAoE,EAAA9E,KAAAoG,IAAA1F,KAAAoE,EAAAoN,EAAApN,GACApE,KAAA6F,EAAAvG,KAAAoG,IAAA1F,KAAA6F,EAAA2L,EAAA3L,GACA7F,KAAA8F,EAAAxG,KAAAoG,IAAA1F,KAAA8F,EAAA0L,EAAA1L,GACA9F,KAAAmQ,EAAA7Q,KAAAoG,IAAA1F,KAAAmQ,EAAAqB,EAAArB,GAEAnQ,MAIAqO,MAAA,SAAA5I,EAAAC,GASA,OALA1F,KAAAoE,EAAA9E,KAAAoG,IAAAD,EAAArB,EAAA9E,KAAAmG,IAAAC,EAAAtB,EAAApE,KAAAoE,IACApE,KAAA6F,EAAAvG,KAAAoG,IAAAD,EAAAI,EAAAvG,KAAAmG,IAAAC,EAAAG,EAAA7F,KAAA6F,IACA7F,KAAA8F,EAAAxG,KAAAoG,IAAAD,EAAAK,EAAAxG,KAAAmG,IAAAC,EAAAI,EAAA9F,KAAA8F,IACA9F,KAAAmQ,EAAA7Q,KAAAoG,IAAAD,EAAA0K,EAAA7Q,KAAAmG,IAAAC,EAAAyK,EAAAnQ,KAAAmQ,IAEAnQ,MAIAsS,YAAA,WAEA,IAAA7M,EAAAC,EAEA,gBAAA6M,EAAAC,GAYA,gBAVA/M,IAEAA,EAAA,IAAA0hB,GACAzhB,EAAA,IAAAyhB,IAIA1hB,EAAAmL,IAAA2B,SACA7M,EAAAkL,IAAA4B,SAEAxS,KAAAqO,MAAA5I,EAAAC,IAhBA,GAsBA+M,YAAA,SAAAhN,EAAAC,GAEA,IAAApD,EAAAtC,KAAAsC,SAEA,OAAAtC,KAAAoS,aAAA9P,GAAA,GAAA4P,eAAA5S,KAAAoG,IAAAD,EAAAnG,KAAAmG,IAAAC,EAAApD,MAIA4B,MAAA,WAOA,OALAlE,KAAAoE,EAAA9E,KAAA4E,MAAAlE,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAA4E,MAAAlE,KAAA6F,GACA7F,KAAA8F,EAAAxG,KAAA4E,MAAAlE,KAAA8F,GACA9F,KAAAmQ,EAAA7Q,KAAA4E,MAAAlE,KAAAmQ,GAEAnQ,MAIA2P,KAAA,WAOA,OALA3P,KAAAoE,EAAA9E,KAAAqQ,KAAA3P,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAAqQ,KAAA3P,KAAA6F,GACA7F,KAAA8F,EAAAxG,KAAAqQ,KAAA3P,KAAA8F,GACA9F,KAAAmQ,EAAA7Q,KAAAqQ,KAAA3P,KAAAmQ,GAEAnQ,MAIA0S,MAAA,WAOA,OALA1S,KAAAoE,EAAA9E,KAAAoT,MAAA1S,KAAAoE,GACApE,KAAA6F,EAAAvG,KAAAoT,MAAA1S,KAAA6F,GACA7F,KAAA8F,EAAAxG,KAAAoT,MAAA1S,KAAA8F,GACA9F,KAAAmQ,EAAA7Q,KAAAoT,MAAA1S,KAAAmQ,GAEAnQ,MAIA2S,YAAA,WAOA,OALA3S,KAAAoE,EAAApE,KAAAoE,EAAA,EAAA9E,KAAAqQ,KAAA3P,KAAAoE,GAAA9E,KAAA4E,MAAAlE,KAAAoE,GACApE,KAAA6F,EAAA7F,KAAA6F,EAAA,EAAAvG,KAAAqQ,KAAA3P,KAAA6F,GAAAvG,KAAA4E,MAAAlE,KAAA6F,GACA7F,KAAA8F,EAAA9F,KAAA8F,EAAA,EAAAxG,KAAAqQ,KAAA3P,KAAA8F,GAAAxG,KAAA4E,MAAAlE,KAAA8F,GACA9F,KAAAmQ,EAAAnQ,KAAAmQ,EAAA,EAAA7Q,KAAAqQ,KAAA3P,KAAAmQ,GAAA7Q,KAAA4E,MAAAlE,KAAAmQ,GAEAnQ,MAIA4S,OAAA,WAOA,OALA5S,KAAAoE,GAAApE,KAAAoE,EACApE,KAAA6F,GAAA7F,KAAA6F,EACA7F,KAAA8F,GAAA9F,KAAA8F,EACA9F,KAAAmQ,GAAAnQ,KAAAmQ,EAEAnQ,MAIA6S,IAAA,SAAArB,GAEA,OAAAxR,KAAAoE,EAAAoN,EAAApN,EAAApE,KAAA6F,EAAA2L,EAAA3L,EAAA7F,KAAA8F,EAAA0L,EAAA1L,EAAA9F,KAAAmQ,EAAAqB,EAAArB,GAIA2C,SAAA,WAEA,OAAA9S,KAAAoE,EAAApE,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA6F,EAAA7F,KAAA8F,EAAA9F,KAAA8F,EAAA9F,KAAAmQ,EAAAnQ,KAAAmQ,GAIA7N,OAAA,WAEA,OAAAhD,KAAAyT,KAAA/S,KAAAoE,EAAApE,KAAAoE,EAAApE,KAAA6F,EAAA7F,KAAA6F,EAAA7F,KAAA8F,EAAA9F,KAAA8F,EAAA9F,KAAAmQ,EAAAnQ,KAAAmQ,IAIA6C,gBAAA,WAEA,OAAA1T,KAAA2T,IAAAjT,KAAAoE,GAAA9E,KAAA2T,IAAAjT,KAAA6F,GAAAvG,KAAA2T,IAAAjT,KAAA8F,GAAAxG,KAAA2T,IAAAjT,KAAAmQ,IAIA+C,UAAA,WAEA,OAAAlT,KAAAoS,aAAApS,KAAAsC,UAAA,IAIAoR,UAAA,SAAApR,GAEA,OAAAtC,KAAAkT,YAAAhB,eAAA5P,IAIAsM,KAAA,SAAA4C,EAAAmC,GAOA,OALA3T,KAAAoE,IAAAoN,EAAApN,EAAApE,KAAAoE,GAAAuP,EACA3T,KAAA6F,IAAA2L,EAAA3L,EAAA7F,KAAA6F,GAAA8N,EACA3T,KAAA8F,IAAA0L,EAAA1L,EAAA9F,KAAA8F,GAAA6N,EACA3T,KAAAmQ,IAAAqB,EAAArB,EAAAnQ,KAAAmQ,GAAAwD,EAEA3T,MAIA4T,YAAA,SAAApR,EAAAqR,EAAAF,GAEA,OAAA3T,KAAA+R,WAAA8B,EAAArR,GAAA0P,eAAAyB,GAAAlC,IAAAjP,IAIAsR,OAAA,SAAAtC,GAEA,OAAAA,EAAApN,IAAApE,KAAAoE,GAAAoN,EAAA3L,IAAA7F,KAAA6F,GAAA2L,EAAA1L,IAAA9F,KAAA8F,GAAA0L,EAAArB,IAAAnQ,KAAAmQ,GAIA4D,UAAA,SAAAxO,EAAA3G,GASA,gBAPAA,MAAA,GAEAoB,KAAAoE,EAAAmB,EAAA3G,GACAoB,KAAA6F,EAAAN,EAAA3G,EAAA,GACAoB,KAAA8F,EAAAP,EAAA3G,EAAA,GACAoB,KAAAmQ,EAAA5K,EAAA3G,EAAA,GAEAoB,MAIAgU,QAAA,SAAAzO,EAAA3G,GAUA,gBARA2G,mBACA3G,MAAA,GAEA2G,EAAA3G,GAAAoB,KAAAoE,EACAmB,EAAA3G,EAAA,GAAAoB,KAAA6F,EACAN,EAAA3G,EAAA,GAAAoB,KAAA8F,EACAP,EAAA3G,EAAA,GAAAoB,KAAAmQ,EAEA5K,GAIA0O,oBAAA,SAAAC,EAAA1P,EAAA5F,GAaA,gBAXAA,GAEAiE,QAAA6O,KAAA,uEAIA1R,KAAAoE,EAAA8P,EAAAC,KAAA3P,GACAxE,KAAA6F,EAAAqO,EAAAE,KAAA5P,GACAxE,KAAA8F,EAAAoO,EAAA4G,KAAAtW,GACAxE,KAAAmQ,EAAA+D,EAAAyW,KAAAnmB,GAEAxE,QAuCAonB,GAAAppB,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAA8V,GAEAwD,uBAEAC,QAAA,SAAAla,EAAAE,GAEA7Q,KAAA2Q,WAAA3Q,KAAA6Q,aAEA7Q,KAAA2Q,QACA3Q,KAAA6Q,SAEA7Q,KAAAoqB,WAIApqB,KAAAwnB,SAAA5W,IAAA,IAAAD,EAAAE,GACA7Q,KAAAsnB,QAAA1W,IAAA,IAAAD,EAAAE,IAIAQ,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAaA,OAXA/B,KAAA2Q,MAAA5O,EAAA4O,MACA3Q,KAAA6Q,OAAA9O,EAAA8O,OAEA7Q,KAAAwnB,SAAAjW,KAAAxP,EAAAylB,UAEAxnB,KAAAynB,QAAA1lB,EAAA0lB,QAAApW,QAEArR,KAAA2nB,YAAA5lB,EAAA4lB,YACA3nB,KAAA4nB,cAAA7lB,EAAA6lB,cACA5nB,KAAA6nB,aAAA9lB,EAAA8lB,aAEA7nB,MAIAoqB,QAAA,WAEApqB,KAAAqF,eAAuBV,KAAA,eAmBvBmjB,GAAA9pB,UAAAZ,OAAA0rB,OAAA1B,GAAAppB,WACA8pB,GAAA9pB,UAAAsT,YAAAwW,GAEAA,GAAA9pB,UAAA8sB,2BAqBA7C,GAAAjqB,UAAAZ,OAAA0rB,OAAA/C,GAAA/nB,WACAiqB,GAAAjqB,UAAAsT,YAAA2W,GAEAA,GAAAjqB,UAAA+sB,iBAcA3tB,OAAA4D,OAAAmnB,GAAAnqB,WAEAgtB,UAEApa,IAAA,SAAAnL,EAAAC,GAKA,OAHA1F,KAAAyF,IAAA8L,KAAA9L,GACAzF,KAAA0F,IAAA6L,KAAA7L,GAEA1F,MAIAirB,aAAA,SAAA1lB,GAUA,IARA,IAAA2lB,EAAA9C,IACA+C,EAAA/C,IACAgD,EAAAhD,IAEAiD,OACAC,OACAC,OAEA7uB,EAAA,EAAAC,EAAA4I,EAAAjD,OAAoC5F,EAAAC,EAAOD,GAAA,GAE3C,IAAA0H,EAAAmB,EAAA7I,GACAmJ,EAAAN,EAAA7I,EAAA,GACAoJ,EAAAP,EAAA7I,EAAA,GAEA0H,EAAA8mB,MAAA9mB,GACAyB,EAAAslB,MAAAtlB,GACAC,EAAAslB,MAAAtlB,GAEA1B,EAAAinB,MAAAjnB,GACAyB,EAAAylB,MAAAzlB,GACAC,EAAAylB,MAAAzlB,GAOA,OAHA9F,KAAAyF,IAAAmL,IAAAsa,EAAAC,EAAAC,GACAprB,KAAA0F,IAAAkL,IAAAya,EAAAC,EAAAC,GAEAvrB,MAIAwrB,uBAAA,SAAAtX,GAUA,IARA,IAAAgX,EAAA9C,IACA+C,EAAA/C,IACAgD,EAAAhD,IAEAiD,OACAC,OACAC,OAEA7uB,EAAA,EAAAC,EAAAuX,EAAA2G,MAAuCne,EAAAC,EAAOD,IAAA,CAE9C,IAAA0H,EAAA8P,EAAAC,KAAAzX,GACAmJ,EAAAqO,EAAAE,KAAA1X,GACAoJ,EAAAoO,EAAA4G,KAAApe,GAEA0H,EAAA8mB,MAAA9mB,GACAyB,EAAAslB,MAAAtlB,GACAC,EAAAslB,MAAAtlB,GAEA1B,EAAAinB,MAAAjnB,GACAyB,EAAAylB,MAAAzlB,GACAC,EAAAylB,MAAAzlB,GAOA,OAHA9F,KAAAyF,IAAAmL,IAAAsa,EAAAC,EAAAC,GACAprB,KAAA0F,IAAAkL,IAAAya,EAAAC,EAAAC,GAEAvrB,MAIAyrB,cAAA,SAAAjG,GAEAxlB,KAAA0rB,YAEA,QAAAhvB,EAAA,EAAAivB,EAAAnG,EAAAljB,OAAsC5F,EAAAivB,EAAQjvB,IAE9CsD,KAAA4rB,cAAApG,EAAA9oB,IAIA,OAAAsD,MAIA6rB,qBAAA,WAEA,IAAArpB,EAAA,IAAAgO,GAEA,gBAAA8D,EAAAwX,GAEA,IAAAC,EAAAvpB,EAAA+O,KAAAua,GAAA5Z,eAAA,IAKA,OAHAlS,KAAAyF,IAAA8L,KAAA+C,GAAAxC,IAAAia,GACA/rB,KAAA0F,IAAA6L,KAAA+C,GAAA7C,IAAAsa,GAEA/rB,MAXA,GAiBAgsB,cAAA,SAAAluB,GAIA,OAFAkC,KAAA0rB,YAEA1rB,KAAAisB,eAAAnuB,IAIAuT,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAmU,GAKA,OAHA1lB,KAAAyF,IAAA8L,KAAAmU,EAAAjgB,KACAzF,KAAA0F,IAAA6L,KAAAmU,EAAAhgB,KAEA1F,MAIA0rB,UAAA,WAKA,OAHA1rB,KAAAyF,IAAArB,EAAApE,KAAAyF,IAAAI,EAAA7F,KAAAyF,IAAAK,EAAAsiB,IACApoB,KAAA0F,IAAAtB,EAAApE,KAAA0F,IAAAG,EAAA7F,KAAA0F,IAAAI,OAEA9F,MAIAksB,QAAA,WAIA,OAAAlsB,KAAA0F,IAAAtB,EAAApE,KAAAyF,IAAArB,GAAApE,KAAA0F,IAAAG,EAAA7F,KAAAyF,IAAAI,GAAA7F,KAAA0F,IAAAI,EAAA9F,KAAAyF,IAAAK,GAIAqmB,UAAA,SAAArqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,mDACA5P,EAAA,IAAA0O,IAIAxQ,KAAAksB,UAAApqB,EAAA8O,IAAA,OAAA9O,EAAA6P,WAAA3R,KAAAyF,IAAAzF,KAAA0F,KAAAwM,eAAA,KAIAka,QAAA,SAAAtqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,iDACA5P,EAAA,IAAA0O,IAIAxQ,KAAAksB,UAAApqB,EAAA8O,IAAA,OAAA9O,EAAAiQ,WAAA/R,KAAA0F,IAAA1F,KAAAyF,MAIAmmB,cAAA,SAAAS,GAKA,OAHArsB,KAAAyF,QAAA4mB,GACArsB,KAAA0F,QAAA2mB,GAEArsB,MAIAssB,eAAA,SAAA3mB,GAKA,OAHA3F,KAAAyF,IAAAqM,IAAAnM,GACA3F,KAAA0F,IAAA+L,IAAA9L,GAEA3F,MAIAusB,eAAA,SAAAvb,GAKA,OAHAhR,KAAAyF,IAAAmM,WAAAZ,GACAhR,KAAA0F,IAAAkM,UAAAZ,GAEAhR,MAIAisB,eAAA,WAKA,IAAAO,EAAA9vB,EAAAC,EAEA6F,EAAA,IAAAgO,GAEA,SAAAic,EAAAC,GAEA,IAAAC,EAAAD,EAAAC,SAEA,YAAAA,EAEA,GAAAA,EAAAC,WAAA,CAEA,IAAAC,EAAAF,EAAAE,SAEA,IAAAnwB,EAAA,EAAAC,EAAAkwB,EAAAvqB,OAAsC5F,EAAAC,EAAOD,IAE7C8F,EAAA+O,KAAAsb,EAAAnwB,IACA8F,EAAAuY,aAAA2R,EAAAvJ,aAEAqJ,EAAAZ,cAAAppB,QAIK,GAAAmqB,EAAAG,iBAAA,CAEL,IAAA5Y,EAAAyY,EAAAI,WAAAhQ,SAEA,YAAA7I,EAEA,IAAAxX,EAAA,EAAAC,EAAAuX,EAAA2G,MAAuCne,EAAAC,EAAOD,IAE9C8F,EAAAyR,oBAAAC,EAAAxX,GAAAqe,aAAA2R,EAAAvJ,aAEAqJ,EAAAZ,cAAAppB,IAYA,gBAAA1E,GAQA,OANA0uB,EAAAxsB,KAEAlC,EAAAkvB,sBAEAlvB,EAAA2uB,YAEAzsB,MA1DA,GAgEAitB,cAAA,SAAAZ,GAEA,QAAAA,EAAAjoB,EAAApE,KAAAyF,IAAArB,GAAAioB,EAAAjoB,EAAApE,KAAA0F,IAAAtB,GACAioB,EAAAxmB,EAAA7F,KAAAyF,IAAAI,GAAAwmB,EAAAxmB,EAAA7F,KAAA0F,IAAAG,GACAwmB,EAAAvmB,EAAA9F,KAAAyF,IAAAK,GAAAumB,EAAAvmB,EAAA9F,KAAA0F,IAAAI,IAIAonB,YAAA,SAAAxH,GAEA,OAAA1lB,KAAAyF,IAAArB,GAAAshB,EAAAjgB,IAAArB,GAAAshB,EAAAhgB,IAAAtB,GAAApE,KAAA0F,IAAAtB,GACApE,KAAAyF,IAAAI,GAAA6f,EAAAjgB,IAAAI,GAAA6f,EAAAhgB,IAAAG,GAAA7F,KAAA0F,IAAAG,GACA7F,KAAAyF,IAAAK,GAAA4f,EAAAjgB,IAAAK,GAAA4f,EAAAhgB,IAAAI,GAAA9F,KAAA0F,IAAAI,GAIAqnB,aAAA,SAAAd,EAAAvqB,GAYA,gBAPAA,IAEAe,QAAA6O,KAAA,sDACA5P,EAAA,IAAA0O,IAIA1O,EAAA8O,KACAyb,EAAAjoB,EAAApE,KAAAyF,IAAArB,IAAApE,KAAA0F,IAAAtB,EAAApE,KAAAyF,IAAArB,IACAioB,EAAAxmB,EAAA7F,KAAAyF,IAAAI,IAAA7F,KAAA0F,IAAAG,EAAA7F,KAAAyF,IAAAI,IACAwmB,EAAAvmB,EAAA9F,KAAAyF,IAAAK,IAAA9F,KAAA0F,IAAAI,EAAA9F,KAAAyF,IAAAK,KAKAsnB,cAAA,SAAA1H,GAGA,QAAAA,EAAAhgB,IAAAtB,EAAApE,KAAAyF,IAAArB,GAAAshB,EAAAjgB,IAAArB,EAAApE,KAAA0F,IAAAtB,GACAshB,EAAAhgB,IAAAG,EAAA7F,KAAAyF,IAAAI,GAAA6f,EAAAjgB,IAAAI,EAAA7F,KAAA0F,IAAAG,GACA6f,EAAAhgB,IAAAI,EAAA9F,KAAAyF,IAAAK,GAAA4f,EAAAjgB,IAAAK,EAAA9F,KAAA0F,IAAAI,IAIAunB,kBAEA5H,GAAA,IAAAjV,GAEA,SAAAqV,GAMA,OAHA7lB,KAAAstB,WAAAzH,EAAAvR,OAAAmR,IAGAA,GAAAnS,kBAAAuS,EAAAvR,SAAAuR,EAAArB,OAAAqB,EAAArB,SAMA+I,gBAAA,SAAAC,GAKA,IAAA/nB,EAAAC,EAsCA,OApCA8nB,EAAAvJ,OAAA7f,EAAA,GAEAqB,EAAA+nB,EAAAvJ,OAAA7f,EAAApE,KAAAyF,IAAArB,EACAsB,EAAA8nB,EAAAvJ,OAAA7f,EAAApE,KAAA0F,IAAAtB,IAIAqB,EAAA+nB,EAAAvJ,OAAA7f,EAAApE,KAAA0F,IAAAtB,EACAsB,EAAA8nB,EAAAvJ,OAAA7f,EAAApE,KAAAyF,IAAArB,GAIAopB,EAAAvJ,OAAApe,EAAA,GAEAJ,GAAA+nB,EAAAvJ,OAAApe,EAAA7F,KAAAyF,IAAAI,EACAH,GAAA8nB,EAAAvJ,OAAApe,EAAA7F,KAAA0F,IAAAG,IAIAJ,GAAA+nB,EAAAvJ,OAAApe,EAAA7F,KAAA0F,IAAAG,EACAH,GAAA8nB,EAAAvJ,OAAApe,EAAA7F,KAAAyF,IAAAI,GAIA2nB,EAAAvJ,OAAAne,EAAA,GAEAL,GAAA+nB,EAAAvJ,OAAAne,EAAA9F,KAAAyF,IAAAK,EACAJ,GAAA8nB,EAAAvJ,OAAAne,EAAA9F,KAAA0F,IAAAI,IAIAL,GAAA+nB,EAAAvJ,OAAAne,EAAA9F,KAAA0F,IAAAI,EACAJ,GAAA8nB,EAAAvJ,OAAAne,EAAA9F,KAAAyF,IAAAK,GAIAL,GAAA+nB,EAAAjF,UAAA7iB,GAAA8nB,EAAAjF,UAIAkF,mBAAA,WAGA,IAAAC,EAAA,IAAAld,GACAhO,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GAGAmd,EAAA,IAAAnd,GACAod,EAAA,IAAApd,GACAqd,EAAA,IAAArd,GAEAsd,EAAA,IAAAtd,GAEA8D,EAAA,IAAA9D,GACAud,EAAA,IAAAvd,GAEAwd,EAAA,IAAAxd,GAEA,SAAAyd,EAAAC,GAEA,IAAAxxB,EAAAyxB,EAEA,IAAAzxB,EAAA,EAAAyxB,EAAAD,EAAA5rB,OAAA,EAAoC5F,GAAAyxB,EAAQzxB,GAAA,GAE5CoxB,EAAA/Z,UAAAma,EAAAxxB,GAEA,IAAAe,EAAAswB,EAAA3pB,EAAA9E,KAAA2T,IAAA6a,EAAA1pB,GAAA2pB,EAAAloB,EAAAvG,KAAA2T,IAAA6a,EAAAjoB,GAAAkoB,EAAAjoB,EAAAxG,KAAA2T,IAAA6a,EAAAhoB,GAEA2iB,EAAAiF,EAAA7a,IAAAib,GACAnI,EAAAnjB,EAAAqQ,IAAAib,GACAlI,EAAA/R,EAAAhB,IAAAib,GAEA,GAAAxuB,KAAAoG,KAAApG,KAAAoG,IAAA+iB,EAAA9C,EAAAC,GAAAtmB,KAAAmG,IAAAgjB,EAAA9C,EAAAC,IAAAnoB,EAIA,SAMA,SAIA,gBAAA2wB,GAEA,GAAApuB,KAAAksB,UAEA,SAKAlsB,KAAAmsB,UAAA7X,GACAyZ,EAAAhc,WAAA/R,KAAA0F,IAAA4O,GAGAoZ,EAAA3b,WAAAqc,EAAAhuB,EAAAkU,GACA9R,EAAAuP,WAAAqc,EAAA/tB,EAAAiU,GACAT,EAAA9B,WAAAqc,EAAArxB,EAAAuX,GAGAqZ,EAAA5b,WAAAvP,EAAAkrB,GACAE,EAAA7b,WAAA8B,EAAArR,GACAqrB,EAAA9b,WAAA2b,EAAA7Z,GAKA,IAAAqa,GACA,GAAAP,EAAA7nB,EAAA6nB,EAAA9nB,EAAA,GAAA+nB,EAAA9nB,EAAA8nB,EAAA/nB,EAAA,GAAAgoB,EAAA/nB,EAAA+nB,EAAAhoB,EACA8nB,EAAA7nB,EAAA,GAAA6nB,EAAAvpB,EAAAwpB,EAAA9nB,EAAA,GAAA8nB,EAAAxpB,EAAAypB,EAAA/nB,EAAA,GAAA+nB,EAAAzpB,GACAupB,EAAA9nB,EAAA8nB,EAAAvpB,EAAA,GAAAwpB,EAAA/nB,EAAA+nB,EAAAxpB,EAAA,GAAAypB,EAAAhoB,EAAAgoB,EAAAzpB,EAAA,GAEA,QAAA6pB,EAAAC,MAQAD,EADAC,GAAA,sBASAF,EAAAvV,aAAAkV,EAAAC,GAEAK,EADAC,GAAAF,EAAA5pB,EAAA4pB,EAAAnoB,EAAAmoB,EAAAloB,MA9FA,GAqGAwnB,WAAA,SAAAjB,EAAAvqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,oDACA5P,EAAA,IAAA0O,IAIA1O,EAAAyP,KAAA8a,GAAAhe,MAAArO,KAAAyF,IAAAzF,KAAA0F,MAIA2oB,gBAAA,WAEA,IAAA7rB,EAAA,IAAAgO,GAEA,gBAAA6b,GAGA,OADA7pB,EAAA+O,KAAA8a,GAAAhe,MAAArO,KAAAyF,IAAAzF,KAAA0F,KACAoM,IAAAua,GAAA/pB,UAPA,GAaAgsB,kBAAA,WAEA,IAAA9rB,EAAA,IAAAgO,GAEA,gBAAA1O,GAaA,gBAXAA,IAEAe,QAAA6O,KAAA,2DACA5P,EAAA,IAAAumB,IAIAroB,KAAAmsB,UAAArqB,EAAAwS,QAEAxS,EAAA0iB,OAAA,GAAAxkB,KAAAosB,QAAA5pB,GAAAF,SAEAR,GAjBA,GAuBAysB,UAAA,SAAA7I,GAQA,OANA1lB,KAAAyF,IAAAC,IAAAggB,EAAAjgB,KACAzF,KAAA0F,IAAAD,IAAAigB,EAAAhgB,KAGA1F,KAAAksB,WAAAlsB,KAAA0rB,YAEA1rB,MAIAwuB,MAAA,SAAA9I,GAKA,OAHA1lB,KAAAyF,QAAAigB,EAAAjgB,KACAzF,KAAA0F,QAAAggB,EAAAhgB,KAEA1F,MAIA+a,cAEAyK,IACA,IAAAhV,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,GACA,IAAAA,IAGA,SAAA5K,GAGA,OAAA5F,KAAAksB,UAAAlsB,MAGAwlB,GAAA,GAAA5U,IAAA5Q,KAAAyF,IAAArB,EAAApE,KAAAyF,IAAAI,EAAA7F,KAAAyF,IAAAK,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAAyF,IAAArB,EAAApE,KAAAyF,IAAAI,EAAA7F,KAAA0F,IAAAI,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAAyF,IAAArB,EAAApE,KAAA0F,IAAAG,EAAA7F,KAAAyF,IAAAK,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAAyF,IAAArB,EAAApE,KAAA0F,IAAAG,EAAA7F,KAAA0F,IAAAI,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAA0F,IAAAtB,EAAApE,KAAAyF,IAAAI,EAAA7F,KAAAyF,IAAAK,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAA0F,IAAAtB,EAAApE,KAAAyF,IAAAI,EAAA7F,KAAA0F,IAAAI,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAA0F,IAAAtB,EAAApE,KAAA0F,IAAAG,EAAA7F,KAAAyF,IAAAK,GAAAiV,aAAAnV,GACA4f,GAAA,GAAA5U,IAAA5Q,KAAA0F,IAAAtB,EAAApE,KAAA0F,IAAAG,EAAA7F,KAAA0F,IAAAI,GAAAiV,aAAAnV,GAEA5F,KAAAyrB,cAAAjG,IAEAxlB,QAMAulB,UAAA,SAAA3mB,GAKA,OAHAoB,KAAAyF,IAAAgM,IAAA7S,GACAoB,KAAA0F,IAAA+L,IAAA7S,GAEAoB,MAIA8T,OAAA,SAAA4R,GAEA,OAAAA,EAAAjgB,IAAAqO,OAAA9T,KAAAyF,MAAAigB,EAAAhgB,IAAAoO,OAAA9T,KAAA0F,QAkBAtI,OAAA4D,OAAAqnB,GAAArqB,WAEA4S,IAAA,SAAA0D,EAAAkQ,GAKA,OAHAxkB,KAAAsU,OAAA/C,KAAA+C,GACAtU,KAAAwkB,SAEAxkB,MAIAyrB,eAEA/F,GAAA,IAAAyC,GAEA,SAAA3C,EAAAiJ,GAEA,IAAAna,EAAAtU,KAAAsU,gBAEAma,EAEAna,EAAA/C,KAAAkd,GAIA/I,GAAA+F,cAAAjG,GAAA2G,UAAA7X,GAMA,IAFA,IAAAoa,EAAA,EAEAhyB,EAAA,EAAAivB,EAAAnG,EAAAljB,OAAuC5F,EAAAivB,EAAQjvB,IAE/CgyB,EAAApvB,KAAAoG,IAAAgpB,EAAApa,EAAAhB,kBAAAkS,EAAA9oB,KAMA,OAFAsD,KAAAwkB,OAAAllB,KAAAyT,KAAA2b,GAEA1uB,OAMAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAsU,GAKA,OAHA7lB,KAAAsU,OAAA/C,KAAAsU,EAAAvR,QACAtU,KAAAwkB,OAAAqB,EAAArB,OAEAxkB,MAIA2uB,MAAA,WAEA,OAAA3uB,KAAAwkB,QAAA,GAIAyI,cAAA,SAAAZ,GAEA,OAAAA,EAAA/Y,kBAAAtT,KAAAsU,SAAAtU,KAAAwkB,OAAAxkB,KAAAwkB,QAIA6J,gBAAA,SAAAhC,GAEA,OAAAA,EAAAhZ,WAAArT,KAAAsU,QAAAtU,KAAAwkB,QAIA6I,iBAAA,SAAAxH,GAEA,IAAA+I,EAAA5uB,KAAAwkB,OAAAqB,EAAArB,OAEA,OAAAqB,EAAAvR,OAAAhB,kBAAAtT,KAAAsU,SAAAsa,KAIAxB,cAAA,SAAA1H,GAEA,OAAAA,EAAA2H,iBAAArtB,OAIAutB,gBAAA,SAAAC,GAEA,OAAAluB,KAAA2T,IAAAua,EAAAa,gBAAAruB,KAAAsU,UAAAtU,KAAAwkB,QAIA8I,WAAA,SAAAjB,EAAAvqB,GAEA,IAAA+sB,EAAA7uB,KAAAsU,OAAAhB,kBAAA+Y,GAkBA,gBAhBAvqB,IAEAe,QAAA6O,KAAA,sDACA5P,EAAA,IAAA0O,IAIA1O,EAAAyP,KAAA8a,GAEAwC,EAAA7uB,KAAAwkB,OAAAxkB,KAAAwkB,SAEA1iB,EAAAgQ,IAAA9R,KAAAsU,QAAApB,YACApR,EAAAoQ,eAAAlS,KAAAwkB,QAAA/S,IAAAzR,KAAAsU,SAIAxS,GAIAgtB,eAAA,SAAAhtB,GAYA,gBAVAA,IAEAe,QAAA6O,KAAA,0DACA5P,EAAA,IAAAqmB,IAIArmB,EAAA8O,IAAA5Q,KAAAsU,OAAAtU,KAAAsU,QACAxS,EAAAyqB,eAAAvsB,KAAAwkB,QAEA1iB,GAIAiZ,aAAA,SAAAnV,GAKA,OAHA5F,KAAAsU,OAAAyG,aAAAnV,GACA5F,KAAAwkB,OAAAxkB,KAAAwkB,OAAA5e,EAAAmW,oBAEA/b,MAIAulB,UAAA,SAAA3mB,GAIA,OAFAoB,KAAAsU,OAAA7C,IAAA7S,GAEAoB,MAIA8T,OAAA,SAAA+R,GAEA,OAAAA,EAAAvR,OAAAR,OAAA9T,KAAAsU,SAAAuR,EAAArB,SAAAxkB,KAAAwkB,UAmBApnB,OAAA4D,OAAAsnB,GAAAtqB,WAEA4S,IAAA,SAAAqT,EAAAsE,GAKA,OAHAvoB,KAAAikB,OAAA1S,KAAA0S,GACAjkB,KAAAuoB,WAEAvoB,MAIA+uB,cAAA,SAAA3qB,EAAAyB,EAAAC,EAAAqK,GAKA,OAHAnQ,KAAAikB,OAAArT,IAAAxM,EAAAyB,EAAAC,GACA9F,KAAAuoB,SAAApY,EAEAnQ,MAIAgvB,8BAAA,SAAA/K,EAAAoI,GAKA,OAHArsB,KAAAikB,OAAA1S,KAAA0S,GACAjkB,KAAAuoB,UAAA8D,EAAAxZ,IAAA7S,KAAAikB,QAEAjkB,MAIAivB,sBAAA,WAEA,IAAAzsB,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GAEA,gBAAApQ,EAAAC,EAAAtD,GAEA,IAAAknB,EAAAzhB,EAAAuP,WAAAhV,EAAAsD,GAAAijB,MAAAzP,EAAA9B,WAAA3R,EAAAC,IAAA6S,YAMA,OAFAlT,KAAAgvB,8BAAA/K,EAAA7jB,GAEAJ,MAbA,GAmBAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAic,GAKA,OAHAxtB,KAAAikB,OAAA1S,KAAAic,EAAAvJ,QACAjkB,KAAAuoB,SAAAiF,EAAAjF,SAEAvoB,MAIAkT,UAAA,WAIA,IAAAgc,EAAA,EAAAlvB,KAAAikB,OAAA3hB,SAIA,OAHAtC,KAAAikB,OAAA/R,eAAAgd,GACAlvB,KAAAuoB,UAAA2G,EAEAlvB,MAIA4S,OAAA,WAKA,OAHA5S,KAAAuoB,WAAA,EACAvoB,KAAAikB,OAAArR,SAEA5S,MAIAquB,gBAAA,SAAAhC,GAEA,OAAArsB,KAAAikB,OAAApR,IAAAwZ,GAAArsB,KAAAuoB,UAIA4G,iBAAA,SAAAtJ,GAEA,OAAA7lB,KAAAquB,gBAAAxI,EAAAvR,QAAAuR,EAAArB,QAIA4K,aAAA,SAAA/C,EAAAvqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,uDACA5P,EAAA,IAAA0O,IAIA1O,EAAAyP,KAAAvR,KAAAikB,QAAA/R,gBAAAlS,KAAAquB,gBAAAhC,IAAA5a,IAAA4a,IAIAgD,cAAA,WAEA,IAAA7sB,EAAA,IAAAgO,GAEA,gBAAA8e,EAAAxtB,YAEAA,IAEAe,QAAA6O,KAAA,wDACA5P,EAAA,IAAA0O,IAIA,IAAA+e,EAAAD,EAAAE,MAAAhtB,GAEAitB,EAAAzvB,KAAAikB,OAAApR,IAAA0c,GAEA,OAAAE,EAGA,WAAAzvB,KAAAquB,gBAAAiB,EAAAI,OAEA5tB,EAAAyP,KAAA+d,EAAAI,cASA,IAAAtxB,IAAAkxB,EAAAI,MAAA7c,IAAA7S,KAAAikB,QAAAjkB,KAAAuoB,UAAAkH,EAEA,OAAArxB,EAAA,GAAAA,EAAA,SAMA0D,EAAAyP,KAAAge,GAAArd,eAAA9T,GAAAqT,IAAA6d,EAAAI,QAvCA,GA6CAC,eAAA,SAAAL,GAIA,IAAAM,EAAA5vB,KAAAquB,gBAAAiB,EAAAI,OACAG,EAAA7vB,KAAAquB,gBAAAiB,EAAAQ,KAEA,OAAAF,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAIAxC,cAAA,SAAA1H,GAEA,OAAAA,EAAA6H,gBAAAvtB,OAIAqtB,iBAAA,SAAAxH,GAEA,OAAAA,EAAA0H,gBAAAvtB,OAIA+vB,cAAA,SAAAjuB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,wDACA5P,EAAA,IAAA0O,IAIA1O,EAAAyP,KAAAvR,KAAAikB,QAAA/R,gBAAAlS,KAAAuoB,WAIAxN,aAAA,WAEA,IAAAvY,EAAA,IAAAgO,GACAwf,EAAA,IAAAvf,GAEA,gBAAA7K,EAAAqqB,GAEA,IAAAC,EAAAD,GAAAD,EAAAjL,gBAAAnf,GAEAuqB,EAAAnwB,KAAA+vB,cAAAvtB,GAAAuY,aAAAnV,GAEAqe,EAAAjkB,KAAAikB,OAAA5R,aAAA6d,GAAAhd,YAIA,OAFAlT,KAAAuoB,UAAA4H,EAAAtd,IAAAoR,GAEAjkB,MAfA,GAqBAulB,UAAA,SAAA3mB,GAIA,OAFAoB,KAAAuoB,UAAA3pB,EAAAiU,IAAA7S,KAAAikB,QAEAjkB,MAIA8T,OAAA,SAAA0Z,GAEA,OAAAA,EAAAvJ,OAAAnQ,OAAA9T,KAAAikB,SAAAuJ,EAAAjF,WAAAvoB,KAAAuoB,YA2BAnrB,OAAA4D,OAAAwnB,GAAAxqB,WAEA4S,IAAA,SAAA6X,EAAA9C,EAAAC,EAAA8C,EAAAC,EAAAC,GAEA,IAAAC,EAAA7oB,KAAA6oB,OASA,OAPAA,EAAA,GAAAtX,KAAAkX,GACAI,EAAA,GAAAtX,KAAAoU,GACAkD,EAAA,GAAAtX,KAAAqU,GACAiD,EAAA,GAAAtX,KAAAmX,GACAG,EAAA,GAAAtX,KAAAoX,GACAE,EAAA,GAAAtX,KAAAqX,GAEA5oB,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAA6e,GAIA,IAFA,IAAAvH,EAAA7oB,KAAA6oB,OAEAnsB,EAAA,EAAkBA,EAAA,EAAOA,IAEzBmsB,EAAAnsB,GAAA6U,KAAA6e,EAAAvH,OAAAnsB,IAIA,OAAAsD,MAIAqwB,cAAA,SAAAvzB,GAEA,IAAA+rB,EAAA7oB,KAAA6oB,OACAjT,EAAA9Y,EAAAmT,SACAqgB,EAAA1a,EAAA,GAAA2a,EAAA3a,EAAA,GAAA4a,EAAA5a,EAAA,GAAA6a,EAAA7a,EAAA,GACA8a,EAAA9a,EAAA,GAAA+a,EAAA/a,EAAA,GAAAgb,EAAAhb,EAAA,GAAAib,EAAAjb,EAAA,GACAkb,EAAAlb,EAAA,GAAAmb,EAAAnb,EAAA,GAAAob,EAAApb,EAAA,IAAAqb,EAAArb,EAAA,IACAsb,EAAAtb,EAAA,IAAAub,EAAAvb,EAAA,IAAAwb,EAAAxb,EAAA,IAAAyb,EAAAzb,EAAA,IASA,OAPAiT,EAAA,GAAAkG,cAAA0B,EAAAH,EAAAO,EAAAH,EAAAO,EAAAH,EAAAO,EAAAH,GAAAhe,YACA2V,EAAA,GAAAkG,cAAA0B,EAAAH,EAAAO,EAAAH,EAAAO,EAAAH,EAAAO,EAAAH,GAAAhe,YACA2V,EAAA,GAAAkG,cAAA0B,EAAAF,EAAAM,EAAAF,EAAAM,EAAAF,EAAAM,EAAAF,GAAAje,YACA2V,EAAA,GAAAkG,cAAA0B,EAAAF,EAAAM,EAAAF,EAAAM,EAAAF,EAAAM,EAAAF,GAAAje,YACA2V,EAAA,GAAAkG,cAAA0B,EAAAD,EAAAK,EAAAD,EAAAK,EAAAD,EAAAK,EAAAD,GAAAle,YACA2V,EAAA,GAAAkG,cAAA0B,EAAAD,EAAAK,EAAAD,EAAAK,EAAAD,EAAAK,EAAAD,GAAAle,YAEAlT,MAIAsxB,kBAEAzL,GAAA,IAAAwC,GAEA,SAAAvqB,GAEA,IAAA6uB,EAAA7uB,EAAA6uB,SAQA,OANA,OAAAA,EAAA4E,gBACA5E,EAAA6E,wBAEA3L,GAAAtU,KAAAob,EAAA4E,gBACAxW,aAAAjd,EAAAqlB,aAEAnjB,KAAAqtB,iBAAAxH,MAMA4L,iBAAA,WAEA,IAAA5L,EAAA,IAAAwC,GAEA,gBAAAqJ,GAMA,OAJA7L,EAAAvR,OAAA1D,IAAA,OACAiV,EAAArB,OAAA,kBACAqB,EAAA9K,aAAA2W,EAAAvO,aAEAnjB,KAAAqtB,iBAAAxH,IAVA,GAgBAwH,iBAAA,SAAAxH,GAMA,IAJA,IAAAgD,EAAA7oB,KAAA6oB,OACAvU,EAAAuR,EAAAvR,OACAqd,GAAA9L,EAAArB,OAEA9nB,EAAA,EAAkBA,EAAA,EAAOA,IAIzB,GAFAmsB,EAAAnsB,GAAA2xB,gBAAA/Z,GAEAqd,EAEA,SAMA,UAIAvE,eAEAzH,GAAA,IAAAnV,GACAoV,GAAA,IAAApV,GAEA,SAAAkV,GAIA,IAFA,IAAAmD,EAAA7oB,KAAA6oB,OAEAnsB,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAE1B,IAAA8wB,EAAA3E,EAAAnsB,GAEAipB,GAAAvhB,EAAAopB,EAAAvJ,OAAA7f,EAAA,EAAAshB,EAAAjgB,IAAArB,EAAAshB,EAAAhgB,IAAAtB,EACAwhB,GAAAxhB,EAAAopB,EAAAvJ,OAAA7f,EAAA,EAAAshB,EAAAhgB,IAAAtB,EAAAshB,EAAAjgB,IAAArB,EACAuhB,GAAA9f,EAAA2nB,EAAAvJ,OAAApe,EAAA,EAAA6f,EAAAjgB,IAAAI,EAAA6f,EAAAhgB,IAAAG,EACA+f,GAAA/f,EAAA2nB,EAAAvJ,OAAApe,EAAA,EAAA6f,EAAAhgB,IAAAG,EAAA6f,EAAAjgB,IAAAI,EACA8f,GAAA7f,EAAA0nB,EAAAvJ,OAAAne,EAAA,EAAA4f,EAAAjgB,IAAAK,EAAA4f,EAAAhgB,IAAAI,EACA8f,GAAA9f,EAAA0nB,EAAAvJ,OAAAne,EAAA,EAAA4f,EAAAhgB,IAAAI,EAAA4f,EAAAjgB,IAAAK,EAEA,IAAAmI,EAAAuf,EAAAa,gBAAA1I,IACAzX,EAAAsf,EAAAa,gBAAAzI,IAIA,GAAA3X,EAAA,GAAAC,EAAA,EAEA,SAMA,WAMA+e,cAAA,SAAAZ,GAIA,IAFA,IAAAxD,EAAA7oB,KAAA6oB,OAEAnsB,EAAA,EAAkBA,EAAA,EAAOA,IAEzB,GAAAmsB,EAAAnsB,GAAA2xB,gBAAAhC,GAAA,EAEA,SAMA,YAMA,IA6yBAuF,GA3kBAC,IACAC,kBAnOA,mFAoOAC,uBAlOA,+DAmOAC,mBAjOA,2EAkOAC,eAhOA,6aAiOAC,oBA/NA,wFAgOAC,aA9NA,2CA+NAC,mBA7NA,0CA8NAC,MA5NA,q7LA6NAC,sBA3NA,65BA4NAC,yBA1NA,2jBA2NAC,8BAzNA,6LA0NAC,4BAxNA,sHAyNAC,uBAvNA,4HAwNAC,eAtNA,0DAuNAC,oBArNA,qDAsNAC,kBApNA,mDAqNAC,aAnNA,sDAoNAC,OAlNA,4rEAmNAC,4BAjNA,qlIAkNAC,qBAhNA,iIAiNAC,4BA/MA,oJAgNAC,uBA9MA,oKA+MAC,qBA7MA,+MA8MAC,0BA5MA,qEA6MAC,mBA3MA,0DA4MAC,wBA1MA,gvFA2MAC,gBAzMA,iqDA0MAC,qBAxMA,+oBAyMAC,mBAvMA,iOAwMAC,cAtMA,ugBAuMAC,WArMA,sDAsMAC,gBApMA,sDAqMAC,aAnMA,+SAoMAC,kBAlMA,4MAmMAC,0BAjMA,0YAkMAC,kBAhMA,+HAiMAC,uBA/LA,iGAgMAC,sBA9LA,yuEA+LAC,kBA7LA,spHA8LAC,iBA5LA,m5GA6LAC,sBA3LA,wMA4LAC,2BA1LA,66CA2LAC,yBAzLA,8iBA0LAC,8BAxLA,+uJAyLAC,sBAvLA,8xFAwLAC,qBAtLA,2yBAuLAC,oBArLA,8PAsLAC,qBApLA,0IAqLAC,0BAnLA,0IAoLAC,wBAlLA,wIAmLAC,mBAjLA,wPAkLAC,aAhLA,sJAiLAC,kBA/KA,qDAgLAC,sBA9KA,0MA+KAC,2BA7KA,kFA8KAC,sBA5KA,yKA6KAC,2BA3KA,qEA4KAC,mBA1KA,gVA2KAC,wBAzKA,2KA0KAC,mBAxKA,0qBAyKAC,sBAvKA,iaAwKAC,qBAtKA,6LAuKAC,wBArKA,4zBAsKAC,QApKA,qyCAqKAC,6BAnKA,8EAoKAC,eAlKA,gHAmKAC,mBAjKA,0FAkKAC,wBAhKA,qVAiKAC,sBA/JA,yKAgKAC,2BA9JA,qEA+JAC,wBA7JA,kpNA8JAC,sBA5JA,0eA6JAC,iBA3JA,slBA4JAC,yBA1JA,4wCA2JAC,gBAzJA,kOA0JAC,qBAxJA,4gCAyJAC,gBAvJA,iYAwJAC,kBAtJA,8WAuJAC,qBArJA,0LAsJAC,0BApJA,mEAqJAC,qBAnJA,+FAoJAC,0BAlJA,g7BAmJAC,iBAjJA,iQAkJAC,eAhJA,gSAiJAC,UA/IA,yRAgJAC,kBA9IA,oFA+IAC,gBA7IA,2GA8IAC,WA5IA,6EA6IAC,gBA3IA,0JA6IAC,UA3IA,wPA4IAC,UA1IA,iOA2IAC,WAzIA,uvBA0IAC,WAxIA,oqBAyIAC,kBAvIA,+rBAwIAC,kBAtIA,otBAuIAC,cArIA,oXAsIAC,cApIA,+LAqIAC,gBAnIA,qyBAoIAC,gBAlIA,khBAmIAC,eAjIA,w8CAkIAC,eAhIA,u2BAiIAC,iBA/HA,snEAgIAC,iBA9HA,+lCA+HAC,eA7HA,uhEA8HAC,eA5HA,uqCA6HAC,kBA3HA,iwEA4HAC,kBA1HA,+mCA2HAC,YAzHA,ijBA0HAC,YAxHA,i8BAyHAC,YAvHA,8yBAwHAC,YAtHA,4mBAuHAC,YArHA,iWAsHAC,YApHA,kOA2HAC,IAEAC,MAAA,SAAAC,GAIA,IAFA,IAAAC,KAEAC,EAAA,EAAkBA,EAAAF,EAAA32B,OAAqB62B,IAAA,CAEvC,IAAAhe,EAAAnb,KAAAqR,MAAA4nB,EAAAE,IAEA,QAAAj7B,KAAAid,EAEA+d,EAAAh7B,GAAAid,EAAAjd,GAMA,OAAAg7B,GAIA7nB,MAAA,SAAA+nB,GAEA,IAAAC,KAEA,QAAAF,KAAAC,EAIA,QAAAl7B,KAFAm7B,EAAAF,MAEAC,EAAAD,GAAA,CAEA,IAAAG,EAAAF,EAAAD,GAAAj7B,GAEAo7B,MAAAC,SACAD,EAAA1U,WAAA0U,EAAA7kB,WACA6kB,EAAAxoB,WAAAwoB,EAAApX,WAAAoX,EAAA/O,WACA+O,EAAAvQ,WAEAsQ,EAAAF,GAAAj7B,GAAAo7B,EAAAjoB,QAEKhS,MAAAm6B,QAAAF,GAELD,EAAAF,GAAAj7B,GAAAo7B,EAAA9zB,QAIA6zB,EAAAF,GAAAj7B,GAAAo7B,EAQA,OAAAD,IAUAI,IAAqBC,UAAA,SAAAC,aAAA,SAAAC,KAAA,MAAAC,WAAA,QAAAC,MAAA,SACrBC,MAAA,SAAAC,OAAA,SAAAC,MAAA,EAAAC,eAAA,SAAAC,KAAA,IAAAC,WAAA,QACAC,MAAA,SAAAC,UAAA,SAAAC,UAAA,QAAAC,WAAA,QAAAC,UAAA,SAAAC,MAAA,SACAC,eAAA,QAAAC,SAAA,SAAAC,QAAA,SAAAC,KAAA,MAAAC,SAAA,IAAAC,SAAA,MACAC,cAAA,SAAAC,SAAA,SAAAC,UAAA,MAAAC,SAAA,SAAAC,UAAA,SAAAC,YAAA,QACAC,eAAA,QAAAC,WAAA,SAAAC,WAAA,SAAAC,QAAA,QAAAC,WAAA,SAAAC,aAAA,QACAC,cAAA,QAAAC,cAAA,QAAAC,cAAA,QAAAC,cAAA,MAAAC,WAAA,QACAC,SAAA,SAAAC,YAAA,MAAAC,QAAA,QAAAC,QAAA,QAAAC,WAAA,QAAAC,UAAA,SACAC,YAAA,SAAAC,YAAA,QAAAC,QAAA,SAAAC,UAAA,SAAAC,WAAA,SAAAC,KAAA,SACAC,UAAA,SAAAC,KAAA,QAAAC,MAAA,MAAAC,YAAA,SAAAC,KAAA,QAAAC,SAAA,SAAAC,QAAA,SACAC,UAAA,SAAAC,OAAA,QAAAC,MAAA,SAAAC,MAAA,SAAAC,SAAA,SAAAC,cAAA,SAAAC,UAAA,QACAC,aAAA,SAAAC,UAAA,SAAAC,WAAA,SAAAC,UAAA,SAAAC,qBAAA,SAAAC,UAAA,SACAC,WAAA,QAAAC,UAAA,SAAAC,UAAA,SAAAC,YAAA,SAAAC,cAAA,QAAAC,aAAA,QACAC,eAAA,QAAAC,eAAA,QAAAC,eAAA,SAAAC,YAAA,SAAAC,KAAA,MAAAC,UAAA,QACAC,MAAA,SAAAC,QAAA,SAAAC,OAAA,QAAAC,iBAAA,QAAAC,WAAA,IAAAC,aAAA,SACAC,aAAA,QAAAC,eAAA,QAAAC,gBAAA,QAAAC,kBAAA,MAAAC,gBAAA,QACAC,gBAAA,SAAAC,aAAA,QAAAC,UAAA,SAAAC,UAAA,SAAAC,SAAA,SAAAC,YAAA,SACAC,KAAA,IAAAC,QAAA,SAAAC,MAAA,QAAAC,UAAA,QAAAC,OAAA,SAAAC,UAAA,SAAAC,OAAA,SACAC,cAAA,SAAAC,UAAA,SAAAC,cAAA,SAAAC,cAAA,SAAAC,WAAA,SAAAC,UAAA,SACAC,KAAA,SAAAC,KAAA,SAAAC,KAAA,SAAAC,WAAA,SAAAC,OAAA,QAAAC,cAAA,QAAAC,IAAA,SAAAC,UAAA,SACAC,UAAA,QAAAC,YAAA,QAAAC,OAAA,SAAAC,WAAA,SAAAC,SAAA,QAAAC,SAAA,SACAC,OAAA,SAAAC,OAAA,SAAAC,QAAA,QAAAC,UAAA,QAAAC,UAAA,QAAAC,UAAA,QAAAC,KAAA,SACAC,YAAA,MAAAC,UAAA,QAAAC,IAAA,SAAAC,KAAA,MAAAC,QAAA,SAAAC,OAAA,SAAAC,UAAA,QACAC,OAAA,SAAAC,MAAA,SAAAC,MAAA,SAAAC,WAAA,SAAAC,OAAA,SAAAC,YAAA,UAEA,SAAAC,GAAArlC,EAAAqnB,EAAAzkB,GAEA,gBAAAykB,YAAAzkB,EAGAL,KAAA4Q,IAAAnT,GAIAuC,KAAA+iC,OAAAtlC,EAAAqnB,EAAAzkB,GAIAjD,OAAA4D,OAAA8hC,GAAA9kC,WAEAu7B,WAEA97B,EAAA,EAAAqnB,EAAA,EAAAzkB,EAAA,EAEAuQ,IAAA,SAAAlT,GAgBA,OAdAA,KAAA67B,QAEAv5B,KAAAuR,KAAA7T,GAEG,iBAAAA,EAEHsC,KAAAgjC,OAAAtlC,GAEG,iBAAAA,GAEHsC,KAAAijC,SAAAvlC,GAIAsC,MAIA+Q,UAAA,SAAAC,GAMA,OAJAhR,KAAAvC,EAAAuT,EACAhR,KAAA8kB,EAAA9T,EACAhR,KAAAK,EAAA2Q,EAEAhR,MAIAgjC,OAAA,SAAAE,GAQA,OANAA,EAAA5jC,KAAA4E,MAAAg/B,GAEAljC,KAAAvC,GAAAylC,GAAA,YACAljC,KAAA8kB,GAAAoe,GAAA,WACAljC,KAAAK,GAAA,IAAA6iC,GAAA,IAEAljC,MAIA+iC,OAAA,SAAAtlC,EAAAqnB,EAAAzkB,GAMA,OAJAL,KAAAvC,IACAuC,KAAA8kB,IACA9kB,KAAAK,IAEAL,MAIAmjC,OAAA,WAEA,SAAAC,EAAAllC,EAAAuZ,EAAArZ,GAIA,OAFAA,EAAA,IAAAA,GAAA,GACAA,EAAA,IAAAA,GAAA,GACAA,EAAA,IAAAF,EAAA,GAAAuZ,EAAAvZ,GAAAE,EACAA,EAAA,GAAAqZ,EACArZ,EAAA,IAAAF,EAAA,GAAAuZ,EAAAvZ,IAAA,IAAAE,GACAF,EAIA,gBAAA8f,EAAA7f,EAAAxB,GAOA,GAJAqhB,EAAAtQ,GAAAY,gBAAA0P,EAAA,GACA7f,EAAAuP,GAAAW,MAAAlQ,EAAA,KACAxB,EAAA+Q,GAAAW,MAAA1R,EAAA,KAEA,IAAAwB,EAEA6B,KAAAvC,EAAAuC,KAAA8kB,EAAA9kB,KAAAK,EAAA1D,MAEI,CAEJ,IAAAuB,EAAAvB,GAAA,GAAAA,GAAA,EAAAwB,GAAAxB,EAAAwB,EAAAxB,EAAAwB,EACAsZ,EAAA,EAAA9a,EAAAuB,EAEA8B,KAAAvC,EAAA2lC,EAAA3rB,EAAAvZ,EAAA8f,EAAA,KACAhe,KAAA8kB,EAAAse,EAAA3rB,EAAAvZ,EAAA8f,GACAhe,KAAAK,EAAA+iC,EAAA3rB,EAAAvZ,EAAA8f,EAAA,KAIA,OAAAhe,MAnCA,GAyCAijC,SAAA,SAAAI,GAEA,SAAAC,EAAAC,YAEAA,GAEAC,WAAAD,GAAA,GAEA1gC,QAAA6O,KAAA,mCAAA2xB,EAAA,qBAOA,IAAAvmC,EAEA,GAAAA,EAAA,kCAAA2mC,KAAAJ,GAAA,CAIA,IAAAK,EACAzmC,EAAAH,EAAA,GACA6mC,EAAA7mC,EAAA,GAEA,OAAAG,GAEA,UACA,WAEA,GAAAymC,EAAA,gEAAAD,KAAAE,GASA,OANA3jC,KAAAvC,EAAA6B,KAAAmG,IAAA,IAAAm+B,SAAAF,EAAA,YACA1jC,KAAA8kB,EAAAxlB,KAAAmG,IAAA,IAAAm+B,SAAAF,EAAA,YACA1jC,KAAAK,EAAAf,KAAAmG,IAAA,IAAAm+B,SAAAF,EAAA,YAEAJ,EAAAI,EAAA,IAEA1jC,KAIA,GAAA0jC,EAAA,sEAAAD,KAAAE,GASA,OANA3jC,KAAAvC,EAAA6B,KAAAmG,IAAA,IAAAm+B,SAAAF,EAAA,YACA1jC,KAAA8kB,EAAAxlB,KAAAmG,IAAA,IAAAm+B,SAAAF,EAAA,YACA1jC,KAAAK,EAAAf,KAAAmG,IAAA,IAAAm+B,SAAAF,EAAA,YAEAJ,EAAAI,EAAA,IAEA1jC,KAIA,MAEA,UACA,WAEA,GAAA0jC,EAAA,gFAAAD,KAAAE,GAAA,CAGA,IAAA3lB,EAAAwlB,WAAAE,EAAA,QACAvlC,EAAAylC,SAAAF,EAAA,WACA/mC,EAAAinC,SAAAF,EAAA,WAIA,OAFAJ,EAAAI,EAAA,IAEA1jC,KAAAmjC,OAAAnlB,EAAA7f,EAAAxB,UAQG,GAAAG,EAAA,qBAAA2mC,KAAAJ,GAAA,CAIH,IAAAH,EACApX,GADAoX,EAAApmC,EAAA,IACAwF,OAEA,OAAAwpB,EAOA,OAJA9rB,KAAAvC,EAAAmmC,SAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAA,WACA7jC,KAAA8kB,EAAA8e,SAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAA,WACA7jC,KAAAK,EAAAujC,SAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAA,WAEA7jC,KAEI,OAAA8rB,EAOJ,OAJA9rB,KAAAvC,EAAAmmC,SAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAA,WACA7jC,KAAA8kB,EAAA8e,SAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAA,WACA7jC,KAAAK,EAAAujC,SAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAA,WAEA7jC,KAyBA,OAnBAqjC,KAAA/gC,OAAA,cAGA4gC,EAAAzJ,GAAA4J,IAKArjC,KAAAgjC,OAAAE,GAKArgC,QAAA6O,KAAA,8BAAA2xB,IAMArjC,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAvC,EAAAuC,KAAA8kB,EAAA9kB,KAAAK,IAIAkR,KAAA,SAAAmyB,GAMA,OAJA1jC,KAAAvC,EAAAimC,EAAAjmC,EACAuC,KAAA8kB,EAAA4e,EAAA5e,EACA9kB,KAAAK,EAAAqjC,EAAArjC,EAEAL,MAIA8jC,kBAAA,SAAAJ,EAAAK,GAQA,gBANAA,MAAA,GAEA/jC,KAAAvC,EAAA6B,KAAAyE,IAAA2/B,EAAAjmC,EAAAsmC,GACA/jC,KAAA8kB,EAAAxlB,KAAAyE,IAAA2/B,EAAA5e,EAAAif,GACA/jC,KAAAK,EAAAf,KAAAyE,IAAA2/B,EAAArjC,EAAA0jC,GAEA/jC,MAIAgkC,kBAAA,SAAAN,EAAAK,YAEAA,MAAA,GAEA,IAAAE,EAAAF,EAAA,IAAAA,EAAA,EAMA,OAJA/jC,KAAAvC,EAAA6B,KAAAyE,IAAA2/B,EAAAjmC,EAAAwmC,GACAjkC,KAAA8kB,EAAAxlB,KAAAyE,IAAA2/B,EAAA5e,EAAAmf,GACAjkC,KAAAK,EAAAf,KAAAyE,IAAA2/B,EAAArjC,EAAA4jC,GAEAjkC,MAIAkkC,qBAAA,WAEA,IAAAzmC,EAAAuC,KAAAvC,EAAAqnB,EAAA9kB,KAAA8kB,EAAAzkB,EAAAL,KAAAK,EAMA,OAJAL,KAAAvC,MACAuC,KAAA8kB,MACA9kB,KAAAK,MAEAL,MAIAmkC,qBAAA,WAMA,OAJAnkC,KAAAvC,EAAA6B,KAAAyT,KAAA/S,KAAAvC,GACAuC,KAAA8kB,EAAAxlB,KAAAyT,KAAA/S,KAAA8kB,GACA9kB,KAAAK,EAAAf,KAAAyT,KAAA/S,KAAAK,GAEAL,MAIAokC,OAAA,WAEA,WAAApkC,KAAAvC,GAAA,OAAAuC,KAAA8kB,GAAA,MAAA9kB,KAAAK,GAAA,GAIAgkC,aAAA,WAEA,gBAAArkC,KAAAokC,SAAA3lC,SAAA,KAAA+G,OAAA,IAIA8+B,OAAA,SAAAxiC,YAIAA,IAEAe,QAAA6O,KAAA,iDACA5P,GAAakc,EAAA,EAAA7f,EAAA,EAAAxB,EAAA,IAIb,IAKA4nC,EAAAC,EALA/mC,EAAAuC,KAAAvC,EAAAqnB,EAAA9kB,KAAA8kB,EAAAzkB,EAAAL,KAAAK,EAEAqF,EAAApG,KAAAoG,IAAAjI,EAAAqnB,EAAAzkB,GACAoF,EAAAnG,KAAAmG,IAAAhI,EAAAqnB,EAAAzkB,GAGAokC,GAAAh/B,EAAAC,GAAA,EAEA,GAAAD,IAAAC,EAEA6+B,EAAA,EACAC,EAAA,MAEG,CAEH,IAAAhV,EAAA9pB,EAAAD,EAIA,OAFA++B,EAAAC,GAAA,GAAAjV,GAAA9pB,EAAAD,GAAA+pB,GAAA,EAAA9pB,EAAAD,GAEAC,GAEA,KAAAjI,EAAA8mC,GAAAzf,EAAAzkB,GAAAmvB,GAAA1K,EAAAzkB,EAAA,KAAwD,MACxD,KAAAykB,EAAAyf,GAAAlkC,EAAA5C,GAAA+xB,EAAA,EAAwC,MACxC,KAAAnvB,EAAAkkC,GAAA9mC,EAAAqnB,GAAA0K,EAAA,EAIA+U,GAAA,EAQA,OAJAziC,EAAAkc,EAAAumB,EACAziC,EAAA3D,EAAAqmC,EACA1iC,EAAAnF,EAAA8nC,EAEA3iC,GAIA4iC,SAAA,WAEA,kBAAA1kC,KAAAvC,EAAA,YAAAuC,KAAA8kB,EAAA,YAAA9kB,KAAAK,EAAA,QAIAskC,WAEA/S,MAEA,SAAA5T,EAAA7f,EAAAxB,GAQA,OANAqD,KAAAskC,OAAA1S,IAEAA,GAAA5T,KAAc4T,GAAAzzB,KAAYyzB,GAAAj1B,KAE1BqD,KAAAmjC,OAAAvR,GAAA5T,EAAA4T,GAAAzzB,EAAAyzB,GAAAj1B,GAEAqD,OAMAyR,IAAA,SAAAiyB,GAMA,OAJA1jC,KAAAvC,GAAAimC,EAAAjmC,EACAuC,KAAA8kB,GAAA4e,EAAA5e,EACA9kB,KAAAK,GAAAqjC,EAAArjC,EAEAL,MAIA4kC,UAAA,SAAAC,EAAAC,GAMA,OAJA9kC,KAAAvC,EAAAonC,EAAApnC,EAAAqnC,EAAArnC,EACAuC,KAAA8kB,EAAA+f,EAAA/f,EAAAggB,EAAAhgB,EACA9kB,KAAAK,EAAAwkC,EAAAxkC,EAAAykC,EAAAzkC,EAEAL,MAIA4R,UAAA,SAAAzT,GAMA,OAJA6B,KAAAvC,GAAAU,EACA6B,KAAA8kB,GAAA3mB,EACA6B,KAAAK,GAAAlC,EAEA6B,MAIA8R,IAAA,SAAA4xB,GAMA,OAJA1jC,KAAAvC,EAAA6B,KAAAoG,IAAA,EAAA1F,KAAAvC,EAAAimC,EAAAjmC,GACAuC,KAAA8kB,EAAAxlB,KAAAoG,IAAA,EAAA1F,KAAA8kB,EAAA4e,EAAA5e,GACA9kB,KAAAK,EAAAf,KAAAoG,IAAA,EAAA1F,KAAAK,EAAAqjC,EAAArjC,GAEAL,MAIAiS,SAAA,SAAAyxB,GAMA,OAJA1jC,KAAAvC,GAAAimC,EAAAjmC,EACAuC,KAAA8kB,GAAA4e,EAAA5e,EACA9kB,KAAAK,GAAAqjC,EAAArjC,EAEAL,MAIAkS,eAAA,SAAA/T,GAMA,OAJA6B,KAAAvC,GAAAU,EACA6B,KAAA8kB,GAAA3mB,EACA6B,KAAAK,GAAAlC,EAEA6B,MAIA4O,KAAA,SAAA80B,EAAA/vB,GAMA,OAJA3T,KAAAvC,IAAAimC,EAAAjmC,EAAAuC,KAAAvC,GAAAkW,EACA3T,KAAA8kB,IAAA4e,EAAA5e,EAAA9kB,KAAA8kB,GAAAnR,EACA3T,KAAAK,IAAAqjC,EAAArjC,EAAAL,KAAAK,GAAAsT,EAEA3T,MAIA8T,OAAA,SAAA/W,GAEA,OAAAA,EAAAU,IAAAuC,KAAAvC,GAAAV,EAAA+nB,IAAA9kB,KAAA8kB,GAAA/nB,EAAAsD,IAAAL,KAAAK,GAIA0T,UAAA,SAAAxO,EAAA3G,GAQA,gBANAA,MAAA,GAEAoB,KAAAvC,EAAA8H,EAAA3G,GACAoB,KAAA8kB,EAAAvf,EAAA3G,EAAA,GACAoB,KAAAK,EAAAkF,EAAA3G,EAAA,GAEAoB,MAIAgU,QAAA,SAAAzO,EAAA3G,GASA,gBAPA2G,mBACA3G,MAAA,GAEA2G,EAAA3G,GAAAoB,KAAAvC,EACA8H,EAAA3G,EAAA,GAAAoB,KAAA8kB,EACAvf,EAAA3G,EAAA,GAAAoB,KAAAK,EAEAkF,GAIA0jB,OAAA,WAEA,OAAAjpB,KAAAokC,YAUA,IA20BA3sB,GA30BAstB,IAEAhS,QAEAiS,SAAYtnC,MAAA,IAAAolC,GAAA,WACZmC,SAAYvnC,MAAA,GAEZ4D,KAAQ5D,MAAA,MACRwnC,aAAgBxnC,MAAA,IAAA+S,IAEhB00B,UAAaznC,MAAA,OAIb0nC,aAEAC,aAAgB3nC,MAAA,OAIhB4nC,QAEAC,QAAW7nC,MAAA,MACX8nC,YAAe9nC,OAAA,GACf+nC,cAAiB/nC,MAAA,GACjBgoC,iBAAoBhoC,MAAA,KACpBioC,aAAgBjoC,MAAA,IAIhBkoC,OAEAC,OAAUnoC,MAAA,MACVooC,gBAAmBpoC,MAAA,IAInBqoC,UAEAC,UAAatoC,MAAA,MACbuoC,mBAAsBvoC,MAAA,IAItBwoC,aAEAC,aAAgBzoC,MAAA,OAIhB0oC,SAEAC,SAAY3oC,MAAA,MACZ4oC,WAAc5oC,MAAA,IAId6oC,WAEAC,WAAc9oC,MAAA,MACd+oC,aAAgB/oC,MAAA,IAAAqS,GAAA,OAIhB22B,iBAEAC,iBAAoBjpC,MAAA,MACpBkpC,mBAAsBlpC,MAAA,GACtBmpC,kBAAqBnpC,MAAA,IAIrBopC,cAEAC,cAAiBrpC,MAAA,OAIjBspC,cAEAC,cAAiBvpC,MAAA,OAIjBwpC,aAEAC,aAAgBzpC,MAAA,OAIhB0pC,KAEAC,YAAe3pC,MAAA,OACf4pC,SAAY5pC,MAAA,GACZ6pC,QAAW7pC,MAAA,KACX8pC,UAAa9pC,MAAA,IAAAolC,GAAA,YAIb2E,QAEAC,mBAAsBhqC,UAEtBiqC,mBAAsBjqC,SAAAkqC,YACtBrY,aACAmU,SAEAmE,UACAC,cACAC,gBACAC,mBAGAC,sBAAyBvqC,UACzBwqC,yBAA4BxqC,UAE5ByqC,YAAezqC,SAAAkqC,YACflE,SACA3mB,YACAwS,aACA6Y,YACAC,WACAC,eACAC,SAEAV,UACAC,cACAC,gBACAC,mBAGAQ,eAAkB9qC,UAClB+qC,kBAAqB/qC,UAErBgrC,aAAgBhrC,SAAAkqC,YAChBlE,SACA3mB,YACAwrB,SACAH,YAEAP,UACAC,cACAC,gBACAC,iBACAW,oBACAC,qBAGAC,gBAAmBnrC,UACnBorC,mBAAsBprC,UAEtBqrC,kBAAqBrrC,SAAAkqC,YACrBrY,aACAyZ,YACAC,iBAIAC,gBAAmBxrC,SAAAkqC,YACnBlE,SACA3mB,YACApM,SACAE,aAKA2U,QAEAwf,SAAYtnC,MAAA,IAAAolC,GAAA,WACZmC,SAAYvnC,MAAA,GACZouB,MAASpuB,MAAA,GACToe,OAAUpe,MAAA,GACV4D,KAAQ5D,MAAA,MACRwnC,aAAgBxnC,MAAA,IAAA+S,MAYhB04B,IAEAC,OAEAnQ,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAAK,YACAL,GAAAO,OACAP,GAAAa,MACAb,GAAAgB,SACAhB,GAAAqC,MAGAiC,aAAAxX,GAAAqG,eACAoR,eAAAzX,GAAAoG,gBAIAsR,SAEAtQ,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAAK,YACAL,GAAAO,OACAP,GAAAa,MACAb,GAAAgB,SACAhB,GAAAmB,YACAnB,GAAAqC,IACArC,GAAA0C,QAEA+B,UAAe9rC,MAAA,IAAAolC,GAAA,OAIfuG,aAAAxX,GAAAuG,iBACAkR,eAAAzX,GAAAsG,kBAIAsR,OAEAxQ,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAAK,YACAL,GAAAO,OACAP,GAAAa,MACAb,GAAAgB,SACAhB,GAAAmB,YACAnB,GAAAqB,QACArB,GAAAwB,UACAxB,GAAA2B,gBACA3B,GAAAmC,YACAnC,GAAAqC,IACArC,GAAA0C,QAEA+B,UAAe9rC,MAAA,IAAAolC,GAAA,IACf4G,UAAehsC,MAAA,IAAAolC,GAAA,UACf6G,WAAgBjsC,MAAA,OAIhB2rC,aAAAxX,GAAAyG,eACAgR,eAAAzX,GAAAwG,gBAIAuR,UAEA3Q,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAAO,OACAP,GAAAa,MACAb,GAAAgB,SACAhB,GAAAmB,YACAnB,GAAAqB,QACArB,GAAAwB,UACAxB,GAAA2B,gBACA3B,GAAA+B,aACA/B,GAAAiC,aACAjC,GAAAqC,IACArC,GAAA0C,QAEA+B,UAAe9rC,MAAA,IAAAolC,GAAA,IACf+G,WAAgBnsC,MAAA,IAChBosC,WAAgBpsC,MAAA,IAChBqsC,iBAAsBrsC,MAAA,MAItB2rC,aAAAxX,GAAA2G,kBACA8Q,eAAAzX,GAAA0G,mBAIA/S,QAEAyT,SAAAF,GAAAC,OACA+L,GAAAvf,OACAuf,GAAAqC,MAGAiC,aAAAxX,GAAA+G,YACA0Q,eAAAzX,GAAA8G,aAIAqR,QAEA/Q,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAAqC,KAEAtrB,OAAYpe,MAAA,GACZusC,UAAevsC,MAAA,GACfwsC,WAAgBxsC,MAAA,MAIhB2rC,aAAAxX,GAAAmG,gBACAsR,eAAAzX,GAAAkG,iBAIAoS,OAEAlR,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAA2B,kBAGA2C,aAAAxX,GAAA6F,WACA4R,eAAAzX,GAAA4F,YAIAxT,QAEAgV,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAAqB,QACArB,GAAAwB,UACAxB,GAAA2B,iBAEAzB,SAAcvnC,MAAA,MAId2rC,aAAAxX,GAAA6G,YACA4Q,eAAAzX,GAAA4G,aAQA2R,MAEAnR,UACAoR,OAAW3sC,MAAA,MACX4sC,OAAW5sC,OAAA,GACXunC,SAAavnC,MAAA,IAGb2rC,aAAAxX,GAAA2F,UACA8R,eAAAzX,GAAA0F,WAIAgT,UAEAtR,UACAuR,WAAe9sC,MAAA,OAGf2rC,aAAAxX,GAAAiG,cACAwR,eAAAzX,GAAAgG,eAIA4S,cAEAxR,SAAAF,GAAAC,OACA+L,GAAAhS,OACAgS,GAAA2B,iBAEAgE,mBAAwBhtC,MAAA,IAAA8S,IACxBm6B,cAAmBjtC,MAAA,GACnBktC,aAAkBltC,MAAA,QAIlB2rC,aAAAxX,GAAA+F,kBACA0R,eAAAzX,GAAA8F,mBAIAkQ,QAEA5O,SAAAF,GAAAC,OACA+L,GAAA0C,OACA1C,GAAAqC,KAEA1D,OAAYhmC,MAAA,IAAAolC,GAAA,IACZmC,SAAcvnC,MAAA,MAId2rC,aAAAxX,GAAAiH,YACAwQ,eAAAzX,GAAAgH,cAoLA,SAAAgS,GAAAzmC,EAAAyB,EAAAC,EAAA6Q,GAEA3W,KAAAoQ,GAAAhM,GAAA,EACApE,KAAAqQ,GAAAxK,GAAA,EACA7F,KAAAsQ,GAAAxK,GAAA,EACA9F,KAAA8qC,OAAAn0B,GAAAk0B,GAAAE,aAkVA,SAAAC,KAEAhrC,KAAAirC,KAAA,EAvgBA9B,GAAA+B,UAEAjS,SAAAF,GAAAC,OACAmQ,GAAAS,SAAA3Q,UAEAkS,WAAeztC,MAAA,GACf0tC,oBAAwB1tC,MAAA,MAIxB2rC,aAAAxX,GAAA2G,kBACA8Q,eAAAzX,GAAA0G,mBA4KAsS,GAAAQ,gBAAA,qCAEAR,GAAAE,aAAA,MAEA3tC,OAAAsT,iBAAAm6B,GAAA7sC,WAEAoG,GAEA5G,IAAA,WAEA,OAAAwC,KAAAoQ,IAIAQ,IAAA,SAAAlT,GAEAsC,KAAAoQ,GAAA1S,EACAsC,KAAAwf,qBAMA3Z,GAEArI,IAAA,WAEA,OAAAwC,KAAAqQ,IAIAO,IAAA,SAAAlT,GAEAsC,KAAAqQ,GAAA3S,EACAsC,KAAAwf,qBAMA1Z,GAEAtI,IAAA,WAEA,OAAAwC,KAAAsQ,IAIAM,IAAA,SAAAlT,GAEAsC,KAAAsQ,GAAA5S,EACAsC,KAAAwf,qBAMA7I,OAEAnZ,IAAA,WAEA,OAAAwC,KAAA8qC,QAIAl6B,IAAA,SAAAlT,GAEAsC,KAAA8qC,OAAAptC,EACAsC,KAAAwf,uBAQApiB,OAAA4D,OAAA6pC,GAAA7sC,WAEA0Y,WAEA9F,IAAA,SAAAxM,EAAAyB,EAAAC,EAAA6Q,GASA,OAPA3W,KAAAoQ,GAAAhM,EACApE,KAAAqQ,GAAAxK,EACA7F,KAAAsQ,GAAAxK,EACA9F,KAAA8qC,OAAAn0B,GAAA3W,KAAA8qC,OAEA9qC,KAAAwf,mBAEAxf,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAoQ,GAAApQ,KAAAqQ,GAAArQ,KAAAsQ,GAAAtQ,KAAA8qC,SAIAv5B,KAAA,SAAAkF,GASA,OAPAzW,KAAAoQ,GAAAqG,EAAArG,GACApQ,KAAAqQ,GAAAoG,EAAApG,GACArQ,KAAAsQ,GAAAmG,EAAAnG,GACAtQ,KAAA8qC,OAAAr0B,EAAAq0B,OAEA9qC,KAAAwf,mBAEAxf,MAIAud,sBAAA,SAAAzgB,EAAA6Z,EAAA+I,GAEA,IAAArR,EAAAX,GAAAW,MAIAqH,EAAA5Y,EAAAmT,SACAkQ,EAAAzK,EAAA,GAAA0K,EAAA1K,EAAA,GAAA2K,EAAA3K,EAAA,GACA4K,EAAA5K,EAAA,GAAA6K,EAAA7K,EAAA,GAAA8K,EAAA9K,EAAA,GACA+K,EAAA/K,EAAA,GAAAgL,EAAAhL,EAAA,GAAAiL,EAAAjL,EAAA,IA8GA,MA1GA,SAFAiB,KAAA3W,KAAA8qC,SAIA9qC,KAAAqQ,GAAA/Q,KAAAgsC,KAAAj9B,EAAAgS,GAAA,MAEA/gB,KAAA2T,IAAAoN,GAAA,QAEArgB,KAAAoQ,GAAA9Q,KAAA8T,OAAAoN,EAAAG,GACA3gB,KAAAsQ,GAAAhR,KAAA8T,OAAAgN,EAAAD,KAIAngB,KAAAoQ,GAAA9Q,KAAA8T,MAAAsN,EAAAH,GACAvgB,KAAAsQ,GAAA,IAIG,QAAAqG,GAEH3W,KAAAoQ,GAAA9Q,KAAAgsC,MAAAj9B,EAAAmS,GAAA,MAEAlhB,KAAA2T,IAAAuN,GAAA,QAEAxgB,KAAAqQ,GAAA/Q,KAAA8T,MAAAiN,EAAAM,GACA3gB,KAAAsQ,GAAAhR,KAAA8T,MAAAkN,EAAAC,KAIAvgB,KAAAqQ,GAAA/Q,KAAA8T,OAAAqN,EAAAN,GACAngB,KAAAsQ,GAAA,IAIG,QAAAqG,GAEH3W,KAAAoQ,GAAA9Q,KAAAgsC,KAAAj9B,EAAAqS,GAAA,MAEAphB,KAAA2T,IAAAyN,GAAA,QAEA1gB,KAAAqQ,GAAA/Q,KAAA8T,OAAAqN,EAAAE,GACA3gB,KAAAsQ,GAAAhR,KAAA8T,OAAAgN,EAAAG,KAIAvgB,KAAAqQ,GAAA,EACArQ,KAAAsQ,GAAAhR,KAAA8T,MAAAkN,EAAAH,KAIG,QAAAxJ,GAEH3W,KAAAqQ,GAAA/Q,KAAAgsC,MAAAj9B,EAAAoS,GAAA,MAEAnhB,KAAA2T,IAAAwN,GAAA,QAEAzgB,KAAAoQ,GAAA9Q,KAAA8T,MAAAsN,EAAAC,GACA3gB,KAAAsQ,GAAAhR,KAAA8T,MAAAkN,EAAAH,KAIAngB,KAAAoQ,GAAA,EACApQ,KAAAsQ,GAAAhR,KAAA8T,OAAAgN,EAAAG,KAIG,QAAA5J,GAEH3W,KAAAsQ,GAAAhR,KAAAgsC,KAAAj9B,EAAAiS,GAAA,MAEAhhB,KAAA2T,IAAAqN,GAAA,QAEAtgB,KAAAoQ,GAAA9Q,KAAA8T,OAAAoN,EAAAD,GACAvgB,KAAAqQ,GAAA/Q,KAAA8T,OAAAqN,EAAAN,KAIAngB,KAAAoQ,GAAA,EACApQ,KAAAqQ,GAAA/Q,KAAA8T,MAAAiN,EAAAM,KAIG,QAAAhK,GAEH3W,KAAAsQ,GAAAhR,KAAAgsC,MAAAj9B,EAAA+R,GAAA,MAEA9gB,KAAA2T,IAAAmN,GAAA,QAEApgB,KAAAoQ,GAAA9Q,KAAA8T,MAAAsN,EAAAH,GACAvgB,KAAAqQ,GAAA/Q,KAAA8T,MAAAiN,EAAAF,KAIAngB,KAAAoQ,GAAA9Q,KAAA8T,OAAAoN,EAAAG,GACA3gB,KAAAqQ,GAAA,IAMAxN,QAAA6O,KAAA,kEAAAiF,GAIA3W,KAAA8qC,OAAAn0B,OAEA+I,GAAA1f,KAAAwf,mBAEAxf,MAIAurC,kBAAA,WAEA,IAAA3lC,EAAA,IAAAoK,GAEA,gBAAAyH,EAAAd,EAAA+I,GAIA,OAFA9Z,EAAA4R,2BAAAC,GAEAzX,KAAAud,sBAAA3X,EAAA+Q,EAAA+I,IARA,GAcA8rB,eAAA,SAAAh6B,EAAAmF,GAEA,OAAA3W,KAAA4Q,IAAAY,EAAApN,EAAAoN,EAAA3L,EAAA2L,EAAA1L,EAAA6Q,GAAA3W,KAAA8qC,SAIAW,SAIAh0B,GAAA,IAAAvH,GAEA,SAAAw7B,GAIA,OAFAj0B,GAAAgI,aAAAzf,MAEAA,KAAAurC,kBAAA9zB,GAAAi0B,KAMA53B,OAAA,SAAA2C,GAEA,OAAAA,EAAArG,KAAApQ,KAAAoQ,IAAAqG,EAAApG,KAAArQ,KAAAqQ,IAAAoG,EAAAnG,KAAAtQ,KAAAsQ,IAAAmG,EAAAq0B,SAAA9qC,KAAA8qC,QAIA/2B,UAAA,SAAAxO,GASA,OAPAvF,KAAAoQ,GAAA7K,EAAA,GACAvF,KAAAqQ,GAAA9K,EAAA,GACAvF,KAAAsQ,GAAA/K,EAAA,YACAA,EAAA,KAAAvF,KAAA8qC,OAAAvlC,EAAA,IAEAvF,KAAAwf,mBAEAxf,MAIAgU,QAAA,SAAAzO,EAAA3G,GAUA,gBARA2G,mBACA3G,MAAA,GAEA2G,EAAA3G,GAAAoB,KAAAoQ,GACA7K,EAAA3G,EAAA,GAAAoB,KAAAqQ,GACA9K,EAAA3G,EAAA,GAAAoB,KAAAsQ,GACA/K,EAAA3G,EAAA,GAAAoB,KAAA8qC,OAEAvlC,GAIAomC,UAAA,SAAAC,GAEA,OAAAA,EAEAA,EAAAh7B,IAAA5Q,KAAAoQ,GAAApQ,KAAAqQ,GAAArQ,KAAAsQ,IAIA,IAAAE,GAAAxQ,KAAAoQ,GAAApQ,KAAAqQ,GAAArQ,KAAAsQ,KAMA0R,SAAA,SAAAC,GAIA,OAFAjiB,KAAAwf,iBAAAyC,EAEAjiB,MAIAwf,iBAAA,eAcApiB,OAAA4D,OAAAgqC,GAAAhtC,WAEA4S,IAAA,SAAAi7B,GAEA7rC,KAAAirC,KAAA,GAAAY,EAAA,GAIAC,OAAA,SAAAD,GAEA7rC,KAAAirC,MAAA,GAAAY,EAAA,GAIAE,OAAA,SAAAF,GAEA7rC,KAAAirC,MAAA,GAAAY,EAAA,GAIAG,QAAA,SAAAH,GAEA7rC,KAAAirC,QAAA,GAAAY,EAAA,IAIAI,KAAA,SAAAC,GAEA,WAAAlsC,KAAAirC,KAAAiB,EAAAjB,SAcA,IA6bAluB,GACAjB,GA1KAkU,GArIAmc,GA/IAC,GAAA,EAEA,SAAAC,KAEAjvC,OAAAC,eAAA2C,KAAA,MAAqCtC,MAAA0uC,OAErCpsC,KAAA0C,KAAAgL,GAAAI,eAEA9N,KAAA/C,KAAA,GACA+C,KAAA2E,KAAA,WAEA3E,KAAAssC,OAAA,KACAtsC,KAAAusC,YAEAvsC,KAAAwY,GAAA6zB,GAAAG,UAAAn7B,QAEA,IAAA0L,EAAA,IAAAvM,GACA2U,EAAA,IAAA0lB,GACA9kC,EAAA,IAAAmK,GACA4L,EAAA,IAAAtL,GAAA,OAcA2U,EAAAnD,SAZA,WAEAjc,EAAA0Z,aAAA0F,QAWApf,EAAAic,SAPA,WAEAmD,EAAAomB,kBAAAxlC,UAAA2hB,KAOAtqB,OAAAsT,iBAAA1Q,MACA+c,UACAxf,cACAG,MAAAqf,GAEAoI,UACA5nB,cACAG,MAAAynB,GAEApf,YACAxI,cACAG,MAAAqI,GAEA+V,OACAve,cACAG,MAAAoe,GAEA2wB,iBACA/uC,MAAA,IAAAsS,IAEAkgB,cACAxyB,MAAA,IAAA+S,MAIAzQ,KAAA4F,OAAA,IAAAoK,GACAhQ,KAAAmjB,YAAA,IAAAnT,GAEAhQ,KAAA4mB,iBAAAylB,GAAAK,wBACA1sC,KAAA2sC,0BAEA3sC,KAAAksC,OAAA,IAAAlB,GACAhrC,KAAA4sC,WAEA5sC,KAAA6sC,cACA7sC,KAAA8sC,iBAEA9sC,KAAA+sC,iBACA/sC,KAAAgtC,YAAA,EAEAhtC,KAAAitC,YA6uBA,SAAAC,KAEAb,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,SAEA3E,KAAAmtC,mBAAA,IAAAn9B,GACAhQ,KAAAkjB,iBAAA,IAAAlT,GA+DA,SAAAo9B,GAAA3vB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAovB,GAAArwC,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqtC,KAAA,EACArtC,KAAAstC,KAAA,KAEAttC,KAAAyd,OACAzd,KAAA0d,QACA1d,KAAA2d,MACA3d,KAAA4d,SAEA5d,KAAA6d,kBAAA,GACA7d,KAAA8d,iBAAA,IAEA9d,KAAAutC,yBA2HA,SAAAC,GAAAptC,EAAAC,EAAAtD,EAAAknB,EAAAyf,EAAA+J,GAEAztC,KAAAI,IACAJ,KAAAK,IACAL,KAAAjD,IAEAiD,KAAAikB,YAAA/B,UAAA+B,EAAA,IAAAzT,GACAxQ,KAAA0tC,cAAAruC,MAAAm6B,QAAAvV,QAEAjkB,KAAA0jC,WAAAnK,QAAAmK,EAAA,IAAAZ,GACA9iC,KAAA2tC,aAAAtuC,MAAAm6B,QAAAkK,QAEA1jC,KAAAytC,2BAAA,EAv8BApB,GAAAG,UAAA,IAAAh8B,GAAA,OACA67B,GAAAK,2BAEAL,GAAAruC,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAA+6B,GAEAuB,cAEAC,eAAA,aACAC,cAAA,aAEAC,YAAA,SAAAnoC,GAEA5F,KAAA4F,OAAA8S,iBAAA9S,EAAA5F,KAAA4F,QAEA5F,KAAA4F,OAAAoX,UAAAhd,KAAA+c,SAAA/c,KAAA+F,WAAA/F,KAAA8b,QAIAwG,gBAAA,SAAA7K,GAIA,OAFAzX,KAAA+F,WAAA4S,YAAAlB,GAEAzX,MAIAguC,yBAAA,SAAAvxB,EAAAtJ,GAIAnT,KAAA+F,WAAAka,iBAAAxD,EAAAtJ,IAIA86B,qBAAA,SAAAx3B,GAEAzW,KAAA+F,WAAA0Z,aAAAhJ,OAIAy3B,sBAAA,SAAApxC,GAIAkD,KAAA+F,WAAAwX,sBAAAzgB,IAIAqxC,0BAAA,SAAA12B,GAIAzX,KAAA+F,WAAAwL,KAAAkG,IAIA22B,cAKAjC,GAAA,IAAAj8B,GAEA,SAAAuM,EAAAtJ,GAMA,OAJAg5B,GAAAlsB,iBAAAxD,EAAAtJ,GAEAnT,KAAA+F,WAAAkM,SAAAk6B,IAEAnsC,OAMAquC,kBAAA,WAMA,IAAAlC,EAAA,IAAAj8B,GAEA,gBAAAuM,EAAAtJ,GAMA,OAJAg5B,EAAAlsB,iBAAAxD,EAAAtJ,GAEAnT,KAAA+F,WAAA4S,YAAAwzB,GAEAnsC,MAdA,GAoBAsuC,QAAA,WAEA,IAAA9rC,EAAA,IAAAgO,GAAA,OAEA,gBAAA2C,GAEA,OAAAnT,KAAAouC,aAAA5rC,EAAA2Q,IANA,GAYAo7B,QAAA,WAEA,IAAA/rC,EAAA,IAAAgO,GAAA,OAEA,gBAAA2C,GAEA,OAAAnT,KAAAouC,aAAA5rC,EAAA2Q,IANA,GAYAq7B,QAAA,WAEA,IAAAhsC,EAAA,IAAAgO,GAAA,OAEA,gBAAA2C,GAEA,OAAAnT,KAAAouC,aAAA5rC,EAAA2Q,IANA,GAYAs7B,gBAAA,WAKA,IAAAjsC,EAAA,IAAAgO,GAEA,gBAAAiM,EAAA2rB,GAMA,OAJA5lC,EAAA+O,KAAAkL,GAAA6F,gBAAAtiB,KAAA+F,YAEA/F,KAAA+c,SAAAtL,IAAAjP,EAAA0P,eAAAk2B,IAEApoC,MAbA,GAmBA0uC,WAAA,WAEA,IAAAlsC,EAAA,IAAAgO,GAAA,OAEA,gBAAA43B,GAEA,OAAApoC,KAAAyuC,gBAAAjsC,EAAA4lC,IANA,GAYAuG,WAAA,WAEA,IAAAnsC,EAAA,IAAAgO,GAAA,OAEA,gBAAA43B,GAEA,OAAApoC,KAAAyuC,gBAAAjsC,EAAA4lC,IANA,GAYAwG,WAAA,WAEA,IAAApsC,EAAA,IAAAgO,GAAA,OAEA,gBAAA43B,GAEA,OAAApoC,KAAAyuC,gBAAAjsC,EAAA4lC,IANA,GAYAyG,aAAA,SAAAlpC,GAEA,OAAAA,EAAAoV,aAAA/a,KAAAmjB,cAIA2rB,cAEA9e,GAAA,IAAAhgB,GAEA,SAAArK,GAEA,OAAAA,EAAAoV,aAAAiV,GAAA3U,WAAArb,KAAAmjB,gBAMA7K,OAAA,WAIA,IAAA0X,EAAA,IAAAhgB,GACArK,EAAA,IAAA6K,GAEA,gBAAApM,EAAAyB,EAAAC,GAEA1B,EAAA8d,UAEAvc,EAAA4L,KAAAnN,GAIAuB,EAAAiL,IAAAxM,EAAAyB,EAAAC,GAIA9F,KAAA+uC,SAEA/e,EAAA1X,OAAAtY,KAAA+c,SAAApX,EAAA3F,KAAAwY,IAIAwX,EAAA1X,OAAA3S,EAAA3F,KAAA+c,SAAA/c,KAAAwY,IAIAxY,KAAA+F,WAAAwX,sBAAAyS,IA7BA,GAmCAve,IAAA,SAAA3T,GAEA,GAAAuE,UAAAC,OAAA,GAEA,QAAA5F,EAAA,EAAmBA,EAAA2F,UAAAC,OAAsB5F,IAEzCsD,KAAAyR,IAAApP,UAAA3F,IAIA,OAAAsD,KAIA,OAAAlC,IAAAkC,MAEA6C,QAAAtC,MAAA,kEAAAzC,GACAkC,OAIAlC,KAAA8vC,YAEA,OAAA9vC,EAAAwuC,QAEAxuC,EAAAwuC,OAAA0C,OAAAlxC,GAIAA,EAAAwuC,OAAAtsC,KACAlC,EAAAuH,eAA0BV,KAAA,UAE1B3E,KAAAusC,SAAAvnC,KAAAlH,IAIA+E,QAAAtC,MAAA,gEAAAzC,GAIAkC,OAIAgvC,OAAA,SAAAlxC,GAEA,GAAAuE,UAAAC,OAAA,GAEA,QAAA5F,EAAA,EAAmBA,EAAA2F,UAAAC,OAAsB5F,IAEzCsD,KAAAgvC,OAAA3sC,UAAA3F,IAIA,OAAAsD,KAIA,IAAAwE,EAAAxE,KAAAusC,SAAAxnC,QAAAjH,GAYA,OAVA,IAAA0G,IAEA1G,EAAAwuC,OAAA,KAEAxuC,EAAAuH,eAA0BV,KAAA,YAE1B3E,KAAAusC,SAAAnnC,OAAAZ,EAAA,IAIAxE,MAIAivC,cAAA,SAAAC,GAEA,OAAAlvC,KAAAmvC,oBAAA,KAAAD,IAIAE,gBAAA,SAAAnyC,GAEA,OAAA+C,KAAAmvC,oBAAA,OAAAlyC,IAIAkyC,oBAAA,SAAAlyC,EAAAS,GAEA,GAAAsC,KAAA/C,KAAAS,EAAA,OAAAsC,KAEA,QAAAtD,EAAA,EAAAC,EAAAqD,KAAAusC,SAAAjqC,OAA4C5F,EAAAC,EAAOD,IAAA,CAEnD,IACAoB,EADAkC,KAAAusC,SAAA7vC,GACAyyC,oBAAAlyC,EAAAS,GAEA,YAAAI,EAEA,OAAAA,IAUAuxC,iBAAA,SAAAvtC,GAWA,gBATAA,IAEAe,QAAA6O,KAAA,8DACA5P,EAAA,IAAA0O,IAIAxQ,KAAAgtB,sBAEAlrB,EAAA4iB,sBAAA1kB,KAAAmjB,cAIAmsB,oBAEAvyB,GAAA,IAAAvM,GACAsL,GAAA,IAAAtL,GAEA,SAAA1O,GAaA,gBAXAA,IAEAe,QAAA6O,KAAA,gEACA5P,EAAA,IAAAoO,IAIAlQ,KAAAgtB,sBAEAhtB,KAAAmjB,YAAAnG,UAAAD,GAAAjb,EAAAga,IAEAha,IAMAytC,cAAA,WAEA,IAAAxyB,EAAA,IAAAvM,GACAzK,EAAA,IAAAmK,GAEA,gBAAApO,GAaA,gBAXAA,IAEAe,QAAA6O,KAAA,2DACA5P,EAAA,IAAA0O,IAIAxQ,KAAAgtB,sBAEAhtB,KAAAmjB,YAAAnG,UAAAD,EAAAhX,EAAAjE,GAEAA,GAlBA,GAwBA0tC,kBAAA,WAEA,IAAAzpC,EAAA,IAAAmK,GAEA,gBAAApO,GAWA,gBATAA,IAEAe,QAAA6O,KAAA,+DACA5P,EAAA,IAAA0O,IAIAxQ,KAAAsvC,mBAAAvpC,GAEAjE,EAAA8O,IAAA,OAAA0R,gBAAAvc,IAfA,GAqBA0pC,QAAA,aAEAhjB,SAAA,SAAAxK,GAEAA,EAAAjiB,MAIA,IAFA,IAAAusC,EAAAvsC,KAAAusC,SAEA7vC,EAAA,EAAAC,EAAA4vC,EAAAjqC,OAAuC5F,EAAAC,EAAOD,IAE9C6vC,EAAA7vC,GAAA+vB,SAAAxK,IAMAytB,gBAAA,SAAAztB,GAEA,QAAAjiB,KAAA4sC,QAAA,CAEA3qB,EAAAjiB,MAIA,IAFA,IAAAusC,EAAAvsC,KAAAusC,SAEA7vC,EAAA,EAAAC,EAAA4vC,EAAAjqC,OAAuC5F,EAAAC,EAAOD,IAE9C6vC,EAAA7vC,GAAAgzC,gBAAAztB,KAMA0tB,kBAAA,SAAA1tB,GAEA,IAAAqqB,EAAAtsC,KAAAssC,OAEA,OAAAA,IAEArqB,EAAAqqB,GAEAA,EAAAqD,kBAAA1tB,KAMA+G,aAAA,WAEAhpB,KAAA4F,OAAAkX,QAAA9c,KAAA+c,SAAA/c,KAAA+F,WAAA/F,KAAA8b,OAEA9b,KAAA2sC,2BAIA3f,kBAAA,SAAA4iB,GAEA5vC,KAAA4mB,kBAAA5mB,KAAAgpB,gBAEAhpB,KAAA2sC,wBAAAiD,KAEA,OAAA5vC,KAAAssC,OAEAtsC,KAAAmjB,YAAA5R,KAAAvR,KAAA4F,QAIA5F,KAAAmjB,YAAAzK,iBAAA1Y,KAAAssC,OAAAnpB,YAAAnjB,KAAA4F,QAIA5F,KAAA2sC,0BAEAiD,MAQA,IAFA,IAAArD,EAAAvsC,KAAAusC,SAEA7vC,EAAA,EAAAC,EAAA4vC,EAAAjqC,OAAuC5F,EAAAC,EAAOD,IAE9C6vC,EAAA7vC,GAAAswB,kBAAA4iB,IAMA3mB,OAAA,SAAAC,GAGA,IAAAC,WAAAD,GAAA,iBAAAA,EAEA3kB,KAKA4kB,IAGAD,GACA2mB,cACAC,aACA1mB,YACAI,UACAumB,WAGAxrC,EAAA8kB,UACApC,QAAA,IACAtiB,KAAA,SACA2kB,UAAA,oBAOA,IAAAxrB,KAmBA,SAAAkyC,EAAAC,EAAAC,GAQA,gBANAD,EAAAC,EAAAxtC,QAEAutC,EAAAC,EAAAxtC,MAAAwtC,EAAAjnB,OAAAC,IAIAgnB,EAAAxtC,KAIA,GA7BA5E,EAAA4E,KAAA1C,KAAA0C,KACA5E,EAAA6G,KAAA3E,KAAA2E,KAEA,KAAA3E,KAAA/C,OAAAa,EAAAb,KAAA+C,KAAA/C,WACA+C,KAAA6sC,aAAA/uC,EAAA+uC,gBAAA,IACA7sC,KAAA8sC,gBAAAhvC,EAAAgvC,mBAAA,IACA9sC,KAAA4sC,UAAA9uC,EAAA8uC,aAAA,IACA5sC,KAAA+sC,gBAAAjvC,EAAAivC,kBACA,IAAA/sC,KAAAgtC,cAAAlvC,EAAAkvC,YAAAhtC,KAAAgtC,aACA,OAAAmD,KAAAC,UAAApwC,KAAAitC,YAA8CnvC,EAAAmvC,SAAAjtC,KAAAitC,UAE9CnvC,EAAA8H,OAAA5F,KAAA4F,OAAAoO,eAEAhU,KAAA4mB,mBAAA9oB,EAAA8oB,0BAAA,IAgBA5mB,KAAA2sB,SAAA,CAEA7uB,EAAA6uB,SAAAqjB,EAAA9mB,EAAA2mB,WAAA7vC,KAAA2sB,UAEA,IAAA0jB,EAAArwC,KAAA2sB,SAAA0jB,WAEA,YAAAA,cAAAN,OAAA,CAEA,IAAAA,EAAAM,EAAAN,OAEA,GAAA1wC,MAAAm6B,QAAAuW,GAEA,QAAArzC,EAAA,EAAAC,EAAAozC,EAAAztC,OAAwC5F,EAAAC,EAAOD,IAAA,CAE/C,IAAA4zC,EAAAP,EAAArzC,GAEAszC,EAAA9mB,EAAA6mB,OAAAO,QAMAN,EAAA9mB,EAAA6mB,WAQA,YAAA/vC,KAAAuwC,SAEA,GAAAlxC,MAAAm6B,QAAAx5B,KAAAuwC,UAAA,CAEA,IAAAC,KAEA,IAAA9zC,EAAA,EAAAC,EAAAqD,KAAAuwC,SAAAjuC,OAA8C5F,EAAAC,EAAOD,IAErD8zC,EAAAxrC,KAAAgrC,EAAA9mB,EAAA4mB,UAAA9vC,KAAAuwC,SAAA7zC,KAIAoB,EAAAyyC,SAAAC,OAIA1yC,EAAAyyC,SAAAP,EAAA9mB,EAAA4mB,UAAA9vC,KAAAuwC,UAQA,GAAAvwC,KAAAusC,SAAAjqC,OAAA,EAIA,IAFAxE,EAAAyuC,YAEA7vC,EAAA,EAAmBA,EAAAsD,KAAAusC,SAAAjqC,OAA0B5F,IAE7CoB,EAAAyuC,SAAAvnC,KAAAhF,KAAAusC,SAAA7vC,GAAAusB,OAAAC,GAAAprB,QAMA,GAAAqrB,EAAA,CAEA,IAAA0mB,EAAAY,EAAAvnB,EAAA2mB,YACAC,EAAAW,EAAAvnB,EAAA4mB,WACA1mB,EAAAqnB,EAAAvnB,EAAAE,UACAI,EAAAinB,EAAAvnB,EAAAM,QACAumB,EAAAU,EAAAvnB,EAAA6mB,QAEAF,EAAAvtC,OAAA,IAAAiC,EAAAsrC,cACAC,EAAAxtC,OAAA,IAAAiC,EAAAurC,aACA1mB,EAAA9mB,OAAA,IAAAiC,EAAA6kB,YACAI,EAAAlnB,OAAA,IAAAiC,EAAAilB,UACAumB,EAAAztC,OAAA,IAAAiC,EAAAwrC,UAMA,OAFAxrC,EAAAzG,SAEAyG,EAKA,SAAAksC,EAAAC,GAEA,IAAAC,KACA,QAAApuC,KAAAmuC,EAAA,CAEA,IAAAxoB,EAAAwoB,EAAAnuC,UACA2lB,EAAAmB,SACAsnB,EAAA3rC,KAAAkjB,GAGA,OAAAyoB,IAMAt/B,MAAA,SAAAu/B,GAEA,WAAA5wC,KAAAsR,aAAAC,KAAAvR,KAAA4wC,IAIAr/B,KAAA,SAAAxP,EAAA6uC,GA6BA,YA3BAA,UAEA5wC,KAAA/C,KAAA8E,EAAA9E,KAEA+C,KAAAwY,GAAAjH,KAAAxP,EAAAyW,IAEAxY,KAAA+c,SAAAxL,KAAAxP,EAAAgb,UACA/c,KAAA+F,WAAAwL,KAAAxP,EAAAgE,YACA/F,KAAA8b,MAAAvK,KAAAxP,EAAA+Z,OAEA9b,KAAA4F,OAAA2L,KAAAxP,EAAA6D,QACA5F,KAAAmjB,YAAA5R,KAAAxP,EAAAohB,aAEAnjB,KAAA4mB,iBAAA7kB,EAAA6kB,iBACA5mB,KAAA2sC,uBAAA5qC,EAAA4qC,uBAEA3sC,KAAAksC,OAAAjB,KAAAlpC,EAAAmqC,OAAAjB,KACAjrC,KAAA4sC,QAAA7qC,EAAA6qC,QAEA5sC,KAAA6sC,WAAA9qC,EAAA8qC,WACA7sC,KAAA8sC,cAAA/qC,EAAA+qC,cAEA9sC,KAAA+sC,cAAAhrC,EAAAgrC,cACA/sC,KAAAgtC,YAAAjrC,EAAAirC,YAEAhtC,KAAAitC,SAAAkD,KAAAU,MAAAV,KAAAC,UAAAruC,EAAAkrC,gBAEA2D,EAEA,QAAAl0C,EAAA,EAAmBA,EAAAqF,EAAAwqC,SAAAjqC,OAA4B5F,IAAA,CAE/C,IAAAo0C,EAAA/uC,EAAAwqC,SAAA7vC,GACAsD,KAAAyR,IAAAq/B,EAAAz/B,SAMA,OAAArR,QAuBAktC,GAAAlvC,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAA47B,GAEA6B,YAEAx9B,KAAA,SAAAxP,EAAA6uC,GAOA,OALAvE,GAAAruC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,EAAA6uC,GAEA5wC,KAAAmtC,mBAAA57B,KAAAxP,EAAAorC,oBACAntC,KAAAkjB,iBAAA3R,KAAAxP,EAAAmhB,kBAEAljB,MAIAwvC,kBAAA,WAEA,IAAAzpC,EAAA,IAAAmK,GAEA,gBAAApO,GAWA,gBATAA,IAEAe,QAAA6O,KAAA,6DACA5P,EAAA,IAAA0O,IAIAxQ,KAAAsvC,mBAAAvpC,GAEAjE,EAAA8O,IAAA,QAAA0R,gBAAAvc,IAfA,GAqBAinB,kBAAA,SAAA4iB,GAEAvD,GAAAruC,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,GAEA5vC,KAAAmtC,mBAAA9xB,WAAArb,KAAAmjB,cAIA9R,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,SAgCAotC,GAAApvC,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAokB,GAAAlvC,YAEAsT,YAAA87B,GAEA2D,wBAEAx/B,KAAA,SAAAxP,EAAA6uC,GAcA,OAZA1D,GAAAlvC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,EAAA6uC,GAEA5wC,KAAAyd,KAAA1b,EAAA0b,KACAzd,KAAA0d,MAAA3b,EAAA2b,MACA1d,KAAA2d,IAAA5b,EAAA4b,IACA3d,KAAA4d,OAAA7b,EAAA6b,OACA5d,KAAA6d,KAAA9b,EAAA8b,KACA7d,KAAA8d,IAAA/b,EAAA+b,IAEA9d,KAAAqtC,KAAAtrC,EAAAsrC,KACArtC,KAAAstC,KAAA,OAAAvrC,EAAAurC,KAAA,KAAAlwC,OAAA4D,UAA6De,EAAAurC,MAE7DttC,MAIAgxC,cAAA,SAAAC,EAAAC,EAAA9sC,EAAAyB,EAAA8K,EAAAE,GAEA,OAAA7Q,KAAAstC,OAEAttC,KAAAstC,MACA6D,WACAF,UAAA,EACAC,WAAA,EACAE,QAAA,EACAC,QAAA,EACA1gC,MAAA,EACAE,OAAA,IAKA7Q,KAAAstC,KAAA6D,WACAnxC,KAAAstC,KAAA2D,YACAjxC,KAAAstC,KAAA4D,aACAlxC,KAAAstC,KAAA8D,QAAAhtC,EACApE,KAAAstC,KAAA+D,QAAAxrC,EACA7F,KAAAstC,KAAA38B,QACA3Q,KAAAstC,KAAAz8B,SAEA7Q,KAAAutC,0BAIA+D,gBAAA,WAEA,OAAAtxC,KAAAstC,OAEAttC,KAAAstC,KAAA6D,YAIAnxC,KAAAutC,0BAIAA,uBAAA,WAEA,IAAAh6B,GAAAvT,KAAA0d,MAAA1d,KAAAyd,OAAA,EAAAzd,KAAAqtC,MACA75B,GAAAxT,KAAA2d,IAAA3d,KAAA4d,SAAA,EAAA5d,KAAAqtC,MACAjoB,GAAAplB,KAAA0d,MAAA1d,KAAAyd,MAAA,EACA4H,GAAArlB,KAAA2d,IAAA3d,KAAA4d,QAAA,EAEAH,EAAA2H,EAAA7R,EACAmK,EAAA0H,EAAA7R,EACAoK,EAAA0H,EAAA7R,EACAoK,EAAAyH,EAAA7R,EAEA,UAAAxT,KAAAstC,MAAAttC,KAAAstC,KAAA6D,QAAA,CAEA,IAAAI,EAAAvxC,KAAAqtC,MAAArtC,KAAAstC,KAAA38B,MAAA3Q,KAAAstC,KAAA2D,WACAO,EAAAxxC,KAAAqtC,MAAArtC,KAAAstC,KAAAz8B,OAAA7Q,KAAAstC,KAAA4D,YACAO,GAAAzxC,KAAA0d,MAAA1d,KAAAyd,MAAAzd,KAAAstC,KAAA38B,MACA+gC,GAAA1xC,KAAA2d,IAAA3d,KAAA4d,QAAA5d,KAAAstC,KAAAz8B,OAGA6M,GADAD,GAAAg0B,GAAAzxC,KAAAstC,KAAA8D,QAAAG,IACAE,GAAAzxC,KAAAstC,KAAA38B,MAAA4gC,GAEA3zB,GADAD,GAAA+zB,GAAA1xC,KAAAstC,KAAA+D,QAAAG,IACAE,GAAA1xC,KAAAstC,KAAAz8B,OAAA2gC,GAIAxxC,KAAAkjB,iBAAAnF,iBAAAN,EAAAC,EAAAC,EAAAC,EAAA5d,KAAA6d,KAAA7d,KAAA8d,MAIAmL,OAAA,SAAAC,GAEA,IAAAhB,EAAAmkB,GAAAruC,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAYA,OAVAhB,EAAApqB,OAAAuvC,KAAArtC,KAAAqtC,KACAnlB,EAAApqB,OAAA2f,KAAAzd,KAAAyd,KACAyK,EAAApqB,OAAA4f,MAAA1d,KAAA0d,MACAwK,EAAApqB,OAAA6f,IAAA3d,KAAA2d,IACAuK,EAAApqB,OAAA8f,OAAA5d,KAAA4d,OACAsK,EAAApqB,OAAA+f,KAAA7d,KAAA6d,KACAqK,EAAApqB,OAAAggB,IAAA9d,KAAA8d,IAEA,OAAA9d,KAAAstC,OAAAplB,EAAApqB,OAAAwvC,KAAAlwC,OAAA4D,UAAgEhB,KAAAstC,OAEhEplB,KA2BA9qB,OAAA4D,OAAAwsC,GAAAxvC,WAEAqT,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAEA/B,KAAAI,EAAA2B,EAAA3B,EACAJ,KAAAK,EAAA0B,EAAA1B,EACAL,KAAAjD,EAAAgF,EAAAhF,EAEAiD,KAAAikB,OAAA1S,KAAAxP,EAAAkiB,QACAjkB,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OAEA1jC,KAAAytC,cAAA1rC,EAAA0rC,cAEA,QAAA/wC,EAAA,EAAAivB,EAAA5pB,EAAA2rC,cAAAprC,OAAoD5F,EAAAivB,EAAQjvB,IAE5DsD,KAAA0tC,cAAAhxC,GAAAqF,EAAA2rC,cAAAhxC,GAAA2U,QAIA,IAAA3U,EAAA,EAAAivB,EAAA5pB,EAAA4rC,aAAArrC,OAAmD5F,EAAAivB,EAAQjvB,IAE3DsD,KAAA2tC,aAAAjxC,GAAAqF,EAAA4rC,aAAAjxC,GAAA2U,QAIA,OAAArR,QAeA,IA+UApB,GA3JA+yC,GApLAC,GAAA,EAEA,SAAAC,KAEAz0C,OAAAC,eAAA2C,KAAA,MAAqCtC,MAAAk0C,IAAA,IAErC5xC,KAAA0C,KAAAgL,GAAAI,eAEA9N,KAAA/C,KAAA,GACA+C,KAAA2E,KAAA,WAEA3E,KAAA6sB,YACA7sB,KAAA8xC,UACA9xC,KAAA+xC,SACA/xC,KAAAgyC,mBAEAhyC,KAAAiyC,gBACAjyC,KAAAkyC,gBAEAlyC,KAAAmyC,eACAnyC,KAAAoyC,eAEApyC,KAAAqyC,iBAEAryC,KAAAsyC,YAAA,KACAtyC,KAAAuxB,eAAA,KAIAvxB,KAAAuyC,sBACAvyC,KAAAwyC,sBACAxyC,KAAAyyC,iBACAzyC,KAAA0yC,qBACA1yC,KAAA2yC,oBACA3yC,KAAA4yC,2BACA5yC,KAAA6yC,oBA22CA,SAAAC,GAAAvtC,EAAAwtC,EAAAC,GAEA,GAAA3zC,MAAAm6B,QAAAj0B,GAEA,UAAAnD,UAAA,yDAIApC,KAAA/C,KAAA,GAEA+C,KAAAuF,QACAvF,KAAA+yC,WACA/yC,KAAA6a,eAAAtV,IAAAjD,OAAAywC,EAAA,EACA/yC,KAAAgzC,kBAEAhzC,KAAAizC,WACAjzC,KAAAkzC,aAAqBt0C,OAAA,EAAAic,OAAA,GAErB7a,KAAAinB,QAAA,EA4SA,SAAAksB,GAAA5tC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAAozC,UAAA7tC,GAAAwtC,EAAAC,GAQA,SAAAK,GAAA9tC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAAb,WAAAoG,GAAAwtC,EAAAC,GAQA,SAAAM,GAAA/tC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAAuzC,kBAAAhuC,GAAAwtC,EAAAC,GAQA,SAAAQ,GAAAjuC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAAyzC,WAAAluC,GAAAwtC,EAAAC,GAQA,SAAAU,GAAAnuC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAA2zC,YAAApuC,GAAAwtC,EAAAC,GAQA,SAAAY,GAAAruC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAA6zC,WAAAtuC,GAAAwtC,EAAAC,GAQA,SAAAc,GAAAvuC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAA+zC,YAAAxuC,GAAAwtC,EAAAC,GAQA,SAAAgB,GAAAzuC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAAi0C,aAAA1uC,GAAAwtC,EAAAC,GAQA,SAAAkB,GAAA3uC,EAAAwtC,EAAAC,GAEAF,GAAAj2C,KAAAmD,KAAA,IAAAm0C,aAAA5uC,GAAAwtC,EAAAC,GAWA,SAAAoB,KAEAp0C,KAAA6sB,YACA7sB,KAAAq0C,WACAr0C,KAAA8xC,UACA9xC,KAAAs0C,OACAt0C,KAAAu0C,QAEAv0C,KAAAw0C,UAEAx0C,KAAAiyC,gBAEAjyC,KAAAmyC,eACAnyC,KAAAoyC,eAIApyC,KAAAsyC,YAAA,KACAtyC,KAAAuxB,eAAA,KAIAvxB,KAAAwyC,sBACAxyC,KAAA0yC,qBACA1yC,KAAA2yC,oBACA3yC,KAAAyyC,iBACAzyC,KAAA6yC,oBAwOA,SAAA4B,GAAAlvC,GAEA,OAAAA,EAAAjD,OAAA,WAIA,IAFA,IAAAoD,EAAAH,EAAA,GAEA7I,EAAA,EAAAC,EAAA4I,EAAAjD,OAAmC5F,EAAAC,IAAOD,EAE1C6I,EAAA7I,GAAAgJ,MAAAH,EAAA7I,IAIA,OAAAgJ,EAhhEAmsC,GAAA7zC,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAAugC,GAEAjlB,cAEAmhB,YAAA,SAAAnoC,GAIA,IAFA,IAAAsqB,OAAAzf,IAAAsU,gBAAAnf,GAEAlJ,EAAA,EAAAivB,EAAA3rB,KAAA6sB,SAAAvqB,OAA6C5F,EAAAivB,EAAQjvB,IAErDsD,KAAA6sB,SAAAnwB,GACAqe,aAAAnV,GAIA,IAAAlJ,EAAA,EAAAivB,EAAA3rB,KAAA+xC,MAAAzvC,OAA0C5F,EAAAivB,EAAQjvB,IAAA,CAElD,IAAAg4C,EAAA10C,KAAA+xC,MAAAr1C,GACAg4C,EAAAzwB,OAAA5R,aAAA6d,GAAAhd,YAEA,QAAAib,EAAA,EAAAwmB,EAAAD,EAAAhH,cAAAprC,OAAmD6rB,EAAAwmB,EAAQxmB,IAE3DumB,EAAAhH,cAAAvf,GAAA9b,aAAA6d,GAAAhd,YAqBA,OAfA,OAAAlT,KAAAsyC,aAEAtyC,KAAA40C,qBAIA,OAAA50C,KAAAuxB,gBAEAvxB,KAAAwxB,wBAIAxxB,KAAAwyC,sBACAxyC,KAAA0yC,qBAEA1yC,MAIAsuC,QAAA,WAIA,IAAAte,EAAA,IAAAhgB,GAEA,gBAAAmD,GAMA,OAJA6c,EAAA5T,cAAAjJ,GAEAnT,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAuuC,QAAA,WAIA,IAAAve,EAAA,IAAAhgB,GAEA,gBAAAmD,GAMA,OAJA6c,EAAA1T,cAAAnJ,GAEAnT,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAwuC,QAAA,WAIA,IAAAxe,EAAA,IAAAhgB,GAEA,gBAAAmD,GAMA,OAJA6c,EAAAzT,cAAApJ,GAEAnT,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAulB,UAAA,WAIA,IAAAyK,EAAA,IAAAhgB,GAEA,gBAAA5L,EAAAyB,EAAAC,GAMA,OAJAkqB,EAAA7T,gBAAA/X,EAAAyB,EAAAC,GAEA9F,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBA8b,MAAA,WAIA,IAAAkU,EAAA,IAAAhgB,GAEA,gBAAA5L,EAAAyB,EAAAC,GAMA,OAJAkqB,EAAApT,UAAAxY,EAAAyB,EAAAC,GAEA9F,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAsY,QAEAq5B,GAAA,IAAAtF,GAEA,SAAA1mC,GAEAgsC,GAAAr5B,OAAA3S,GAEAgsC,GAAA3oB,eAEAhpB,KAAA+tC,YAAA4D,GAAA/rC,UAMAivC,mBAAA,SAAAloB,GAEA,IAAAH,EAAAxsB,KAEA80C,EAAA,OAAAnoB,EAAAnoB,MAAAmoB,EAAAnoB,MAAAe,aACAwnB,EAAAJ,EAAAI,WAEAgoB,EAAAhoB,EAAAhQ,SAAAxX,MACA8uC,WAAAtnB,EAAA9I,OAAA8I,EAAA9I,OAAA1e,aACAusC,WAAA/kB,EAAA2W,MAAA3W,EAAA2W,MAAAn+B,aACA+uC,WAAAvnB,EAAAzC,GAAAyC,EAAAzC,GAAA/kB,aACAgvC,WAAAxnB,EAAAioB,IAAAjoB,EAAAioB,IAAAzvC,kBAAAmiB,IAEA6sB,IAAAv0C,KAAAgyC,cAAA,OAMA,IAJA,IAAAiD,KACAC,KACAC,KAEAz4C,EAAA,EAAAyxB,EAAA,EAAyBzxB,EAAAq4C,EAAAzyC,OAAsB5F,GAAA,EAAAyxB,GAAA,EAE/C3B,EAAAK,SAAA7nB,KAAA,IAAAwL,GAAAukC,EAAAr4C,GAAAq4C,EAAAr4C,EAAA,GAAAq4C,EAAAr4C,EAAA,cAEA23C,GAEAY,EAAAjwC,KAAA,IAAAwL,GAAA6jC,EAAA33C,GAAA23C,EAAA33C,EAAA,GAAA23C,EAAA33C,EAAA,cAIAo1C,GAEAtlB,EAAAslB,OAAA9sC,KAAA,IAAA89B,GAAAgP,EAAAp1C,GAAAo1C,EAAAp1C,EAAA,GAAAo1C,EAAAp1C,EAAA,cAIA43C,GAEAY,EAAAlwC,KAAA,IAAA+K,GAAAukC,EAAAnmB,GAAAmmB,EAAAnmB,EAAA,cAIAomB,GAEAY,EAAAnwC,KAAA,IAAA+K,GAAAwkC,EAAApmB,GAAAomB,EAAApmB,EAAA,KAMA,SAAAinB,EAAAh1C,EAAAC,EAAAtD,EAAA0wC,GAEA,IAGAiH,EAAA,IAAAlH,GAAAptC,EAAAC,EAAAtD,WAHAs3C,GAAAY,EAAA70C,GAAAiR,QAAA4jC,EAAA50C,GAAAgR,QAAA4jC,EAAAl4C,GAAAsU,qBACAygC,GAAAtlB,EAAAslB,OAAA1xC,GAAAiR,QAAAmb,EAAAslB,OAAAzxC,GAAAgR,QAAAmb,EAAAslB,OAAA/0C,GAAAsU,YAEAo8B,GAEAjhB,EAAAulB,MAAA/sC,KAAA0vC,YAEAJ,GAEA9nB,EAAAwlB,cAAA,GAAAhtC,MAAAkwC,EAAA90C,GAAAiR,QAAA6jC,EAAA70C,GAAAgR,QAAA6jC,EAAAn4C,GAAAsU,mBAIAkjC,GAEA/nB,EAAAwlB,cAAA,GAAAhtC,MAAAmwC,EAAA/0C,GAAAiR,QAAA8jC,EAAA90C,GAAAgR,QAAA8jC,EAAAp4C,GAAAsU,UAMA,IAAAmjC,EAAA7nB,EAAA6nB,OAEA,GAAAA,EAAAlyC,OAAA,EAEA,IAAA5F,EAAA,EAAmBA,EAAA83C,EAAAlyC,OAAmB5F,IAOtC,IALA,IAAA24C,EAAAb,EAAA93C,GAEAgzB,EAAA2lB,EAAA3lB,MAGAilB,GAAAxmB,EAAAuB,IAFA2lB,EAAAx6B,OAE4CsT,EAAAwmB,EAAQxmB,GAAA,WAEpD2mB,EAEAM,EAAAN,EAAA3mB,GAAA2mB,EAAA3mB,EAAA,GAAA2mB,EAAA3mB,EAAA,GAAAknB,EAAA5H,eAIA2H,EAAAjnB,IAAA,EAAAA,EAAA,EAAAknB,EAAA5H,oBAUA,YAAAqH,EAEA,IAAAp4C,EAAA,EAAoBA,EAAAo4C,EAAAxyC,OAAoB5F,GAAA,EAExC04C,EAAAN,EAAAp4C,GAAAo4C,EAAAp4C,EAAA,GAAAo4C,EAAAp4C,EAAA,SAMA,IAAAA,EAAA,EAAoBA,EAAAq4C,EAAAzyC,OAAA,EAA0B5F,GAAA,EAE9C04C,EAAA14C,IAAA,EAAAA,EAAA,GAsBA,OAdAsD,KAAAs1C,qBAEA,OAAA3oB,EAAA2lB,cAEAtyC,KAAAsyC,YAAA3lB,EAAA2lB,YAAAjhC,SAIA,OAAAsb,EAAA4E,iBAEAvxB,KAAAuxB,eAAA5E,EAAA4E,eAAAlgB,SAIArR,MAIAsU,QAEA1V,GAAA,IAAA4R,GAEA,WAQA,OANAxQ,KAAA40C,qBAEA50C,KAAAsyC,YAAAnmB,UAAAvtB,IAAAgU,SAEA5S,KAAAulB,UAAA3mB,GAAAwF,EAAAxF,GAAAiH,EAAAjH,GAAAkH,GAEA9F,OAMAkT,UAAA,WAEAlT,KAAAwxB,wBAEA,IAAAld,EAAAtU,KAAAuxB,eAAAjd,OACAkQ,EAAAxkB,KAAAuxB,eAAA/M,OAEArmB,EAAA,IAAAqmB,EAAA,IAAAA,EAEA5e,EAAA,IAAAoK,GAUA,OATApK,EAAAgL,IACAzS,EAAA,KAAAA,EAAAmW,EAAAlQ,EACA,EAAAjG,EAAA,GAAAA,EAAAmW,EAAAzO,EACA,IAAA1H,KAAAmW,EAAAxO,EACA,SAGA9F,KAAA+tC,YAAAnoC,GAEA5F,MAIAs1C,mBAAA,WAIA,IAFA,IAAAC,EAAA,IAAA/kC,GAAAglC,EAAA,IAAAhlC,GAEAlQ,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAA0ChC,EAAAm1C,EAAQn1C,IAAA,CAElD,IAAAo0C,EAAA10C,KAAA+xC,MAAAzxC,GAEAo1C,EAAA11C,KAAA6sB,SAAA6nB,EAAAt0C,GACAu1C,EAAA31C,KAAA6sB,SAAA6nB,EAAAr0C,GACAu1C,EAAA51C,KAAA6sB,SAAA6nB,EAAA33C,GAEAw4C,EAAAxjC,WAAA6jC,EAAAD,GACAH,EAAAzjC,WAAA2jC,EAAAC,GACAJ,EAAAjyB,MAAAkyB,GAEAD,EAAAriC,YAEAwhC,EAAAzwB,OAAA1S,KAAAgkC,KAMAM,qBAAA,SAAAC,GAIA,IAAAtkC,EAAAukC,EAAAz1C,EAAAm1C,EAAAf,EAAA7nB,EAIA,aANAipB,UAIAjpB,EAAA,IAAAxtB,MAAAW,KAAA6sB,SAAAvqB,QAEAkP,EAAA,EAAAukC,EAAA/1C,KAAA6sB,SAAAvqB,OAAyCkP,EAAAukC,EAAQvkC,IAEjDqb,EAAArb,GAAA,IAAAhB,GAIA,GAAAslC,EAAA,CAKA,IAAAJ,EAAAC,EAAAC,EACAL,EAAA,IAAA/kC,GAAAglC,EAAA,IAAAhlC,GAEA,IAAAlQ,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAuChC,EAAAm1C,EAAQn1C,IAE/Co0C,EAAA10C,KAAA+xC,MAAAzxC,GAEAo1C,EAAA11C,KAAA6sB,SAAA6nB,EAAAt0C,GACAu1C,EAAA31C,KAAA6sB,SAAA6nB,EAAAr0C,GACAu1C,EAAA51C,KAAA6sB,SAAA6nB,EAAA33C,GAEAw4C,EAAAxjC,WAAA6jC,EAAAD,GACAH,EAAAzjC,WAAA2jC,EAAAC,GACAJ,EAAAjyB,MAAAkyB,GAEA3oB,EAAA6nB,EAAAt0C,GAAAqR,IAAA8jC,GACA1oB,EAAA6nB,EAAAr0C,GAAAoR,IAAA8jC,GACA1oB,EAAA6nB,EAAA33C,GAAA0U,IAAA8jC,QAQA,IAFAv1C,KAAAs1C,qBAEAh1C,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAuChC,EAAAm1C,EAAQn1C,IAI/CusB,GAFA6nB,EAAA10C,KAAA+xC,MAAAzxC,IAEAF,GAAAqR,IAAAijC,EAAAzwB,QACA4I,EAAA6nB,EAAAr0C,GAAAoR,IAAAijC,EAAAzwB,QACA4I,EAAA6nB,EAAA33C,GAAA0U,IAAAijC,EAAAzwB,QAMA,IAAAzS,EAAA,EAAAukC,EAAA/1C,KAAA6sB,SAAAvqB,OAAyCkP,EAAAukC,EAAQvkC,IAEjDqb,EAAArb,GAAA0B,YAIA,IAAA5S,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAsChC,EAAAm1C,EAAQn1C,IAAA,CAI9C,IAAAotC,GAFAgH,EAAA10C,KAAA+xC,MAAAzxC,IAEAotC,cAEA,IAAAA,EAAAprC,QAEAorC,EAAA,GAAAn8B,KAAAsb,EAAA6nB,EAAAt0C,IACAstC,EAAA,GAAAn8B,KAAAsb,EAAA6nB,EAAAr0C,IACAqtC,EAAA,GAAAn8B,KAAAsb,EAAA6nB,EAAA33C,MAIA2wC,EAAA,GAAA7gB,EAAA6nB,EAAAt0C,GAAAiR,QACAq8B,EAAA,GAAA7gB,EAAA6nB,EAAAr0C,GAAAgR,QACAq8B,EAAA,GAAA7gB,EAAA6nB,EAAA33C,GAAAsU,SAMArR,KAAA+xC,MAAAzvC,OAAA,IAEAtC,KAAA0yC,uBAMAsD,yBAAA,WAEA,IAAA11C,EAAAm1C,EAAAf,EAIA,IAFA10C,KAAAs1C,qBAEAh1C,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAsChC,EAAAm1C,EAAQn1C,IAAA,CAI9C,IAAAotC,GAFAgH,EAAA10C,KAAA+xC,MAAAzxC,IAEAotC,cAEA,IAAAA,EAAAprC,QAEAorC,EAAA,GAAAn8B,KAAAmjC,EAAAzwB,QACAypB,EAAA,GAAAn8B,KAAAmjC,EAAAzwB,QACAypB,EAAA,GAAAn8B,KAAAmjC,EAAAzwB,UAIAypB,EAAA,GAAAgH,EAAAzwB,OAAA5S,QACAq8B,EAAA,GAAAgH,EAAAzwB,OAAA5S,QACAq8B,EAAA,GAAAgH,EAAAzwB,OAAA5S,SAMArR,KAAA+xC,MAAAzvC,OAAA,IAEAtC,KAAA0yC,uBAMAuD,oBAAA,WAEA,IAAAv5C,EAAAivB,EAAArrB,EAAAm1C,EAAAf,EAMA,IAAAp0C,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAsChC,EAAAm1C,EAAQn1C,IAgB9C,KAdAo0C,EAAA10C,KAAA+xC,MAAAzxC,IAEA41C,qBAMAxB,EAAAwB,qBAAA3kC,KAAAmjC,EAAAzwB,QAJAywB,EAAAwB,qBAAAxB,EAAAzwB,OAAA5S,QAQAqjC,EAAAyB,0BAAAzB,EAAAyB,4BAEAz5C,EAAA,EAAAivB,EAAA+oB,EAAAhH,cAAAprC,OAA+C5F,EAAAivB,EAAQjvB,IAEvDg4C,EAAAyB,wBAAAz5C,GAMAg4C,EAAAyB,wBAAAz5C,GAAA6U,KAAAmjC,EAAAhH,cAAAhxC,IAJAg4C,EAAAyB,wBAAAz5C,GAAAg4C,EAAAhH,cAAAhxC,GAAA2U,QAcA,IAAA+kC,EAAA,IAAAvE,GAGA,IAFAuE,EAAArE,MAAA/xC,KAAA+xC,MAEAr1C,EAAA,EAAAivB,EAAA3rB,KAAAiyC,aAAA3vC,OAA6C5F,EAAAivB,EAAQjvB,IAAA,CAIrD,IAAAsD,KAAAkyC,aAAAx1C,GAAA,CAEAsD,KAAAkyC,aAAAx1C,MACAsD,KAAAkyC,aAAAx1C,GAAA25C,eACAr2C,KAAAkyC,aAAAx1C,GAAAgxC,iBAEA,IAAA4I,EAAAt2C,KAAAkyC,aAAAx1C,GAAA25C,YACAE,EAAAv2C,KAAAkyC,aAAAx1C,GAAAgxC,cAIA,IAAAptC,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAwChC,EAAAm1C,EAAQn1C,IAEhDk2C,EAAA,IAAAhmC,GACAk9B,GAAsBttC,EAAA,IAAAoQ,GAAAnQ,EAAA,IAAAmQ,GAAAzT,EAAA,IAAAyT,IAEtB8lC,EAAAtxC,KAAAwxC,GACAD,EAAAvxC,KAAA0oC,GAMA,IAaA8I,EAAA9I,EAbAwE,EAAAlyC,KAAAkyC,aAAAx1C,GAeA,IAXA05C,EAAAvpB,SAAA7sB,KAAAiyC,aAAAv1C,GAAAmwB,SAIAupB,EAAAd,qBACAc,EAAAP,uBAMAv1C,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAuChC,EAAAm1C,EAAQn1C,IAE/Co0C,EAAA10C,KAAA+xC,MAAAzxC,GAEAk2C,EAAAtE,EAAAmE,YAAA/1C,GACAotC,EAAAwE,EAAAxE,cAAAptC,GAEAk2C,EAAAjlC,KAAAmjC,EAAAzwB,QAEAypB,EAAAttC,EAAAmR,KAAAmjC,EAAAhH,cAAA,IACAA,EAAArtC,EAAAkR,KAAAmjC,EAAAhH,cAAA,IACAA,EAAA3wC,EAAAwU,KAAAmjC,EAAAhH,cAAA,IAQA,IAAAptC,EAAA,EAAAm1C,EAAAz1C,KAAA+xC,MAAAzvC,OAAsChC,EAAAm1C,EAAQn1C,KAE9Co0C,EAAA10C,KAAA+xC,MAAAzxC,IAEA2jB,OAAAywB,EAAAwB,qBACAxB,EAAAhH,cAAAgH,EAAAyB,yBAMAvB,mBAAA,WAEA,OAAA50C,KAAAsyC,cAEAtyC,KAAAsyC,YAAA,IAAAnqB,IAIAnoB,KAAAsyC,YAAA7mB,cAAAzrB,KAAA6sB,WAIA2E,sBAAA,WAEA,OAAAxxB,KAAAuxB,iBAEAvxB,KAAAuxB,eAAA,IAAAlJ,IAIAroB,KAAAuxB,eAAA9F,cAAAzrB,KAAA6sB,WAIAmM,MAAA,SAAArM,EAAA/mB,EAAA6wC,GAEA,GAAA9pB,KAAAC,WAAA,CAOA,IAAAsD,EACAwmB,EAAA12C,KAAA6sB,SAAAvqB,OACAq0C,EAAA32C,KAAA6sB,SACA+pB,EAAAjqB,EAAAE,SACAgqB,EAAA72C,KAAA+xC,MACA+E,EAAAnqB,EAAAolB,MACAgF,EAAA/2C,KAAAgyC,cAAA,GACAuC,EAAA5nB,EAAAqlB,cAAA,GACAgF,EAAAh3C,KAAA8xC,OACAmF,EAAAtqB,EAAAmlB,gBAEA2E,MAAA,YAEA7wC,IAEAsqB,OAAAzf,IAAAsU,gBAAAnf,IAMA,QAAAlJ,EAAA,EAAAivB,EAAAirB,EAAAt0C,OAAyC5F,EAAAivB,EAAQjvB,IAAA,CAEjD,IAEAw6C,EAFAN,EAAAl6C,GAEA2U,iBAEAzL,GAAAsxC,EAAAn8B,aAAAnV,GAEA+wC,EAAA3xC,KAAAkyC,GAMA,IAAAx6C,EAAA,EAAAivB,EAAAsrB,EAAA30C,OAAuC5F,EAAAivB,EAAQjvB,IAE/Cs6C,EAAAhyC,KAAAiyC,EAAAv6C,GAAA2U,SAMA,IAAA3U,EAAA,EAAAivB,EAAAmrB,EAAAx0C,OAAkC5F,EAAAivB,EAAQjvB,IAAA,CAE1C,IAAAy6C,EAAAlzB,EAAAyf,EAAAgR,EAAAoC,EAAAp6C,GACA06C,EAAA1C,EAAAhH,cACA2J,EAAA3C,EAAA/G,cAEAwJ,EAAA,IAAA3J,GAAAkH,EAAAt0C,EAAAs2C,EAAAhC,EAAAr0C,EAAAq2C,EAAAhC,EAAA33C,EAAA25C,IACAzyB,OAAA1S,KAAAmjC,EAAAzwB,iBAEAiM,GAEAinB,EAAAlzB,OAAA5R,aAAA6d,GAAAhd,YAIA,QAAAib,EAAA,EAAAwmB,EAAAyC,EAAA90C,OAAkD6rB,EAAAwmB,EAAQxmB,IAE1DlK,EAAAmzB,EAAAjpB,GAAA9c,iBAEA6e,GAEAjM,EAAA5R,aAAA6d,GAAAhd,YAIAikC,EAAAzJ,cAAA1oC,KAAAif,GAMA,IAFAkzB,EAAAzT,MAAAnyB,KAAAmjC,EAAAhR,OAEAvV,EAAA,EAAAwmB,EAAA0C,EAAA/0C,OAAiD6rB,EAAAwmB,EAAQxmB,IAEzDuV,EAAA2T,EAAAlpB,GACAgpB,EAAAxJ,aAAA3oC,KAAA0+B,EAAAryB,SAIA8lC,EAAA1J,cAAAiH,EAAAjH,cAAAgJ,EAEAI,EAAA7xC,KAAAmyC,GAMA,IAAAz6C,EAAA,EAAAivB,EAAA4oB,EAAAjyC,OAAgC5F,EAAAivB,EAAQjvB,IAAA,CAExC,IAAA4tB,EAAAiqB,EAAA73C,GAAA46C,KAEA,YAAAhtB,EAAA,CAMA,IAAA6D,EAAA,EAAAwmB,EAAArqB,EAAAhoB,OAAmC6rB,EAAAwmB,EAAQxmB,IAE3CmpB,EAAAtyC,KAAAslB,EAAA6D,GAAA9c,SAIA0lC,EAAA/xC,KAAAsyC,UA9GAz0C,QAAAtC,MAAA,sEAAAosB,IAoHA4qB,UAAA,SAAAC,GAEAA,KAAAC,QAOAD,EAAA5wB,kBAAA4wB,EAAAxuB,eAEAhpB,KAAAg5B,MAAAwe,EAAA7qB,SAAA6qB,EAAA5xC,SAPA/C,QAAAtC,MAAA,kEAAAi3C,IAiBAE,cAAA,WAEA,IAGAlmC,EAAAjP,EAGA7F,EAAAivB,EAAA+oB,EACAI,EAAA3mB,EAAAwmB,EAPAgD,KACAC,KAAAC,KAIAC,EAAAx4C,KAAAyE,IAAA,GADA,GAKA,IAAArH,EAAA,EAAAivB,EAAA3rB,KAAA6sB,SAAAvqB,OAAyC5F,EAAAivB,EAAQjvB,IAEjD8U,EAAAxR,KAAA6sB,SAAAnwB,YAGAi7C,EAFAp1C,EAAAjD,KAAAoT,MAAAlB,EAAApN,EAAA0zC,GAAA,IAAAx4C,KAAAoT,MAAAlB,EAAA3L,EAAAiyC,GAAA,IAAAx4C,KAAAoT,MAAAlB,EAAA1L,EAAAgyC,KAIAH,EAAAp1C,GAAA7F,EACAk7C,EAAA5yC,KAAAhF,KAAA6sB,SAAAnwB,IACAm7C,EAAAn7C,GAAAk7C,EAAAt1C,OAAA,GAKAu1C,EAAAn7C,GAAAm7C,EAAAF,EAAAp1C,IASA,IAAAw1C,KAEA,IAAAr7C,EAAA,EAAAivB,EAAA3rB,KAAA+xC,MAAAzvC,OAAsC5F,EAAAivB,EAAQjvB,IAAA,EAE9Cg4C,EAAA10C,KAAA+xC,MAAAr1C,IAEA0D,EAAAy3C,EAAAnD,EAAAt0C,GACAs0C,EAAAr0C,EAAAw3C,EAAAnD,EAAAr0C,GACAq0C,EAAA33C,EAAA86C,EAAAnD,EAAA33C,GAEA+3C,GAAAJ,EAAAt0C,EAAAs0C,EAAAr0C,EAAAq0C,EAAA33C,GAIA,QAAAY,EAAA,EAAmBA,EAAA,EAAOA,IAE1B,GAAAm3C,EAAAn3C,KAAAm3C,GAAAn3C,EAAA,OAEAo6C,EAAA/yC,KAAAtI,GACA,OAQA,IAAAA,EAAAq7C,EAAAz1C,OAAA,EAA2C5F,GAAA,EAAQA,IAAA,CAEnD,IAAAs7C,EAAAD,EAAAr7C,GAIA,IAFAsD,KAAA+xC,MAAA3sC,OAAA4yC,EAAA,GAEA7pB,EAAA,EAAAwmB,EAAA30C,KAAAgyC,cAAA1vC,OAA+C6rB,EAAAwmB,EAAQxmB,IAEvDnuB,KAAAgyC,cAAA7jB,GAAA/oB,OAAA4yC,EAAA,GAQA,IAAAC,EAAAj4C,KAAA6sB,SAAAvqB,OAAAs1C,EAAAt1C,OAEA,OADAtC,KAAA6sB,SAAA+qB,EACAK,GAIAxsB,cAAA,SAAAjG,GAEAxlB,KAAA6sB,YAEA,QAAAnwB,EAAA,EAAAC,EAAA6oB,EAAAljB,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAA2vB,EAAA7G,EAAA9oB,GACAsD,KAAA6sB,SAAA7nB,KAAA,IAAAwL,GAAA6b,EAAAjoB,EAAAioB,EAAAxmB,EAAAwmB,EAAAvmB,GAAA,IAIA,OAAA9F,MAIAk4C,yBAAA,WAOA,IALA,IAAAnG,EAAA/xC,KAAA+xC,MACAzvC,EAAAyvC,EAAAzvC,OAIA5F,EAAA,EAAkBA,EAAA4F,EAAY5F,IAE9Bq1C,EAAAr1C,GAAAy7C,IAAAz7C,EAYAq1C,EAAAqG,KANA,SAAAh4C,EAAAC,GAEA,OAAAD,EAAAqtC,cAAAptC,EAAAotC,gBAQA,IAGA4K,EAAAC,EAHAvB,EAAA/2C,KAAAgyC,cAAA,GACAuC,EAAAv0C,KAAAgyC,cAAA,GAOA,IAHA+E,KAAAz0C,aAAA+1C,MACA9D,KAAAjyC,aAAAg2C,MAEA57C,EAAA,EAAkBA,EAAA4F,EAAY5F,IAAA,CAE9B,IAAAwyC,EAAA6C,EAAAr1C,GAAAy7C,IAEAE,KAAArzC,KAAA+xC,EAAA7H,IACAoJ,KAAAtzC,KAAAuvC,EAAArF,IAIAmJ,IAAAr4C,KAAAgyC,cAAA,GAAAqG,GACAC,IAAAt4C,KAAAgyC,cAAA,GAAAsG,IAIArvB,OAAA,WAEA,IAAAf,GACAmB,UACApC,QAAA,IACAtiB,KAAA,WACA2kB,UAAA,oBAUA,GAJApB,EAAAxlB,KAAA1C,KAAA0C,KACAwlB,EAAAvjB,KAAA3E,KAAA2E,KACA,KAAA3E,KAAA/C,OAAAirB,EAAAjrB,KAAA+C,KAAA/C,eAEA+C,KAAAqwC,WAAA,CAEA,IAAAA,EAAArwC,KAAAqwC,WAEA,QAAA9tC,KAAA8tC,WAEAA,EAAA9tC,KAAA2lB,EAAA3lB,GAAA8tC,EAAA9tC,IAIA,OAAA2lB,EAMA,IAFA,IAAA2E,KAEAnwB,EAAA,EAAkBA,EAAAsD,KAAA6sB,SAAAvqB,OAA0B5F,IAAA,CAE5C,IAAA67C,EAAAv4C,KAAA6sB,SAAAnwB,GACAmwB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIA,IAAAisC,KACAsC,KACAmE,KACA1G,KACA2G,KACAnE,KACAoE,KAEA,IAAAh8C,EAAA,EAAkBA,EAAAsD,KAAA+xC,MAAAzvC,OAAuB5F,IAAA,CAEzC,IAAAg4C,EAAA10C,KAAA+xC,MAAAr1C,GAIAi8C,WAAA34C,KAAAgyC,cAAA,GAAAt1C,GACAk8C,EAAAlE,EAAAzwB,OAAA3hB,SAAA,EACAu2C,EAAAnE,EAAAhH,cAAAprC,OAAA,EACAw2C,EAAA,IAAApE,EAAAhR,MAAAjmC,GAAA,IAAAi3C,EAAAhR,MAAA5e,GAAA,IAAA4vB,EAAAhR,MAAArjC,EACA04C,EAAArE,EAAA/G,aAAArrC,OAAA,EAEA02C,EAAA,EAeA,GANAA,EAAAC,EADAD,EAAAC,EADAD,EAAAC,EADAD,EAAAC,EADAD,EAAAC,EADAD,EAAAC,EADAD,EAAAC,EADAD,EAAAC,EAAAD,EAAA,KACA,MACA,MACA,EAAAL,GACA,EAAAC,GACA,EAAAC,GACA,EAAAC,GACA,EAAAC,GAEAhH,EAAA/sC,KAAAg0C,GACAjH,EAAA/sC,KAAA0vC,EAAAt0C,EAAAs0C,EAAAr0C,EAAAq0C,EAAA33C,GACAg1C,EAAA/sC,KAAA0vC,EAAAjH,eAEAkL,EAAA,CAEA,IAAA3G,EAAAhyC,KAAAgyC,cAAA,GAAAt1C,GAEAq1C,EAAA/sC,KACAk0C,EAAAlH,EAAA,IACAkH,EAAAlH,EAAA,IACAkH,EAAAlH,EAAA,KAWA,GANA4G,GAEA7G,EAAA/sC,KAAAm0C,EAAAzE,EAAAzwB,SAIA40B,EAAA,CAEA,IAAAnL,EAAAgH,EAAAhH,cAEAqE,EAAA/sC,KACAm0C,EAAAzL,EAAA,IACAyL,EAAAzL,EAAA,IACAyL,EAAAzL,EAAA,KAWA,GANAoL,GAEA/G,EAAA/sC,KAAAo0C,EAAA1E,EAAAhR,QAIAqV,EAAA,CAEA,IAAApL,EAAA+G,EAAA/G,aAEAoE,EAAA/sC,KACAo0C,EAAAzL,EAAA,IACAyL,EAAAzL,EAAA,IACAyL,EAAAzL,EAAA,MAOA,SAAAsL,EAAAv7C,EAAAqf,EAAAo0B,GAEA,OAAAA,EAAAzzC,EAAA,GAAAqf,EAAArf,IAAA,GAAAqf,GAIA,SAAAo8B,EAAAl1B,GAEA,IAAAo1B,EAAAp1B,EAAA7f,EAAA3F,WAAAwlB,EAAApe,EAAApH,WAAAwlB,EAAAne,EAAArH,WAEA,gBAAA+5C,EAAAa,GAEAb,EAAAa,IAIAb,EAAAa,GAAAhF,EAAA/xC,OAAA,EACA+xC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAEA0yC,EAAAa,IAIA,SAAAD,EAAA1V,GAEA,IAAA2V,EAAA3V,EAAAjmC,EAAAgB,WAAAilC,EAAA5e,EAAArmB,WAAAilC,EAAArjC,EAAA5B,WAEA,gBAAAg6C,EAAAY,GAEAZ,EAAAY,IAIAZ,EAAAY,GAAAvH,EAAAxvC,OACAwvC,EAAA9sC,KAAA0+B,EAAAU,UAEAqU,EAAAY,IAIA,SAAAH,EAAA5uB,GAEA,IAAA+uB,EAAA/uB,EAAAlmB,EAAA3F,WAAA6rB,EAAAzkB,EAAApH,WAEA,gBAAAi6C,EAAAW,GAEAX,EAAAW,IAIAX,EAAAW,GAAA/E,EAAAhyC,OAAA,EACAgyC,EAAAtvC,KAAAslB,EAAAlmB,EAAAkmB,EAAAzkB,GAEA6yC,EAAAW,IAYA,OARAnxB,UAEAA,OAAA2E,WACA3E,OAAAmsB,UACAvC,EAAAxvC,OAAA,IAAA4lB,OAAA4pB,UACAwC,EAAAhyC,OAAA,IAAA4lB,OAAAosB,SACApsB,OAAA6pB,QAEA7pB,GAIA7W,MAAA,WA0BA,WAAAwgC,IAAAtgC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAEA,IAAArF,EAAAivB,EAAAwC,EAAAwmB,EAAA2E,EAAAC,EAIAv5C,KAAA6sB,YACA7sB,KAAA8xC,UACA9xC,KAAA+xC,SACA/xC,KAAAgyC,mBACAhyC,KAAAiyC,gBACAjyC,KAAAkyC,gBACAlyC,KAAAmyC,eACAnyC,KAAAoyC,eACApyC,KAAAqyC,iBACAryC,KAAAsyC,YAAA,KACAtyC,KAAAuxB,eAAA,KAIAvxB,KAAA/C,KAAA8E,EAAA9E,KAIA,IAAA4vB,EAAA9qB,EAAA8qB,SAEA,IAAAnwB,EAAA,EAAAivB,EAAAkB,EAAAvqB,OAAoC5F,EAAAivB,EAAQjvB,IAE5CsD,KAAA6sB,SAAA7nB,KAAA6nB,EAAAnwB,GAAA2U,SAMA,IAAAygC,EAAA/vC,EAAA+vC,OAEA,IAAAp1C,EAAA,EAAAivB,EAAAmmB,EAAAxvC,OAAkC5F,EAAAivB,EAAQjvB,IAE1CsD,KAAA8xC,OAAA9sC,KAAA8sC,EAAAp1C,GAAA2U,SAMA,IAAA0gC,EAAAhwC,EAAAgwC,MAEA,IAAAr1C,EAAA,EAAAivB,EAAAomB,EAAAzvC,OAAiC5F,EAAAivB,EAAQjvB,IAEzCsD,KAAA+xC,MAAA/sC,KAAA+sC,EAAAr1C,GAAA2U,SAMA,IAAA3U,EAAA,EAAAivB,EAAA5pB,EAAAiwC,cAAA1vC,OAAgD5F,EAAAivB,EAAQjvB,IAAA,CAExD,IAAAs1C,EAAAjwC,EAAAiwC,cAAAt1C,GAQA,aANAsD,KAAAgyC,cAAAt1C,KAEAsD,KAAAgyC,cAAAt1C,OAIAyxB,EAAA,EAAAwmB,EAAA3C,EAAA1vC,OAA0C6rB,EAAAwmB,EAAQxmB,IAAA,CAElD,IAAAmmB,EAAAtC,EAAA7jB,GAAAqrB,KAEA,IAAAF,EAAA,EAAAC,EAAAjF,EAAAhyC,OAAiCg3C,EAAAC,EAAQD,IAAA,CAEzC,IAAAhvB,EAAAgqB,EAAAgF,GAEAE,EAAAx0C,KAAAslB,EAAAjZ,SAIArR,KAAAgyC,cAAAt1C,GAAAsI,KAAAw0C,IAQA,IAAAvH,EAAAlwC,EAAAkwC,aAEA,IAAAv1C,EAAA,EAAAivB,EAAAsmB,EAAA3vC,OAAwC5F,EAAAivB,EAAQjvB,IAAA,CAEhD,IAAA+8C,KAKA,GAJAA,EAAAx8C,KAAAg1C,EAAAv1C,GAAAO,cAIAg1C,EAAAv1C,GAAAmwB,SAIA,IAFA4sB,EAAA5sB,YAEAsB,EAAA,EAAAwmB,EAAA1C,EAAAv1C,GAAAmwB,SAAAvqB,OAAwD6rB,EAAAwmB,EAAQxmB,IAEhEsrB,EAAA5sB,SAAA7nB,KAAAitC,EAAAv1C,GAAAmwB,SAAAsB,GAAA9c,SAQA,YAAA4gC,EAAAv1C,GAAA23C,QAIA,IAFAoF,EAAApF,WAEAlmB,EAAA,EAAAwmB,EAAA1C,EAAAv1C,GAAA23C,QAAA/xC,OAAuD6rB,EAAAwmB,EAAQxmB,IAE/DsrB,EAAApF,QAAArvC,KAAAitC,EAAAv1C,GAAA23C,QAAAlmB,GAAA9c,SAMArR,KAAAiyC,aAAAjtC,KAAAy0C,GAMA,IAAAvH,EAAAnwC,EAAAmwC,aAEA,IAAAx1C,EAAA,EAAAivB,EAAAumB,EAAA5vC,OAAwC5F,EAAAivB,EAAQjvB,IAAA,CAEhD,IAAAg9C,KAIA,YAAAxH,EAAAx1C,GAAAgxC,cAIA,IAFAgM,EAAAhM,iBAEAvf,EAAA,EAAAwmB,EAAAzC,EAAAx1C,GAAAgxC,cAAAprC,OAA6D6rB,EAAAwmB,EAAQxmB,IAAA,CAErE,IAAAwrB,EAAAzH,EAAAx1C,GAAAgxC,cAAAvf,GACAyrB,KAEAA,EAAAx5C,EAAAu5C,EAAAv5C,EAAAiR,QACAuoC,EAAAv5C,EAAAs5C,EAAAt5C,EAAAgR,QACAuoC,EAAA78C,EAAA48C,EAAA58C,EAAAsU,QAEAqoC,EAAAhM,cAAA1oC,KAAA40C,GAQA,YAAA1H,EAAAx1C,GAAA25C,YAIA,IAFAqD,EAAArD,eAEAloB,EAAA,EAAAwmB,EAAAzC,EAAAx1C,GAAA25C,YAAA/zC,OAA2D6rB,EAAAwmB,EAAQxmB,IAEnEurB,EAAArD,YAAArxC,KAAAktC,EAAAx1C,GAAA25C,YAAAloB,GAAA9c,SAMArR,KAAAkyC,aAAAltC,KAAA00C,GAMA,IAAAvH,EAAApwC,EAAAowC,YAEA,IAAAz1C,EAAA,EAAAivB,EAAAwmB,EAAA7vC,OAAuC5F,EAAAivB,EAAQjvB,IAE/CsD,KAAAmyC,YAAAntC,KAAAmtC,EAAAz1C,GAAA2U,SAMA,IAAA+gC,EAAArwC,EAAAqwC,YAEA,IAAA11C,EAAA,EAAAivB,EAAAymB,EAAA9vC,OAAuC5F,EAAAivB,EAAQjvB,IAE/CsD,KAAAoyC,YAAAptC,KAAAotC,EAAA11C,GAAA2U,SAMA,IAAAghC,EAAAtwC,EAAAswC,cAEA,IAAA31C,EAAA,EAAAivB,EAAA0mB,EAAA/vC,OAAyC5F,EAAAivB,EAAQjvB,IAEjDsD,KAAAqyC,cAAArtC,KAAAqtC,EAAA31C,IAMA,IAAA41C,EAAAvwC,EAAAuwC,YAEA,OAAAA,IAEAtyC,KAAAsyC,cAAAjhC,SAMA,IAAAkgB,EAAAxvB,EAAAwvB,eAkBA,OAhBA,OAAAA,IAEAvxB,KAAAuxB,iBAAAlgB,SAMArR,KAAAuyC,mBAAAxwC,EAAAwwC,mBACAvyC,KAAAwyC,mBAAAzwC,EAAAywC,mBACAxyC,KAAAyyC,cAAA1wC,EAAA0wC,cACAzyC,KAAA0yC,kBAAA3wC,EAAA2wC,kBACA1yC,KAAA2yC,iBAAA5wC,EAAA4wC,iBACA3yC,KAAA4yC,wBAAA7wC,EAAA6wC,wBACA5yC,KAAA6yC,iBAAA9wC,EAAA8wC,iBAEA7yC,MAIAoqB,QAAA,WAEApqB,KAAAqF,eAAuBV,KAAA,eAgCvBvH,OAAAC,eAAAy1C,GAAA90C,UAAA,eAEA4S,IAAA,SAAAlT,QAEAA,GAAAsC,KAAAinB,aAMA7pB,OAAA4D,OAAA8xC,GAAA90C,WAEA67C,qBAEAC,iBAAA,aAEAC,SAAA,SAAAx0C,GAEA,GAAAlG,MAAAm6B,QAAAj0B,GAEA,UAAAnD,UAAA,yDAOA,OAHApC,KAAA6a,eAAAtV,IAAAjD,OAAAtC,KAAA+yC,SAAA,EACA/yC,KAAAuF,QAEAvF,MAIAg6C,WAAA,SAAAt8C,GAIA,OAFAsC,KAAAizC,QAAAv1C,EAEAsC,MAIAuR,KAAA,SAAAxP,GAUA,OARA/B,KAAA/C,KAAA8E,EAAA9E,KACA+C,KAAAuF,MAAA,IAAAxD,EAAAwD,MAAA+L,YAAAvP,EAAAwD,OACAvF,KAAA+yC,SAAAhxC,EAAAgxC,SACA/yC,KAAA6a,MAAA9Y,EAAA8Y,MACA7a,KAAAgzC,WAAAjxC,EAAAixC,WAEAhzC,KAAAizC,QAAAlxC,EAAAkxC,QAEAjzC,MAIAi6C,OAAA,SAAAC,EAAAhmC,EAAAimC,GAEAD,GAAAl6C,KAAA+yC,SACAoH,GAAAjmC,EAAA6+B,SAEA,QAAAr2C,EAAA,EAAAC,EAAAqD,KAAA+yC,SAAqCr2C,EAAAC,EAAOD,IAE5CsD,KAAAuF,MAAA20C,EAAAx9C,GAAAwX,EAAA3O,MAAA40C,EAAAz9C,GAIA,OAAAsD,MAIAo6C,UAAA,SAAA70C,GAIA,OAFAvF,KAAAuF,MAAAqL,IAAArL,GAEAvF,MAIAq6C,gBAAA,SAAAvI,GAIA,IAFA,IAAAvsC,EAAAvF,KAAAuF,MAAA3G,EAAA,EAEAlC,EAAA,EAAAC,EAAAm1C,EAAAxvC,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAAgnC,EAAAoO,EAAAp1C,YAEAgnC,IAEA7gC,QAAA6O,KAAA,8DAAAhV,GACAgnC,EAAA,IAAAZ,IAIAv9B,EAAA3G,KAAA8kC,EAAAjmC,EACA8H,EAAA3G,KAAA8kC,EAAA5e,EACAvf,EAAA3G,KAAA8kC,EAAArjC,EAIA,OAAAL,MAIAs6C,kBAAA,SAAAC,GAIA,IAFA,IAAAh1C,EAAAvF,KAAAuF,MAAA3G,EAAA,EAEAlC,EAAA,EAAAC,EAAA49C,EAAAj4C,OAAsC5F,EAAAC,EAAOD,IAAA,CAE7C,IAAAiJ,EAAA40C,EAAA79C,YAEAiJ,IAEA9C,QAAA6O,KAAA,iEAAAhV,GACAiJ,EAAA,IAAAoK,IAIAxK,EAAA3G,KAAA+G,EAAAvB,EACAmB,EAAA3G,KAAA+G,EAAAE,EAIA,OAAA7F,MAIAw6C,kBAAA,SAAAD,GAIA,IAFA,IAAAh1C,EAAAvF,KAAAuF,MAAA3G,EAAA,EAEAlC,EAAA,EAAAC,EAAA49C,EAAAj4C,OAAsC5F,EAAAC,EAAOD,IAAA,CAE7C,IAAAiJ,EAAA40C,EAAA79C,YAEAiJ,IAEA9C,QAAA6O,KAAA,iEAAAhV,GACAiJ,EAAA,IAAA6K,IAIAjL,EAAA3G,KAAA+G,EAAAvB,EACAmB,EAAA3G,KAAA+G,EAAAE,EACAN,EAAA3G,KAAA+G,EAAAG,EAIA,OAAA9F,MAIAy6C,kBAAA,SAAAF,GAIA,IAFA,IAAAh1C,EAAAvF,KAAAuF,MAAA3G,EAAA,EAEAlC,EAAA,EAAAC,EAAA49C,EAAAj4C,OAAsC5F,EAAAC,EAAOD,IAAA,CAE7C,IAAAiJ,EAAA40C,EAAA79C,YAEAiJ,IAEA9C,QAAA6O,KAAA,iEAAAhV,GACAiJ,EAAA,IAAAwhB,IAIA5hB,EAAA3G,KAAA+G,EAAAvB,EACAmB,EAAA3G,KAAA+G,EAAAE,EACAN,EAAA3G,KAAA+G,EAAAG,EACAP,EAAA3G,KAAA+G,EAAAwK,EAIA,OAAAnQ,MAIA4Q,IAAA,SAAAlT,EAAAkB,GAMA,gBAJAA,MAAA,GAEAoB,KAAAuF,MAAAqL,IAAAlT,EAAAkB,GAEAoB,MAIAmU,KAAA,SAAA3P,GAEA,OAAAxE,KAAAuF,MAAAf,EAAAxE,KAAA+yC,WAIA9hC,KAAA,SAAAzM,EAAAJ,GAIA,OAFApE,KAAAuF,MAAAf,EAAAxE,KAAA+yC,UAAA3uC,EAEApE,MAIAoU,KAAA,SAAA5P,GAEA,OAAAxE,KAAAuF,MAAAf,EAAAxE,KAAA+yC,SAAA,IAIA7hC,KAAA,SAAA1M,EAAAqB,GAIA,OAFA7F,KAAAuF,MAAAf,EAAAxE,KAAA+yC,SAAA,GAAAltC,EAEA7F,MAIA8a,KAAA,SAAAtW,GAEA,OAAAxE,KAAAuF,MAAAf,EAAAxE,KAAA+yC,SAAA,IAIA5wB,KAAA,SAAA3d,EAAAsB,GAIA,OAFA9F,KAAAuF,MAAAf,EAAAxE,KAAA+yC,SAAA,GAAAjtC,EAEA9F,MAIA2qB,KAAA,SAAAnmB,GAEA,OAAAxE,KAAAuF,MAAAf,EAAAxE,KAAA+yC,SAAA,IAIAvoB,KAAA,SAAAhmB,EAAA2L,GAIA,OAFAnQ,KAAAuF,MAAAf,EAAAxE,KAAA+yC,SAAA,GAAA5iC,EAEAnQ,MAIA06C,MAAA,SAAAl2C,EAAAJ,EAAAyB,GAOA,OALArB,GAAAxE,KAAA+yC,SAEA/yC,KAAAuF,MAAAf,EAAA,GAAAJ,EACApE,KAAAuF,MAAAf,EAAA,GAAAqB,EAEA7F,MAIAgb,OAAA,SAAAxW,EAAAJ,EAAAyB,EAAAC,GAQA,OANAtB,GAAAxE,KAAA+yC,SAEA/yC,KAAAuF,MAAAf,EAAA,GAAAJ,EACApE,KAAAuF,MAAAf,EAAA,GAAAqB,EACA7F,KAAAuF,MAAAf,EAAA,GAAAsB,EAEA9F,MAIA26C,QAAA,SAAAn2C,EAAAJ,EAAAyB,EAAAC,EAAAqK,GASA,OAPA3L,GAAAxE,KAAA+yC,SAEA/yC,KAAAuF,MAAAf,EAAA,GAAAJ,EACApE,KAAAuF,MAAAf,EAAA,GAAAqB,EACA7F,KAAAuF,MAAAf,EAAA,GAAAsB,EACA9F,KAAAuF,MAAAf,EAAA,GAAA2L,EAEAnQ,MAIA46C,SAAA,SAAA34B,GAIA,OAFAjiB,KAAA85C,iBAAA73B,EAEAjiB,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAuF,MAAAvF,KAAA+yC,UAAAxhC,KAAAvR,SAcAmzC,GAAAn1C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACAm1C,GAAAn1C,UAAAsT,YAAA6hC,GASAE,GAAAr1C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACAq1C,GAAAr1C,UAAAsT,YAAA+hC,GASAC,GAAAt1C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACAs1C,GAAAt1C,UAAAsT,YAAAgiC,GASAE,GAAAx1C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACAw1C,GAAAx1C,UAAAsT,YAAAkiC,GASAE,GAAA11C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACA01C,GAAA11C,UAAAsT,YAAAoiC,GASAE,GAAA51C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACA41C,GAAA51C,UAAAsT,YAAAsiC,GASAE,GAAA91C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACA81C,GAAA91C,UAAAsT,YAAAwiC,GASAE,GAAAh2C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACAg2C,GAAAh2C,UAAAsT,YAAA0iC,GASAE,GAAAl2C,UAAAZ,OAAA0rB,OAAAgqB,GAAA90C,WACAk2C,GAAAl2C,UAAAsT,YAAA4iC,GAoCA92C,OAAA4D,OAAAozC,GAAAp2C,WAEA68C,cAAA,SAAAluB,GAQA,IANA,IAAA0oB,EACAb,KACA/G,SAEAsE,EAAAplB,EAAAolB,MAEAr1C,EAAA,EAAkBA,EAAAq1C,EAAAzvC,OAAkB5F,IAAA,CAEpC,IAAAg4C,EAAA3C,EAAAr1C,GAIAg4C,EAAAjH,oBAEAA,EAAAiH,EAAAjH,uBAEA4H,IAEAA,EAAAx6B,MAAA,EAAAne,EAAA24C,EAAA3lB,MACA8kB,EAAAxvC,KAAAqwC,IAIAA,GACA3lB,MAAA,EAAAhzB,EACA+wC,2BAOA4H,IAEAA,EAAAx6B,MAAA,EAAAne,EAAA24C,EAAA3lB,MACA8kB,EAAAxvC,KAAAqwC,IAIAr1C,KAAAw0C,UAIAsG,aAAA,SAAAnuB,GAEA,IAYAouB,EAZAhJ,EAAAplB,EAAAolB,MACAllB,EAAAF,EAAAE,SACAmlB,EAAArlB,EAAAqlB,cAEA2G,EAAA3G,EAAA,IAAAA,EAAA,GAAA1vC,OAAA,EACA04C,EAAAhJ,EAAA,IAAAA,EAAA,GAAA1vC,OAAA,EAIA2vC,EAAAtlB,EAAAslB,aACAgJ,EAAAhJ,EAAA3vC,OAIA,GAAA24C,EAAA,GAEAF,KAEA,QAAAr+C,EAAA,EAAmBA,EAAAu+C,EAAwBv+C,IAE3Cq+C,EAAAr+C,MAIAsD,KAAAiyC,aAAAl1B,SAAAg+B,EAIA,IAGAG,EAHAhJ,EAAAvlB,EAAAulB,aACAiJ,EAAAjJ,EAAA5vC,OAIA,GAAA64C,EAAA,GAIA,IAFAD,KAEAx+C,EAAA,EAAmBA,EAAAy+C,EAAwBz+C,IAE3Cw+C,EAAAx+C,MAIAsD,KAAAiyC,aAAAhuB,OAAAi3B,EAMA,IAAA9I,EAAAzlB,EAAAylB,YACAD,EAAAxlB,EAAAwlB,YAEAiJ,EAAAhJ,EAAA9vC,SAAAuqB,EAAAvqB,OACA+4C,EAAAlJ,EAAA7vC,SAAAuqB,EAAAvqB,OAIA,IAAA5F,EAAA,EAAkBA,EAAAq1C,EAAAzvC,OAAkB5F,IAAA,CAEpC,IAAAg4C,EAAA3C,EAAAr1C,GAEAsD,KAAA6sB,SAAA7nB,KAAA6nB,EAAA6nB,EAAAt0C,GAAAysB,EAAA6nB,EAAAr0C,GAAAwsB,EAAA6nB,EAAA33C,IAEA,IAAA2wC,EAAAgH,EAAAhH,cAEA,OAAAA,EAAAprC,OAEAtC,KAAAq0C,QAAArvC,KAAA0oC,EAAA,GAAAA,EAAA,GAAAA,EAAA,QAEI,CAEJ,IAAAzpB,EAAAywB,EAAAzwB,OAEAjkB,KAAAq0C,QAAArvC,KAAAif,OAIA,IAkCAq3B,EAlCA3N,EAAA+G,EAAA/G,aAEA,OAAAA,EAAArrC,OAEAtC,KAAA8xC,OAAA9sC,KAAA2oC,EAAA,GAAAA,EAAA,GAAAA,EAAA,QAEI,CAEJ,IAAAjK,EAAAgR,EAAAhR,MAEA1jC,KAAA8xC,OAAA9sC,KAAA0+B,QAIA,IAAAiV,cAEA2C,EAAAtJ,EAAA,GAAAt1C,IAIAsD,KAAAs0C,IAAAtvC,KAAAs2C,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAIAz4C,QAAA6O,KAAA,2DAAAhV,GAEAsD,KAAAs0C,IAAAtvC,KAAA,IAAA+K,GAAA,IAAAA,GAAA,IAAAA,OAMA,IAAAirC,cAEAM,EAAAtJ,EAAA,GAAAt1C,IAIAsD,KAAAu0C,KAAAvvC,KAAAs2C,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAIAz4C,QAAA6O,KAAA,4DAAAhV,GAEAsD,KAAAu0C,KAAAvvC,KAAA,IAAA+K,GAAA,IAAAA,GAAA,IAAAA,MAQA,QAAAoe,EAAA,EAAmBA,EAAA8sB,EAAwB9sB,IAAA,CAE3C,IAAAsrB,EAAAxH,EAAA9jB,GAAAtB,SAEAkuB,EAAA5sB,GAAAnpB,KAAAy0C,EAAA/E,EAAAt0C,GAAAq5C,EAAA/E,EAAAr0C,GAAAo5C,EAAA/E,EAAA33C,IAIA,IAAAoxB,EAAA,EAAmBA,EAAAgtB,EAAwBhtB,IAAA,CAE3C,IAAAurB,EAAAxH,EAAA/jB,GAAAuf,cAAAhxC,GAEAw+C,EAAA/sB,GAAAnpB,KAAA00C,EAAAt5C,EAAAs5C,EAAAr5C,EAAAq5C,EAAA38C,GAMAq+C,GAEAp7C,KAAAoyC,YAAAptC,KAAAotC,EAAAsC,EAAAt0C,GAAAgyC,EAAAsC,EAAAr0C,GAAA+xC,EAAAsC,EAAA33C,IAIAs+C,GAEAr7C,KAAAmyC,YAAAntC,KAAAmtC,EAAAuC,EAAAt0C,GAAA+xC,EAAAuC,EAAAr0C,GAAA8xC,EAAAuC,EAAA33C,IAcA,OARAiD,KAAA66C,cAAAluB,GAEA3sB,KAAAwyC,mBAAA7lB,EAAA6lB,mBACAxyC,KAAA0yC,kBAAA/lB,EAAA+lB,kBACA1yC,KAAA2yC,iBAAAhmB,EAAAgmB,iBACA3yC,KAAAyyC,cAAA9lB,EAAA8lB,cACAzyC,KAAA6yC,iBAAAlmB,EAAAkmB,iBAEA7yC,QA+BA,IAAAu7C,GAAA,EAEA,SAAAC,KAEAp+C,OAAAC,eAAA2C,KAAA,MAAqCtC,MAAA69C,IAAA,IAErCv7C,KAAA0C,KAAAgL,GAAAI,eAEA9N,KAAA/C,KAAA,GACA+C,KAAA2E,KAAA,iBAEA3E,KAAAwE,MAAA,KACAxE,KAAA+sB,cAEA/sB,KAAAy7C,mBAEAz7C,KAAAw0C,UAEAx0C,KAAAsyC,YAAA,KACAtyC,KAAAuxB,eAAA,KAEAvxB,KAAA07C,WAAmBhsB,MAAA,EAAA7U,MAAAuN,KAklCnB,SAAAuzB,GAAAhrC,EAAAE,EAAAs5B,EAAAyR,EAAAC,EAAAC,GAEAjK,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,cAEA3E,KAAAqwC,YACA1/B,QACAE,SACAs5B,QACAyR,gBACAC,iBACAC,iBAGA97C,KAAA60C,mBAAA,IAAAkH,GAAAprC,EAAAE,EAAAs5B,EAAAyR,EAAAC,EAAAC,IACA97C,KAAA03C,gBASA,SAAAqE,GAAAprC,EAAAE,EAAAs5B,EAAAyR,EAAAC,EAAAC,GAEAN,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAAqwC,YACA1/B,QACAE,SACAs5B,QACAyR,gBACAC,iBACAC,iBAGA,IAAAtvB,EAAAxsB,KAEA2Q,KAAA,EACAE,KAAA,EACAs5B,KAAA,EAIAyR,EAAAt8C,KAAA4E,MAAA03C,IAAA,EACAC,EAAAv8C,KAAA4E,MAAA23C,IAAA,EAKA,IAAA/G,KACAjoB,KACAwnB,KACAC,KAIA0H,EAAA,EACAC,EAAA,EAkBA,SAAAC,EAAA/iB,EAAA3nB,EAAArB,EAAAgsC,EAAAC,EAAAzrC,EAAAE,EAAAs5B,EAAAkS,EAAAC,EAAA7O,GAEA,IAaA7qB,EAAAC,EAbA05B,EAAA5rC,EAAA0rC,EACAG,EAAA3rC,EAAAyrC,EAEAG,EAAA9rC,EAAA,EACA+rC,EAAA7rC,EAAA,EACA8rC,EAAAxS,EAAA,EAEAyS,EAAAP,EAAA,EACAQ,EAAAP,EAAA,EAEAQ,EAAA,EACAC,EAAA,EAIAp3C,EAAA,IAAA6K,GAIA,IAAAqS,EAAA,EAAeA,EAAAg6B,EAAah6B,IAAA,CAE5B,IAAAhd,EAAAgd,EAAA25B,EAAAE,EAEA,IAAA95B,EAAA,EAAgBA,EAAAg6B,EAAah6B,IAAA,CAE7B,IAAAxe,EAAAwe,EAAA25B,EAAAE,EAIA92C,EAAAwzB,GAAA/0B,EAAA+3C,EACAx2C,EAAA6L,GAAA3L,EAAAu2C,EACAz2C,EAAAwK,GAAAwsC,EAIA9vB,EAAA7nB,KAAAW,EAAAvB,EAAAuB,EAAAE,EAAAF,EAAAG,GAIAH,EAAAwzB,GAAA,EACAxzB,EAAA6L,GAAA,EACA7L,EAAAwK,GAAAg6B,EAAA,OAIAkK,EAAArvC,KAAAW,EAAAvB,EAAAuB,EAAAE,EAAAF,EAAAG,GAIAwuC,EAAAtvC,KAAA4d,EAAAy5B,GACA/H,EAAAtvC,KAAA,EAAA6d,EAAAy5B,GAIAQ,GAAA,GAYA,IAAAj6B,EAAA,EAAeA,EAAAy5B,EAAYz5B,IAE3B,IAAAD,EAAA,EAAgBA,EAAAy5B,EAAYz5B,IAAA,CAE5B,IAAAxiB,EAAA47C,EAAAp5B,EAAAg6B,EAAA/5B,EACAxiB,EAAA27C,EAAAp5B,EAAAg6B,GAAA/5B,EAAA,GACA9lB,EAAAi/C,GAAAp5B,EAAA,GAAAg6B,GAAA/5B,EAAA,GACA7lB,EAAAg/C,GAAAp5B,EAAA,GAAAg6B,EAAA/5B,EAIAiyB,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAIA+/C,GAAA,EAQAvwB,EAAAwwB,SAAAf,EAAAc,EAAAtP,GAIAwO,GAAAc,EAIAf,GAAAc,EAlHAZ,EAAA,kBAAA/R,EAAAt5B,EAAAF,EAhBAmrC,EAAAx8C,KAAA4E,MAAA43C,IAAA,EAgBAD,EAAA,GACAK,EAAA,iBAAA/R,EAAAt5B,GAAAF,EAAAmrC,EAAAD,EAAA,GACAK,EAAA,gBAAAvrC,EAAAw5B,EAAAt5B,EAAA+qC,EAAAE,EAAA,GACAI,EAAA,iBAAAvrC,EAAAw5B,GAAAt5B,EAAA+qC,EAAAE,EAAA,GACAI,EAAA,iBAAAvrC,EAAAE,EAAAs5B,EAAAyR,EAAAC,EAAA,GACAK,EAAA,kBAAAvrC,EAAAE,GAAAs5B,EAAAyR,EAAAC,EAAA,GAIA77C,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IAsHA,SAAA6I,GAAAxsC,EAAAE,EAAA+qC,EAAAC,GAEAhK,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,gBAEA3E,KAAAqwC,YACA1/B,QACAE,SACA+qC,gBACAC,kBAGA77C,KAAA60C,mBAAA,IAAAuI,GAAAzsC,EAAAE,EAAA+qC,EAAAC,IACA77C,KAAA03C,gBASA,SAAA0F,GAAAzsC,EAAAE,EAAA+qC,EAAAC,GAEAL,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAAqwC,YACA1/B,QACAE,SACA+qC,gBACAC,kBAMA,IAYAj5B,EAAAC,EAZAw6B,GAHA1sC,KAAA,GAGA,EACA2sC,GAHAzsC,KAAA,GAGA,EAEAwrC,EAAA/8C,KAAA4E,MAAA03C,IAAA,EACAU,EAAAh9C,KAAA4E,MAAA23C,IAAA,EAEAe,EAAAP,EAAA,EACAQ,EAAAP,EAAA,EAEAiB,EAAA5sC,EAAA0rC,EACAmB,EAAA3sC,EAAAyrC,EAMAxH,KACAjoB,KACAwnB,KACAC,KAIA,IAAAzxB,EAAA,EAAcA,EAAAg6B,EAAah6B,IAAA,CAE3B,IAAAhd,EAAAgd,EAAA26B,EAAAF,EAEA,IAAA16B,EAAA,EAAeA,EAAAg6B,EAAah6B,IAAA,CAE5B,IAAAxe,EAAAwe,EAAA26B,EAAAF,EAEAxwB,EAAA7nB,KAAAZ,GAAAyB,EAAA,GAEAwuC,EAAArvC,KAAA,OAEAsvC,EAAAtvC,KAAA4d,EAAAy5B,GACA/H,EAAAtvC,KAAA,EAAA6d,EAAAy5B,IAQA,IAAAz5B,EAAA,EAAcA,EAAAy5B,EAAYz5B,IAE1B,IAAAD,EAAA,EAAeA,EAAAy5B,EAAYz5B,IAAA,CAE3B,IAAAxiB,EAAAwiB,EAAAg6B,EAAA/5B,EACAxiB,EAAAuiB,EAAAg6B,GAAA/5B,EAAA,GACA9lB,EAAA6lB,EAAA,EAAAg6B,GAAA/5B,EAAA,GACA7lB,EAAA4lB,EAAA,EAAAg6B,EAAA/5B,EAIAiyB,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAQAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA53CAkH,GAAAx9C,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAAkqC,GAEA1uB,oBAEA2wB,SAAA,WAEA,OAAAz9C,KAAAwE,OAIAy4C,SAAA,SAAAz4C,GAEAnF,MAAAm6B,QAAAh1B,GAEAxE,KAAAwE,MAAA,IAAAiwC,GAAAjwC,GAAA,MAAAsvC,GAAAJ,IAAAlvC,EAAA,GAIAxE,KAAAwE,SAMA04C,aAAA,SAAAjgD,EAAAiX,GAEA,OAAAA,KAAA2lC,mBAAA3lC,KAAAwpC,6BAUA,UAAAzgD,GAEA4F,QAAA6O,KAAA,gFACA1R,KAAAi9C,SAAA/oC,KAMAlU,KAAA+sB,WAAA9vB,GAAAiX,EAEAlU,OAnBA6C,QAAA6O,KAAA,+EAEA1R,KAAAk9C,aAAAjgD,EAAA,IAAA61C,GAAAzwC,UAAA,GAAAA,UAAA,OAqBAs7C,aAAA,SAAA1gD,GAEA,OAAA+C,KAAA+sB,WAAA9vB,IAIA2gD,gBAAA,SAAA3gD,GAIA,cAFA+C,KAAA+sB,WAAA9vB,GAEA+C,MAIAg9C,SAAA,SAAAttB,EAAA7U,EAAA4yB,GAEAztC,KAAAw0C,OAAAxvC,MAEA0qB,QACA7U,QACA4yB,2BAAA,KAMAoQ,YAAA,WAEA79C,KAAAw0C,WAIAsJ,aAAA,SAAApuB,EAAA7U,GAEA7a,KAAA07C,UAAAhsB,QACA1vB,KAAA07C,UAAA7gC,SAIAkzB,YAAA,SAAAnoC,GAEA,IAAAmX,EAAA/c,KAAA+sB,WAAAhQ,kBAEAA,IAEAnX,EAAAgV,uBAAAmC,GACAA,EAAAghC,gBAIA,IAAA95B,EAAAjkB,KAAA+sB,WAAA9I,OAuBA,YAvBAA,IAEAA,SAEAxT,IAAAsU,gBAAAnf,GAEAgV,uBAAAqJ,GACAA,EAAA85B,gBAIA,OAAA/9C,KAAAsyC,aAEAtyC,KAAA40C,qBAIA,OAAA50C,KAAAuxB,gBAEAvxB,KAAAwxB,wBAIAxxB,MAIAsuC,QAAA,WAIA,IAAAte,EAAA,IAAAhgB,GAEA,gBAAAmD,GAMA,OAJA6c,EAAA5T,cAAAjJ,GAEAnT,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAuuC,QAAA,WAIA,IAAAve,EAAA,IAAAhgB,GAEA,gBAAAmD,GAMA,OAJA6c,EAAA1T,cAAAnJ,GAEAnT,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAwuC,QAAA,WAIA,IAAAxe,EAAA,IAAAhgB,GAEA,gBAAAmD,GAMA,OAJA6c,EAAAzT,cAAApJ,GAEAnT,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAulB,UAAA,WAIA,IAAAyK,EAAA,IAAAhgB,GAEA,gBAAA5L,EAAAyB,EAAAC,GAMA,OAJAkqB,EAAA7T,gBAAA/X,EAAAyB,EAAAC,GAEA9F,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBA8b,MAAA,WAIA,IAAAkU,EAAA,IAAAhgB,GAEA,gBAAA5L,EAAAyB,EAAAC,GAMA,OAJAkqB,EAAApT,UAAAxY,EAAAyB,EAAAC,GAEA9F,KAAA+tC,YAAA/d,GAEAhwB,MAZA,GAkBAsY,OAAA,WAEA,IAAAq5B,EAAA,IAAAtF,GAEA,gBAAA1mC,GAEAgsC,EAAAr5B,OAAA3S,GAEAgsC,EAAA3oB,eAEAhpB,KAAA+tC,YAAA4D,EAAA/rC,SAVA,GAgBA0O,OAAA,WAEA,IAAA1V,EAAA,IAAA4R,GAEA,kBAQA,OANAxQ,KAAA40C,qBAEA50C,KAAAsyC,YAAAnmB,UAAAvtB,GAAAgU,SAEA5S,KAAAulB,UAAA3mB,EAAAwF,EAAAxF,EAAAiH,EAAAjH,EAAAkH,GAEA9F,MAZA,GAkBAgsB,cAAA,SAAAluB,GAIA,IAAA6uB,EAAA7uB,EAAA6uB,SAEA,GAAA7uB,EAAAkgD,UAAAlgD,EAAAmgD,OAAA,CAEA,IAAAlJ,EAAA,IAAAf,GAAA,EAAArnB,EAAAE,SAAAvqB,OAAA,GACAwvC,EAAA,IAAAkC,GAAA,EAAArnB,EAAAmlB,OAAAxvC,OAAA,GAKA,GAHAtC,KAAAk9C,aAAA,WAAAnI,EAAAyF,kBAAA7tB,EAAAE,WACA7sB,KAAAk9C,aAAA,QAAApL,EAAAuI,gBAAA1tB,EAAAmlB,SAEAnlB,EAAA0lB,eAAA1lB,EAAA0lB,cAAA/vC,SAAAqqB,EAAAE,SAAAvqB,OAAA,CAEA,IAAA+vC,EAAA,IAAA2B,GAAArnB,EAAA0lB,cAAA/vC,OAAA,GAEAtC,KAAAk9C,aAAA,eAAA7K,EAAA+H,UAAAztB,EAAA0lB,gBAIA,OAAA1lB,EAAA4E,iBAEAvxB,KAAAuxB,eAAA5E,EAAA4E,eAAAlgB,SAIA,OAAAsb,EAAA2lB,cAEAtyC,KAAAsyC,YAAA3lB,EAAA2lB,YAAAjhC,cAIGvT,EAAA25C,QAEH9qB,KAAAC,YAEA5sB,KAAA86C,aAAAnuB,GAMA,OAAA3sB,MAIAyrB,cAAA,SAAAjG,GAIA,IAFA,IAAAzI,KAEArgB,EAAA,EAAAC,EAAA6oB,EAAAljB,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAA2vB,EAAA7G,EAAA9oB,GACAqgB,EAAA/X,KAAAqnB,EAAAjoB,EAAAioB,EAAAxmB,EAAAwmB,EAAAvmB,GAAA,GAMA,OAFA9F,KAAAk9C,aAAA,eAAAlJ,GAAAj3B,EAAA,IAEA/c,MAIAk+C,iBAAA,SAAApgD,GAEA,IAmCAoW,EAnCAyY,EAAA7uB,EAAA6uB,SAEA,GAAA7uB,EAAA25C,OAAA,CAEA,IAAA0G,EAAAxxB,EAAAyxB,iBASA,QAPAzxB,EAAA4lB,qBAEA4L,SACAxxB,EAAA4lB,4BAAA,IAIA4L,EAEA,OAAAn+C,KAAA86C,aAAAnuB,GAIAwxB,EAAA3L,mBAAA7lB,EAAA6lB,mBACA2L,EAAAzL,kBAAA/lB,EAAA+lB,kBACAyL,EAAAxL,iBAAAhmB,EAAAgmB,iBACAwL,EAAA1L,cAAA9lB,EAAA8lB,cACA0L,EAAAtL,iBAAAlmB,EAAAkmB,iBAEAlmB,EAAA6lB,sBACA7lB,EAAA+lB,qBACA/lB,EAAAgmB,oBACAhmB,EAAA8lB,iBACA9lB,EAAAkmB,oBAEAlmB,EAAAwxB,EA0FA,WApFAxxB,EAAA6lB,+BAEAt+B,EAAAlU,KAAA+sB,WAAAhQ,YAIA7I,EAAAsmC,kBAAA7tB,EAAAE,UACA3Y,EAAA6pC,gBAIApxB,EAAA6lB,wBAAA,IAIA7lB,EAAA+lB,8BAEAx+B,EAAAlU,KAAA+sB,WAAA9I,UAIA/P,EAAAsmC,kBAAA7tB,EAAA0nB,SACAngC,EAAA6pC,gBAIApxB,EAAA+lB,uBAAA,IAIA/lB,EAAAgmB,6BAEAz+B,EAAAlU,KAAA+sB,WAAA2W,SAIAxvB,EAAAmmC,gBAAA1tB,EAAAmlB,QACA59B,EAAA6pC,gBAIApxB,EAAAgmB,qBAIAhmB,EAAA8lB,0BAEAv+B,EAAAlU,KAAA+sB,WAAAzC,MAIApW,EAAAomC,kBAAA3tB,EAAA2nB,KACApgC,EAAA6pC,gBAIApxB,EAAA8lB,kBAIA9lB,EAAAimB,oCAEA1+B,EAAAlU,KAAA+sB,WAAAsxB,gBAIAnqC,EAAAkmC,UAAAztB,EAAA0lB,eACAn+B,EAAA6pC,gBAIApxB,EAAAimB,4BAIAjmB,EAAAkmB,mBAEAlmB,EAAAkuB,cAAA/8C,EAAA6uB,UACA3sB,KAAAw0C,OAAA7nB,EAAA6nB,OAEA7nB,EAAAkmB,qBAIA7yC,MAIA86C,aAAA,SAAAnuB,GAIA,OAFAA,EAAAyxB,sBAAAhK,IAAA0G,aAAAnuB,GAEA3sB,KAAAs+C,mBAAA3xB,EAAAyxB,mBAIAE,mBAAA,SAAA3xB,GAEA,IAAAooB,EAAA,IAAAd,aAAA,EAAAtnB,EAAAE,SAAAvqB,QAGA,GAFAtC,KAAAk9C,aAAA,eAAApK,GAAAiC,EAAA,GAAAyF,kBAAA7tB,EAAAE,WAEAF,EAAA0nB,QAAA/xC,OAAA,GAEA,IAAA+xC,EAAA,IAAAJ,aAAA,EAAAtnB,EAAA0nB,QAAA/xC,QACAtC,KAAAk9C,aAAA,aAAApK,GAAAuB,EAAA,GAAAmG,kBAAA7tB,EAAA0nB,UAIA,GAAA1nB,EAAAmlB,OAAAxvC,OAAA,GAEA,IAAAwvC,EAAA,IAAAmC,aAAA,EAAAtnB,EAAAmlB,OAAAxvC,QACAtC,KAAAk9C,aAAA,YAAApK,GAAAhB,EAAA,GAAAuI,gBAAA1tB,EAAAmlB,SAIA,GAAAnlB,EAAA2nB,IAAAhyC,OAAA,GAEA,IAAAgyC,EAAA,IAAAL,aAAA,EAAAtnB,EAAA2nB,IAAAhyC,QACAtC,KAAAk9C,aAAA,SAAApK,GAAAwB,EAAA,GAAAgG,kBAAA3tB,EAAA2nB,MAIA,GAAA3nB,EAAA4nB,KAAAjyC,OAAA,GAEA,IAAAiyC,EAAA,IAAAN,aAAA,EAAAtnB,EAAA4nB,KAAAjyC,QACAtC,KAAAk9C,aAAA,UAAApK,GAAAyB,EAAA,GAAA+F,kBAAA3tB,EAAA4nB,OAUA,QAAAt3C,KAJA+C,KAAAw0C,OAAA7nB,EAAA6nB,OAIA7nB,EAAAslB,aAAA,CAKA,IAHA,IAAA1sC,KACA0sC,EAAAtlB,EAAAslB,aAAAh1C,GAEAP,EAAA,EAAAC,EAAAs1C,EAAA3vC,OAA4C5F,EAAAC,EAAOD,IAAA,CAEnD,IAAA+8C,EAAAxH,EAAAv1C,GAEAwX,EAAA,IAAA8/B,GAAA,EAAAyF,EAAAn3C,OAAA,GAEAiD,EAAAP,KAAAkP,EAAAsmC,kBAAAf,IAIAz5C,KAAAy7C,gBAAAx+C,GAAAsI,EAMA,GAAAonB,EAAAylB,YAAA9vC,OAAA,GAEA,IAAA8vC,EAAA,IAAA4B,GAAA,EAAArnB,EAAAylB,YAAA9vC,OAAA,GACAtC,KAAAk9C,aAAA,YAAA9K,EAAAqI,kBAAA9tB,EAAAylB,cAIA,GAAAzlB,EAAAwlB,YAAA7vC,OAAA,GAEA,IAAA6vC,EAAA,IAAA6B,GAAA,EAAArnB,EAAAwlB,YAAA7vC,OAAA,GACAtC,KAAAk9C,aAAA,aAAA/K,EAAAsI,kBAAA9tB,EAAAwlB,cAkBA,OAZA,OAAAxlB,EAAA4E,iBAEAvxB,KAAAuxB,eAAA5E,EAAA4E,eAAAlgB,SAIA,OAAAsb,EAAA2lB,cAEAtyC,KAAAsyC,YAAA3lB,EAAA2lB,YAAAjhC,SAIArR,MAIA40C,mBAAA,WAEA,OAAA50C,KAAAsyC,cAEAtyC,KAAAsyC,YAAA,IAAAnqB,IAIA,IAAApL,EAAA/c,KAAA+sB,WAAAhQ,kBAEAA,EAEA/c,KAAAsyC,YAAA9mB,uBAAAzO,GAIA/c,KAAAsyC,YAAA5mB,aAIA6yB,MAAAv+C,KAAAsyC,YAAA7sC,IAAArB,IAAAm6C,MAAAv+C,KAAAsyC,YAAA7sC,IAAAI,IAAA04C,MAAAv+C,KAAAsyC,YAAA7sC,IAAAK,KAEAjD,QAAAtC,MAAA,oIAAAP,OAMAwxB,sBAAA,WAEA,IAAA9L,EAAA,IAAAyC,GACAxiB,EAAA,IAAA6K,GAEA,kBAEA,OAAAxQ,KAAAuxB,iBAEAvxB,KAAAuxB,eAAA,IAAAlJ,IAIA,IAAAtL,EAAA/c,KAAA+sB,WAAAhQ,SAEA,GAAAA,EAAA,CAEA,IAAAzI,EAAAtU,KAAAuxB,eAAAjd,OAEAoR,EAAA8F,uBAAAzO,GACA2I,EAAAyG,UAAA7X,GAOA,IAFA,IAAAoa,EAAA,EAEAhyB,EAAA,EAAAivB,EAAA5O,EAAAlC,MAAyCne,EAAAivB,EAAQjvB,IAEjDiJ,EAAAvB,EAAA2Y,EAAA5I,KAAAzX,GACAiJ,EAAAE,EAAAkX,EAAA3I,KAAA1X,GACAiJ,EAAAG,EAAAiX,EAAAjC,KAAApe,GACAgyB,EAAApvB,KAAAoG,IAAAgpB,EAAApa,EAAAhB,kBAAA3N,IAIA3F,KAAAuxB,eAAA/M,OAAAllB,KAAAyT,KAAA2b,GAEA6vB,MAAAv+C,KAAAuxB,eAAA/M,SAEA3hB,QAAAtC,MAAA,+HAAAP,QAxCA,GAkDAs1C,mBAAA,aAMAO,qBAAA,WAEA,IAAArxC,EAAAxE,KAAAwE,MACAuoB,EAAA/sB,KAAA+sB,WACAynB,EAAAx0C,KAAAw0C,OAEA,GAAAznB,EAAAhQ,SAAA,CAEA,IAAAg4B,EAAAhoB,EAAAhQ,SAAAxX,MAEA,YAAAwnB,EAAA9I,OAEAjkB,KAAAk9C,aAAA,aAAApK,GAAA,IAAAmB,aAAAc,EAAAzyC,QAAA,SAQA,IAFA,IAAAiD,EAAAwnB,EAAA9I,OAAA1e,MAEA7I,EAAA,EAAAivB,EAAApmB,EAAAjD,OAAuC5F,EAAAivB,EAAQjvB,IAE/C6I,EAAA7I,GAAA,EAMA,IAEAg5C,EAAAC,EAAAC,EAFAvB,EAAAtnB,EAAA9I,OAAA1e,MAGAi5C,EAAA,IAAAhuC,GAAAiuC,EAAA,IAAAjuC,GAAAkuC,EAAA,IAAAluC,GACA+kC,EAAA,IAAA/kC,GAAAglC,EAAA,IAAAhlC,GAIA,GAAAhM,EAAA,CAEA,IAAAswC,EAAAtwC,EAAAe,MAEA,IAAAivC,EAAAlyC,QAEAtC,KAAAg9C,SAAA,EAAAlI,EAAAxyC,QAIA,QAAA6rB,EAAA,EAAAwmB,EAAAH,EAAAlyC,OAAwC6rB,EAAAwmB,IAAQxmB,EAEhD,KAAAknB,EAAAb,EAAArmB,GAEAuB,EAAA2lB,EAAA3lB,MAGA,IAAAhzB,EAAAgzB,EAAA/D,EAAA+D,EAFA2lB,EAAAx6B,MAE6Cne,EAAAivB,EAAQjvB,GAAA,EAErDg5C,EAAA,EAAAZ,EAAAp4C,EAAA,GACAi5C,EAAA,EAAAb,EAAAp4C,EAAA,GACAk5C,EAAA,EAAAd,EAAAp4C,EAAA,GAEA8hD,EAAAzqC,UAAAghC,EAAAW,GACA+I,EAAA1qC,UAAAghC,EAAAY,GACA+I,EAAA3qC,UAAAghC,EAAAa,GAEAL,EAAAxjC,WAAA2sC,EAAAD,GACAjJ,EAAAzjC,WAAAysC,EAAAC,GACAlJ,EAAAjyB,MAAAkyB,GAEAnB,EAAAqB,IAAAH,EAAAnxC,EACAiwC,EAAAqB,EAAA,IAAAH,EAAA1vC,EACAwuC,EAAAqB,EAAA,IAAAH,EAAAzvC,EAEAuuC,EAAAsB,IAAAJ,EAAAnxC,EACAiwC,EAAAsB,EAAA,IAAAJ,EAAA1vC,EACAwuC,EAAAsB,EAAA,IAAAJ,EAAAzvC,EAEAuuC,EAAAuB,IAAAL,EAAAnxC,EACAiwC,EAAAuB,EAAA,IAAAL,EAAA1vC,EACAwuC,EAAAuB,EAAA,IAAAL,EAAAzvC,QAUA,IAAApJ,EAAA,EAAAivB,EAAAopB,EAAAzyC,OAA2C5F,EAAAivB,EAAQjvB,GAAA,EAEnD8hD,EAAAzqC,UAAAghC,EAAAr4C,GACA+hD,EAAA1qC,UAAAghC,EAAAr4C,EAAA,GACAgiD,EAAA3qC,UAAAghC,EAAAr4C,EAAA,GAEA64C,EAAAxjC,WAAA2sC,EAAAD,GACAjJ,EAAAzjC,WAAAysC,EAAAC,GACAlJ,EAAAjyB,MAAAkyB,GAEAnB,EAAA33C,GAAA64C,EAAAnxC,EACAiwC,EAAA33C,EAAA,GAAA64C,EAAA1vC,EACAwuC,EAAA33C,EAAA,GAAA64C,EAAAzvC,EAEAuuC,EAAA33C,EAAA,GAAA64C,EAAAnxC,EACAiwC,EAAA33C,EAAA,GAAA64C,EAAA1vC,EACAwuC,EAAA33C,EAAA,GAAA64C,EAAAzvC,EAEAuuC,EAAA33C,EAAA,GAAA64C,EAAAnxC,EACAiwC,EAAA33C,EAAA,GAAA64C,EAAA1vC,EACAwuC,EAAA33C,EAAA,GAAA64C,EAAAzvC,EAMA9F,KAAA2+C,mBAEA5xB,EAAA9I,OAAA85B,iBAMA/kB,MAAA,SAAArM,EAAA/tB,GAEA,GAAA+tB,KAAAG,iBAAA,UAOAluB,IAEAA,EAAA,EAEAiE,QAAA6O,KACA,2JAMA,IAAAqb,EAAA/sB,KAAA+sB,WAEA,QAAAxqB,KAAAwqB,EAEA,YAAAJ,EAAAI,WAAAxqB,GAUA,IARA,IACAq8C,EADA7xB,EAAAxqB,GACAgD,MAEAs5C,EAAAlyB,EAAAI,WAAAxqB,GACAu8C,EAAAD,EAAAt5C,MAIA7I,EAAA,EAAAyxB,EAFA0wB,EAAA9L,SAEAn0C,EAA+ClC,EAAAoiD,EAAAx8C,OAA4B5F,IAAAyxB,IAE3EywB,EAAAzwB,GAAA2wB,EAAApiD,GAMA,OAAAsD,KAtCA6C,QAAAtC,MAAA,kFAAAosB,IA0CAgyB,iBAAA,WAEA,IAAAh5C,EAAA,IAAA6K,GAEA,kBAIA,IAFA,IAAA6jC,EAAAr0C,KAAA+sB,WAAA9I,OAEAvnB,EAAA,EAAAivB,EAAA0oB,EAAAx5B,MAAuCne,EAAAivB,EAAQjvB,IAE/CiJ,EAAAvB,EAAAiwC,EAAAlgC,KAAAzX,GACAiJ,EAAAE,EAAAwuC,EAAAjgC,KAAA1X,GACAiJ,EAAAG,EAAAuuC,EAAAv5B,KAAApe,GAEAiJ,EAAAuN,YAEAmhC,EAAAr5B,OAAAte,EAAAiJ,EAAAvB,EAAAuB,EAAAE,EAAAF,EAAAG,IAhBA,GAwBAi5C,aAAA,WAEA,UAAA/+C,KAAAwE,MAGA,OADA3B,QAAA6O,KAAA,yEACA1R,KAIA,IAAAg/C,EAAA,IAAAxD,GAEA1G,EAAA90C,KAAAwE,MAAAe,MACAwnB,EAAA/sB,KAAA+sB,WAEA,QAAA9vB,KAAA8vB,EAAA,CAWA,IATA,IAAA7Y,EAAA6Y,EAAA9vB,GAEAsI,EAAA2O,EAAA3O,MACAwtC,EAAA7+B,EAAA6+B,SAEAkM,EAAA,IAAA15C,EAAA+L,YAAAwjC,EAAAxyC,OAAAywC,GAEAvuC,EAAA,EAAA21C,EAAA,EAEAz9C,EAAA,EAAAC,EAAAm4C,EAAAxyC,OAAuC5F,EAAAC,EAAOD,IAAA,CAE9C8H,EAAAswC,EAAAp4C,GAAAq2C,EAEA,QAAA5kB,EAAA,EAAoBA,EAAA4kB,EAAc5kB,IAElC8wB,EAAA9E,KAAA50C,EAAAf,KAMAw6C,EAAA9B,aAAAjgD,EAAA,IAAA61C,GAAAmM,EAAAlM,IAIA,IAAAyB,EAAAx0C,KAAAw0C,OAEA,IAAA93C,EAAA,EAAAC,EAAA63C,EAAAlyC,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAA24C,EAAAb,EAAA93C,GACAsiD,EAAAhC,SAAA3H,EAAA3lB,MAAA2lB,EAAAx6B,MAAAw6B,EAAA5H,eAIA,OAAAuR,GAIA/1B,OAAA,WAEA,IAAAf,GACAmB,UACApC,QAAA,IACAtiB,KAAA,iBACA2kB,UAAA,0BAUA,GAJApB,EAAAxlB,KAAA1C,KAAA0C,KACAwlB,EAAAvjB,KAAA3E,KAAA2E,KACA,KAAA3E,KAAA/C,OAAAirB,EAAAjrB,KAAA+C,KAAA/C,eAEA+C,KAAAqwC,WAAA,CAEA,IAAAA,EAAArwC,KAAAqwC,WAEA,QAAA9tC,KAAA8tC,WAEAA,EAAA9tC,KAAA2lB,EAAA3lB,GAAA8tC,EAAA9tC,IAIA,OAAA2lB,EAIAA,QAAe6E,eAEf,IAAAvoB,EAAAxE,KAAAwE,MAEA,UAAAA,EAAA,CAEA,IAAAe,EAAAlG,MAAArB,UAAAwH,MAAA3I,KAAA2H,EAAAe,OAEA2iB,OAAA1jB,OACAG,KAAAH,EAAAe,MAAA+L,YAAArU,KACAsI,SAKA,IAAAwnB,EAAA/sB,KAAA+sB,WAEA,QAAAxqB,KAAAwqB,EAAA,CAEA,IAAA7Y,EAAA6Y,EAAAxqB,GAEAgD,EAAAlG,MAAArB,UAAAwH,MAAA3I,KAAAqX,EAAA3O,OAEA2iB,OAAA6E,WAAAxqB,IACAwwC,SAAA7+B,EAAA6+B,SACApuC,KAAAuP,EAAA3O,MAAA+L,YAAArU,KACAsI,QACAytC,WAAA9+B,EAAA8+B,YAKA,IAAAwB,EAAAx0C,KAAAw0C,OAEAA,EAAAlyC,OAAA,IAEA4lB,OAAAssB,OAAArE,KAAAU,MAAAV,KAAAC,UAAAoE,KAIA,IAAAjjB,EAAAvxB,KAAAuxB,eAWA,OATA,OAAAA,IAEArJ,OAAAqJ,gBACAjd,OAAAid,EAAAjd,OAAAN,UACAwQ,OAAA+M,EAAA/M,SAKA0D,GAIA7W,MAAA,WA0BA,WAAAmqC,IAAAjqC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAEA,IAAA9E,EAAAP,EAAAC,EAIAqD,KAAAwE,MAAA,KACAxE,KAAA+sB,cACA/sB,KAAAy7C,mBACAz7C,KAAAw0C,UACAx0C,KAAAsyC,YAAA,KACAtyC,KAAAuxB,eAAA,KAIAvxB,KAAA/C,KAAA8E,EAAA9E,KAIA,IAAAuH,EAAAzC,EAAAyC,MAEA,OAAAA,GAEAxE,KAAAi9C,SAAAz4C,EAAA6M,SAMA,IAAA0b,EAAAhrB,EAAAgrB,WAEA,IAAA9vB,KAAA8vB,EAAA,CAEA,IAAA7Y,EAAA6Y,EAAA9vB,GACA+C,KAAAk9C,aAAAjgD,EAAAiX,EAAA7C,SAMA,IAAAoqC,EAAA15C,EAAA05C,gBAEA,IAAAx+C,KAAAw+C,EAAA,CAEA,IAAAl2C,KACA25C,EAAAzD,EAAAx+C,GAEA,IAAAP,EAAA,EAAAC,EAAAuiD,EAAA58C,OAA0C5F,EAAAC,EAAOD,IAEjD6I,EAAAP,KAAAk6C,EAAAxiD,GAAA2U,SAIArR,KAAAy7C,gBAAAx+C,GAAAsI,EAMA,IAAAivC,EAAAzyC,EAAAyyC,OAEA,IAAA93C,EAAA,EAAAC,EAAA63C,EAAAlyC,OAAiC5F,EAAAC,EAAOD,IAAA,CAExC,IAAA24C,EAAAb,EAAA93C,GACAsD,KAAAg9C,SAAA3H,EAAA3lB,MAAA2lB,EAAAx6B,MAAAw6B,EAAA5H,eAMA,IAAA6E,EAAAvwC,EAAAuwC,YAEA,OAAAA,IAEAtyC,KAAAsyC,cAAAjhC,SAMA,IAAAkgB,EAAAxvB,EAAAwvB,eAaA,OAXA,OAAAA,IAEAvxB,KAAAuxB,iBAAAlgB,SAMArR,KAAA07C,UAAAhsB,MAAA3tB,EAAA25C,UAAAhsB,MACA1vB,KAAA07C,UAAA7gC,MAAA9Y,EAAA25C,UAAA7gC,MAEA7a,MAIAoqB,QAAA,WAEApqB,KAAAqF,eAAuBV,KAAA,eAiCvBg3C,GAAA39C,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACA29C,GAAA39C,UAAAsT,YAAAqqC,GAqKAI,GAAA/9C,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACA+9C,GAAA/9C,UAAAsT,YAAAyqC,GA2BAoB,GAAAn/C,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAm/C,GAAAn/C,UAAAsT,YAAA6rC,GA2FAC,GAAAp/C,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAo/C,GAAAp/C,UAAAsT,YAAA8rC,GAOA,IAqgCA5rC,GAjTA2tC,GACAC,GACAnH,GAufAoH,GACAC,GAyEA5xB,GAvxCA6xB,GAAA,EAEA,SAAAC,KAEApiD,OAAAC,eAAA2C,KAAA,MAAqCtC,MAAA6hD,OAErCv/C,KAAA0C,KAAAgL,GAAAI,eAEA9N,KAAA/C,KAAA,GACA+C,KAAA2E,KAAA,WAEA3E,KAAAonC,OACApnC,KAAAynC,UAEAznC,KAAAy/C,SAAA54C,EACA7G,KAAA0/C,KAAAp5C,EACAtG,KAAA2/C,eACA3/C,KAAA2tC,aAAAlnC,EAEAzG,KAAAilC,QAAA,EACAjlC,KAAA4/C,eAEA5/C,KAAA6/C,SAAAl4C,EACA3H,KAAA8/C,SAAAl4C,EACA5H,KAAA+/C,cAAA74C,EACAlH,KAAAggD,cAAA,KACAhgD,KAAAigD,cAAA,KACAjgD,KAAAkgD,mBAAA,KAEAlgD,KAAAmgD,UAAA93C,GACArI,KAAAogD,aACApgD,KAAAqgD,cAEArgD,KAAAsgD,eAAA,KACAtgD,KAAAugD,oBACAvgD,KAAAwgD,eAEAxgD,KAAAygD,WAAA,KAEAzgD,KAAA0gD,cAEA1gD,KAAA83C,UAAA,KAEA93C,KAAA2gD,iBACA3gD,KAAA4gD,oBAAA,EACA5gD,KAAA6gD,mBAAA,EAEA7gD,KAAA8gD,aAEA9gD,KAAA+gD,UAAA,EACA/gD,KAAAghD,sBAEAhhD,KAAAihD,SAAA,EAEAjhD,KAAA4sC,WAEA5sC,KAAAitC,YAEAjtC,KAAA+9C,eAiVA,SAAAmD,GAAA7Q,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UAEA9iC,KAAAsB,IAAA,KAEAtB,KAAAgmC,SAAA,KACAhmC,KAAAimC,kBAAA,EAEAjmC,KAAA6lC,MAAA,KACA7lC,KAAA8lC,eAAA,EAEA9lC,KAAAqlC,YAAA,KAEArlC,KAAAmlC,SAAA,KAEAnlC,KAAAulC,OAAA,KACAvlC,KAAAmhD,QAAAz4C,GACA1I,KAAAylC,aAAA,EACAzlC,KAAA0lC,gBAAA,IAEA1lC,KAAAohD,aACAphD,KAAAqhD,mBAAA,EACArhD,KAAAshD,iBAAA,QACAthD,KAAAuhD,kBAAA,QAEAvhD,KAAAwhD,YACAxhD,KAAAiyC,gBAEAjyC,KAAAynC,UAEAznC,KAAAyhD,UAAApR,GAiEA,SAAAqR,GAAArR,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,iBAEA3E,KAAA2hD,WACA3hD,KAAAi5B,YAEAj5B,KAAAqpC,aAAA,gGACArpC,KAAAspC,eAAA,iEAEAtpC,KAAA4hD,UAAA,EAEA5hD,KAAAohD,aACAphD,KAAAqhD,mBAAA,EAEArhD,KAAAonC,OACApnC,KAAAynC,UACAznC,KAAA6hD,YAEA7hD,KAAAwhD,YACAxhD,KAAAiyC,gBACAjyC,KAAAkyC,gBAEAlyC,KAAA8hD,YACAC,eACAC,aACAC,eACAC,qBAKAliD,KAAAmiD,wBACAze,OAAA,OACApZ,IAAA,KACA0qB,KAAA,MAGAh1C,KAAAoiD,2BACApiD,KAAAqiD,2BAAA,IAEAhS,aAEAA,EAAAtjB,YAEAlqB,QAAAtC,MAAA,2FAIAP,KAAAyhD,UAAApR,IAuDA,SAAAiS,GAAAC,EAAAhzB,GAEAvvB,KAAAuiD,oBAAA,IAAA/xC,GACAxQ,KAAAuvB,uBAAA,IAAA/e,GA2hBA,SAAAgyC,GAAA9yB,EAAAI,GAEA9vB,KAAA0vB,mBAAA,IAAAlf,GACAxQ,KAAA8vB,iBAAA,IAAAtf,GAiJA,SAAAiyC,GAAAriD,EAAAC,EAAAtD,GAEAiD,KAAAI,eAAA,IAAAoQ,GACAxQ,KAAAK,eAAA,IAAAmQ,GACAxQ,KAAAjD,eAAA,IAAAyT,GA2RA,SAAAkyC,GAAA/1B,EAAA4jB,GAEAlE,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,OAEA3E,KAAA2sB,sBAAA,IAAA6uB,GACAx7C,KAAAuwC,sBAAA,IAAA2Q,IAA6Exd,MAAA,SAAApkC,KAAAC,WAE7ES,KAAA2iD,SAAA71C,GAEA9M,KAAA4iD,qBA6rCA,SAAAC,GAAAziD,EAAAC,GAEA,OAAAf,KAAA2T,IAAA5S,EAAA,IAAAf,KAAA2T,IAAA7S,EAAA,IA6JA,SAAA0iD,GAAAt5B,EAAAvD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,EAAAC,GAEAiD,kBACAvD,eAAA/c,GAEA6c,GAAAlpB,KAAAmD,KAAAwpB,EAAAvD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,EAAAC,GAEAvmB,KAAA+mB,SA11FAy4B,GAAAxhD,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAAkuC,GAEAuD,cAEAC,gBAAA,aAEAvB,UAAA,SAAA9Q,GAEA,YAAAA,EAEA,QAAApuC,KAAAouC,EAAA,CAEA,IAAAsS,EAAAtS,EAAApuC,GAEA,YAAA0gD,EAQA,eAAA1gD,EAAA,CAQA,IAAA2gD,EAAAljD,KAAAuC,YAEA2gD,EAOAA,KAAA3pB,QAEA2pB,EAAAtyC,IAAAqyC,GAEIC,KAAAhhC,WAAA+gC,KAAA/gC,UAEJghC,EAAA3xC,KAAA0xC,GAKAjjD,KAAAuC,GAHI,aAAAA,EAGJsB,OAAAo/C,GAIAA,EApBApgD,QAAA6O,KAAA,SAAA1R,KAAA2E,KAAA,MAAApC,EAAA,8CAVAM,QAAA6O,KAAA,SAAA1R,KAAA2E,KAAA,sEACA3E,KAAA2/C,YAhkYA,IAgkYAsD,OATApgD,QAAA6O,KAAA,oBAAAnP,EAAA,+BA8CA0mB,OAAA,SAAAC,GAEA,IAAAi6B,WAAAj6B,GAAA,iBAAAA,EAEAi6B,IAEAj6B,GACAE,YACAI,YAKA,IAAAtB,GACAmB,UACApC,QAAA,IACAtiB,KAAA,WACA2kB,UAAA,oBAyGA,SAAAmnB,EAAAC,GAEA,IAAAC,KAEA,QAAApuC,KAAAmuC,EAAA,CAEA,IAAAxoB,EAAAwoB,EAAAnuC,UACA2lB,EAAAmB,SACAsnB,EAAA3rC,KAAAkjB,GAIA,OAAAyoB,EAIA,GApHAzoB,EAAAxlB,KAAA1C,KAAA0C,KACAwlB,EAAAvjB,KAAA3E,KAAA2E,KAEA,KAAA3E,KAAA/C,OAAAirB,EAAAjrB,KAAA+C,KAAA/C,MAEA+C,KAAA0jC,OAAA1jC,KAAA0jC,MAAAnK,UAAArR,EAAAwb,MAAA1jC,KAAA0jC,MAAAU,mBAEApkC,KAAA6pC,YAAA3hB,EAAA2hB,UAAA7pC,KAAA6pC,oBACA7pC,KAAA8pC,YAAA5hB,EAAA4hB,UAAA9pC,KAAA8pC,WAEA9pC,KAAAwpC,UAAAxpC,KAAAwpC,SAAAjQ,UAAArR,EAAAshB,SAAAxpC,KAAAwpC,SAAApF,UACA,IAAApkC,KAAAojD,oBAAAl7B,EAAAk7B,kBAAApjD,KAAAojD,mBAEApjD,KAAA0pC,UAAA1pC,KAAA0pC,SAAAnQ,UAAArR,EAAAwhB,SAAA1pC,KAAA0pC,SAAAtF,mBACApkC,KAAA2pC,YAAAzhB,EAAAyhB,UAAA3pC,KAAA2pC,oBACA3pC,KAAAmrC,YAAAjjB,EAAAijB,UAAAnrC,KAAAmrC,oBACAnrC,KAAAorC,qBAAAljB,EAAAkjB,mBAAAprC,KAAAorC,oBAEAprC,KAAAsB,KAAAtB,KAAAsB,IAAAynB,YAAAb,EAAA5mB,IAAAtB,KAAAsB,IAAA2nB,OAAAC,GAAAxmB,MACA1C,KAAAmlC,UAAAnlC,KAAAmlC,SAAApc,YAAAb,EAAAid,SAAAnlC,KAAAmlC,SAAAlc,OAAAC,GAAAxmB,MACA1C,KAAAgmC,UAAAhmC,KAAAgmC,SAAAjd,YAAAb,EAAA8d,SAAAhmC,KAAAgmC,SAAA/c,OAAAC,GAAAxmB,MACA1C,KAAAqmC,SAAArmC,KAAAqmC,QAAAtd,YAEAb,EAAAme,QAAArmC,KAAAqmC,QAAApd,OAAAC,GAAAxmB,KACAwlB,EAAAoe,UAAAtmC,KAAAsmC,WAGAtmC,KAAAwmC,WAAAxmC,KAAAwmC,UAAAzd,YAEAb,EAAAse,UAAAxmC,KAAAwmC,UAAAvd,OAAAC,GAAAxmB,KACAwlB,EAAAue,YAAAzmC,KAAAymC,YAAAzyB,WAGAhU,KAAA2mC,iBAAA3mC,KAAA2mC,gBAAA5d,YAEAb,EAAAye,gBAAA3mC,KAAA2mC,gBAAA1d,OAAAC,GAAAxmB,KACAwlB,EAAA0e,kBAAA5mC,KAAA4mC,kBACA1e,EAAA2e,iBAAA7mC,KAAA6mC,kBAGA7mC,KAAA+mC,cAAA/mC,KAAA+mC,aAAAhe,YAAAb,EAAA6e,aAAA/mC,KAAA+mC,aAAA9d,OAAAC,GAAAxmB,MACA1C,KAAAinC,cAAAjnC,KAAAinC,aAAAle,YAAAb,EAAA+e,aAAAjnC,KAAAinC,aAAAhe,OAAAC,GAAAxmB,MAEA1C,KAAAmmC,aAAAnmC,KAAAmmC,YAAApd,YAAAb,EAAAie,YAAAnmC,KAAAmmC,YAAAld,OAAAC,GAAAxmB,MACA1C,KAAAqlC,aAAArlC,KAAAqlC,YAAAtc,YAAAb,EAAAmd,YAAArlC,KAAAqlC,YAAApc,OAAAC,GAAAxmB,MAEA1C,KAAAulC,QAAAvlC,KAAAulC,OAAAxc,YAEAb,EAAAqd,OAAAvlC,KAAAulC,OAAAtc,OAAAC,GAAAxmB,KACAwlB,EAAAud,aAAAzlC,KAAAylC,cAIAzlC,KAAAmnC,aAAAnnC,KAAAmnC,YAAApe,YAEAb,EAAAif,YAAAnnC,KAAAmnC,YAAAle,OAAAC,GAAAxmB,eAIA1C,KAAA8rB,OAAA5D,EAAA4D,KAAA9rB,KAAA8rB,eACA9rB,KAAAqjD,kBAAAn7B,EAAAm7B,gBAAArjD,KAAAqjD,iBAEArjD,KAAAy/C,WAAA54C,IAAAqhB,EAAAu3B,SAAAz/C,KAAAy/C,eACAz/C,KAAA2/C,cAAAz3B,EAAAy3B,YAAA3/C,KAAA2/C,aACA3/C,KAAA0/C,OAAAp5C,IAAA4hB,EAAAw3B,KAAA1/C,KAAA0/C,MACA1/C,KAAA2tC,eAAAlnC,IAAAyhB,EAAAylB,aAAA3tC,KAAA2tC,cAEA3tC,KAAAilC,QAAA,IAAA/c,EAAA+c,QAAAjlC,KAAAilC,cACAjlC,KAAA4/C,cAAA13B,EAAA03B,YAAA5/C,KAAA4/C,aAEA13B,EAAAi4B,UAAAngD,KAAAmgD,UACAj4B,EAAAk4B,UAAApgD,KAAAogD,UACAl4B,EAAAm4B,WAAArgD,KAAAqgD,WAGA,IAAArgD,KAAAmlB,WAAA+C,EAAA/C,SAAAnlB,KAAAmlB,UAEA,IAAAnlB,KAAA4hD,YAAA15B,EAAA05B,UAAA5hD,KAAA4hD,oBACA5hD,KAAAiqC,WAAA/hB,EAAA+hB,SAAAjqC,KAAAiqC,mBACAjqC,KAAAsjD,UAAAp7B,EAAAo7B,QAAAtjD,KAAAsjD,kBACAtjD,KAAA8b,QAAAoM,EAAApM,MAAA9b,KAAA8b,YAEA9b,KAAA8gD,YAAA54B,EAAA44B,cAEA9gD,KAAA+gD,UAAA,IAAA74B,EAAA64B,UAAA/gD,KAAA+gD,gBACA/gD,KAAAghD,qBAAA94B,EAAA84B,mBAAAhhD,KAAAghD,yBAEAhhD,KAAAohD,YAAAl5B,EAAAk5B,UAAAphD,KAAAohD,WACAphD,KAAAqhD,mBAAA,IAAAn5B,EAAAm5B,mBAAArhD,KAAAqhD,oBACA,UAAArhD,KAAAshD,mBAAAp5B,EAAAo5B,iBAAAthD,KAAAshD,kBACA,UAAAthD,KAAAuhD,oBAAAr5B,EAAAq5B,kBAAAvhD,KAAAuhD,wBAEAvhD,KAAAiyC,eAAA/pB,EAAA+pB,kBAAA,IACAjyC,KAAAwhD,WAAAt5B,EAAAs5B,cAAA,IAEAxhD,KAAA4sC,UAAA1kB,EAAA0kB,YACA,OAAAuD,KAAAC,UAAApwC,KAAAitC,YAA8C/kB,EAAA+kB,SAAAjtC,KAAAitC,UAoB9CkW,EAAA,CAEA,IAAA/5B,EAAAqnB,EAAAvnB,EAAAE,UACAI,EAAAinB,EAAAvnB,EAAAM,QAEAJ,EAAA9mB,OAAA,IAAA4lB,EAAAkB,YACAI,EAAAlnB,OAAA,IAAA4lB,EAAAsB,UAIA,OAAAtB,GAIA7W,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAEA/B,KAAA/C,KAAA8E,EAAA9E,KAEA+C,KAAAonC,IAAArlC,EAAAqlC,IACApnC,KAAAynC,OAAA1lC,EAAA0lC,OAEAznC,KAAAy/C,SAAA19C,EAAA09C,SACAz/C,KAAA0/C,KAAA39C,EAAA29C,KACA1/C,KAAA2/C,YAAA59C,EAAA49C,YACA3/C,KAAA2tC,aAAA5rC,EAAA4rC,aAEA3tC,KAAAilC,QAAAljC,EAAAkjC,QACAjlC,KAAA4/C,YAAA79C,EAAA69C,YAEA5/C,KAAA6/C,SAAA99C,EAAA89C,SACA7/C,KAAA8/C,SAAA/9C,EAAA+9C,SACA9/C,KAAA+/C,cAAAh+C,EAAAg+C,cACA//C,KAAAggD,cAAAj+C,EAAAi+C,cACAhgD,KAAAigD,cAAAl+C,EAAAk+C,cACAjgD,KAAAkgD,mBAAAn+C,EAAAm+C,mBAEAlgD,KAAAmgD,UAAAp+C,EAAAo+C,UACAngD,KAAAogD,UAAAr+C,EAAAq+C,UACApgD,KAAAqgD,WAAAt+C,EAAAs+C,WAEArgD,KAAA0gD,WAAA3+C,EAAA2+C,WAEA1gD,KAAA83C,UAAA/1C,EAAA+1C,UAEA93C,KAAA2gD,cAAA5+C,EAAA4+C,cACA3gD,KAAA4gD,oBAAA7+C,EAAA6+C,oBACA5gD,KAAA6gD,mBAAA9+C,EAAA8+C,mBAEA7gD,KAAA8gD,UAAA/+C,EAAA++C,UAEA9gD,KAAA+gD,UAAAh/C,EAAAg/C,UACA/gD,KAAAghD,mBAAAj/C,EAAAi/C,mBAEAhhD,KAAAihD,SAAAl/C,EAAAk/C,SAEAjhD,KAAA4sC,QAAA7qC,EAAA6qC,QACA5sC,KAAAitC,SAAAkD,KAAAU,MAAAV,KAAAC,UAAAruC,EAAAkrC,WAEAjtC,KAAAwgD,YAAAz+C,EAAAy+C,YACAxgD,KAAAugD,iBAAAx+C,EAAAw+C,iBAEA,IAAAgD,EAAAxhD,EAAAu+C,eACAkD,EAAA,KAEA,UAAAD,EAAA,CAEA,IAAA5lD,EAAA4lD,EAAAjhD,OACAkhD,EAAA,IAAAnkD,MAAA1B,GAEA,QAAAjB,EAAA,EAAmBA,IAAAiB,IAASjB,EAC5B8mD,EAAA9mD,GAAA6mD,EAAA7mD,GAAA2U,QAQA,OAJArR,KAAAsgD,eAAAkD,EAEAxjD,KAAAygD,WAAA1+C,EAAA0+C,WAEAzgD,MAIAoqB,QAAA,WAEApqB,KAAAqF,eAAuBV,KAAA,eAgFvBu8C,GAAAljD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAkjD,GAAAljD,UAAAsT,YAAA4vC,GAEAA,GAAAljD,UAAAylD,uBAEAvC,GAAAljD,UAAAuT,KAAA,SAAAxP,GA+BA,OA7BAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OAEA1jC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAgmC,SAAAjkC,EAAAikC,SACAhmC,KAAAimC,kBAAAlkC,EAAAkkC,kBAEAjmC,KAAA6lC,MAAA9jC,EAAA8jC,MACA7lC,KAAA8lC,eAAA/jC,EAAA+jC,eAEA9lC,KAAAqlC,YAAAtjC,EAAAsjC,YAEArlC,KAAAmlC,SAAApjC,EAAAojC,SAEAnlC,KAAAulC,OAAAxjC,EAAAwjC,OACAvlC,KAAAmhD,QAAAp/C,EAAAo/C,QACAnhD,KAAAylC,aAAA1jC,EAAA0jC,aACAzlC,KAAA0lC,gBAAA3jC,EAAA2jC,gBAEA1lC,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBACArhD,KAAAshD,iBAAAv/C,EAAAu/C,iBACAthD,KAAAuhD,kBAAAx/C,EAAAw/C,kBAEAvhD,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aAEAjyC,MAkFA0hD,GAAA1jD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACA0jD,GAAA1jD,UAAAsT,YAAAowC,GAEAA,GAAA1jD,UAAA0lD,oBAEAhC,GAAA1jD,UAAAuT,KAAA,SAAAxP,GAwBA,OAtBAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAspC,eAAAvnC,EAAAunC,eACAtpC,KAAAqpC,aAAAtnC,EAAAsnC,aAEArpC,KAAAi5B,SAAAF,GAAA1nB,MAAAtP,EAAAk3B,UAEAj5B,KAAA2hD,QAAAvkD,OAAA4D,UAAiCe,EAAA4/C,SAEjC3hD,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBAEArhD,KAAAynC,OAAA1lC,EAAA0lC,OACAznC,KAAA6hD,SAAA9/C,EAAA8/C,SAEA7hD,KAAAwhD,SAAAz/C,EAAAy/C,SAEAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aACAjyC,KAAAkyC,aAAAnwC,EAAAmwC,aAEAlyC,KAAA8hD,WAAA//C,EAAA+/C,WAEA9hD,MAIA0hD,GAAA1jD,UAAAirB,OAAA,SAAAC,GAEA,IAAAhB,EAAAs3B,GAAAxhD,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAMA,OAJAhB,EAAA+Q,SAAAj5B,KAAAi5B,SACA/Q,EAAAmhB,aAAArpC,KAAAqpC,aACAnhB,EAAAohB,eAAAtpC,KAAAspC,eAEAphB,GAeA9qB,OAAA4D,OAAAshD,GAAAtkD,WAEA4S,IAAA,SAAA2xC,EAAAhzB,GAKA,OAHAvvB,KAAAuiD,OAAAhxC,KAAAgxC,GACAviD,KAAAuvB,UAAAhe,KAAAge,GAEAvvB,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAoyC,GAKA,OAHA3jD,KAAAuiD,OAAAhxC,KAAAoyC,EAAApB,QACAviD,KAAAuvB,UAAAhe,KAAAoyC,EAAAp0B,WAEAvvB,MAIA4jD,GAAA,SAAAxlD,EAAA0D,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,2CACA5P,EAAA,IAAA0O,IAIA1O,EAAAyP,KAAAvR,KAAAuvB,WAAArd,eAAA9T,GAAAqT,IAAAzR,KAAAuiD,SAIAjqC,OAAA,SAAA9G,GAIA,OAFAxR,KAAAuvB,UAAAhe,KAAAC,GAAAM,IAAA9R,KAAAuiD,QAAArvC,YAEAlT,MAIA6jD,OAAA,WAEA,IAAArhD,EAAA,IAAAgO,GAEA,gBAAApS,GAIA,OAFA4B,KAAAuiD,OAAAhxC,KAAAvR,KAAA4jD,GAAAxlD,EAAAoE,IAEAxC,MARA,GAcA8jD,oBAAA,SAAAz3B,EAAAvqB,YAEAA,IAEAe,QAAA6O,KAAA,4DACA5P,EAAA,IAAA0O,IAIA1O,EAAAiQ,WAAAsa,EAAArsB,KAAAuiD,QAEA,IAAAwB,EAAAjiD,EAAA+Q,IAAA7S,KAAAuvB,WAEA,OAAAw0B,EAAA,EAEAjiD,EAAAyP,KAAAvR,KAAAuiD,QAIAzgD,EAAAyP,KAAAvR,KAAAuvB,WAAArd,eAAA6xC,GAAAtyC,IAAAzR,KAAAuiD,SAIAl0B,gBAAA,SAAAhC,GAEA,OAAA/sB,KAAAyT,KAAA/S,KAAAgkD,kBAAA33B,KAIA23B,kBAAA,WAEA,IAAAxhD,EAAA,IAAAgO,GAEA,gBAAA6b,GAEA,IAAA03B,EAAAvhD,EAAAuP,WAAAsa,EAAArsB,KAAAuiD,QAAA1vC,IAAA7S,KAAAuvB,WAIA,OAAAw0B,EAAA,EAEA/jD,KAAAuiD,OAAAjvC,kBAAA+Y,IAIA7pB,EAAA+O,KAAAvR,KAAAuvB,WAAArd,eAAA6xC,GAAAtyC,IAAAzR,KAAAuiD,QAEA//C,EAAA8Q,kBAAA+Y,KAlBA,GAwBA43B,qBAEA9E,GAAA,IAAA3uC,GACA4uC,GAAA,IAAA5uC,GACAynC,GAAA,IAAAznC,GAEA,SAAAkd,EAAAlrB,EAAA0hD,EAAAC,GASAhF,GAAA5tC,KAAAmc,GAAAjc,IAAAjP,GAAA0P,eAAA,IACAktC,GAAA7tC,KAAA/O,GAAAsP,IAAA4b,GAAAxa,YACA+kC,GAAA1mC,KAAAvR,KAAAuiD,QAAAzwC,IAAAqtC,IAEA,IAMAiF,EAAAtkC,EAAAukC,EAAAC,EANAC,EAAA,GAAA72B,EAAAra,WAAA7Q,GACAgiD,GAAAxkD,KAAAuvB,UAAA1c,IAAAusC,IACAqF,EAAAxM,GAAAplC,IAAA7S,KAAAuvB,WACA7gB,GAAAupC,GAAAplC,IAAAusC,IACAriD,EAAAk7C,GAAAnlC,WACA6I,EAAArc,KAAA2T,IAAA,EAAAuxC,KAGA,GAAA7oC,EAAA,EAQA,GAHAmE,EAAA0kC,EAAAC,EAAA/1C,EACA41C,EAAAC,EAAA5oC,GAFAyoC,EAAAI,EAAA91C,EAAA+1C,IAIA,EAEA,GAAA3kC,IAAAwkC,EAEA,GAAAxkC,GAAAwkC,EAAA,CAKA,IAAAI,EAAA,EAAA/oC,EAGA0oC,GAFAD,GAAAM,IAEAN,EAAAI,GADA1kC,GAAA4kC,GACA,EAAAD,GAAA3kC,GAAA0kC,EAAAJ,EAAAtkC,EAAA,EAAApR,GAAA3R,OAMA+iB,EAAAykC,EAEAF,IADAD,EAAA9kD,KAAAoG,IAAA,IAAA8+C,EAAA1kC,EAAA2kC,KACAL,EAAAtkC,KAAA,EAAApR,GAAA3R,OAQA+iB,GAAAykC,EAEAF,IADAD,EAAA9kD,KAAAoG,IAAA,IAAA8+C,EAAA1kC,EAAA2kC,KACAL,EAAAtkC,KAAA,EAAApR,GAAA3R,OAMA+iB,IAAAwkC,EAMAD,IAFAD,EAAA9kD,KAAAoG,IAAA,KAAA8+C,EAAAD,EAAAE,KAEAL,GADAtkC,EAAAskC,EAAA,GAAAG,EAAAjlD,KAAAmG,IAAAnG,KAAAoG,KAAA6+C,GAAA71C,GAAA61C,KACAzkC,EAAA,EAAApR,GAAA3R,EAEM+iB,GAAAwkC,GAINF,EAAA,EAEAC,GADAvkC,EAAAxgB,KAAAmG,IAAAnG,KAAAoG,KAAA6+C,GAAA71C,GAAA61C,KACAzkC,EAAA,EAAApR,GAAA3R,GAQAsnD,IAFAD,EAAA9kD,KAAAoG,IAAA,IAAA8+C,EAAAD,EAAAE,KAEAL,GADAtkC,EAAAskC,EAAA,EAAAG,EAAAjlD,KAAAmG,IAAAnG,KAAAoG,KAAA6+C,GAAA71C,GAAA61C,KACAzkC,EAAA,EAAApR,GAAA3R,OAUA+iB,EAAA0kC,EAAA,GAAAD,IAEAF,IADAD,EAAA9kD,KAAAoG,IAAA,IAAA8+C,EAAA1kC,EAAA2kC,KACAL,EAAAtkC,KAAA,EAAApR,GAAA3R,EAgBA,OAZAmnD,GAEAA,EAAA3yC,KAAAvR,KAAAuvB,WAAArd,eAAAkyC,GAAA3yC,IAAAzR,KAAAuiD,QAIA4B,GAEAA,EAAA5yC,KAAA6tC,IAAAltC,eAAA4N,GAAArO,IAAA0tC,IAIAkF,IAMAM,gBAAA,WAEA,IAAAniD,EAAA,IAAAgO,GAEA,gBAAAqV,EAAA/jB,GAEAU,EAAAuP,WAAA8T,EAAAvR,OAAAtU,KAAAuiD,QACA,IAAAqC,EAAApiD,EAAAqQ,IAAA7S,KAAAuvB,WACArhB,EAAA1L,EAAAqQ,IAAArQ,GAAAoiD,IACAC,EAAAh/B,EAAArB,OAAAqB,EAAArB,OAEA,GAAAtW,EAAA22C,EAAA,YAEA,IAAAC,EAAAxlD,KAAAyT,KAAA8xC,EAAA32C,GAGA62C,EAAAH,EAAAE,EAGAE,EAAAJ,EAAAE,EAGA,OAAAC,EAAA,GAAAC,EAAA,OAKAD,EAAA,EAAA/kD,KAAA4jD,GAAAoB,EAAAljD,GAGA9B,KAAA4jD,GAAAmB,EAAAjjD,IA9BA,GAoCAurB,iBAAA,SAAAxH,GAEA,OAAA7lB,KAAAquB,gBAAAxI,EAAAvR,SAAAuR,EAAArB,QAIAygC,gBAAA,SAAAz3B,GAEA,IAAAiC,EAAAjC,EAAAvJ,OAAApR,IAAA7S,KAAAuvB,WAEA,OAAAE,EAGA,WAAAjC,EAAAa,gBAAAruB,KAAAuiD,QAEA,EAMA,KAIA,IAAAnkD,IAAA4B,KAAAuiD,OAAA1vC,IAAA2a,EAAAvJ,QAAAuJ,EAAAjF,UAAAkH,EAIA,OAAArxB,GAAA,EAAAA,EAAA,MAIA8mD,eAAA,SAAA13B,EAAA1rB,GAEA,IAAA1D,EAAA4B,KAAAilD,gBAAAz3B,GAEA,cAAApvB,EAEA,KAIA4B,KAAA4jD,GAAAxlD,EAAA0D,IAIAyrB,gBAAA,SAAAC,GAIA,IAAA23B,EAAA33B,EAAAa,gBAAAruB,KAAAuiD,QAEA,WAAA4C,GAMA33B,EAAAvJ,OAAApR,IAAA7S,KAAAuvB,WAEA41B,EAAA,GAYAC,aAAA,SAAA1/B,EAAA5jB,GAEA,IAAAujD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEAC,EAAA,EAAA3lD,KAAAuvB,UAAAnrB,EACAwhD,EAAA,EAAA5lD,KAAAuvB,UAAA1pB,EACAggD,EAAA,EAAA7lD,KAAAuvB,UAAAzpB,EAEAy8C,EAAAviD,KAAAuiD,OA0BA,OAxBAoD,GAAA,GAEAN,GAAA3/B,EAAAjgB,IAAArB,EAAAm+C,EAAAn+C,GAAAuhD,EACAL,GAAA5/B,EAAAhgB,IAAAtB,EAAAm+C,EAAAn+C,GAAAuhD,IAIAN,GAAA3/B,EAAAhgB,IAAAtB,EAAAm+C,EAAAn+C,GAAAuhD,EACAL,GAAA5/B,EAAAjgB,IAAArB,EAAAm+C,EAAAn+C,GAAAuhD,GAIAC,GAAA,GAEAL,GAAA7/B,EAAAjgB,IAAAI,EAAA08C,EAAA18C,GAAA+/C,EACAJ,GAAA9/B,EAAAhgB,IAAAG,EAAA08C,EAAA18C,GAAA+/C,IAIAL,GAAA7/B,EAAAhgB,IAAAG,EAAA08C,EAAA18C,GAAA+/C,EACAJ,GAAA9/B,EAAAjgB,IAAAI,EAAA08C,EAAA18C,GAAA+/C,GAIAP,EAAAG,GAAAD,EAAAD,EAAA,OAKAC,EAAAF,aAAAE,IAEAC,EAAAF,aAAAE,GAEAK,GAAA,GAEAJ,GAAA//B,EAAAjgB,IAAAK,EAAAy8C,EAAAz8C,GAAA+/C,EACAH,GAAAhgC,EAAAhgB,IAAAI,EAAAy8C,EAAAz8C,GAAA+/C,IAIAJ,GAAA//B,EAAAhgB,IAAAI,EAAAy8C,EAAAz8C,GAAA+/C,EACAH,GAAAhgC,EAAAjgB,IAAAK,EAAAy8C,EAAAz8C,GAAA+/C,GAIAR,EAAAK,GAAAD,EAAAH,EAAA,OAEAG,EAAAJ,aAAAI,IAEAC,EAAAJ,aAAAI,GAIAJ,EAAA,OAEAtlD,KAAA4jD,GAAAyB,GAAA,EAAAA,EAAAC,EAAAxjD,MAIAsrB,eAEA5b,GAAA,IAAAhB,GAEA,SAAAkV,GAEA,cAAA1lB,KAAAolD,aAAA1/B,EAAAlU,MAMAs0C,kBAAA,WAGA,IAAA7N,EAAA,IAAAznC,GACAu1C,EAAA,IAAAv1C,GACAw1C,EAAA,IAAAx1C,GACAyT,EAAA,IAAAzT,GAEA,gBAAApQ,EAAAC,EAAAtD,EAAAkpD,EAAAnkD,GAIAikD,EAAAh0C,WAAA1R,EAAAD,GACA4lD,EAAAj0C,WAAAhV,EAAAqD,GACA6jB,EAAAxL,aAAAstC,EAAAC,GAOA,IACA7hD,EADA+hD,EAAAlmD,KAAAuvB,UAAA1c,IAAAoR,GAGA,GAAAiiC,EAAA,GAEA,GAAAD,EAAA,YACA9hD,EAAA,MAEI,MAAA+hD,EAAA,GAOJ,YALA/hD,GAAA,EACA+hD,KAQAjO,EAAAlmC,WAAA/R,KAAAuiD,OAAAniD,GACA,IAAA+lD,EAAAhiD,EAAAnE,KAAAuvB,UAAA1c,IAAAmzC,EAAAvtC,aAAAw/B,EAAA+N,IAGA,GAAAG,EAAA,EAEA,YAIA,IAAAC,EAAAjiD,EAAAnE,KAAAuvB,UAAA1c,IAAAkzC,EAAAziC,MAAA20B,IAGA,GAAAmO,EAAA,EAEA,YAKA,GAAAD,EAAAC,EAAAF,EAEA,YAKA,IAAAG,GAAAliD,EAAA8zC,EAAAplC,IAAAoR,GAGA,OAAAoiC,EAAA,EAEA,KAKArmD,KAAA4jD,GAAAyC,EAAAH,EAAApkD,IA7EA,GAmFAiZ,aAAA,SAAAiK,GAKA,OAHAhlB,KAAAuiD,OAAAxnC,aAAAiK,GACAhlB,KAAAuvB,UAAAlM,mBAAA2B,GAEAhlB,MAIA8T,OAAA,SAAA6vC,GAEA,OAAAA,EAAApB,OAAAzuC,OAAA9T,KAAAuiD,SAAAoB,EAAAp0B,UAAAzb,OAAA9T,KAAAuvB,cAiBAnyB,OAAA4D,OAAAwhD,GAAAxkD,WAEA4S,IAAA,SAAA8e,EAAAI,GAKA,OAHA9vB,KAAA0vB,MAAAne,KAAAme,GACA1vB,KAAA8vB,IAAAve,KAAAue,GAEA9vB,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAA+d,GAKA,OAHAtvB,KAAA0vB,MAAAne,KAAA+d,EAAAI,OACA1vB,KAAA8vB,IAAAve,KAAA+d,EAAAQ,KAEA9vB,MAIAmsB,UAAA,SAAArqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,oDACA5P,EAAA,IAAA0O,IAIA1O,EAAA6P,WAAA3R,KAAA0vB,MAAA1vB,KAAA8vB,KAAA5d,eAAA,KAIAsd,MAAA,SAAA1tB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,gDACA5P,EAAA,IAAA0O,IAIA1O,EAAAiQ,WAAA/R,KAAA8vB,IAAA9vB,KAAA0vB,QAIA42B,WAAA,WAEA,OAAAtmD,KAAA0vB,MAAApc,kBAAAtT,KAAA8vB,MAIAsY,SAAA,WAEA,OAAApoC,KAAA0vB,MAAArc,WAAArT,KAAA8vB,MAIA8zB,GAAA,SAAAxlD,EAAA0D,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,6CACA5P,EAAA,IAAA0O,IAIAxQ,KAAAwvB,MAAA1tB,GAAAoQ,eAAA9T,GAAAqT,IAAAzR,KAAA0vB,QAIA62B,8BAEAlH,GAAA,IAAA7uC,GACA8uC,GAAA,IAAA9uC,GAEA,SAAA6b,EAAAm6B,GAEAnH,GAAAttC,WAAAsa,EAAArsB,KAAA0vB,OACA4vB,GAAAvtC,WAAA/R,KAAA8vB,IAAA9vB,KAAA0vB,OAEA,IAAA+2B,EAAAnH,GAAAzsC,IAAAysC,IAGAlhD,EAFAkhD,GAAAzsC,IAAAwsC,IAEAoH,EAQA,OANAD,IAEApoD,EAAAsP,GAAAW,MAAAjQ,EAAA,MAIAA,IAMA0lD,oBAAA,SAAAz3B,EAAAm6B,EAAA1kD,GAEA,IAAA1D,EAAA4B,KAAAumD,6BAAAl6B,EAAAm6B,GASA,gBAPA1kD,IAEAe,QAAA6O,KAAA,8DACA5P,EAAA,IAAA0O,IAIAxQ,KAAAwvB,MAAA1tB,GAAAoQ,eAAA9T,GAAAqT,IAAAzR,KAAA0vB,QAIA3U,aAAA,SAAAnV,GAKA,OAHA5F,KAAA0vB,MAAA3U,aAAAnV,GACA5F,KAAA8vB,IAAA/U,aAAAnV,GAEA5F,MAIA8T,OAAA,SAAAwb,GAEA,OAAAA,EAAAI,MAAA5b,OAAA9T,KAAA0vB,QAAAJ,EAAAQ,IAAAhc,OAAA9T,KAAA8vB,QAmBA1yB,OAAA4D,OAAAyhD,IAEAiE,WAEAh5B,GAAA,IAAAld,GAEA,SAAApQ,EAAAC,EAAAtD,EAAA+E,YAEAA,IAEAe,QAAA6O,KAAA,uDACA5P,EAAA,IAAA0O,IAIA1O,EAAAiQ,WAAAhV,EAAAsD,GACAqtB,GAAA3b,WAAA3R,EAAAC,GACAyB,EAAAwhB,MAAAoK,IAEA,IAAAi5B,EAAA7kD,EAAAgR,WACA,OAAA6zC,EAAA,EAEA7kD,EAAAoQ,eAAA,EAAA5S,KAAAyT,KAAA4zC,IAIA7kD,EAAA8O,IAAA,SAQAg2C,aAAA,WAEA,IAAAl5B,EAAA,IAAAld,GACAhO,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GAEA,gBAAA6b,EAAAjsB,EAAAC,EAAAtD,EAAA+E,GAEA4rB,EAAA3b,WAAAhV,EAAAqD,GACAoC,EAAAuP,WAAA1R,EAAAD,GACAyT,EAAA9B,WAAAsa,EAAAjsB,GAEA,IAAAymD,EAAAn5B,EAAA7a,IAAA6a,GACAo5B,EAAAp5B,EAAA7a,IAAArQ,GACAukD,EAAAr5B,EAAA7a,IAAAgB,GACAmzC,EAAAxkD,EAAAqQ,IAAArQ,GACAykD,EAAAzkD,EAAAqQ,IAAAgB,GAEAqzC,EAAAL,EAAAG,EAAAF,IAUA,YARAhlD,IAEAe,QAAA6O,KAAA,0DACA5P,EAAA,IAAA0O,IAKA,IAAA02C,EAIA,OAAAplD,EAAA8O,KAAA,SAIA,IAAAu2C,EAAA,EAAAD,EACA/tB,GAAA6tB,EAAAD,EAAAD,EAAAG,GAAAE,EACA31C,GAAAq1C,EAAAI,EAAAH,EAAAC,GAAAI,EAGA,OAAArlD,EAAA8O,IAAA,EAAAuoB,EAAA3nB,IAAA2nB,IAzCA,GA+CAlM,cAAA,WAEA,IAAAzqB,EAAA,IAAAgO,GAEA,gBAAA6b,EAAAjsB,EAAAC,EAAAtD,GAIA,OAFA0lD,GAAAmE,aAAAv6B,EAAAjsB,EAAAC,EAAAtD,EAAAyF,GAEAA,EAAA4B,GAAA,GAAA5B,EAAAqD,GAAA,GAAArD,EAAA4B,EAAA5B,EAAAqD,GAAA,GARA,KAgBAzI,OAAA4D,OAAAyhD,GAAAzkD,WAEA4S,IAAA,SAAAxQ,EAAAC,EAAAtD,GAMA,OAJAiD,KAAAI,EAAAmR,KAAAnR,GACAJ,KAAAK,EAAAkR,KAAAlR,GACAL,KAAAjD,EAAAwU,KAAAxU,GAEAiD,MAIAonD,wBAAA,SAAA5hC,EAAA6hC,EAAAC,EAAAC,GAMA,OAJAvnD,KAAAI,EAAAmR,KAAAiU,EAAA6hC,IACArnD,KAAAK,EAAAkR,KAAAiU,EAAA8hC,IACAtnD,KAAAjD,EAAAwU,KAAAiU,EAAA+hC,IAEAvnD,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAA6c,GAMA,OAJApuB,KAAAI,EAAAmR,KAAA6c,EAAAhuB,GACAJ,KAAAK,EAAAkR,KAAA6c,EAAA/tB,GACAL,KAAAjD,EAAAwU,KAAA6c,EAAArxB,GAEAiD,MAIAwnD,QAAA,WAEA,IAAA95B,EAAA,IAAAld,GACAhO,EAAA,IAAAgO,GAEA,kBAKA,OAHAkd,EAAA3b,WAAA/R,KAAAjD,EAAAiD,KAAAK,GACAmC,EAAAuP,WAAA/R,KAAAI,EAAAJ,KAAAK,GAEA,GAAAqtB,EAAApK,MAAA9gB,GAAAF,UAVA,GAgBAmlD,YAAA,SAAA3lD,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,yDACA5P,EAAA,IAAA0O,IAIA1O,EAAA6P,WAAA3R,KAAAI,EAAAJ,KAAAK,GAAAoR,IAAAzR,KAAAjD,GAAAmV,eAAA,MAIAw0C,UAAA,SAAA5kD,GAEA,OAAA2gD,GAAAiE,UAAA1mD,KAAAI,EAAAJ,KAAAK,EAAAL,KAAAjD,EAAA+E,IAIA4lD,SAAA,SAAA5lD,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,sDACA5P,EAAA,IAAA0O,IAIA1O,EAAAmtB,sBAAAjvB,KAAAI,EAAAJ,KAAAK,EAAAL,KAAAjD,IAIA6pD,aAAA,SAAAv6B,EAAAvqB,GAEA,OAAA2gD,GAAAmE,aAAAv6B,EAAArsB,KAAAI,EAAAJ,KAAAK,EAAAL,KAAAjD,EAAA+E,IAIAmrB,cAAA,SAAAZ,GAEA,OAAAo2B,GAAAx1B,cAAAZ,EAAArsB,KAAAI,EAAAJ,KAAAK,EAAAL,KAAAjD,IAIAqwB,cAAA,SAAA1H,GAEA,OAAAA,EAAA+H,mBAAAztB,OAIA8jD,oBAAA,WAEA,IAAAt2B,EAAA,IAAAlF,GACAq/B,GAAA,IAAAnF,GAAA,IAAAA,GAAA,IAAAA,IACAoF,EAAA,IAAAp3C,GACAiV,EAAA,IAAAjV,GAEA,gBAAA6b,EAAAvqB,YAEAA,IAEAe,QAAA6O,KAAA,iEACA5P,EAAA,IAAA0O,IAIA,IAAAq3C,EAAAz/B,IASA,GALAoF,EAAAyB,sBAAAjvB,KAAAI,EAAAJ,KAAAK,EAAAL,KAAAjD,GACAywB,EAAA4B,aAAA/C,EAAAu7B,QAIA5nD,KAAAitB,cAAA26B,GAIA9lD,EAAAyP,KAAAq2C,OAEI,CAIJD,EAAA,GAAA/2C,IAAA5Q,KAAAI,EAAAJ,KAAAK,GACAsnD,EAAA,GAAA/2C,IAAA5Q,KAAAK,EAAAL,KAAAjD,GACA4qD,EAAA,GAAA/2C,IAAA5Q,KAAAjD,EAAAiD,KAAAI,GAEA,QAAA1D,EAAA,EAAoBA,EAAAirD,EAAArlD,OAAqB5F,IAAA,CAEzCirD,EAAAjrD,GAAAonD,oBAAA8D,KAAAniC,GAEA,IAAA2iB,EAAAwf,EAAAt0C,kBAAAmS,GAEA2iB,EAAAyf,IAEAA,EAAAzf,EAEAtmC,EAAAyP,KAAAkU,KAQA,OAAA3jB,GAzDA,GA+DAgS,OAAA,SAAAsa,GAEA,OAAAA,EAAAhuB,EAAA0T,OAAA9T,KAAAI,IAAAguB,EAAA/tB,EAAAyT,OAAA9T,KAAAK,IAAA+tB,EAAArxB,EAAA+W,OAAA9T,KAAAjD,MA4BA2lD,GAAA1kD,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAoxC,GAEAjL,UAEAqQ,YAAA,SAAApqD,GAEAsC,KAAA2iD,SAAAjlD,GAIA6T,KAAA,SAAAxP,GAkBA,OAhBAsqC,GAAAruC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA2iD,SAAA5gD,EAAA4gD,kBAEA5gD,EAAAgmD,wBAEA/nD,KAAA+nD,sBAAAhmD,EAAAgmD,sBAAAviD,kBAIAzD,EAAAimD,wBAEAhoD,KAAAgoD,sBAAA5qD,OAAA4D,UAAiDe,EAAAimD,wBAIjDhoD,MAIA4iD,mBAAA,WAEA,IACA9lD,EAAAmrD,EAAAhrD,EADA0vB,EAAA3sB,KAAA2sB,SAGA,GAAAA,EAAAG,iBAAA,CAEA,IAAA2uB,EAAA9uB,EAAA8uB,gBACA75C,EAAAxE,OAAAwE,KAAA65C,GAEA,GAAA75C,EAAAU,OAAA,GAEA,IAAA48C,EAAAzD,EAAA75C,EAAA,IAEA,YAAAs9C,EAKA,IAHAl/C,KAAA+nD,yBACA/nD,KAAAgoD,yBAEAlrD,EAAA,EAAAmrD,EAAA/I,EAAA58C,OAA6CxF,EAAAmrD,EAAQnrD,IAErDG,EAAAiiD,EAAApiD,GAAAG,MAAAiE,OAAApE,GAEAkD,KAAA+nD,sBAAA/iD,KAAA,GACAhF,KAAAgoD,sBAAA/qD,GAAAH,OAQG,CAEH,IAAAm1C,EAAAtlB,EAAAslB,aAEA,YAAAA,KAAA3vC,OAAA,EAKA,IAHAtC,KAAA+nD,yBACA/nD,KAAAgoD,yBAEAlrD,EAAA,EAAAmrD,EAAAhW,EAAA3vC,OAA0CxF,EAAAmrD,EAAQnrD,IAElDG,EAAAg1C,EAAAn1C,GAAAG,MAAAiE,OAAApE,GAEAkD,KAAA+nD,sBAAA/iD,KAAA,GACAhF,KAAAgoD,sBAAA/qD,GAAAH,IAUA2yC,QAAA,WAEA,IAAAyY,EAAA,IAAAl4C,GACA2zC,EAAA,IAAArB,GACAz8B,EAAA,IAAAwC,GAEAqtB,EAAA,IAAAllC,GACAmlC,EAAA,IAAAnlC,GACAolC,EAAA,IAAAplC,GAEA23C,EAAA,IAAA33C,GACA43C,EAAA,IAAA53C,GACA63C,EAAA,IAAA73C,GAEA83C,EAAA,IAAAv4C,GACAw4C,EAAA,IAAAx4C,GACAy4C,EAAA,IAAAz4C,GAEA04C,EAAA,IAAAj4C,GAEAk4C,EAAA,IAAAl4C,GACAm4C,EAAA,IAAAn4C,GAEA,SAAAo4C,EAAAv8B,EAAA1G,EAAAC,EAAA8C,EAAAmgC,EAAA7T,EAAA8T,GAUA,OARArG,GAAAmE,aAAAv6B,EAAA1G,EAAAC,EAAA8C,EAAA+/B,GAEAI,EAAA32C,eAAAu2C,EAAArkD,GACA4wC,EAAA9iC,eAAAu2C,EAAA5iD,GACAijD,EAAA52C,eAAAu2C,EAAA3iD,GAEA+iD,EAAAp3C,IAAAujC,GAAAvjC,IAAAq3C,GAEAD,EAAAx3C,QAIA,SAAA03C,EAAAjrD,EAAAyyC,EAAAyY,EAAArF,EAAAnF,EAAAC,EAAAC,EAAAryB,GAcA,WAVAkkB,EAAAmP,OAAAn5C,EAEAo9C,EAAAmC,kBAAApH,EAAAD,EAAAD,KAAAnyB,GAIAs3B,EAAAmC,kBAAAtH,EAAAC,EAAAC,EAAAnO,EAAAmP,OAAAl5C,EAAA6lB,IAIA,YAEAs8B,EAAAp3C,KAAA8a,GACAs8B,EAAA5tC,aAAAjd,EAAAqlB,aAEA,IAAAilB,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAs1C,GAEA,OAAAvgB,EAAA4gB,EAAAnrC,MAAAuqB,EAAA4gB,EAAAlrC,IAAA,MAGAsqB,WACA/b,MAAAs8B,EAAAt3C,QACAvT,UAKA,SAAAmrD,EAAAnrD,EAAAkrD,EAAArF,EAAA5mC,EAAAuN,EAAAlqB,EAAAC,EAAAtD,GAEA24C,EAAAzhC,oBAAA8I,EAAA3c,GACAu1C,EAAA1hC,oBAAA8I,EAAA1c,GACAu1C,EAAA3hC,oBAAA8I,EAAAhgB,GAEA,IAAAmsD,EAAAH,EAAAjrD,IAAAyyC,SAAAyY,EAAArF,EAAAjO,EAAAC,EAAAC,EAAA8S,GAEA,GAAAQ,EAAA,CAEA5+B,IAEAg+B,EAAAr0C,oBAAAqW,EAAAlqB,GACAmoD,EAAAt0C,oBAAAqW,EAAAjqB,GACAmoD,EAAAv0C,oBAAAqW,EAAAvtB,GAEAmsD,EAAA5+B,GAAAs+B,EAAAF,EAAAhT,EAAAC,EAAAC,EAAA0S,EAAAC,EAAAC,IAIA,IAAA9T,EAAA,IAAAlH,GAAAptC,EAAAC,EAAAtD,GACA0lD,GAAAiE,UAAAhR,EAAAC,EAAAC,EAAAlB,EAAAzwB,QAEAilC,EAAAxU,OACAwU,EAAAC,UAAA/oD,EAIA,OAAA8oD,EAIA,gBAAAF,EAAAI,GAEA,IA4BAF,EA5BAv8B,EAAA3sB,KAAA2sB,SACA4jB,EAAAvwC,KAAAuwC,SACAptB,EAAAnjB,KAAAmjB,YAEA,YAAAotB,IAIA,OAAA5jB,EAAA4E,gBAAA5E,EAAA6E,wBAEA3L,EAAAtU,KAAAob,EAAA4E,gBACA1L,EAAA9K,aAAAoI,QAEA6lC,EAAArF,IAAAt2B,iBAAAxH,KAIAqiC,EAAA7sC,WAAA8H,GACAwgC,EAAApyC,KAAAy3C,EAAArF,KAAA5oC,aAAAmtC,GAIA,OAAAv7B,EAAA2lB,kBAEAqR,EAAAv2B,cAAAT,EAAA2lB,eAMA,GAAA3lB,EAAAG,iBAAA,CAEA,IAAA1sB,EAAAC,EAAAtD,EAIAL,EAAAC,EAHA6H,EAAAmoB,EAAAnoB,MACAuY,EAAA4P,EAAAI,WAAAhQ,SACAuN,EAAAqC,EAAAI,WAAAzC,GAGA,UAAA9lB,EAIA,IAAA9H,EAAA,EAAAC,EAAA6H,EAAAqW,MAAkCne,EAAAC,EAAOD,GAAA,EAEzC0D,EAAAoE,EAAA2P,KAAAzX,GACA2D,EAAAmE,EAAA2P,KAAAzX,EAAA,GACAK,EAAAyH,EAAA2P,KAAAzX,EAAA,IAEAwsD,EAAAD,EAAAjpD,KAAAgpD,EAAArF,EAAA5mC,EAAAuN,EAAAlqB,EAAAC,EAAAtD,MAIAmsD,EAAAC,UAAA7pD,KAAA4E,MAAAxH,EAAA,GACA0sD,EAAApkD,KAAAkkD,SAMK,YAAAnsC,EAIL,IAAArgB,EAAA,EAAAC,EAAAogB,EAAAlC,MAAqCne,EAAAC,EAAOD,GAAA,GAM5CwsD,EAAAD,EAAAjpD,KAAAgpD,EAAArF,EAAA5mC,EAAAuN,EAJAlqB,EAAA1D,EACA2D,EAAA3D,EAAA,EACAK,EAAAL,EAAA,KAIA0sD,EAAApkD,KAAAkkD,QAMI,GAAAv8B,EAAAC,WAAA,CAEJ,IAAAy8B,EAAAC,EAAAC,EAKAjV,EAJAkV,EAAAnqD,MAAAm6B,QAAA+W,GAEA1jB,EAAAF,EAAAE,SACAklB,EAAAplB,EAAAolB,MAGAC,EAAArlB,EAAAqlB,cAAA,GACAA,EAAA1vC,OAAA,IAAAgyC,EAAAtC,GAEA,QAAA1xC,EAAA,EAAAm1C,EAAA1D,EAAAzvC,OAAuChC,EAAAm1C,EAAQn1C,IAAA,CAE/C,IAAAo0C,EAAA3C,EAAAzxC,GACAmpD,EAAAD,EAAAjZ,EAAAmE,EAAAjH,eAAA8C,EAEA,YAAAkZ,EAAA,CAMA,GAJAJ,EAAAx8B,EAAA6nB,EAAAt0C,GACAkpD,EAAAz8B,EAAA6nB,EAAAr0C,GACAkpD,EAAA18B,EAAA6nB,EAAA33C,QAEA0sD,EAAAxX,aAAA,CAEA,IAAAA,EAAAtlB,EAAAslB,aACAyX,EAAA1pD,KAAA+nD,sBAEArS,EAAA9kC,IAAA,OACA+kC,EAAA/kC,IAAA,OACAglC,EAAAhlC,IAAA,OAEA,QAAAxS,EAAA,EAAAurD,EAAA1X,EAAA3vC,OAAgDlE,EAAAurD,EAAQvrD,IAAA,CAExD,IAAAwrD,EAAAF,EAAAtrD,GAEA,OAAAwrD,EAAA,CAEA,IAAAC,EAAA5X,EAAA7zC,GAAAyuB,SAEA6oB,EAAA7jC,gBAAAs2C,EAAAp2C,WAAA83C,EAAAnV,EAAAt0C,GAAAipD,GAAAO,GACAjU,EAAA9jC,gBAAAu2C,EAAAr2C,WAAA83C,EAAAnV,EAAAr0C,GAAAipD,GAAAM,GACAhU,EAAA/jC,gBAAAw2C,EAAAt2C,WAAA83C,EAAAnV,EAAA33C,GAAAwsD,GAAAK,IAIAlU,EAAAjkC,IAAA43C,GACA1T,EAAAlkC,IAAA63C,GACA1T,EAAAnkC,IAAA83C,GAEAF,EAAA3T,EACA4T,EAAA3T,EACA4T,EAAA3T,EAMA,GAFAsT,EAAAH,EAAA/oD,KAAAypD,EAAAT,EAAArF,EAAA0F,EAAAC,EAAAC,EAAAb,GAEA,CAEA,GAAApU,KAAAh0C,GAAA,CAEA,IAAAwpD,EAAAxV,EAAAh0C,GACAgoD,EAAA/2C,KAAAu4C,EAAA,IACAvB,EAAAh3C,KAAAu4C,EAAA,IACAtB,EAAAj3C,KAAAu4C,EAAA,IAEAZ,EAAA5+B,GAAAs+B,EAAAF,EAAAW,EAAAC,EAAAC,EAAAjB,EAAAC,EAAAC,GAIAU,EAAAxU,OACAwU,EAAAC,UAAA7oD,EACA8oD,EAAApkD,KAAAkkD,QA5PA,GAwQA73C,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAA2sB,SAAA3sB,KAAAuwC,UAAAh/B,KAAAvR,SA+/BA8iD,GAAA9kD,UAAAZ,OAAA0rB,OAAA/C,GAAA/nB,WACA8kD,GAAA9kD,UAAAsT,YAAAwxC,GAEAA,GAAA9kD,UAAA+rD,iBAEA3sD,OAAAC,eAAAylD,GAAA9kD,UAAA,UAEAR,IAAA,WAEA,OAAAwC,KAAAgmB,OAIApV,IAAA,SAAAlT,GAEAsC,KAAAgmB,MAAAtoB,KAuDA,IAAAssD,GAAA,IAAAjkC,GACAkkC,GAAA,IAAAnH,GAIA,SAAAoH,KAEAlqD,KAAAmqD,OACAnqD,KAAAsB,OAQA,IAAA8oD,MACAC,MAIAC,GAAA,IAAArW,aAAA,IACAsW,GAAA,IAAAtW,aAAA,GAIA,SAAAuW,GAAAjlD,EAAAklD,EAAAC,GAEA,IAAAC,EAAAplD,EAAA,GAEA,GAAAolD,GAAA,GAAAA,EAAA,SAAAplD,EAIA,IAAA5H,EAAA8sD,EAAAC,EACAjtD,EAAA2sD,GAAAzsD,GASA,YAPAF,IAEAA,EAAA,IAAAw2C,aAAAt2C,GACAysD,GAAAzsD,GAAAF,GAIA,IAAAgtD,EAAA,CAEAE,EAAA32C,QAAAvW,EAAA,GAEA,QAAAf,EAAA,EAAAkC,EAAA,EAA8BlC,IAAA+tD,IAAe/tD,EAE7CkC,GAAA8rD,EACAnlD,EAAA7I,GAAAsX,QAAAvW,EAAAmB,GAMA,OAAAnB,EAMA,SAAAmtD,GAAAC,EAAAltD,GAEA,IAAAF,EAAA4sD,GAAA1sD,YAEAF,IAEAA,EAAA,IAAAo2C,WAAAl2C,GACA0sD,GAAA1sD,GAAAF,GAIA,QAAAf,EAAA,EAAiBA,IAAAiB,IAASjB,EAC1Be,EAAAf,GAAAmuD,EAAAC,mBAEA,OAAArtD,EAWA,SAAAstD,GAAAC,EAAAx5C,GAEAw5C,EAAAC,UAAAjrD,KAAAkrD,KAAA15C,GAIA,SAAA25C,GAAAH,EAAAx5C,GAEAw5C,EAAAI,UAAAprD,KAAAkrD,KAAA15C,GAMA,SAAA65C,GAAAL,EAAAx5C,YAEAA,EAAApN,EAEA4mD,EAAAM,WAAAtrD,KAAAkrD,KAAA15C,GAIAw5C,EAAAO,UAAAvrD,KAAAkrD,KAAA15C,EAAApN,EAAAoN,EAAA3L,GAMA,SAAA2lD,GAAAR,EAAAx5C,YAEAA,EAAApN,EAEA4mD,EAAAS,UAAAzrD,KAAAkrD,KAAA15C,EAAApN,EAAAoN,EAAA3L,EAAA2L,EAAA1L,YAEE0L,EAAA/T,EAEFutD,EAAAS,UAAAzrD,KAAAkrD,KAAA15C,EAAA/T,EAAA+T,EAAAsT,EAAAtT,EAAAnR,GAIA2qD,EAAAU,WAAA1rD,KAAAkrD,KAAA15C,GAMA,SAAAm6C,GAAAX,EAAAx5C,YAEAA,EAAApN,EAEA4mD,EAAAY,WAAA5rD,KAAAkrD,KAAA15C,GAIAw5C,EAAAa,UAAA7rD,KAAAkrD,KAAA15C,EAAApN,EAAAoN,EAAA3L,EAAA2L,EAAA1L,EAAA0L,EAAArB,GAQA,SAAA27C,GAAAd,EAAAx5C,GAEAw5C,EAAAe,iBAAA/rD,KAAAkrD,QAAA15C,EAAAvB,UAAAuB,GAIA,SAAAw6C,GAAAhB,EAAAx5C,YAEAA,EAAAvB,SAEA+6C,EAAAiB,iBAAAjsD,KAAAkrD,QAAA15C,IAIA+4C,GAAA35C,IAAAY,EAAAvB,UACA+6C,EAAAiB,iBAAAjsD,KAAAkrD,QAAAX,KAMA,SAAA2B,GAAAlB,EAAAx5C,YAEAA,EAAAvB,SAEA+6C,EAAAmB,iBAAAnsD,KAAAkrD,QAAA15C,IAIA84C,GAAA15C,IAAAY,EAAAvB,UACA+6C,EAAAmB,iBAAAnsD,KAAAkrD,QAAAZ,KAQA,SAAA8B,GAAApB,EAAAx5C,EAAAq5C,GAEA,IAAAwB,EAAAxB,EAAAC,mBACAE,EAAAI,UAAAprD,KAAAkrD,KAAAmB,GACAxB,EAAAyB,aAAA96C,GAAAw4C,GAAAqC,GAIA,SAAAE,GAAAvB,EAAAx5C,EAAAq5C,GAEA,IAAAwB,EAAAxB,EAAAC,mBACAE,EAAAI,UAAAprD,KAAAkrD,KAAAmB,GACAxB,EAAA2B,eAAAh7C,GAAAy4C,GAAAoC,GAMA,SAAAI,GAAAzB,EAAAx5C,GAEAw5C,EAAA0B,WAAA1sD,KAAAkrD,KAAA15C,GAIA,SAAAm7C,GAAA3B,EAAAx5C,GAEAw5C,EAAA4B,WAAA5sD,KAAAkrD,KAAA15C,GAIA,SAAAq7C,GAAA7B,EAAAx5C,GAEAw5C,EAAA8B,WAAA9sD,KAAAkrD,KAAA15C,GAiCA,SAAAu7C,GAAA/B,EAAAx5C,GAEAw5C,EAAAgC,WAAAhtD,KAAAkrD,KAAA15C,GAGA,SAAAy7C,GAAAjC,EAAAx5C,GAEAw5C,EAAAkC,WAAAltD,KAAAkrD,KAAA15C,GAMA,SAAA27C,GAAAnC,EAAAx5C,GAEAw5C,EAAAM,WAAAtrD,KAAAkrD,KAAAV,GAAAh5C,EAAAxR,KAAA8rB,KAAA,IAIA,SAAAshC,GAAApC,EAAAx5C,GAEAw5C,EAAAU,WAAA1rD,KAAAkrD,KAAAV,GAAAh5C,EAAAxR,KAAA8rB,KAAA,IAIA,SAAAuhC,GAAArC,EAAAx5C,GAEAw5C,EAAAY,WAAA5rD,KAAAkrD,KAAAV,GAAAh5C,EAAAxR,KAAA8rB,KAAA,IAMA,SAAAwhC,GAAAtC,EAAAx5C,GAEAw5C,EAAAe,iBAAA/rD,KAAAkrD,QAAAV,GAAAh5C,EAAAxR,KAAA8rB,KAAA,IAIA,SAAAyhC,GAAAvC,EAAAx5C,GAEAw5C,EAAAiB,iBAAAjsD,KAAAkrD,QAAAV,GAAAh5C,EAAAxR,KAAA8rB,KAAA,IAIA,SAAA0hC,GAAAxC,EAAAx5C,GAEAw5C,EAAAmB,iBAAAnsD,KAAAkrD,QAAAV,GAAAh5C,EAAAxR,KAAA8rB,KAAA,KAMA,SAAA2hC,GAAAzC,EAAAx5C,EAAAq5C,GAEA,IAAAltD,EAAA6T,EAAAlP,OACAorD,EAAA9C,GAAAC,EAAAltD,GAEAqtD,EAAAkC,WAAAltD,KAAAkrD,KAAAwC,GAEA,QAAAhxD,EAAA,EAAiBA,IAAAiB,IAASjB,EAE1BmuD,EAAAyB,aAAA96C,EAAA9U,IAAAstD,GAAA0D,EAAAhxD,IAMA,SAAAixD,GAAA3C,EAAAx5C,EAAAq5C,GAEA,IAAAltD,EAAA6T,EAAAlP,OACAorD,EAAA9C,GAAAC,EAAAltD,GAEAqtD,EAAAkC,WAAAltD,KAAAkrD,KAAAwC,GAEA,QAAAhxD,EAAA,EAAiBA,IAAAiB,IAASjB,EAE1BmuD,EAAA2B,eAAAh7C,EAAA9U,IAAAutD,GAAAyD,EAAAhxD,IAmCA,SAAAkxD,GAAA1e,EAAA2e,EAAA3C,GAEAlrD,KAAAkvC,KACAlvC,KAAAkrD,OACAlrD,KAAA8tD,SA/IA,SAAAnpD,GAEA,OA6IAkpD,EAAAlpD,MA3IA,iBAAAomD,GACA,kBAAAM,GACA,kBAAAG,GACA,kBAAAG,GAEA,kBAAAG,GACA,kBAAAE,GACA,kBAAAE,GAEA,6BAAAE,GACA,kBAAAG,GAEA,4BAAApB,GACA,6BAAAsB,GACA,6BAAAE,GACA,6BAAAE,IAnBA,GAqJA,SAAAkB,GAAA7e,EAAA2e,EAAA3C,GAEAlrD,KAAAkvC,KACAlvC,KAAAkrD,OACAlrD,KAAA8rB,KAAA+hC,EAAA/hC,KACA9rB,KAAA8tD,SA1CA,SAAAnpD,GAEA,OAwCAkpD,EAAAlpD,MAtCA,iBAAAooD,GACA,kBAAAI,GACA,kBAAAC,GACA,kBAAAC,GAEA,kBAAAC,GACA,kBAAAC,GACA,kBAAAC,GAEA,kBAAAC,GACA,kBAAAE,GAEA,4BAAAV,GACA,6BAAAR,GACA,6BAAAE,GACA,6BAAAE,IAnBA,GAgDA,SAAAmB,GAAA9e,GAEAlvC,KAAAkvC,KAEAgb,GAAArtD,KAAAmD,MAIAguD,GAAAhwD,UAAA8vD,SAAA,SAAA9C,EAAAttD,GAOA,IAFA,IAAAysD,EAAAnqD,KAAAmqD,IAEAztD,EAAA,EAAAiB,EAAAwsD,EAAA7nD,OAAiC5F,IAAAiB,IAASjB,EAAA,CAE1C,IAAAy8B,EAAAgxB,EAAAztD,GACAy8B,EAAA20B,SAAA9C,EAAAttD,EAAAy7B,EAAA+V,OAUA,IAAA+e,GAAA,2BAWA,SAAAC,GAAAC,EAAAC,GAEAD,EAAAhE,IAAAnlD,KAAAopD,GACAD,EAAA7sD,IAAA8sD,EAAAlf,IAAAkf,EAIA,SAAAC,GAAAR,EAAA3C,EAAAiD,GAEA,IAAAG,EAAAT,EAAA5wD,KACAsxD,EAAAD,EAAAhsD,OAKA,IAFA2rD,GAAAO,UAAA,IAEU,CAEV,IAAAlqD,EAAA2pD,GAAAxqB,KAAA6qB,GACAG,EAAAR,GAAAO,UAEAtf,EAAA5qC,EAAA,GACAoqD,EAAA,MAAApqD,EAAA,GACAqqD,EAAArqD,EAAA,GAIA,GAFAoqD,IAAAxf,GAAA,YAEAyf,GAAA,MAAAA,GAAAF,EAAA,IAAAF,EAAA,CAIAL,GAAAC,WAAAQ,EACA,IAAAf,GAAA1e,EAAA2e,EAAA3C,GACA,IAAA6C,GAAA7e,EAAA2e,EAAA3C,IAEA,MAMA,IAAA0D,EAAAT,EAAA7sD,IAAA4tC,YAEA0f,GAGAV,GAAAC,EADAS,EAAA,IAAAZ,GAAA9e,IAKAif,EAAAS,GAUA,SAAAC,GAAA7D,EAAA8D,EAAAjE,GAEAX,GAAArtD,KAAAmD,MAEAA,KAAA6qD,WAIA,IAFA,IAAAltD,EAAAqtD,EAAA+D,oBAAAD,EAAA9D,EAAAgE,iBAEAtyD,EAAA,EAAiBA,EAAAiB,IAAOjB,EAAA,CAExB,IAAAuyD,EAAAjE,EAAAkE,iBAAAJ,EAAApyD,GAGA2xD,GAAAY,EAFAjE,EAAAmE,mBAAAL,EAAAG,EAAAhyD,MAEA+C,OA4EA,SAAAovD,GAAApE,EAAArmD,EAAA4+B,GAEA,IAAA8rB,EAAArE,EAAAsE,aAAA3qD,GAoBA,OAlBAqmD,EAAAuE,aAAAF,EAAA9rB,GACAynB,EAAAwE,cAAAH,QAEArE,EAAAyE,mBAAAJ,EAAArE,EAAA0E,iBAEA7sD,QAAAtC,MAAA,+CAIA,KAAAyqD,EAAA2E,iBAAAN,IAEAxsD,QAAA6O,KAAA,2CAAA/M,IAAAqmD,EAAA4E,cAAA,oBAAA5E,EAAA2E,iBAAAN,GA7BA,SAAA9rB,GAIA,IAFA,IAAAssB,EAAAtsB,EAAA9hC,MAAA,MAEA/E,EAAA,EAAiBA,EAAAmzD,EAAAvtD,OAAkB5F,IAEnCmzD,EAAAnzD,KAAA,OAAAmzD,EAAAnzD,GAIA,OAAAmzD,EAAAtuD,KAAA,MAVA,CA6BAgiC,IAOA8rB,EA5FAR,GAAA7wD,UAAA8vD,SAAA,SAAA9C,EAAA/tD,EAAAS,GAEA,IAAAy7B,EAAAn5B,KAAAsB,IAAArE,YAEAk8B,KAAA20B,SAAA9C,EAAAttD,EAAAsC,KAAA6qD,WAIAgE,GAAA7wD,UAAA8xD,YAAA,SAAA9E,EAAAltD,EAAAb,GAEA,IAAAuU,EAAA1T,EAAAb,YAEAuU,GAAAxR,KAAA8tD,SAAA9C,EAAA/tD,EAAAuU,IAOAq9C,GAAAkB,OAAA,SAAA/E,EAAAb,EAAAxZ,EAAAka,GAEA,QAAAnuD,EAAA,EAAAiB,EAAAwsD,EAAA7nD,OAAiC5F,IAAAiB,IAASjB,EAAA,CAE1C,IAAAy8B,EAAAgxB,EAAAztD,GACA8U,EAAAm/B,EAAAxX,EAAA+V,SAEA19B,EAAAusC,aAGA5kB,EAAA20B,SAAA9C,EAAAx5C,EAAA9T,MAAAmtD,KAQAgE,GAAAmB,aAAA,SAAA7F,EAAAxZ,GAIA,IAFA,IAAAlzC,KAEAf,EAAA,EAAAiB,EAAAwsD,EAAA7nD,OAAiC5F,IAAAiB,IAASjB,EAAA,CAE1C,IAAAy8B,EAAAgxB,EAAAztD,GACAy8B,EAAA+V,MAAAyB,GAAAlzC,EAAAuH,KAAAm0B,GAIA,OAAA17B,GAoDA,IAAAwyD,GAAA,EAEA,SAAAC,GAAA3pC,GAEA,OAAAA,GAEA,KAAAtZ,GACA,6BACA,KAAAC,GACA,2BACA,KAAAE,GACA,2BACA,KAAAC,GACA,gCACA,KAAAC,GACA,iCACA,KAAAC,GACA,kCACA,KAAAJ,GACA,mDACA,QACA,UAAA3M,MAAA,yBAAA+lB,IAMA,SAAA4pC,GAAAC,EAAA7pC,GAEA,IAAAod,EAAAusB,GAAA3pC,GACA,cAAA6pC,EAAA,2BAAkDzsB,EAAA,cAAAA,EAAA,SAgGlD,SAAA0sB,GAAA9sB,GAEA,WAAAA,EAIA,SAAA+sB,GAAA/sB,EAAA8M,GAEA,OAAA9M,EACA5iC,QAAA,kBAAA0vC,EAAAkgB,cACA5vD,QAAA,mBAAA0vC,EAAAmgB,eACA7vD,QAAA,wBAAA0vC,EAAAogB,mBACA9vD,QAAA,oBAAA0vC,EAAAqgB,gBACA/vD,QAAA,mBAAA0vC,EAAAsgB,eAIA,SAAAC,GAAArtB,EAAA8M,GAEA,OAAA9M,EACA5iC,QAAA,uBAAA0vC,EAAAwgB,mBACAlwD,QAAA,yBAAA0vC,EAAAwgB,kBAAAxgB,EAAAygB,qBAIA,SAAAC,GAAAxtB,GAkBA,OAAAA,EAAA5iC,QAhBA,kCAEA,SAAA2D,EAAA0sD,GAEA,IAAArwD,EAAAkxB,GAAAm/B,GAEA,YAAArwD,EAEA,UAAAH,MAAA,6BAAAwwD,EAAA,KAIA,OAAAD,GAAApwD,KAQA,SAAAswD,GAAA1tB,GAkBA,OAAAA,EAAA5iC,QAhBA,+FAEA,SAAA2D,EAAAorB,EAAAI,EAAAohC,GAIA,IAFA,IAAAC,EAAA,GAEAz0D,EAAAknC,SAAAlU,GAAkChzB,EAAAknC,SAAA9T,GAAqBpzB,IAEvDy0D,GAAAD,EAAAvwD,QAAA,gBAAAjE,EAAA,MAIA,OAAAy0D,IAyeA,SAAAC,GAAAvG,EAAA/I,EAAAuP,GAEA,IAAAC,KAEAC,GACAC,kBAAA,QACAC,qBAAA,eACAC,mBAAA,SACAxQ,kBAAA,QACAyQ,oBAAA,UACAC,kBAAA,QACAC,iBAAA,QACAC,qBAAA,WACAC,qBAAA,WACAC,kBAAA,QACAC,mBAAA,SACAC,eAAA,SACAC,eAAA,UAGAC,GACA,gGACA,6GACA,4CACA,4DACA,oEACA,4DACA,yDACA,oFACA,2EACA,4GAwCA,SAAAC,EAAA/wD,EAAAgxD,GAEA,IAAA/rC,EAwBA,OAtBAjlB,EAIGA,EAAAynB,UAEHxC,EAAAjlB,EAAAilB,SAEGjlB,EAAAspB,sBAEH/nB,QAAA6O,KAAA,6HACA6U,EAAAjlB,EAAAmmB,QAAAlB,UATAA,EAAAtZ,GAcAsZ,IAAAtZ,IAAAqlD,IAEA/rC,EAAApZ,IAIAoZ,EAIAvmB,KAAAuyD,cAAA,SAAAhiB,EAAA9I,EAAA+qB,EAAAprB,EAAAqrB,EAAAC,EAAA50D,GAEA,IAAA60D,EAAApB,EAAAhhB,EAAA5rC,MAKAiuD,EAAA90D,EAAA+0D,cAzEA,SAAA/0D,GAEA,IACAg1D,EAsEAh1D,EAvEAi1D,SACAD,MAEA,GAAAzB,EAAA2B,oBAEA,YAWA,IAAAC,EAAA5B,EAAA6B,kBACAC,EAAA7zD,KAAA4E,OAAA+uD,EAAA,OAEAL,EAAAtzD,KAAAmG,IAAA0tD,EAAAL,EAAAxwD,QAEA,OAAAswD,EAAAE,EAAAxwD,QAEAO,QAAA6O,KAAA,qCAAAohD,EAAAxwD,OAAA,6BAAAswD,EAAA,KACA,GAIAA,EA9BA,GAyEA,EACA9a,EAAAuZ,EAAAvZ,UAEA,OAAAvH,EAAAuH,YAEAA,EAAAuZ,EAAA+B,gBAAA7iB,EAAAuH,cAEAvH,EAAAuH,WAEAj1C,QAAA6O,KAAA,oCAAA6+B,EAAAuH,UAAA,uBAAAA,EAAA,YAMA,IAAAub,EAAAxI,EAAAyI,kBA8EA,OA1EAX,WAEA7a,YACAyb,uBAAAlC,EAAAmC,eACAC,eAAApB,EAAAgB,IAAA5rC,QAAA,KAAAojC,EAAA6I,aACApyD,MAAAivC,EAAAjvC,IACAqyD,YAAAtB,EAAA9hB,EAAAjvC,IAAAupD,EAAA+I,YACAruB,SAAAgL,EAAAhL,OACAsuB,WAAAtjB,EAAAhL,QAAAgL,EAAAhL,OAAAtf,QACA6tC,eAAAzB,EAAA9hB,EAAAhL,OAAAslB,EAAA+I,YACAG,eAAAxjB,EAAAhL,SAAAgL,EAAAhL,OAAAtf,UAAA1c,IAAAgnC,EAAAhL,OAAAtf,UAAAzc,IACAw8B,WAAAuK,EAAAvK,SACAH,QAAA0K,EAAA1K,MACAM,cAAAoK,EAAApK,YACA6tB,oBAAA3B,EAAA9hB,EAAApK,YAAA0kB,EAAA+I,YACAvtB,UAAAkK,EAAAlK,QACAG,YAAA+J,EAAA/J,UACAG,kBAAA4J,EAAA5J,gBACAI,eAAAwJ,EAAAxJ,aACAE,eAAAsJ,EAAAtJ,aACA5B,cAAAkL,EAAAlL,YACAF,WAAAoL,EAAApL,SAEAgC,cAAAoJ,EAAApJ,YAEAga,QAAA5Q,EAAA4Q,QAEAxT,aAAA4C,EAAA5C,aAEAvG,QACA6sB,OAAA1jB,EAAAnJ,IACA8sB,OAAA9sB,KAAA+sB,UAEAxU,YAAApP,EAAAoP,YAEA0D,gBAAA9S,EAAA8S,gBACA+Q,uBAAA/C,EAAA+C,uBAEA5S,SAAAjR,EAAAiR,UAAAoR,EAAA,EACAA,WACAyB,iBAAAhD,EAAA2B,oBAEA/gB,aAAA1B,EAAA0B,aACAC,aAAA3B,EAAA2B,aACAoiB,gBAAAzJ,EAAAyJ,gBACAC,gBAAA1J,EAAA0J,gBAEAhE,aAAA9oB,EAAA+sB,YAAAlyD,OACAouD,eAAAjpB,EAAApb,MAAA/pB,OACAkuD,cAAA/oB,EAAAgtB,KAAAnyD,OACAmuD,kBAAAhpB,EAAAitB,SAAApyD,OACAquD,cAAAlpB,EAAAktB,KAAAryD,OAEAuuD,kBAAA4B,EACA3B,oBAAA4B,EAEA5R,UAAAvQ,EAAAuQ,UAEA8T,iBAAA/J,EAAAgK,UAAA1jB,SAAArzC,EAAAgvC,eAAA0lB,EAAAlwD,OAAA,EACAwyD,cAAAjK,EAAAgK,UAAAlwD,KAEAowD,YAAAlK,EAAAkK,YACAC,wBAAAnK,EAAAmK,wBAEAhU,mBAAAzQ,EAAAyQ,mBAEAD,UAAAxQ,EAAAwQ,UACAkU,YAAA1kB,EAAAmP,OAAAl5C,EACA0uD,UAAA3kB,EAAAmP,OAAAn5C,EAEA4uD,sBAAA5kB,EAAA4kB,cAAA5kB,EAAA4kB,eAQAn1D,KAAAo1D,eAAA,SAAA7kB,EAAAF,GAEA,IAAA9qC,KAaA,GAXA8qC,EAAAsiB,SAEAptD,EAAAP,KAAAqrC,EAAAsiB,WAIAptD,EAAAP,KAAAurC,EAAAjH,gBACA/jC,EAAAP,KAAAurC,EAAAlH,wBAIAkH,EAAAoR,QAEA,QAAA1kD,KAAAszC,EAAAoR,QAEAp8C,EAAAP,KAAA/H,GACAsI,EAAAP,KAAAurC,EAAAoR,QAAA1kD,IAMA,QAAAP,EAAA,EAAkBA,EAAA01D,EAAA9vD,OAA2B5F,IAE7C6I,EAAAP,KAAAqrC,EAAA+hB,EAAA11D,KAQA,OAJA6I,EAAAP,KAAAurC,EAAAyS,gBAAAvkD,YAEA8G,EAAAP,KAAA6lD,EAAA6I,aAEAnuD,EAAAhE,QAIAvB,KAAAq1D,eAAA,SAAA9kB,EAAA8e,EAAAhf,EAAAilB,GAKA,IAHA,IAAAxG,EAGA5wD,EAAA,EAAAq3D,EAAAjE,EAAAhvD,OAAwCpE,EAAAq3D,EAAQr3D,IAAA,CAEhD,IAAAs3D,EAAAlE,EAAApzD,GAEA,GAAAs3D,EAAAF,SAAA,IAEAxG,EAAA0G,GACAC,UAEA,OAaA,gBAPA3G,IAEAA,EAAA,IA3uBA,SAAAjE,EAAA/I,EAAAwT,EAAA/kB,EAAA8e,EAAAhf,GAEA,IAAA2a,EAAAH,EAAA/gC,QAEA63B,EAAApR,EAAAoR,QAEAtY,EAAAgmB,EAAAhmB,aACAC,EAAA+lB,EAAA/lB,eAEAosB,EAAA,uBAEArlB,EAAAykB,gBAAA1uD,EAEAsvD,EAAA,qBAEErlB,EAAAykB,gBAAAzuD,IAEFqvD,EAAA,2BAIA,IAAAC,EAAA,mBACAC,EAAA,yBACAC,EAAA,2BAEA,GAAAxlB,EAAA9K,OAAA,CAEA,OAAAgL,EAAAhL,OAAAtf,SAEA,KAAA/c,GACA,KAAAC,GACAwsD,EAAA,mBACA,MAEA,KAAApsD,GACA,KAAAC,GACAmsD,EAAA,sBACA,MAEA,KAAAvsD,GACA,KAAAC,GACAssD,EAAA,sBACA,MAEA,KAAArsD,GACAqsD,EAAA,qBAKA,OAAAplB,EAAAhL,OAAAtf,SAEA,KAAA9c,GACA,KAAAE,GACAusD,EAAA,yBAKA,OAAArlB,EAAA4Q,SAEA,KAAAz4C,GACAmtD,EAAA,2BACA,MAEA,KAAAltD,GACAktD,EAAA,sBACA,MAEA,KAAAjtD,GACAitD,EAAA,uBAOA,IAcAC,EAAAC,EA5PA3F,EAAA7pC,EAEAod,EA4OAqyB,EAAAnL,EAAA9mB,YAAA,EAAA8mB,EAAA9mB,YAAA,EAMAkyB,EA9MA,SAAAnU,EAAAzR,EAAA6lB,GAWA,QATApU,SAGAC,aAAA1R,EAAA0jB,cAAA1jB,EAAAhK,SAAAgK,EAAA7J,WAAA6J,EAAAsP,YAAA,sDACAmC,EAAAE,WAAA3R,EAAA+jB,yBAAA8B,EAAA14D,IAAA,6DACAskD,EAAAG,aAAAiU,EAAA14D,IAAA,qEACAskD,EAAAI,kBAAA7R,EAAA9K,SAAA2wB,EAAA14D,IAAA,8EAGA24D,OAAA9F,IAAA9uD,KAAA,MAXA,CA8MAgvC,EAAAuR,WAAAzR,EAAAyR,GAEAsU,EAjMA,SAAAzU,GAEA,IAAA0U,KAEA,QAAAp5D,KAAA0kD,EAAA,CAEA,IAAAjkD,EAAAikD,EAAA1kD,QAEAS,GAEA24D,EAAArxD,KAAA,WAAA/H,EAAA,IAAAS,GAIA,OAAA24D,EAAA90D,KAAA,MAdA,CAiMAogD,GAIAmN,EAAA9D,EAAAsL,gBAIA/lB,EAAAgmB,sBAEAT,GAEAM,GAEAD,OAAA9F,IAAA9uD,KAAA,OAEAe,OAAA,IAEAwzD,GAAA,OAIAC,GAEAE,EACAG,GAEAD,OAAA9F,IAAA9uD,KAAA,OAEAe,OAAA,IAEAyzD,GAAA,QAMAD,GAEA,aAAAzlB,EAAAyH,UAAA,UACA,aAAAzH,EAAAyH,UAAA,QAEA,uBAAAuX,EAAApyD,KAEAm5D,EAEA/lB,EAAAkjB,uBAAA,6BAEA,wBAAAyC,EAEA,qBAAA3lB,EAAAuiB,SACAviB,EAAA4jB,QAAA5jB,EAAAjJ,IAAA,qBACAiJ,EAAA4jB,QAAA5jB,EAAA6jB,OAAA,sBAEA7jB,EAAA/uC,IAAA,qBACA+uC,EAAA9K,OAAA,wBACA8K,EAAA9K,OAAA,WAAAqwB,EAAA,GACAvlB,EAAArK,SAAA,0BACAqK,EAAAxK,MAAA,uBACAwK,EAAAlK,YAAA,6BACAkK,EAAAhK,QAAA,yBACAgK,EAAA7J,UAAA,2BACA6J,EAAA1J,iBAAA0J,EAAAkjB,uBAAA,iCACAljB,EAAAhL,YAAA,6BACAgL,EAAAtJ,aAAA,8BACAsJ,EAAApJ,aAAA,8BACAoJ,EAAAlL,SAAA,0BACAkL,EAAA1C,aAAA,uBAEA0C,EAAAsP,YAAA,yBAEAtP,EAAAmR,SAAA,0BACAnR,EAAAgkB,iBAAA,0BAEAhkB,EAAA4B,aAAA,8BACA5B,EAAA6B,mBAAA7B,EAAAsP,YAAA,8BACAtP,EAAA4kB,YAAA,0BACA5kB,EAAA6kB,UAAA,wBAEA7kB,EAAAukB,iBAAA,2BACAvkB,EAAAukB,iBAAA,WAAAc,EAAA,GAEArlB,EAAAgT,gBAAA,iCAEAhT,EAAA+jB,uBAAA,6BACA/jB,EAAA+jB,wBAAAtS,EAAAtkD,IAAA,mDAEA,4BACA,gCACA,iCACA,2BACA,6BACA,+BAEA,2BACA,yBACA,qBAEA,mBAEA,0BAEA,SAEA,0BAEA,iCACA,iCACA,iCACA,iCAEA,4BAEA,mCACA,mCACA,mCACA,mCAEA,UAEA,mCACA,mCACA,mCACA,mCAEA,WAEA,SAEA,sBAEA,8BACA,+BAEA,SAEA,MAEA24D,OAAA9F,IAAA9uD,KAAA,MAEAw0D,GAEAE,EAEA,aAAA5lB,EAAAyH,UAAA,UACA,aAAAzH,EAAAyH,UAAA,QAEA,uBAAAuX,EAAApyD,KAEAm5D,EAEA/lB,EAAA0Q,UAAA,qBAAA1Q,EAAA0Q,UAAA,GAEA,wBAAAiV,EAEA3lB,EAAA4jB,QAAA5jB,EAAAjJ,IAAA,qBACAiJ,EAAA4jB,QAAA5jB,EAAA6jB,OAAA,sBAEA7jB,EAAA/uC,IAAA,qBACA+uC,EAAA9K,OAAA,wBACA8K,EAAA9K,OAAA,WAAAowB,EAAA,GACAtlB,EAAA9K,OAAA,WAAAqwB,EAAA,GACAvlB,EAAA9K,OAAA,WAAAswB,EAAA,GACAxlB,EAAArK,SAAA,0BACAqK,EAAAxK,MAAA,uBACAwK,EAAAlK,YAAA,6BACAkK,EAAAhK,QAAA,yBACAgK,EAAA7J,UAAA,2BACA6J,EAAAhL,YAAA,6BACAgL,EAAAtJ,aAAA,8BACAsJ,EAAApJ,aAAA,8BACAoJ,EAAAlL,SAAA,0BACAkL,EAAA1C,aAAA,uBAEA0C,EAAAlJ,YAAA,6BAEAkJ,EAAAsP,YAAA,yBAEAtP,EAAA4kB,YAAA,0BACA5kB,EAAA6kB,UAAA,wBAEA7kB,EAAAukB,iBAAA,2BACAvkB,EAAAukB,iBAAA,WAAAc,EAAA,GAEArlB,EAAA2Q,mBAAA,iCAEA3Q,EAAA2kB,wBAAA,uCAEA3kB,EAAA+jB,uBAAA,6BACA/jB,EAAA+jB,wBAAAtS,EAAAtkD,IAAA,mDAEA6yC,EAAA9K,QAAAuc,EAAAtkD,IAAA,uDAEA,2BACA,+BAEA6yC,EAAA0kB,cAAAlsD,GAAA,0BACAwnC,EAAA0kB,cAAAlsD,GAAAgpB,GAAAkF,0BAAA,GACAsZ,EAAA0kB,cAAAlsD,GArbA,SAAAunD,EAAA2E,GAEA,IAAAyB,EAEA,OAAAzB,GAEA,KAAAjsD,GACA0tD,EAAA,SACA,MAEA,KAAAztD,GACAytD,EAAA,WACA,MAEA,KAAAxtD,GACAwtD,EAAA,aACA,MAEA,KAAAvtD,GACAutD,EAAA,kBACA,MAEA,QACA,UAAAh2D,MAAA,4BAAAu0D,GAIA,iDAAkDyB,EAAA,0BA3BlD,CAqbA,EAAAnmB,EAAA0kB,aAAA,GAEA1kB,EAAAyQ,UAAA,uBAEAzQ,EAAAojB,gBAAApjB,EAAAsjB,aAAAtjB,EAAAyjB,gBAAAzjB,EAAA2jB,oBAAAniC,GAAA0B,wBAAA,GACA8c,EAAAsjB,YAAAxD,GAAA,mBAAA9f,EAAAsjB,aAAA,GACAtjB,EAAAyjB,eAAA3D,GAAA,sBAAA9f,EAAAyjB,gBAAA,GACAzjB,EAAA2jB,oBAAA7D,GAAA,2BAAA9f,EAAA2jB,qBAAA,GACA3jB,EAAAojB,gBApcArD,EAocA,sBApcA7pC,EAocA8pB,EAAAojB,eAlcA9vB,EAAAusB,GAAA3pC,GACA,QAAA6pC,EAAA,mCAAkDzsB,EAAA,GAAAA,EAAA,UAiclD,GAEA0M,EAAA8kB,aAAA,yBAAA5kB,EAAA4kB,aAAA,GAEA,MAEAgB,OAAA9F,IAAA9uD,KAAA,OAMA8nC,EAAAunB,GADAvnB,EAAAinB,GADAjnB,EAAA0nB,GAAA1nB,GACAgH,GACAA,GAIA/G,EAAAsnB,GADAtnB,EAAAgnB,GADAhnB,EAAAynB,GAAAznB,GACA+G,GACAA,GAKA,IAAAomB,EAAAX,GAHAzsB,EAAA4nB,GAAA5nB,IAIAqtB,EAAAX,GAHAzsB,EAAA2nB,GAAA3nB,IAQAqtB,EAAAvH,GAAApE,IAAA4E,cAAA6G,GACAG,EAAAxH,GAAApE,IAAA6L,gBAAAH,GAEA1L,EAAA8L,aAAAhI,EAAA6H,GACA3L,EAAA8L,aAAAhI,EAAA8H,YAIArmB,EAAA6R,oBAEA4I,EAAA+L,mBAAAjI,EAAA,EAAAve,EAAA6R,0BAEE/R,EAAA4B,cAGF+Y,EAAA+L,mBAAAjI,EAAA,cAIA9D,EAAAgM,YAAAlI,GAEA,IA4DAmI,EAgBAC,EA5EAC,EAAAnM,EAAAoM,kBAAAtI,GAAAuI,OACAC,EAAAtM,EAAA2E,iBAAAgH,GAAAU,OACAE,EAAAvM,EAAA2E,iBAAAiH,GAAAS,OAEAG,KACAC,KAiIA,WA5HAzM,EAAA+D,oBAAAD,EAAA9D,EAAA0M,cAEAF,KAEA30D,QAAAtC,MAAA,qCAAAyqD,EAAA2M,WAAA,qBAAA3M,EAAA+D,oBAAAD,EAAA9D,EAAA4M,iBAAA,uBAAAT,EAAAG,EAAAC,IAEE,KAAAJ,EAEFt0D,QAAA6O,KAAA,6CAAAylD,GAEE,KAAAG,GAAA,KAAAC,IAEFE,MAIAA,IAEAz3D,KAAA63D,aAEAL,WACAjnB,WAEA4mB,aAEA9tB,cAEAz5B,IAAA0nD,EACAQ,OAAAhC,GAIAxsB,gBAEA15B,IAAA2nD,EACAO,OAAA/B,KAUA/K,EAAA+M,aAAApB,GACA3L,EAAA+M,aAAAnB,GAMA52D,KAAAg4D,YAAA,WAQA,gBANAf,IAEAA,EAAA,IAAApI,GAAA7D,EAAA8D,EAAAjE,IAIAoM,GAQAj3D,KAAAi4D,cAAA,WAQA,gBANAf,IAEAA,EA/fA,SAAAlM,EAAA8D,GAMA,IAJA,IAAA/hC,KAEApvB,EAAAqtD,EAAA+D,oBAAAD,EAAA9D,EAAAkN,mBAEAx7D,EAAA,EAAiBA,EAAAiB,EAAOjB,IAAA,CAExB,IACAO,EADA+tD,EAAAmN,gBAAArJ,EAAApyD,GACAO,KAIA8vB,EAAA9vB,GAAA+tD,EAAAoN,kBAAAtJ,EAAA7xD,GAIA,OAAA8vB,EAjBA,CA+fAi+B,EAAA8D,IAIAoI,GAMAl3D,KAAAq4D,QAAA,WAEArN,EAAAsN,cAAAxJ,GACA9uD,KAAA8uD,gBAMA1xD,OAAAsT,iBAAA1Q,MAEAi5B,UACAz7B,IAAA,WAGA,OADAqF,QAAA6O,KAAA,wDACA1R,KAAAg4D,gBAKAjrC,YACAvvB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,4DACA1R,KAAAi4D,oBAUAj4D,KAAA/C,KAAAoyD,EAAApyD,KACA+C,KAAAkvC,GAAA+gB,KACAjwD,KAAAs1D,OACAt1D,KAAAy1D,UAAA,EACAz1D,KAAA8uD,UACA9uD,KAAAqpC,aAAAstB,EACA32D,KAAAspC,eAAAstB,EAEA52D,KAkRA,CAAA6qD,EAAA/I,EAAAwT,EAAA/kB,EAAA8e,EAAAhf,GACAihB,EAAAtsD,KAAA8pD,IAIAA,GAIA9uD,KAAAu4D,eAAA,SAAAzJ,GAEA,QAAAA,EAAA2G,UAAA,CAGA,IAAA/4D,EAAA40D,EAAAvsD,QAAA+pD,GACAwC,EAAA50D,GAAA40D,IAAAhvD,OAAA,GACAgvD,EAAAkH,MAGA1J,EAAAuJ,YAOAr4D,KAAAsxD,WA0DA,SAAAmH,GAAAr4D,EAAAC,GAEA,OAAAD,EAAA4sC,cAAA3sC,EAAA2sC,YAEA5sC,EAAA4sC,YAAA3sC,EAAA2sC,YAEE5sC,EAAA0uD,SAAAzuD,EAAAyuD,SAAA1uD,EAAA0uD,UAAAzuD,EAAAyuD,QAEF1uD,EAAA0uD,QAAA5f,GAAA7uC,EAAAyuD,QAAA5f,GAEE9uC,EAAAmwC,SAAArB,KAAA7uC,EAAAkwC,SAAArB,GAEF9uC,EAAAmwC,SAAArB,GAAA7uC,EAAAkwC,SAAArB,GAEE9uC,EAAA0F,IAAAzF,EAAAyF,EAEF1F,EAAA0F,EAAAzF,EAAAyF,EAIA1F,EAAA8uC,GAAA7uC,EAAA6uC,GAMA,SAAAwpB,GAAAt4D,EAAAC,GAEA,OAAAD,EAAA4sC,cAAA3sC,EAAA2sC,YAEA5sC,EAAA4sC,YAAA3sC,EAAA2sC,YAEE5sC,EAAA0F,IAAAzF,EAAAyF,EAEFzF,EAAAyF,EAAA1F,EAAA0F,EAIA1F,EAAA8uC,GAAA7uC,EAAA6uC,GAoNA,IAw2MAypB,GACAC,GACAC,GAuIAC,GAuMAC,GACAC,GA0WAtpC,GACAI,GApiOAjV,GAAA,EAmSA,SAAAo+C,KAEA,IAAAC,KAyBA,OACA17D,IAxBA,SAAA27D,EAAAl2C,GAEA,IAAAo2B,EAAA8f,EAAAjqB,GAAA,IAAAjsB,EAAAisB,GAEAkqB,EAAAF,EAAA7f,GASA,gBAPA+f,IAEAA,EAAA,IAxEA,WAEA,IAAA3xB,EAAA,IAvOA,WAEA,IAAAiJ,EAAA,IAjGA,WAEA,IAAAjJ,KAEA,OAEAjqC,IAAA,SAAA67D,GAEA,YAAA5xB,EAAA4xB,EAAAnqB,IAEA,OAAAzH,EAAA4xB,EAAAnqB,IAIA,IAAAjW,EAEA,OAAAogC,EAAA10D,MAEA,uBACAs0B,GACA1J,UAAA,IAAA/e,GACAkzB,MAAA,IAAAZ,GAEA+E,UACAC,WAAA,EACAC,aAAA,EACAC,cAAA,IAAAj4B,IAEA,MAEA,gBACAkpB,GACAlc,SAAA,IAAAvM,GACA+e,UAAA,IAAA/e,GACAkzB,MAAA,IAAAZ,GACAsF,SAAA,EACAC,QAAA,EACAC,YAAA,EACAC,MAAA,EAEAV,UACAC,WAAA,EACAC,aAAA,EACAC,cAAA,IAAAj4B,IAEA,MAEA,iBACAkpB,GACAlc,SAAA,IAAAvM,GACAkzB,MAAA,IAAAZ,GACAsF,SAAA,EACAG,MAAA,EAEAV,UACAC,WAAA,EACAC,aAAA,EACAC,cAAA,IAAAj4B,GACA44B,iBAAA,EACAC,gBAAA,KAEA,MAEA,sBACA3P,GACA1J,UAAA,IAAA/e,GACAw4B,SAAA,IAAAlG,GACAmG,YAAA,IAAAnG,IAEA,MAEA,oBACA7J,GACAyK,MAAA,IAAAZ,GACA/lB,SAAA,IAAAvM,GACA8oD,UAAA,IAAA9oD,GACA+oD,WAAA,IAAA/oD,IASA,OAFAi3B,EAAA4xB,EAAAnqB,IAAAjW,EAEAA,KAcAugC,GAEAtqB,GAAAr0B,KAEAw+B,KAAA,GAEAogB,SAAA,OACAjF,eACAvsB,wBACAC,2BACAusB,QACAjsB,iBACAC,oBACAisB,YACAroC,SACAwc,kBACAC,qBACA6rB,SAIA+E,EAAA,IAAAlpD,GACAwU,EAAA,IAAAhV,GACA2pD,EAAA,IAAA3pD,GA+LA,OACA4pD,MA9LA,SAAAnyB,EAAA+qB,EAAAvvC,GAYA,IAVA,IAAAxlB,EAAA,EAAAqnB,EAAA,EAAAzkB,EAAA,EAEAw5D,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAAj3C,EAAAkqB,mBAEAzwC,EAAA,EAAAC,EAAA8qC,EAAAnlC,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAA28D,EAAA5xB,EAAA/qC,GAEAgnC,EAAA21B,EAAA31B,MACAy2B,EAAAd,EAAAc,UACA/xB,EAAAixB,EAAAjxB,SAEAysB,EAAAwE,EAAAxxB,QAAAwxB,EAAAxxB,OAAAvmC,IAAA+3D,EAAAxxB,OAAAvmC,IAAAmmB,QAAA,KAEA,GAAA4xC,EAAAe,eAEA38D,GAAAimC,EAAAjmC,EAAA08D,EACAr1C,GAAA4e,EAAA5e,EAAAq1C,EACA95D,GAAAqjC,EAAArjC,EAAA85D,OAEI,GAAAd,EAAAgB,mBAAA,CAYJ,IAVAphC,EAAAyX,EAAAlzC,IAAA67D,IAEA31B,MAAAnyB,KAAA8nD,EAAA31B,OAAAxxB,eAAAmnD,EAAAc,WACAlhC,EAAA1J,UAAA7K,sBAAA20C,EAAAl2C,aACAu2C,EAAAh1C,sBAAA20C,EAAAv3D,OAAAqhB,aACA8V,EAAA1J,UAAAzd,IAAA4nD,GACAzgC,EAAA1J,UAAAlM,mBAAA62C,GAEAjhC,EAAA4O,OAAAwxB,EAAAxsB,WAEAwsB,EAAAxsB,WAAA,CAEA,IAAAhF,EAAAwxB,EAAAxxB,OAEA5O,EAAA6O,WAAAD,EAAAyyB,KACArhC,EAAA8O,aAAAF,EAAArjB,OACAyU,EAAA+O,cAAAH,EAAA0yB,QAIAf,EAAAvxB,qBAAA4xB,GAAAhF,EACA2E,EAAAtxB,wBAAA2xB,GAAAR,EAAAxxB,OAAAjiC,OACA4zD,EAAAhF,YAAAqF,GAAA5gC,EAEA4gC,SAEI,GAAAR,EAAAmB,aAEJvhC,EAAAyX,EAAAlzC,IAAA67D,IAEAt8C,SAAA2H,sBAAA20C,EAAAl2C,aACA8V,EAAAlc,SAAAhC,aAAAm/C,GAEAjhC,EAAAyK,MAAAnyB,KAAAmyB,GAAAxxB,eAAAioD,GACAlhC,EAAAmP,WAEAnP,EAAA1J,UAAA7K,sBAAA20C,EAAAl2C,aACAu2C,EAAAh1C,sBAAA20C,EAAAv3D,OAAAqhB,aACA8V,EAAA1J,UAAAzd,IAAA4nD,GACAzgC,EAAA1J,UAAAlM,mBAAA62C,GAEAjhC,EAAAoP,QAAA/oC,KAAAiV,IAAA8kD,EAAAlmD,OACA8lB,EAAAqP,YAAAhpC,KAAAiV,IAAA8kD,EAAAlmD,OAAA,EAAAkmD,EAAAoB,WACAxhC,EAAAsP,MAAA,IAAA8wB,EAAAjxB,SAAA,EAAAixB,EAAA9wB,MAEAtP,EAAA4O,OAAAwxB,EAAAxsB,WAEAwsB,EAAAxsB,aAEAhF,EAAAwxB,EAAAxxB,OAEA5O,EAAA6O,WAAAD,EAAAyyB,KACArhC,EAAA8O,aAAAF,EAAArjB,OACAyU,EAAA+O,cAAAH,EAAA0yB,SAIAf,EAAAhxB,cAAAuxB,GAAAlF,EACA2E,EAAA/wB,iBAAAsxB,GAAAV,EAAAxxB,OAAAjiC,OACA4zD,EAAA/E,KAAAsF,GAAA9gC,EAEA8gC,SAEI,GAAAV,EAAAqB,iBAEJzhC,EAAAyX,EAAAlzC,IAAA67D,IAMA31B,MAAAnyB,KAAAmyB,GAAAxxB,eAAAioD,GAEAlhC,EAAAlc,SAAA2H,sBAAA20C,EAAAl2C,aACA8V,EAAAlc,SAAAhC,aAAAm/C,GAGAP,EAAAhkD,WACAqP,EAAAzT,KAAA8nD,EAAAl2C,aACA6B,EAAArM,YAAAuhD,GACAP,EAAAvjD,gBAAA4O,GAEAiU,EAAAqgC,UAAA1oD,IAAA,GAAAyoD,EAAA1oD,MAAA,KACAsoB,EAAAsgC,WAAA3oD,IAAA,KAAAyoD,EAAAxoD,OAAA,GAEAooB,EAAAqgC,UAAAv+C,aAAA4+C,GACA1gC,EAAAsgC,WAAAx+C,aAAA4+C,GAKAH,EAAA9E,SAAAsF,GAAA/gC,EAEA+gC,SAEI,GAAAX,EAAAsB,cAEJ1hC,EAAAyX,EAAAlzC,IAAA67D,IAEAt8C,SAAA2H,sBAAA20C,EAAAl2C,aACA8V,EAAAlc,SAAAhC,aAAAm/C,GAEAjhC,EAAAyK,MAAAnyB,KAAA8nD,EAAA31B,OAAAxxB,eAAAmnD,EAAAc,WACAlhC,EAAAmP,SAAAixB,EAAAjxB,SACAnP,EAAAsP,MAAA,IAAA8wB,EAAAjxB,SAAA,EAAAixB,EAAA9wB,MAEAtP,EAAA4O,OAAAwxB,EAAAxsB,WAEAwsB,EAAAxsB,aAEAhF,EAAAwxB,EAAAxxB,OAEA5O,EAAA6O,WAAAD,EAAAyyB,KACArhC,EAAA8O,aAAAF,EAAArjB,OACAyU,EAAA+O,cAAAH,EAAA0yB,QACAthC,EAAA0P,iBAAAd,EAAA5kB,OAAApF,KACAob,EAAA2P,gBAAAf,EAAA5kB,OAAAnF,KAIA07C,EAAA3wB,eAAAixB,GAAAjF,EACA2E,EAAA1wB,kBAAAgxB,GAAAT,EAAAxxB,OAAAjiC,OACA4zD,EAAAntC,MAAAytC,GAAA7gC,EAEA6gC,SAEI,GAAAT,EAAAuB,kBAAA,CAEJ,IAAA3hC,KAAAyX,EAAAlzC,IAAA67D,IAEA9pC,UAAA7K,sBAAA20C,EAAAl2C,aACA8V,EAAA1J,UAAAlM,mBAAA62C,GACAjhC,EAAA1J,UAAArc,YAEA+lB,EAAA+P,SAAAz3B,KAAA8nD,EAAA31B,OAAAxxB,eAAAioD,GACAlhC,EAAAgQ,YAAA13B,KAAA8nD,EAAApwB,aAAA/2B,eAAAioD,GAEAX,EAAA7E,KAAAsF,GAAAhhC,EAEAghC,KAMAT,EAAAC,QAAA,GAAAh8D,EACA+7D,EAAAC,QAAA,GAAA30C,EACA00C,EAAAC,QAAA,GAAAp5D,EAEAm5D,EAAAhF,YAAAlyD,OAAAu3D,EACAL,EAAA/E,KAAAnyD,OAAAy3D,EACAP,EAAA9E,SAAApyD,OAAA03D,EACAR,EAAAntC,MAAA/pB,OAAAw3D,EACAN,EAAA7E,KAAAryD,OAAA23D,EAEAT,EAAAngB,KAAAmgB,EAAAtqB,GAAA,IAAA2qB,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAAzH,EAAAlwD,QAMAk3D,UAaAqB,KACAC,KACAC,KA0CA,OACAC,KAzCA,WAEAH,EAAAv4D,OAAA,EACAw4D,EAAAx4D,OAAA,EACAy4D,EAAAz4D,OAAA,GAsCAk3D,OATAqB,cACAC,eACAC,eAEAtzB,UAMAwzB,YAjBA,SAAAh4C,GAEAwkB,EAAAmyB,MAAAiB,EAAAC,EAAA73C,IAiBAi4C,UArCA,SAAA7B,GAEAwB,EAAA71D,KAAAq0D,IAoCA8B,WAhCA,SAAAC,GAEAN,EAAA91D,KAAAo2D,IA+BAC,WA3BA,SAAAD,GAEAL,EAAA/1D,KAAAo2D,MA2CAlC,EAAA7f,GAAA+f,GAIAA,GAYAhvC,QARA,WAEA8uC,OAkCA,SAAA1H,GAAAnhB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAAm1D,aAAA3nD,GAEAxN,KAAAwhD,YACAxhD,KAAAiyC,gBAEAjyC,KAAAsB,IAAA,KAEAtB,KAAAmlC,SAAA,KAEAnlC,KAAA2mC,gBAAA,KACA3mC,KAAA4mC,kBAAA,EACA5mC,KAAA6mC,iBAAA,EAEA7mC,KAAAohD,aACAphD,KAAAqhD,mBAAA,EAEArhD,KAAAonC,OACApnC,KAAAynC,UAEAznC,KAAAyhD,UAAApR,GAwDA,SAAAohB,GAAAphB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,uBAEA3E,KAAA0qC,kBAAA,IAAAl6B,GACAxQ,KAAA2qC,aAAA,EACA3qC,KAAA4qC,YAAA,IAEA5qC,KAAAwhD,YACAxhD,KAAAiyC,gBAEAjyC,KAAAsB,IAAA,KAEAtB,KAAAmlC,SAAA,KAEAnlC,KAAA2mC,gBAAA,KACA3mC,KAAA4mC,kBAAA,EACA5mC,KAAA6mC,iBAAA,EAEA7mC,KAAAonC,OACApnC,KAAAynC,UAEAznC,KAAAyhD,UAAApR,GAqCA,SAAAirB,GAAAC,EAAAC,EAAAC,GAwCA,IAtCA,IAAAC,EAAA,IAAAlzC,GACAmzC,EAAA,IAAA3rD,GAEA4rD,EAAA,IAAA7rD,GACA8rD,EAAA,IAAA9rD,GAAA0rD,KAEAK,EAAA,IAAAtrD,GACAurD,EAAA,IAAAvrD,GAEAwrD,EAAA,EACAC,EAAA,EAEAC,EAAA,GAAAF,EAAAC,GAEAE,EAAA,IAAA98D,MAAA68D,GACAE,EAAA,IAAA/8D,MAAA68D,GAEAG,KAEA5b,GAAmB6b,EAAA/1D,EAAAg2D,EAAAj2D,EAAAk2D,EAAAh2D,GAEnBi2D,GACA,IAAAjsD,GAAA,WAAAA,IAAA,WAAAA,GAAA,OACA,IAAAA,GAAA,YAAAA,GAAA,WAAAA,GAAA,SAGAksD,GACA,IAAAlsD,GAAA,WAAAA,GAAA,WAAAA,GAAA,OACA,IAAAA,GAAA,WAAAA,GAAA,WAAAA,GAAA,SAGAmsD,GACA,IAAAx1C,GAAA,IAAAA,GAAA,IAAAA,GACA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,IAKAzqB,EAAA,EAAiBA,IAAAw/D,IAAiCx/D,EAAA,CAElD,IAAAkgE,EAAA,IAAAlgE,EAAAs/D,GACAa,EAAA,IAAAngE,EAAAu/D,GAEAa,EAAA,IAAAtL,IAEA2D,aAAA1nD,GAEAwkC,aAAA2qB,EACApb,SAAAqb,IAIAV,EAAAz/D,GAAAogE,EAIA,IAAAC,EAAA,IAAAtL,IAEAxf,aAAA2qB,EACApb,SAAAqb,IAIAT,EAAA1/D,GAAAqgE,EAMA,IAAAvwC,EAAAxsB,KAgLA,SAAAg9D,EAAAl/D,EAAAyyC,EAAAoqB,EAAAsC,EAAAt0B,EAAAC,GAEA,IAAAjc,EAAA7uB,EAAA6uB,SAEAuwC,EAAA,KAEAC,EAAAhB,EACAiB,EAAAt/D,EAAAu/D,oBASA,GAPA1C,IAEAwC,EAAAf,EACAgB,EAAAt/D,EAAAw/D,wBAIAF,EAmCAF,EAAAE,MAnCA,CAEA,IAAAR,KAEArsB,EAAA0B,eAEAtlB,KAAAG,iBAEA8vC,EAAAjwC,EAAA8uB,iBAAA9uB,EAAA8uB,gBAAA1+B,UAAA4P,EAAA8uB,gBAAA1+B,SAAAza,OAAA,EAEKqqB,KAAAC,aAELgwC,EAAAjwC,EAAAslB,cAAAtlB,EAAAslB,aAAA3vC,OAAA,IAMAxE,EAAA+0D,oBAAAtiB,EAAAiR,UAEA3+C,QAAA6O,KAAA,+EAAA5T,GAIA,IAAA++D,EAAA/+D,EAAA+0D,eAAAtiB,EAAAiR,SAEA+b,EAAA,EAEAX,IAAAW,GAAAvB,GACAa,IAAAU,GAAAtB,GAEAiB,EAAAC,EAAAI,GAQA,GAAAhC,EAAAiC,2BACAjtB,EAAAiQ,aACA,IAAAjQ,EAAA+P,eAAAh+C,OAAA,CAKA,IAAAm7D,EAAAP,EAAAx6D,KAAAg7D,EAAAntB,EAAA7tC,KAEAi7D,EAAAtB,EAAAoB,YAEAE,IAEAA,KACAtB,EAAAoB,GAAAE,GAIA,IAAAC,EAAAD,EAAAD,YAEAE,IAEAA,EAAAV,EAAA7rD,QACAssD,EAAAD,GAAAE,GAIAV,EAAAU,EAwBA,OApBAV,EAAAtwB,QAAA2D,EAAA3D,QACAswB,EAAA9b,UAAA7Q,EAAA6Q,UAEA8b,EAAAxd,KAAA,MAAAnP,EAAAkQ,WAAAlQ,EAAAkQ,aAAAlQ,EAAAmP,MAEAwd,EAAA1c,YAAAjQ,EAAAiQ,YACA0c,EAAA5c,eAAA/P,EAAA+P,eACA4c,EAAA3c,iBAAAhQ,EAAAgQ,iBAEA2c,EAAA7b,mBAAA9Q,EAAA8Q,mBACA6b,EAAAtb,UAAArR,EAAAqR,UAEA+Y,GAAAuC,EAAAW,yBAEAX,EAAAxyB,kBAAAn5B,KAAA0rD,GACAC,EAAAvyB,aAAAhC,EACAu0B,EAAAtyB,YAAAhC,GAIAs0B,EAIA,SAAAY,EAAAhgE,EAAAmlB,EAAA86C,EAAApD,GAEA,QAAA78D,EAAA8uC,QAAA,CAIA,GAFA9uC,EAAAouC,OAAAD,KAAAhpB,EAAAipB,UAEApuC,EAAA25C,QAAA35C,EAAAmgD,QAAAngD,EAAAkgD,WAEAlgD,EAAA+uC,cAAA/uC,EAAAivC,eAAA2uB,EAAApqC,iBAAAxzB,IAAA,CAEAA,EAAA2uC,gBAAA/zB,iBAAAqlD,EAAA5wB,mBAAArvC,EAAAqlB,aAEA,IAAAwJ,EAAA6uC,EAAA97C,OAAA5hB,GACAyyC,EAAAzyC,EAAAyyC,SAEA,GAAAlxC,MAAAm6B,QAAA+W,GAIA,IAFA,IAAAiE,EAAA7nB,EAAA6nB,OAEA8E,EAAA,EAAAC,EAAA/E,EAAAlyC,OAAyCg3C,EAAAC,EAAQD,IAAA,CAEjD,IAAAjE,EAAAb,EAAA8E,GACA0kB,EAAAztB,EAAA8E,EAAA5H,eAEA,GAAAuwB,KAAApxB,QAAA,CAEA,IAAAkwB,EAAAE,EAAAl/D,EAAAkgE,EAAArD,EAAAoB,EAAAgC,EAAAlgD,KAAAkgD,EAAAjgD,KACAy9C,EAAA0C,mBAAAF,EAAA,KAAApxC,EAAAmwC,EAAAh/D,EAAAu3C,SAMK9E,EAAA3D,UAELkwB,EAAAE,EAAAl/D,EAAAyyC,EAAAoqB,EAAAoB,EAAAgC,EAAAlgD,KAAAkgD,EAAAjgD,KACAy9C,EAAA0C,mBAAAF,EAAA,KAAApxC,EAAAmwC,EAAAh/D,EAAA,OAUA,IAFA,IAAAyuC,EAAAzuC,EAAAyuC,SAEA7vC,EAAA,EAAAC,EAAA4vC,EAAAjqC,OAAuC5F,EAAAC,EAAOD,IAE9CohE,EAAAvxB,EAAA7vC,GAAAumB,EAAA86C,EAAApD,IA5UA36D,KAAAmxC,WAEAnxC,KAAAk+D,cACAl+D,KAAA+9C,eAEA/9C,KAAA2E,KAAAyB,EAEApG,KAAAm+D,OAAA,SAAA12B,EAAA0xB,EAAAl2C,GAEA,QAAAuJ,EAAA2kB,eACA3kB,EAAA0xC,iBAAA1xC,EAAAuxB,cAEA,IAAAtW,EAAAnlC,OAAA,CAGA,IAWA87D,EAXAC,EAAA9C,EAAAzxC,QACAw0C,EAAA/C,EAAA/B,MAGA8E,EAAAtyB,QAAAqyB,EAAAE,OACAD,EAAAE,QAAA96B,MAAA+6B,SAAA,SACAH,EAAAE,QAAAr0B,MAAAu0B,YACAJ,EAAAK,mBAMA,QAAAjiE,EAAA,EAAAivB,EAAA8b,EAAAnlC,OAAsC5F,EAAAivB,EAAQjvB,IAAA,CAE9C,IAAA28D,EAAA5xB,EAAA/qC,GACAmrC,EAAAwxB,EAAAxxB,OACA8yB,EAAAtB,KAAAsB,aAEA,YAAA9yB,EAAA,CAOA,IAAAk2B,EAAAl2B,EAAA5kB,OAKA,GAHA24C,EAAArqD,KAAAs2B,EAAA0yB,SACAqB,EAAAn2D,IAAAo2D,GAEAlB,EAAA,CAEA,IAAAiE,EAAAhD,EAAAx3D,EACAy6D,EAAAjD,EAAA/1D,EAgBA82D,EAAA,GAAA/rD,IAAA,EAAAguD,EAAAC,EAAAD,EAAAC,GAEAlC,EAAA,GAAA/rD,IAAA,EAAAiuD,EAAAD,EAAAC,GAEAlC,EAAA,GAAA/rD,IAAA,EAAAguD,EAAAC,EAAAD,EAAAC,GAEAlC,EAAA,GAAA/rD,IAAAguD,EAAAC,EAAAD,EAAAC,GAEAlC,EAAA,GAAA/rD,IAAA,EAAAguD,EAAA,EAAAA,EAAAC,GAEAlC,EAAA,GAAA/rD,IAAAguD,EAAA,EAAAA,EAAAC,GAEAjD,EAAAx3D,GAAA,EACAw3D,EAAA/1D,GAAA,EAIA,UAAAgiC,EAAAvmC,IAAA,CAEA,IAAAw9D,GAAgBz4C,UAAAzc,GAAAwc,UAAAxc,GAAAzJ,OAAA6K,IAEhB68B,EAAAvmC,IAAA,IAAA8lB,GAAAw0C,EAAAx3D,EAAAw3D,EAAA/1D,EAAAi5D,GACAj3B,EAAAvmC,IAAAmmB,QAAAxqB,KAAAo8D,EAAAp8D,KAAA,aAEA8gE,EAAAxwB,yBAIA1F,EAAAk3B,mBAEAl3B,EAAAnoB,OAAA25C,GAIA,IAAAxE,EAAAhtB,EAAAvmC,IACA09D,EAAAn3B,EAAAjiC,OAEAm2D,EAAAr3C,sBAAA20C,EAAAl2C,aACA46C,EAAAhhD,SAAAxL,KAAAwqD,GAEApB,GAEAyD,EAAA,EAKAY,EAAA7iD,iBAAA4/C,EAAA33D,GAAA23D,EAAAl2D,GAAAk2D,EAAAj2D,KAIAs4D,EAAA,EAEAtC,EAAAp3C,sBAAA20C,EAAAv3D,OAAAqhB,aACA46C,EAAAzlD,OAAAwjD,GACAiC,EAAA/wC,oBAIAgyC,EAAApuD,IACA,UACA,UACA,UACA,SAGAouD,EAAA/sD,SAAA8rD,EAAA76C,kBACA87C,EAAA/sD,SAAA8rD,EAAA5wB,qBAIAouB,EAAA0D,gBAAApK,GACA0G,EAAA2D,QAKA,QAAAxqB,EAAA,EAAsBA,EAAA0pB,EAAkB1pB,IAAA,CAExC,GAAAimB,EAAA,CAEAmB,EAAAvqD,KAAAwsD,EAAAhhD,UACA++C,EAAArqD,IAAAgrD,EAAA/nB,IACAqpB,EAAAvlD,GAAAjH,KAAAmrD,EAAAhoB,IACAqpB,EAAAzlD,OAAAwjD,GACAiC,EAAA/wC,oBAEA,IAAAmyC,EAAAxC,EAAAjoB,GACA4pB,EAAA92C,SAAA23C,GAMAxD,EAAAjjD,iBAAAqlD,EAAA76C,iBAAA66C,EAAA5wB,oBACAuuB,EAAArrC,cAAAsrC,GAIAmC,EAAA3E,EAAAl2C,EAAA86C,EAAApD,SAhIA93D,QAAA6O,KAAA,wBAAA2nD,EAAA,kBAsIA7sC,EAAAuxB,iBA8KA,SAAAqhB,GAAA11C,EAAAzD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,GAEAP,GAAAlpB,KAAAmD,KAAA0pB,EAAAzD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,GAEAtmB,KAAA+9C,eAYA,SAAAshB,GAAAxU,EAAAG,EAAAwO,EAAApwC,EAAAioC,GAEA,IAAAiO,EAAAC,EACAzQ,EAAA/hC,EAAAkM,EAEAxR,EAIA+3C,EAAA,IAAAhvD,GACAivD,EAAA,IAAAvvD,GACAwvD,EAAA,IAAAlvD,GAEA,SAAAwqD,IAEA,IAAAnuC,EAAA,IAAAonB,eACA,WACA,WACA,WACA,YAGAlC,EAAA,IAAA4B,aACA,MACA,QAGA2rB,EAAAtU,EAAA2U,eACAJ,EAAAvU,EAAA2U,eAEA3U,EAAA4U,WAAA5U,EAAA6U,aAAAP,GACAtU,EAAA8U,WAAA9U,EAAA6U,aAAAhzC,EAAAm+B,EAAA+U,aAEA/U,EAAA4U,WAAA5U,EAAAgV,qBAAAT,GACAvU,EAAA8U,WAAA9U,EAAAgV,qBAAAjuB,EAAAiZ,EAAA+U,aAEAjR,EA8MA,WAEA,IAAAA,EAAA9D,EAAAsL,gBAEAjtB,EAAA2hB,EAAAsE,aAAAtE,EAAA4E,eACAtmB,EAAA0hB,EAAAsE,aAAAtE,EAAA6L,iBAyGA,OAvGA7L,EAAAuE,aAAAlmB,GAEA,aAAAgoB,EAAAvZ,UAAA,UAEA,qCAEA,gCACA,iCACA,0BACA,uBACA,sBACA,yBACA,wBAEA,2BACA,qBAEA,oBACA,0BAEA,gBAEA,mCAEA,0DAEA,0BACA,mGACA,mGAEA,qBAEA,+DACA,sCAEA,iDAEA,+BAEA,KAEAv2C,KAAA,OAEAypD,EAAAuE,aAAAjmB,GAEA,aAAA+nB,EAAAvZ,UAAA,UAEA,qCAEA,sBACA,yBACA,yBAEA,uBACA,yBACA,4BACA,yBACA,wBACA,2BAEA,oBACA,0BAEA,gBAEA,0CAEA,qEAEA,+CAEA,yBAEA,6BAEA,4BAEA,6DAEA,eAEA,qCACA,oFACA,wDAEA,QAEA,uEAEA,MAEA,KAEAv2C,KAAA,OAEAypD,EAAAwE,cAAAnmB,GACA2hB,EAAAwE,cAAAlmB,GAEA0hB,EAAA8L,aAAAhI,EAAAzlB,GACA2hB,EAAA8L,aAAAhI,EAAAxlB,GAEA0hB,EAAAgM,YAAAlI,GAEAA,EA9GA,GA5MA/hC,GACAhQ,SAAAiuC,EAAAoN,kBAAAtJ,EAAA,YACAxkC,GAAA0gC,EAAAoN,kBAAAtJ,EAAA,OAGA71B,GACAgnC,SAAAjV,EAAAmE,mBAAAL,EAAA,YACAoR,QAAAlV,EAAAmE,mBAAAL,EAAA,WAEA3pC,SAAA6lC,EAAAmE,mBAAAL,EAAA,YACAx6C,OAAA02C,EAAAmE,mBAAAL,EAAA,UACAhzC,MAAAkvC,EAAAmE,mBAAAL,EAAA,SAEAprB,MAAAsnB,EAAAmE,mBAAAL,EAAA,SACAxtD,IAAA0pD,EAAAmE,mBAAAL,EAAA,OACA7pB,QAAA+lB,EAAAmE,mBAAAL,EAAA,WAEAriB,gBAAAue,EAAAmE,mBAAAL,EAAA,mBACA5rC,iBAAA8nC,EAAAmE,mBAAAL,EAAA,oBAEAqR,QAAAnV,EAAAmE,mBAAAL,EAAA,WACAznB,WAAA2jB,EAAAmE,mBAAAL,EAAA,cACAxnB,QAAA0jB,EAAAmE,mBAAAL,EAAA,WACAvnB,OAAAyjB,EAAAmE,mBAAAL,EAAA,UACAtnB,SAAAwjB,EAAAmE,mBAAAL,EAAA,YACAsR,SAAApV,EAAAmE,mBAAAL,EAAA,YAEA/N,UAAAiK,EAAAmE,mBAAAL,EAAA,cAGA,IAAAplC,EAAAE,SAAAC,gBAAA,yCACAH,EAAA/Y,MAAA,EACA+Y,EAAA7Y,OAAA,EAEA,IAAAiZ,EAAAJ,EAAAK,WAAA,MACAD,EAAAu2C,UAAA,QACAv2C,EAAAw2C,SAAA,SAEA74C,EAAA,IAAA23C,GAAA11C,GAwRA,SAAA+uC,EAAAr4D,EAAAC,GAEA,OAAAD,EAAA4sC,cAAA3sC,EAAA2sC,YAEA5sC,EAAA4sC,YAAA3sC,EAAA2sC,YAEG5sC,EAAA0F,IAAAzF,EAAAyF,EAEHzF,EAAAyF,EAAA1F,EAAA0F,EAIAzF,EAAA6uC,GAAA9uC,EAAA8uC,GAhSAlvC,KAAAm+D,OAAA,SAAAoC,EAAApH,EAAAl2C,GAEA,OAAAs9C,EAAAj+D,OAAA,UAIAwsD,GAEAkM,IAIAxB,EAAAgH,WAAA1R,GAEA0K,EAAAiH,iBACAjH,EAAAkH,gBAAA3zC,EAAAhQ,UACAy8C,EAAAkH,gBAAA3zC,EAAAzC,IACAkvC,EAAAmH,0BAEAnH,EAAAxtB,QAAAgf,EAAA4V,WACApH,EAAA1tB,OAAAkf,EAAAuT,OAEAvT,EAAA4U,WAAA5U,EAAA6U,aAAAP,GACAtU,EAAA6V,oBAAA9zC,EAAAhQ,SAAA,EAAAiuC,EAAA8V,SAAA,MACA9V,EAAA6V,oBAAA9zC,EAAAzC,GAAA,EAAA0gC,EAAA8V,SAAA,MAEA9V,EAAA4U,WAAA5U,EAAAgV,qBAAAT,GAEAvU,EAAAmB,iBAAAlzB,EAAA/V,oBAAAD,EAAAC,iBAAAjT,UAEAupD,EAAAuH,cAAA/V,EAAAgW,UACAhW,EAAAI,UAAAnyB,EAAA33B,IAAA,GAEA,IAAA2/D,EAAA,EACAC,EAAA,EACA95B,EAAA+xB,EAAA/xB,IAEAA,GAEA4jB,EAAAS,UAAAxyB,EAAAuO,SAAAJ,EAAA1D,MAAAjmC,EAAA2pC,EAAA1D,MAAA5e,EAAAsiB,EAAA1D,MAAArjC,GAEA+mC,EAAA+5B,OAEAnW,EAAAC,UAAAhyB,EAAAqO,QAAAF,EAAAvpB,MACAmtC,EAAAC,UAAAhyB,EAAAsO,OAAAH,EAAAtpB,KAEAktC,EAAAI,UAAAnyB,EAAAknC,QAAA,GACAc,EAAA,EACAC,EAAA,GAEI95B,EAAA+sB,YAEJnJ,EAAAC,UAAAhyB,EAAAoO,WAAAD,EAAAg6B,SAEApW,EAAAI,UAAAnyB,EAAAknC,QAAA,GACAc,EAAA,EACAC,EAAA,KAMAlW,EAAAI,UAAAnyB,EAAAknC,QAAA,GACAc,EAAA,EACAC,EAAA,GAOA,QAAAxkE,EAAA,EAAAC,EAAA4jE,EAAAj+D,OAAsC5F,EAAAC,EAAOD,KAE7Cg1B,EAAA6uC,EAAA7jE,IAEA+vC,gBAAA/zB,iBAAAuK,EAAAkqB,mBAAAzb,EAAAvO,aACAuO,EAAA5rB,GAAA4rB,EAAA+a,gBAAAx8B,SAAA,IAIAswD,EAAAnoB,KAAAqgB,GAIA,IAAA38C,KACAxH,KAEA,IAAA5X,EAAA,EAAAC,EAAA4jE,EAAAj+D,OAAsC5F,EAAAC,EAAOD,IAAA,CAE7C,IAAAg1B,EACA6e,GADA7e,EAAA6uC,EAAA7jE,IACA6zC,SAEA,QAAAA,EAAA3D,QAAA,CAEAlb,EAAAmc,eAAAgd,EAAAsO,EAAAl2C,SAAAstB,UAEAya,EAAAC,UAAAhyB,EAAA8nB,UAAAxQ,EAAAwQ,WACAiK,EAAAmB,iBAAAlzB,EAAAwT,mBAAA/a,EAAA+a,gBAAAx8B,UAEAyhB,EAAAvO,YAAAnG,UAAAwiD,EAAAC,EAAAC,GAEA5jD,EAAA,GAAA4jD,EAAAt7D,EACA0X,EAAA,GAAA4jD,EAAA75D,EAEAyO,EAAA,GAAAod,EAAApd,OAAAlQ,EAAA,GACAkQ,EAAA,GAAAod,EAAApd,OAAAzO,EAAA,GAEA,IAAAs6D,EAAA,EAEAhH,EAAA/xB,KAAAmJ,EAAAnJ,MAEA+4B,EAAAe,GAIAD,IAAAd,IAEAnV,EAAAI,UAAAnyB,EAAAknC,WACAc,EAAAd,GAIA,OAAA5vB,EAAAjvC,KAEA0pD,EAAAO,UAAAtyB,EAAAgnC,SAAA1vB,EAAAjvC,IAAA1C,OAAAwF,EAAAmsC,EAAAjvC,IAAA1C,OAAAiH,GACAmlD,EAAAO,UAAAtyB,EAAAinC,QAAA3vB,EAAAjvC,IAAAqlB,OAAAviB,EAAAmsC,EAAAjvC,IAAAqlB,OAAA9gB,KAIAmlD,EAAAO,UAAAtyB,EAAAgnC,SAAA,KACAjV,EAAAO,UAAAtyB,EAAAinC,QAAA,MAIAlV,EAAAC,UAAAhyB,EAAAgM,QAAAsL,EAAAtL,SACA+lB,EAAAS,UAAAxyB,EAAAyK,MAAA6M,EAAA7M,MAAAjmC,EAAA8yC,EAAA7M,MAAA5e,EAAAyrB,EAAA7M,MAAArjC,GAEA2qD,EAAAC,UAAAhyB,EAAA9T,SAAAorB,EAAAprB,UACA6lC,EAAAM,WAAAryB,EAAA3kB,UACA02C,EAAAM,WAAAryB,EAAAnd,SAEA09C,EAAA6H,YAAA9wB,EAAAkP,SAAAlP,EAAAwP,cAAAxP,EAAAsP,SAAAtP,EAAAuP,SAAAvP,EAAA2P,mBAAA3P,EAAAyP,cAAAzP,EAAA0P,cAAA1P,EAAAyQ,oBACAwY,EAAAgF,QAAAr0B,MAAAu0B,QAAAnuB,EAAA6P,WACAoZ,EAAAgF,QAAAr0B,MAAAm3B,QAAA/wB,EAAA8P,YACAmZ,EAAAgF,QAAA96B,MAAA49B,QAAA/wB,EAAAmQ,YAEAt3B,EAAAkjC,aAAA/b,EAAAjvC,KAAAmmB,EAAA,GAEAujC,EAAAuW,aAAAvW,EAAAwW,UAAA,EAAAxW,EAAAyW,eAAA,GAEA/vC,EAAAoc,cAAA+c,EAAAsO,EAAAl2C,SAAAstB,WAMAipB,EAAA1tB,OAAAkf,EAAA4V,WAEApH,EAAAkI,UA+kCA,SAAAC,GAAAtD,EAAAvc,EAAA0X,EAAA5xB,EAAAypB,EAAAuQ,EAAA3S,GAEA,IAEA4S,EAFAC,EAAA,oBAAAC,wBAAA1D,aAAA0D,uBACAC,KAKA,SAAAC,EAAAj8C,EAAAk8C,GAEA,GAAAl8C,EAAArV,MAAAuxD,GAAAl8C,EAAAnV,OAAAqxD,EAAA,CAEA,YAAAl8C,EAGA,YADAnjB,QAAA6O,KAAA,yDAAAsU,EAAArV,MAAA,IAAAqV,EAAAnV,OAAA,MAQA,IAAAiL,EAAAomD,EAAA5iE,KAAAoG,IAAAsgB,EAAArV,MAAAqV,EAAAnV,QAEA6Y,EAAAE,SAAAC,gBAAA,yCASA,OARAH,EAAA/Y,MAAArR,KAAA4E,MAAA8hB,EAAArV,MAAAmL,GACA4N,EAAA7Y,OAAAvR,KAAA4E,MAAA8hB,EAAAnV,OAAAiL,GAEA4N,EAAAK,WAAA,MACAG,UAAAlE,EAAA,IAAAA,EAAArV,MAAAqV,EAAAnV,OAAA,IAAA6Y,EAAA/Y,MAAA+Y,EAAA7Y,QAEAhO,QAAA6O,KAAA,0CAAAsU,EAAArV,MAAA,IAAAqV,EAAAnV,OAAA,iBAAA6Y,EAAA/Y,MAAA,IAAA+Y,EAAA7Y,OAAAmV,GAEA0D,EAIA,OAAA1D,EAIA,SAAAvW,EAAAuW,GAEA,OAAAtY,GAAA+B,aAAAuW,EAAArV,QAAAjD,GAAA+B,aAAAuW,EAAAnV,QAiCA,SAAAsxD,EAAA16C,EAAAhY,GAEA,OAAAgY,EAAAZ,iBAAApX,GACAgY,EAAApB,YAAAzc,IAAA6d,EAAApB,YAAAtc,GAIA,SAAAq4D,EAAAtgE,EAAA2lB,EAAA9W,EAAAE,GAEAwtD,EAAA+D,eAAAtgE,GAEA8lC,EAAApqC,IAAAiqB,GAGA46C,cAAA/iE,KAAAsQ,IAAAtQ,KAAAoG,IAAAiL,EAAAE,IAAAvR,KAAAgjE,MAMA,SAAAC,EAAAjiE,GAEA,OAAAA,IAAAsJ,IAAAtJ,IAAAuJ,IAAAvJ,IAAAwJ,GAEAu0D,EAAAmE,QAIAnE,EAAAoE,OAMA,SAAAC,EAAAp9D,GAEA,IAAAmiB,EAAAniB,EAAAxD,OAEA2lB,EAAAviB,oBAAA,UAAAw9D,GA4BA,SAAAj7C,GAEA,IAAAk7C,EAAA/6B,EAAApqC,IAAAiqB,GAEA,GAAAA,EAAAzB,OAAA28C,EAAAC,0BAIAvE,EAAAwE,cAAAF,EAAAC,+BAEG,CAIH,YAAAD,EAAAG,YAAA,OAEAzE,EAAAwE,cAAAF,EAAAI,gBAKAn7B,EAAAoH,OAAAvnB,GArBA,CA1BAA,GAEAA,EAAAu7C,uBAEAhB,EAAAv6C,EAAAynB,IAIA+f,EAAAgU,OAAA75C,WAIA,SAAA85C,EAAA59D,GAEA,IAAA69D,EAAA79D,EAAAxD,OAEAqhE,EAAAj+D,oBAAA,UAAAg+D,GAmCA,SAAAC,GAEA,IAAAC,EAAAx7B,EAAApqC,IAAA2lE,GACAR,EAAA/6B,EAAApqC,IAAA2lE,EAAA17C,SAEA,GAAA07C,EAAA,CAcA,QAdA,IAEAR,EAAAI,gBAEA1E,EAAAwE,cAAAF,EAAAI,gBAIAI,EAAAt7C,cAEAs7C,EAAAt7C,aAAAuC,UAIA+4C,EAAAr4C,wBAEA,QAAApuB,EAAA,EAAmBA,EAAA,EAAOA,IAE1B2hE,EAAAgF,kBAAAD,EAAAE,mBAAA5mE,IACA0mE,EAAAG,oBAAAlF,EAAAmF,mBAAAJ,EAAAG,mBAAA7mE,SAMA2hE,EAAAgF,kBAAAD,EAAAE,oBACAF,EAAAG,oBAAAlF,EAAAmF,mBAAAJ,EAAAG,oBAIA37B,EAAAoH,OAAAm0B,EAAA17C,SACAmgB,EAAAoH,OAAAm0B,IApCA,CAjCAA,GAEAlU,EAAAgU,OAAA75C,WA2EA,SAAAkjC,EAAA7kC,EAAAg8C,GAEA,IAAAd,EAAA/6B,EAAApqC,IAAAiqB,GAIA,GAFAA,EAAAu7C,gBAinBA,SAAAv7C,GAEA,IAAAynB,EAAAznB,EAAAynB,GACAw0B,EAAAzU,EAAAkP,OAAAuF,MAIA1B,EAAA9yB,KAAAw0B,IAEA1B,EAAA9yB,GAAAw0B,EACAj8C,EAAA/H,UAVA,CAjnBA+H,GAEAA,EAAAR,QAAA,GAAA07C,EAAAgB,YAAAl8C,EAAAR,QAAA,CAEA,IAAAjB,EAAAyB,EAAAzB,MAEA,YAAAA,EAEAnjB,QAAA6O,KAAA,wEAAA+V,OAEI,SAAAzB,EAAA49C,SAOJ,YAqMA,SAAAjB,EAAAl7C,EAAAg8C,YAEAd,EAAAG,cAEAH,EAAAG,eAEAr7C,EAAA/iB,iBAAA,UAAAg+D,GAEAC,EAAAI,eAAA1E,EAAAwF,gBAEA5U,EAAAgU,OAAA75C,YAIAowC,EAAAuH,cAAA1C,EAAA2C,SAAAyC,GACAjK,EAAAsK,YAAAzF,EAAA0F,WAAApB,EAAAI,gBAEA1E,EAAA2F,YAAA3F,EAAA4F,oBAAAx8C,EAAAV,OACAs3C,EAAA2F,YAAA3F,EAAA6F,+BAAAz8C,EAAAX,kBACAu3C,EAAA2F,YAAA3F,EAAA8F,iBAAA18C,EAAAT,iBAEA,IAAAhB,EAAAi8C,EAAAx6C,EAAAzB,MAAAqrC,EAAAoK,0BA7XAh0C,GAEA,OAAAA,EAAAvB,QAAAxc,IAAA+d,EAAAtB,QAAAzc,IACA+d,EAAApB,YAAAzc,IAAA6d,EAAApB,YAAAtc,IA0XA0xD,CAEAh0C,SAAAhY,EAAAuW,KAEAA,EAvZA,SAAAA,GAEA,OAAAA,aAAAo+C,kBAAAp+C,aAAA2D,mBAAA3D,aAAAq+C,sBAEAxC,MAAAj4C,SAAAC,gBAAA,0CAEAg4C,EAAAlxD,MAAAjD,GAAAoC,gBAAAkW,EAAArV,OACAkxD,EAAAhxD,OAAAnD,GAAAoC,gBAAAkW,EAAAnV,QAEAgxD,EAAA93C,WAAA,MACAG,UAAAlE,EAAA,IAAA67C,EAAAlxD,MAAAkxD,EAAAhxD,QAEAhO,QAAA6O,KAAA,mDAAAsU,EAAArV,MAAA,IAAAqV,EAAAnV,OAAA,iBAAAgxD,EAAAlxD,MAAA,IAAAkxD,EAAAhxD,OAAAmV,GAEA67C,GAIA77C,EAlBA,CAuZAA,IAIA,IAAAs+C,EAAA70D,EAAAuW,GACAu+C,EAAA3C,EAAA4C,QAAA/8C,EAAAtnB,QACAskE,EAAA7C,EAAA4C,QAAA/8C,EAAA9iB,MAEA+/D,EAAArG,EAAA0F,WAAAt8C,EAAA68C,GAEA,IAAAK,EAAAl+C,EAAAgB,EAAAhB,QAEA,GAAAgB,EAAAm9C,eAAA,CAIA,IAAAC,EAAAxG,EAAAyG,gBAEA,GAAAr9C,EAAA9iB,OAAA6F,GAAA,CAEA,IAAAs3D,EAAA,UAAAthE,MAAA,kDACAqkE,EAAAxG,EAAA0G,wBAEIjD,IAGJ+C,EAAAxG,EAAA2G,mBAIAv9C,EAAAtnB,SAAAgL,IAAA05D,IAAAxG,EAAAyG,iBAKAr9C,EAAA9iB,OAAA0F,IAAAod,EAAA9iB,OAAA4F,KAEA1H,QAAA6O,KAAA,+FAEA+V,EAAA9iB,KAAA0F,GACAo6D,EAAA7C,EAAA4C,QAAA/8C,EAAA9iB,OAQA8iB,EAAAtnB,SAAAiL,KAEAy5D,EAAAxG,EAAA4G,cAKAx9C,EAAA9iB,OAAAkG,KAEAhI,QAAA6O,KAAA,oFAEA+V,EAAA9iB,KAAAkG,GACA45D,EAAA7C,EAAA4C,QAAA/8C,EAAA9iB,QAMA60D,EAAA0L,WAAA7G,EAAA0F,WAAA,EAAAc,EAAA7+C,EAAArV,MAAAqV,EAAAnV,OAAA,EAAA0zD,EAAAE,EAAA,WAEG,GAAAh9C,EAAAsD,cAMH,GAAAtE,EAAAnkB,OAAA,GAAAgiE,EAAA,CAEA,QAAA5nE,EAAA,EAAAivB,EAAAlF,EAAAnkB,OAAyC5F,EAAAivB,EAAQjvB,IAEjDioE,EAAAl+C,EAAA/pB,GACA88D,EAAA0L,WAAA7G,EAAA0F,WAAArnE,EAAA6nE,EAAAI,EAAAh0D,MAAAg0D,EAAA9zD,OAAA,EAAA0zD,EAAAE,EAAAE,EAAAz8C,MAIAT,EAAAZ,mBACA87C,EAAAN,cAAA57C,EAAAnkB,OAAA,OAIAk3D,EAAA0L,WAAA7G,EAAA0F,WAAA,EAAAQ,EAAAv+C,EAAArV,MAAAqV,EAAAnV,OAAA,EAAA0zD,EAAAE,EAAAz+C,EAAAkC,MACAy6C,EAAAN,cAAA,OAIG,GAAA56C,EAAA09C,oBAAA,CAEH,IAAAzoE,EAAA,EAAAivB,EAAAlF,EAAAnkB,OAAwC5F,EAAAivB,EAAQjvB,IAEhDioE,EAAAl+C,EAAA/pB,GAEA+qB,EAAAtnB,SAAA6K,IAAAyc,EAAAtnB,SAAA4K,GAEAyuD,EAAA4L,8BAAArgE,QAAAw/D,IAAA,EAEA/K,EAAA6L,qBAAAhH,EAAA0F,WAAArnE,EAAA6nE,EAAAI,EAAAh0D,MAAAg0D,EAAA9zD,OAAA,EAAA8zD,EAAAz8C,MAIArlB,QAAA6O,KAAA,kGAMA8nD,EAAA0L,WAAA7G,EAAA0F,WAAArnE,EAAA6nE,EAAAI,EAAAh0D,MAAAg0D,EAAA9zD,OAAA,EAAA0zD,EAAAE,EAAAE,EAAAz8C,MAMAy6C,EAAAN,cAAA57C,EAAAnkB,OAAA,OAUA,GAAAmkB,EAAAnkB,OAAA,GAAAgiE,EAAA,CAEA,IAAA5nE,EAAA,EAAAivB,EAAAlF,EAAAnkB,OAAyC5F,EAAAivB,EAAQjvB,IAEjDioE,EAAAl+C,EAAA/pB,GACA88D,EAAA0L,WAAA7G,EAAA0F,WAAArnE,EAAA6nE,IAAAE,EAAAE,GAIAl9C,EAAAZ,mBACA87C,EAAAN,cAAA57C,EAAAnkB,OAAA,OAIAk3D,EAAA0L,WAAA7G,EAAA0F,WAAA,EAAAQ,IAAAE,EAAAz+C,GACA28C,EAAAN,cAAA,EAMAF,EAAA16C,EAAA68C,IAEAlC,EAAA/D,EAAA0F,WAAAt8C,EAAAzB,EAAArV,MAAAqV,EAAAnV,QAIA8xD,EAAAgB,UAAAl8C,EAAAR,QAEAQ,EAAAP,UAAAO,EAAAP,SAAAO,GAvLA,CAtMAk7C,EAAAl7C,EAAAg8C,GAJA5gE,QAAA6O,KAAA,yEAAA+V,IAWA+xC,EAAAuH,cAAA1C,EAAA2C,SAAAyC,GACAjK,EAAAsK,YAAAzF,EAAA0F,WAAApB,EAAAI,gBA0IA,SAAA2B,EAAAY,EAAA79C,EAAA68C,GAEA,IAAAiB,EAkCA,GAhCAjB,GAEAjG,EAAAmH,cAAAF,EAAAjH,EAAAoH,eAAA7D,EAAA4C,QAAA/8C,EAAAvB,QACAm4C,EAAAmH,cAAAF,EAAAjH,EAAAqH,eAAA9D,EAAA4C,QAAA/8C,EAAAtB,QAEAk4C,EAAAmH,cAAAF,EAAAjH,EAAAsH,mBAAA/D,EAAA4C,QAAA/8C,EAAArB,YACAi4C,EAAAmH,cAAAF,EAAAjH,EAAAuH,mBAAAhE,EAAA4C,QAAA/8C,EAAApB,cAIAg4C,EAAAmH,cAAAF,EAAAjH,EAAAoH,eAAApH,EAAAwH,eACAxH,EAAAmH,cAAAF,EAAAjH,EAAAqH,eAAArH,EAAAwH,eAEAp+C,EAAAvB,QAAAxc,IAAA+d,EAAAtB,QAAAzc,IAEA7G,QAAA6O,KAAA,gIAAA+V,GAIA42C,EAAAmH,cAAAF,EAAAjH,EAAAsH,mBAAApD,EAAA96C,EAAArB,YACAi4C,EAAAmH,cAAAF,EAAAjH,EAAAuH,mBAAArD,EAAA96C,EAAApB,YAEAoB,EAAApB,YAAAzc,IAAA6d,EAAApB,YAAAtc,IAEAlH,QAAA6O,KAAA,kIAAA+V,IAMA89C,EAAAzjB,EAAAtkD,IAAA,kCAEA,CAEA,GAAAiqB,EAAA9iB,OAAA6F,IAAA,OAAAs3C,EAAAtkD,IAAA,mCACA,GAAAiqB,EAAA9iB,OAAA8F,IAAA,OAAAq3C,EAAAtkD,IAAA,yCAEAiqB,EAAAnB,WAAA,GAAAshB,EAAApqC,IAAAiqB,GAAAq+C,uBAEAzH,EAAA0H,cAAAT,EAAAC,EAAAS,2BAAA1mE,KAAAmG,IAAAgiB,EAAAnB,WAAA+qC,EAAA4U,qBACAr+B,EAAApqC,IAAAiqB,GAAAq+C,oBAAAr+C,EAAAnB,aAsMA,SAAA4/C,EAAAC,EAAAhD,EAAAiD,EAAAC,GAEA,IAAA9B,EAAA3C,EAAA4C,QAAArB,EAAA17C,QAAAtnB,QACAskE,EAAA7C,EAAA4C,QAAArB,EAAA17C,QAAA9iB,MACA60D,EAAA0L,WAAAmB,EAAA,EAAA9B,EAAApB,EAAAxyD,MAAAwyD,EAAAtyD,OAAA,EAAA0zD,EAAAE,EAAA,MACApG,EAAAiI,gBAAAjI,EAAAkI,YAAAJ,GACA9H,EAAAmI,qBAAAnI,EAAAkI,YAAAH,EAAAC,EAAAz+B,EAAApqC,IAAA2lE,EAAA17C,SAAAs7C,eAAA,GACA1E,EAAAiI,gBAAAjI,EAAAkI,YAAA,MAKA,SAAAE,EAAAC,EAAAvD,GAEA9E,EAAAsI,iBAAAtI,EAAAuI,aAAAF,GAEAvD,EAAAx7C,cAAAw7C,EAAAv7C,eAEAy2C,EAAAwI,oBAAAxI,EAAAuI,aAAAvI,EAAA2G,kBAAA7B,EAAAxyD,MAAAwyD,EAAAtyD,QACAwtD,EAAAyI,wBAAAzI,EAAAkI,YAAAlI,EAAA0I,iBAAA1I,EAAAuI,aAAAF,IAEGvD,EAAAx7C,aAAAw7C,EAAAv7C,eAEHy2C,EAAAwI,oBAAAxI,EAAAuI,aAAAvI,EAAA4G,cAAA9B,EAAAxyD,MAAAwyD,EAAAtyD,QACAwtD,EAAAyI,wBAAAzI,EAAAkI,YAAAlI,EAAA2I,yBAAA3I,EAAAuI,aAAAF,IAKArI,EAAAwI,oBAAAxI,EAAAuI,aAAAvI,EAAA4I,MAAA9D,EAAAxyD,MAAAwyD,EAAAtyD,QAIAwtD,EAAAsI,iBAAAtI,EAAAuI,aAAA,MA4MA5mE,KAAAssD,eACAtsD,KAAAwsD,eAtmBA,SAAA/kC,EAAAg8C,GAEA,IAAAd,EAAA/6B,EAAApqC,IAAAiqB,GAEA,OAAAA,EAAAzB,MAAA1jB,OAEA,GAAAmlB,EAAAR,QAAA,GAAA07C,EAAAgB,YAAAl8C,EAAAR,QAAA,CAEA07C,EAAAC,4BAEAn7C,EAAA/iB,iBAAA,UAAAg+D,GAEAC,EAAAC,0BAAAvE,EAAAwF,gBAEA5U,EAAAgU,OAAA75C,YAIAowC,EAAAuH,cAAA1C,EAAA2C,SAAAyC,GACAjK,EAAAsK,YAAAzF,EAAA6I,iBAAAvE,EAAAC,2BAEAvE,EAAA2F,YAAA3F,EAAA4F,oBAAAx8C,EAAAV,OAOA,IALA,IAAAogD,EAAA1/C,KAAA09C,oBACAp6C,EAAAtD,EAAAzB,MAAA,IAAAyB,EAAAzB,MAAA,GAAA+E,cAEAq8C,KAEA1qE,EAAA,EAAoBA,EAAA,EAAOA,IAQ3B0qE,EAAA1qE,GANAyqE,GAAAp8C,EAMAA,EAAAtD,EAAAzB,MAAAtpB,GAAAspB,MAAAyB,EAAAzB,MAAAtpB,GAJAulE,EAAAx6C,EAAAzB,MAAAtpB,GAAA20D,EAAAgW,gBAUA,IAAArhD,EAAAohD,EAAA,GACA9C,EAAA70D,EAAAuW,GACAu+C,EAAA3C,EAAA4C,QAAA/8C,EAAAtnB,QACAskE,EAAA7C,EAAA4C,QAAA/8C,EAAA9iB,MAIA,IAFA+/D,EAAArG,EAAA6I,iBAAAz/C,EAAA68C,GAEA5nE,EAAA,EAAoBA,EAAA,EAAOA,IAE3B,GAAAyqE,EAgBA,IAFA,IAAAxC,EAAAl+C,EAAA2gD,EAAA1qE,GAAA+pB,QAEA0H,EAAA,EAAAwmB,EAAAluB,EAAAnkB,OAA2C6rB,EAAAwmB,EAAQxmB,IAEnDw2C,EAAAl+C,EAAA0H,GAEA1G,EAAAtnB,SAAA6K,IAAAyc,EAAAtnB,SAAA4K,GAEAyuD,EAAA4L,8BAAArgE,QAAAw/D,IAAA,EAEA/K,EAAA6L,qBAAAhH,EAAAiJ,4BAAA5qE,EAAAyxB,EAAAo2C,EAAAI,EAAAh0D,MAAAg0D,EAAA9zD,OAAA,EAAA8zD,EAAAz8C,MAIArlB,QAAA6O,KAAA,mGAMA8nD,EAAA0L,WAAA7G,EAAAiJ,4BAAA5qE,EAAAyxB,EAAAo2C,EAAAI,EAAAh0D,MAAAg0D,EAAA9zD,OAAA,EAAA0zD,EAAAE,EAAAE,EAAAz8C,WAhCA6C,EAEAyuC,EAAA0L,WAAA7G,EAAAiJ,4BAAA5qE,EAAA,EAAA6nE,EAAA6C,EAAA1qE,GAAAiU,MAAAy2D,EAAA1qE,GAAAmU,OAAA,EAAA0zD,EAAAE,EAAA2C,EAAA1qE,GAAAwrB,MAIAsxC,EAAA0L,WAAA7G,EAAAiJ,4BAAA5qE,EAAA,EAAA6nE,IAAAE,EAAA2C,EAAA1qE,IA0CAimE,EAAAN,cANA8E,EAMA1gD,EAAAnkB,OAAA,EAJA,EAQA6/D,EAAA16C,EAAA68C,IAGAlC,EAAA/D,EAAA6I,iBAAAz/C,EAAAzB,EAAArV,MAAAqV,EAAAnV,QAIA8xD,EAAAgB,UAAAl8C,EAAAR,QAEAQ,EAAAP,UAAAO,EAAAP,SAAAO,QAIA+xC,EAAAuH,cAAA1C,EAAA2C,SAAAyC,GACAjK,EAAAsK,YAAAzF,EAAA6I,iBAAAvE,EAAAC,4BAgfA5iE,KAAAunE,sBAxeA,SAAA9/C,EAAAg8C,GAEAjK,EAAAuH,cAAA1C,EAAA2C,SAAAyC,GACAjK,EAAAsK,YAAAzF,EAAA6I,iBAAAt/B,EAAApqC,IAAAiqB,GAAAs7C,iBAseA/iE,KAAAwnE,kBApHA,SAAArE,GAEA,IAAAC,EAAAx7B,EAAApqC,IAAA2lE,GACAR,EAAA/6B,EAAApqC,IAAA2lE,EAAA17C,SAEA07C,EAAAz+D,iBAAA,UAAAw+D,GAEAP,EAAAI,eAAA1E,EAAAwF,gBAEA5U,EAAAgU,OAAA75C,WAEA,IAAAq+C,OAAAtE,EAAAr4C,wBACA48C,EAAAj4D,EAAA0zD,GAIA,GAAAsE,EAAA,CAEArE,EAAAE,sBAEA,QAAA5mE,EAAA,EAAmBA,EAAA,EAAOA,IAE1B0mE,EAAAE,mBAAA5mE,GAAA2hE,EAAAsJ,yBAMAvE,EAAAE,mBAAAjF,EAAAsJ,oBAMA,GAAAF,EAAA,CAKA,IAHAjO,EAAAsK,YAAAzF,EAAA6I,iBAAAvE,EAAAI,gBACA2B,EAAArG,EAAA6I,iBAAA/D,EAAA17C,QAAAigD,GAEAhrE,EAAA,EAAmBA,EAAA,EAAOA,IAE1BwpE,EAAA9C,EAAAE,mBAAA5mE,GAAAymE,EAAA9E,EAAAuJ,kBAAAvJ,EAAAiJ,4BAAA5qE,GAIAylE,EAAAgB,EAAA17C,QAAAigD,IAEAtF,EAAA/D,EAAA6I,iBAAA/D,EAAA17C,QAAA07C,EAAAxyD,MAAAwyD,EAAAtyD,QAIA2oD,EAAAsK,YAAAzF,EAAA6I,iBAAA,WAIA1N,EAAAsK,YAAAzF,EAAA0F,WAAApB,EAAAI,gBACA2B,EAAArG,EAAA0F,WAAAZ,EAAA17C,QAAAigD,GACAxB,EAAA9C,EAAAE,mBAAAH,EAAA9E,EAAAuJ,kBAAAvJ,EAAA0F,YAEA5B,EAAAgB,EAAA17C,QAAAigD,IAEAtF,EAAA/D,EAAA0F,WAAAZ,EAAA17C,QAAA07C,EAAAxyD,MAAAwyD,EAAAtyD,QAIA2oD,EAAAsK,YAAAzF,EAAA0F,WAAA,MAMAZ,EAAAx7C,aAhHA,SAAAw7C,GAEA,IAAAC,EAAAx7B,EAAApqC,IAAA2lE,GAEAsE,OAAAtE,EAAAr4C,wBAEA,GAAAq4C,EAAAt7C,aAAA,CAEA,GAAA4/C,EAAA,UAAAjnE,MAAA,6DArDA,SAAA2lE,EAAAhD,GAGA,GADAA,KAAAr4C,wBACA,UAAAtqB,MAAA,2DAIA,GAFA69D,EAAAiI,gBAAAjI,EAAAkI,YAAAJ,IAEAhD,EAAAt7C,eAAAs7C,EAAAt7C,aAAA+8C,eAEA,UAAApkE,MAAA,uEAKAonC,EAAApqC,IAAA2lE,EAAAt7C,cAAAk7C,gBACAI,EAAAt7C,aAAA7B,MAAArV,QAAAwyD,EAAAxyD,OACAwyD,EAAAt7C,aAAA7B,MAAAnV,SAAAsyD,EAAAtyD,SAEAsyD,EAAAt7C,aAAA7B,MAAArV,MAAAwyD,EAAAxyD,MACAwyD,EAAAt7C,aAAA7B,MAAAnV,OAAAsyD,EAAAtyD,OACAsyD,EAAAt7C,aAAAk2B,gBAIAuO,EAAA6W,EAAAt7C,aAAA,GAEA,IAAAggD,EAAAjgC,EAAApqC,IAAA2lE,EAAAt7C,cAAAk7C,eAEA,GAAAI,EAAAt7C,aAAA1nB,SAAAgL,GAEAkzD,EAAAmI,qBAAAnI,EAAAkI,YAAAlI,EAAA0I,iBAAA1I,EAAA0F,WAAA8D,EAAA,OAEG,IAAA1E,EAAAt7C,aAAA1nB,SAAAiL,GAMH,UAAA5K,MAAA,+BAJA69D,EAAAmI,qBAAAnI,EAAAkI,YAAAlI,EAAA2I,yBAAA3I,EAAA0F,WAAA8D,EAAA,IAlCA,CAuDAzE,EAAAE,mBAAAH,QAIA,GAAAsE,EAAA,CAEArE,EAAAG,sBAEA,QAAA7mE,EAAA,EAAoBA,EAAA,EAAOA,IAE3B2hE,EAAAiI,gBAAAjI,EAAAkI,YAAAnD,EAAAE,mBAAA5mE,IACA0mE,EAAAG,mBAAA7mE,GAAA2hE,EAAAyJ,qBACArB,EAAArD,EAAAG,mBAAA7mE,GAAAymE,QAMA9E,EAAAiI,gBAAAjI,EAAAkI,YAAAnD,EAAAE,oBACAF,EAAAG,mBAAAlF,EAAAyJ,qBACArB,EAAArD,EAAAG,mBAAAJ,GAMA9E,EAAAiI,gBAAAjI,EAAAkI,YAAA,MA8EAwB,CAAA5E,IA4CAnjE,KAAAgoE,yBAtCA,SAAA7E,GAEA,IAAA17C,EAAA07C,EAAA17C,QAGA,GAAA06C,EAAA16C,EAFAhY,EAAA0zD,IAEA,CAEA,IAAArhE,EAAAqhE,EAAAr4C,wBAAAuzC,EAAA6I,iBAAA7I,EAAA0F,WACAkE,EAAArgC,EAAApqC,IAAAiqB,GAAAs7C,eAEAvJ,EAAAsK,YAAAhiE,EAAAmmE,GACA7F,EAAAtgE,EAAA2lB,EAAA07C,EAAAxyD,MAAAwyD,EAAAtyD,QACA2oD,EAAAsK,YAAAhiE,EAAA,QA6LA,SAAAomE,GAAAC,EAAAC,EAAAvqD,EAAAC,GAEAovB,GAAArwC,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAAmoE,iBAAA,GACAnoE,KAAAqtC,KAAA,EAEArtC,KAAA6d,kBAAA,GACA7d,KAAA8d,iBAAA,IACA9d,KAAAqoE,MAAA,GAEAroE,KAAAooE,oBAAA,EACApoE,KAAAstC,KAAA,KAEAttC,KAAAsoE,UAAA,GACAtoE,KAAAuoE,WAAA,EAEAvoE,KAAAutC,yBAuNA,SAAAi7B,GAAAjjE,GAEA2iE,GAAArrE,KAAAmD,MAEAA,KAAAyoE,QAAAljE,MAgBA,SAAAmjE,GAAA7d,GAEA,IAAAr+B,EAAAxsB,KAEA2oE,EAAA,KACAC,EAAA,KAEAC,EAAA,KAEAC,EAAA,IAAA94D,GACA+4D,EAAA,IAAA/4D,GAEA,oBAAAg5D,QAAA,gBAAAA,SAEAJ,EAAA,IAAAI,OAAAC,YACAD,OAAAtkE,iBAAA,yBAAAwkE,OAIA,IAAA/7B,EAAA,IAAAn9B,GACAm5D,EAAA,IAAAj5D,GACAk5D,EAAA,IAAA54D,GAEA64D,EAAA,IAAAnB,GACAmB,EAAAC,OAAA,IAAAniD,GAAA,UACAkiD,EAAAn9B,OAAAJ,OAAA,GAEA,IAAAy9B,EAAA,IAAArB,GACAqB,EAAAD,OAAA,IAAAniD,GAAA,WACAoiD,EAAAr9B,OAAAJ,OAAA,GAEA,IAYA09B,EAAAC,EAZAC,EAAA,IAAAlB,IAAAa,EAAAE,IAMA,SAAAI,IAEA,cAAAhB,UAAAgB,aAMA,SAAAT,IAEA,GAAAS,IAAA,CAEA,IAAAC,EAAAjB,EAAAkB,iBAAA,QACAC,EAAAF,EAAAE,YACAC,EAAAH,EAAAG,aAEAN,EAAA5e,EAAAmf,gBACAR,EAAA3e,EAAAz+B,UAEAy+B,EAAAof,qBAAA,EAAAH,EAAAC,EAAA,QAEGv9C,EAAA2kB,SAEH0Z,EAAAof,qBAAAT,EAAA74D,MAAA64D,EAAA34D,OAAA44D,GA5BAC,EAAAx9B,OAAAJ,OAAA,GACA49B,EAAAx9B,OAAAJ,OAAA,GAmCA9rC,KAAAmxC,WACAnxC,KAAAkqE,WAAA,IAEAlqE,KAAAmqE,UAAA,WAEA,OAAAxB,GAIA3oE,KAAAoqE,UAAA,SAAA1sE,YAEAA,IAAAirE,EAAAjrE,IAIAsC,KAAAqqE,cAAA,SAAAvsE,YAEAA,IAAA+qE,EAAA/qE,IAIAkC,KAAAsqE,UAAA,SAAArnD,GAEA,UAAA0lD,EAAA,OAAA1lD,EAEA0lD,EAAA4B,UAAAtnD,EAAApF,KACA8qD,EAAA6B,SAAAvnD,EAAAnF,IAEA6qD,EAAA8B,aAAA7B,GAIA,IAAA8B,EAAA/B,EAAA+B,gBAEAA,EAEA5B,EAAA/0D,UAAA22D,EAAAC,4BAIA7B,EAAA3sD,gBAAA,EAAAqQ,EAAA09C,WAAA,GAKA,IAAAU,EAAAhC,EAAAgC,KACAC,EAAA,OAAAhC,IAAA5lD,EAwBA,GArBA4nD,EAAAjlE,OAAA2L,KAAAu3D,GACA+B,EAAAjlE,OAAAoX,UAAA6tD,EAAA9tD,SAAA8tD,EAAA9kE,WAAA8kE,EAAA/uD,OAEA,OAAA8uD,EAAAE,cAEA3B,EAAAp1D,UAAA62D,EAAAE,aACAD,EAAA9kE,WAAAkM,SAAAk3D,IAIA,OAAAyB,EAAA7tD,WAEAosD,EAAA5rD,sBAAAurD,GACAM,EAAAr1D,UAAA62D,EAAA7tD,UACAqsD,EAAA9mD,gBAAA6mD,GACA0B,EAAA9tD,SAAAtL,IAAA23D,IAIAyB,EAAA79C,yBAEA27C,EAAAgB,aAAA,OAAA1mD,EAIAomD,EAAAxrD,KAAAoF,EAAApF,KACA0rD,EAAA1rD,KAAAoF,EAAApF,KAEAwrD,EAAAvrD,IAAAmF,EAAAnF,IACAyrD,EAAAzrD,IAAAmF,EAAAnF,IAEA4rD,EAAAvmD,YAAA5R,KAAA0R,EAAAE,aACAumD,EAAAv8B,mBAAA57B,KAAA0R,EAAAkqB,oBAEAk8B,EAAAl8B,mBAAAp5B,UAAA60D,EAAAmC,gBACAxB,EAAAp8B,mBAAAp5B,UAAA60D,EAAAoC,iBAIAjC,EAAA1tD,WAAAytD,GAEAO,EAAAl8B,mBAAAl7B,SAAA82D,GACAQ,EAAAp8B,mBAAAl7B,SAAA82D,GAEA,IAAAz8B,EAAAu+B,EAAAv+B,OAEA,OAAAA,IAEAa,EAAA9xB,WAAAixB,EAAAnpB,aAEAkmD,EAAAl8B,mBAAAl7B,SAAAk7B,GACAo8B,EAAAp8B,mBAAAl7B,SAAAk7B,IAMAk8B,EAAAlmD,YAAA9H,WAAAguD,EAAAl8B,oBACAo8B,EAAApmD,YAAA9H,WAAAkuD,EAAAp8B,oBAEAk8B,EAAAnmD,iBAAAnP,UAAA60D,EAAAqC,sBACA1B,EAAArmD,iBAAAnP,UAAA60D,EAAAsC,uBAKAxB,EAAAxmD,iBAAA3R,KAAA83D,EAAAnmD,kBAIA,IAAAgpB,EAAAy8B,EAAAwC,YAEA,GAAAj/B,EAAA5pC,OAAA,CAEA,IAAA8oE,EAAAl/B,EAAA,GAEA,OAAAk/B,EAAAC,YAAA,IAAAD,EAAAC,WAAA/oE,QAEA+mE,EAAAC,OAAAv1D,UAAAq3D,EAAAC,YAIA,OAAAD,EAAAE,aAAA,IAAAF,EAAAE,YAAAhpE,QAEAinE,EAAAD,OAAAv1D,UAAAq3D,EAAAE,aAMA,OAAA5B,GAIA1pE,KAAAurE,kBAAA,WAEA,OAAAzC,GAIA9oE,KAAAwrE,YAAA,WAEA7B,KAAAhB,EAAA6C,eAIAxrE,KAAAoqB,QAAA,WAEA,oBAAA4+C,QAEAA,OAAA9jE,oBAAA,yBAAAgkE,IAgBA,SAAAuC,GAAAp7B,GAEAxtC,QAAA+M,IAAA,sBAAA5J,GAIA,IAAA67D,YAFAxxB,SAEA3mB,OAAA2mB,EAAA3mB,OAAAE,SAAAC,gBAAA,yCACA6hD,WAAAr7B,EAAAvmB,QAAAumB,EAAAvmB,QAAA,KAEA6hD,WAAAt7B,EAAA18B,OAAA08B,EAAA18B,MACAi4D,WAAAv7B,EAAAlG,OAAAkG,EAAAlG,MACA0hC,WAAAx7B,EAAAy7B,SAAAz7B,EAAAy7B,QACAC,WAAA17B,EAAA27B,WAAA37B,EAAA27B,UACAC,WAAA57B,EAAA2Q,oBAAA3Q,EAAA2Q,mBACAkrB,WAAA77B,EAAA87B,uBAAA97B,EAAA87B,sBACAC,WAAA/7B,EAAAg8B,gBAAAh8B,EAAAg8B,gBAAA,UAEAC,EAAA,KACAC,EAAA,KAIAvsE,KAAAwsE,WAAA3K,EACA7hE,KAAA8pB,QAAA,KAIA9pB,KAAAysE,aACAzsE,KAAA0sE,kBACA1sE,KAAA2sE,kBACA3sE,KAAA4sE,oBAIA5sE,KAAA6sE,eAIA7sE,KAAAsgD,kBACAtgD,KAAAw9D,wBAIAx9D,KAAA+jC,YAAA,EACA/jC,KAAA4zD,cACA5zD,KAAA0zD,eAIA1zD,KAAAg1D,2BAIAh1D,KAAA+0D,YAAAjsD,GACA9I,KAAA8sE,oBAAA,EACA9sE,KAAA+sE,sBAAA,EAIA/sE,KAAAs0D,gBAAA,EACAt0D,KAAAu0D,gBAAA,EAIA,IAyDA8J,EAqDAvc,EAAAuP,EAAAmI,EAAAvK,EACArnB,EAAAxe,EAAA2D,EAAA8iB,EAAAm9B,EACAC,EAAAC,EAAAhU,EAEAiU,EAAAC,EAAAC,EAAAC,EACAC,GAEA3L,GArHA4L,GAAAxtE,KAEAytE,MAIAC,GAAA,KACAC,GAAA,KACAC,IAAA,EACAC,GAAA,GAEAC,GAAA,KACAC,GAAA,KAEAC,GAAA,IAAA7mD,GACA8mD,GAAA,IAAA9mD,GACA+mD,GAAA,KAIAC,GAAA,EAIAC,GAAAvM,EAAAlxD,MACA09D,GAAAxM,EAAAhxD,OAEAy9D,GAAA,EAEAC,GAAA,IAAApnD,GAAA,IAAAinD,GAAAC,IACAG,GAAA,IAAArnD,GAAA,IAAAinD,GAAAC,IACAI,MAIA/S,GAAA,IAAAlzC,GAIAkmD,GAAA,IAv5MA,WAEA,IAAAliD,EAAAxsB,KAEA2uE,EAAA,KACAC,EAAA,EACApR,KACAqR,KAEArhD,EAAA,IAAAlF,GACAwmD,EAAA,IAAAr+D,GAEAs+D,GAAarxE,MAAA,KAAAqgD,gBAmFb,SAAAixB,IAEAD,EAAArxE,QAAAixE,IAEAI,EAAArxE,MAAAixE,EACAI,EAAAhxB,YAAA6wB,EAAA,GAIApiD,EAAAyiD,UAAAL,EACApiD,EAAA0iD,gBAAA,EAIA,SAAAC,EAAAtmD,EAAA5F,EAAA1E,EAAA6wD,GAEA,IAAAC,EAAA,OAAAxmD,IAAAvmB,OAAA,EACAgtE,EAAA,KAEA,OAAAD,EAAA,CAIA,GAFAC,EAAAP,EAAArxE,WAEA0xE,GAAA,OAAAE,EAAA,CAEA,IAAAC,EAAAhxD,EAAA,EAAA8wD,EACAnV,EAAAj3C,EAAAkqB,mBAEA2hC,EAAA/pD,gBAAAm1C,IAEA,OAAAoV,KAAAhtE,OAAAitE,KAEAD,EAAA,IAAAr7B,aAAAs7B,IAIA,QAAA7yE,EAAA,EAAA8yE,EAAAjxD,EAAoC7hB,IAAA2yE,IAAe3yE,EAAA8yE,GAAA,EAEnDhiD,EAAAjc,KAAAsX,EAAAnsB,IAAAqe,aAAAm/C,EAAA4U,GAEAthD,EAAAvJ,OAAAjQ,QAAAs7D,EAAAE,GACAF,EAAAE,EAAA,GAAAhiD,EAAAjF,SAMAwmD,EAAArxE,MAAA4xE,EACAP,EAAAhxB,eAMA,OAFAvxB,EAAAyiD,UAAAI,EAEAC,EAvIAtvE,KAAA+uE,UACA/uE,KAAAivE,UAAA,EACAjvE,KAAAkvE,gBAAA,EAEAlvE,KAAAg7D,KAAA,SAAAnyC,EAAA4mD,EAAAxsD,GAEA,IAAAkuB,EACA,IAAAtoB,EAAAvmB,QACAmtE,GAGA,IAAAb,GACApR,EAOA,OALAA,EAAAiS,EAEAd,EAAAQ,EAAAtmD,EAAA5F,EAAA,GACA2rD,EAAA/lD,EAAAvmB,OAEA6uC,GAIAnxC,KAAA0vE,aAAA,WAEAb,KACAM,EAAA,OAIAnvE,KAAA2vE,WAAA,WAEAd,KACAG,KAIAhvE,KAAA4vE,SAAA,SAAA/mD,EAAA03B,EAAAC,EAAAv9B,EAAAytB,EAAAm/B,GAEA,IAAArS,GAAA,OAAA30C,GAAA,IAAAA,EAAAvmB,QAAAusE,IAAAruB,EAIAquB,EAIAM,EAAA,MAIAH,QAIG,CAEH,IAAAc,EAAAjB,EAAA,EAAAD,EACAmB,EAAA,EAAAD,EAEAR,EAAA5+B,EAAAs/B,eAAA,KAEAjB,EAAArxE,MAAA4xE,EAEAA,EAAAH,EAAAtmD,EAAA5F,EAAA8sD,EAAAF,GAEA,QAAAnzE,EAAA,EAAmBA,IAAAqzE,IAAerzE,EAElC4yE,EAAA5yE,GAAAiyE,EAAAjyE,GAIAg0C,EAAAs/B,cAAAV,EACAtvE,KAAAkvE,gBAAA3uB,EAAAvgD,KAAAivE,UAAA,EACAjvE,KAAAivE,WAAAa,KAg0MAG,MACAC,MAIAvU,GAAA,IAAA3rD,GAEAmgE,GAAA,IAAA3/D,GAEA,SAAA4/D,KAEA,cAAA1C,GAAAY,GAAA,EAQA,IAEA,IAAA+B,IACA18D,MAAAg4D,EACAxhC,MAAAyhC,EACAE,QAAAD,EACAG,UAAAD,EACA/qB,mBAAAirB,EACAE,sBAAAD,EACAG,gBAAAD,GAUA,GALAvK,EAAAn9D,iBAAA,mBAAA4rE,OACAzO,EAAAn9D,iBAAA,uBAAA6rE,OAIA,QAFAlS,EAAAqN,GAAA7J,EAAA93C,WAAA,QAAAsmD,KAAAxO,EAAA93C,WAAA,qBAAAsmD,KAIA,aAAAxO,EAAA93C,WAAA,SAEA,IAAAvpB,MAAA,+DAIA,IAAAA,MAAA,0CAQA69D,EAAAmS,2BAEAnS,EAAAmS,yBAAA,WAEA,OAAYC,SAAA,EAAAC,SAAA,EAAA54B,UAAA,KAMV,MAAAv3C,GAEFsC,QAAAtC,MAAA,wBAAAA,EAAAowE,SAaA,SAAAC,MAEA9uB,EAAA,IA10MA,SAAAkJ,GAEA,IAAAlJ,KAEA,OAEAtkD,IAAA,SAAAP,GAEA,YAAA6kD,EAAA7kD,GAEA,OAAA6kD,EAAA7kD,GAIA,IAAAsoE,EAEA,OAAAtoE,GAEA,0BACAsoE,EAAAva,EAAA6lB,aAAA,wBAAA7lB,EAAA6lB,aAAA,4BAAA7lB,EAAA6lB,aAAA,8BACA,MAEA,qCACAtL,EAAAva,EAAA6lB,aAAA,mCAAA7lB,EAAA6lB,aAAA,uCAAA7lB,EAAA6lB,aAAA,yCACA,MAEA,oCACAtL,EAAAva,EAAA6lB,aAAA,kCAAA7lB,EAAA6lB,aAAA,sCAAA7lB,EAAA6lB,aAAA,wCACA,MAEA,qCACAtL,EAAAva,EAAA6lB,aAAA,mCAAA7lB,EAAA6lB,aAAA,yCACA,MAEA,QACAtL,EAAAva,EAAA6lB,aAAA5zE,GAYA,OARA,OAAAsoE,GAEA1iE,QAAA6O,KAAA,wBAAAzU,EAAA,6BAIA6kD,EAAA7kD,GAAAsoE,EAEAA,IA2xMA,CAAAlH,IACA7gE,IAAA,uBACAskD,EAAAtkD,IAAA,qBACAskD,EAAAtkD,IAAA,4BACAskD,EAAAtkD,IAAA,0BACAskD,EAAAtkD,IAAA,iCACAskD,EAAAtkD,IAAA,4BACAskD,EAAAtkD,IAAA,0BACAskD,EAAAtkD,IAAA,0BAEAokE,GAAA,IA/0BA,SAAA5W,EAAAlJ,GAgJA,OAAS0iB,QA9IT,SAAAtmE,GAEA,IAAAqnE,EAEA,GAAArnE,IAAAuL,GAAA,OAAAuhD,EAAA8lB,OACA,GAAA5yE,IAAAwL,GAAA,OAAAshD,EAAA6a,cACA,GAAA3nE,IAAAyL,GAAA,OAAAqhD,EAAA+lB,gBAEA,GAAA7yE,IAAA0L,GAAA,OAAAohD,EAAAwX,QACA,GAAAtkE,IAAA2L,GAAA,OAAAmhD,EAAAgmB,uBACA,GAAA9yE,IAAA4L,GAAA,OAAAkhD,EAAAimB,sBAEA,GAAA/yE,IAAA6L,GAAA,OAAAihD,EAAAyX,OACA,GAAAvkE,IAAA8L,GAAA,OAAAghD,EAAAkmB,sBACA,GAAAhzE,IAAA+L,GAAA,OAAA+gD,EAAAmmB,qBAEA,GAAAjzE,IAAAgM,GAAA,OAAA8gD,EAAAomB,cACA,GAAAlzE,IAAAwM,GAAA,OAAAsgD,EAAAqmB,uBACA,GAAAnzE,IAAAyM,GAAA,OAAAqgD,EAAAsmB,uBACA,GAAApzE,IAAA0M,GAAA,OAAAogD,EAAAumB,qBAEA,GAAArzE,IAAAiM,GAAA,OAAA6gD,EAAAwmB,KACA,GAAAtzE,IAAAkM,GAAA,OAAA4gD,EAAAymB,MACA,GAAAvzE,IAAAmM,GAAA,OAAA2gD,EAAAyW,eACA,GAAAvjE,IAAAoM,GAAA,OAAA0gD,EAAA0mB,IACA,GAAAxzE,IAAAqM,GAAA,OAAAygD,EAAA2mB,aACA,GAAAzzE,IAAAsM,GAAA,OAAAwgD,EAAA8V,MAEA,GAAA5iE,IAAAuM,IAIA,QAFA86D,EAAAzjB,EAAAtkD,IAAA,2BAEA,OAAA+nE,EAAAqM,eAIA,GAAA1zE,IAAA4M,GAAA,OAAAkgD,EAAA6mB,MACA,GAAA3zE,IAAA6M,GAAA,OAAAigD,EAAA8mB,IACA,GAAA5zE,IAAA8M,GAAA,OAAAggD,EAAA+mB,KACA,GAAA7zE,IAAA+M,GAAA,OAAA+/C,EAAAgnB,UACA,GAAA9zE,IAAAgN,GAAA,OAAA8/C,EAAAinB,gBACA,GAAA/zE,IAAAiN,GAAA,OAAA6/C,EAAA8Z,gBACA,GAAA5mE,IAAAkN,GAAA,OAAA4/C,EAAAia,cAEA,GAAA/mE,IAAAgJ,EAAA,OAAA8jD,EAAAknB,SACA,GAAAh0E,IAAAiJ,EAAA,OAAA6jD,EAAAmnB,cACA,GAAAj0E,IAAAkJ,EAAA,OAAA4jD,EAAAonB,sBAEA,GAAAl0E,IAAAqJ,EAAA,OAAAyjD,EAAAqnB,KACA,GAAAn0E,IAAAsJ,EAAA,OAAAwjD,EAAAsnB,IACA,GAAAp0E,IAAAuJ,EAAA,OAAAujD,EAAAunB,UACA,GAAAr0E,IAAAwJ,EAAA,OAAAsjD,EAAAwnB,oBACA,GAAAt0E,IAAAyJ,EAAA,OAAAqjD,EAAAynB,UACA,GAAAv0E,IAAA0J,EAAA,OAAAojD,EAAA0nB,oBACA,GAAAx0E,IAAA2J,EAAA,OAAAmjD,EAAA2nB,UACA,GAAAz0E,IAAA4J,GAAA,OAAAkjD,EAAA4nB,oBAEA,GAAA10E,IAAA6J,GAAA,OAAAijD,EAAA6nB,UACA,GAAA30E,IAAA8J,GAAA,OAAAgjD,EAAA8nB,oBACA,GAAA50E,IAAA+J,GAAA,OAAA+iD,EAAA+nB,mBAEA,IAAA70E,IAAAmN,IAAAnN,IAAAoN,IACApN,IAAAqN,IAAArN,IAAAsN,KAIA,QAFA+5D,EAAAzjB,EAAAtkD,IAAA,kCAEA,CAEA,GAAAU,IAAAmN,GAAA,OAAAk6D,EAAAyN,6BACA,GAAA90E,IAAAoN,GAAA,OAAAi6D,EAAA0N,8BACA,GAAA/0E,IAAAqN,GAAA,OAAAg6D,EAAA2N,8BACA,GAAAh1E,IAAAsN,GAAA,OAAA+5D,EAAA4N,8BAMA,IAAAj1E,IAAAuN,IAAAvN,IAAAwN,IACAxN,IAAAyN,IAAAzN,IAAA0N,KAIA,QAFA25D,EAAAzjB,EAAAtkD,IAAA,mCAEA,CAEA,GAAAU,IAAAuN,GAAA,OAAA85D,EAAA6N,gCACA,GAAAl1E,IAAAwN,GAAA,OAAA65D,EAAA8N,gCACA,GAAAn1E,IAAAyN,GAAA,OAAA45D,EAAA+N,iCACA,GAAAp1E,IAAA0N,GAAA,OAAA25D,EAAAgO,iCAMA,GAAAr1E,IAAA2N,IAIA,QAFA05D,EAAAzjB,EAAAtkD,IAAA,kCAEA,OAAA+nE,EAAAiO,0BAIA,IAAAt1E,IAAA4N,IAAA5N,IAAA6N,IAAA7N,IAAA8N,IACA9N,IAAA+N,IAAA/N,IAAAgO,IAAAhO,IAAAiO,IACAjO,IAAAkO,IAAAlO,IAAAmO,IAAAnO,IAAAoO,IACApO,IAAAqO,IAAArO,IAAAsO,IAAAtO,IAAAuO,IACAvO,IAAAwO,IAAAxO,IAAAyO,KAIA,QAFA44D,EAAAzjB,EAAAtkD,IAAA,kCAIA,OAAAU,EAMA,IAAAA,IAAAmJ,GAAAnJ,IAAAoJ,IAIA,QAFAi+D,EAAAzjB,EAAAtkD,IAAA,qBAEA,CAEA,GAAAU,IAAAmJ,EAAA,OAAAk+D,EAAAkO,QACA,GAAAv1E,IAAAoJ,EAAA,OAAAi+D,EAAAmO,QAMA,OAAAx1E,IAAA2M,IAIA,QAFA06D,EAAAzjB,EAAAtkD,IAAA,wBAEA+nE,EAAAoO,wBAIA,IAmsBA,CAAAtV,EAAAvc,GAEAuP,EAAA,IAnmNA,SAAArG,EAAAlJ,EAAAzR,GAEA,IAAAujC,EAsBA,SAAAxgB,EAAAtb,GAEA,aAAAA,EAAA,CAEA,GAAAkT,EAAAwlB,yBAAAxlB,EAAA4E,cAAA5E,EAAA6oB,YAAA/7B,UAAA,GACAkT,EAAAwlB,yBAAAxlB,EAAA6L,gBAAA7L,EAAA6oB,YAAA/7B,UAAA,EAEA,cAIAA,EAAA,UAIA,kBAAAA,GAEAkT,EAAAwlB,yBAAAxlB,EAAA4E,cAAA5E,EAAA8oB,cAAAh8B,UAAA,GACAkT,EAAAwlB,yBAAAxlB,EAAA6L,gBAAA7L,EAAA8oB,cAAAh8B,UAAA,EAEA,UAMA,OAIA,IAAAA,WAAAzH,EAAAyH,UAAAzH,EAAAyH,UAAA,QACAi8B,EAAA3gB,EAAAtb,GAEAi8B,IAAAj8B,IAEAj1C,QAAA6O,KAAA,uBAAAomC,EAAA,uBAAAi8B,EAAA,YACAj8B,EAAAi8B,GAIA,IAAA3f,OAAA/jB,EAAA+jB,uBAEA4f,EAAAhpB,EAAA79B,aAAA69B,EAAAipB,yBACAC,EAAAlpB,EAAA79B,aAAA69B,EAAAmpB,gCACA1Y,EAAAzQ,EAAA79B,aAAA69B,EAAAopB,kBACA/M,EAAArc,EAAA79B,aAAA69B,EAAAqpB,2BAEAC,EAAAtpB,EAAA79B,aAAA69B,EAAAupB,oBACArhB,EAAAlI,EAAA79B,aAAA69B,EAAAwpB,4BACAC,EAAAzpB,EAAA79B,aAAA69B,EAAA0pB,qBACAC,EAAA3pB,EAAA79B,aAAA69B,EAAA4pB,8BAEAphB,EAAA0gB,EAAA,EACAW,IAAA/yB,EAAAtkD,IAAA,qBAGA,OAEAyoE,iBA9EA,WAEA,YAAA2N,EAAA,OAAAA,EAEA,IAAArO,EAAAzjB,EAAAtkD,IAAA,kCAYA,OARAo2E,EAFA,OAAArO,EAEAva,EAAA79B,aAAAo4C,EAAAuP,gCAIA,GAmEA1hB,kBAEAtb,YACAsc,yBAEA4f,cACAE,oBACAzY,iBACA4L,iBAEAiN,gBACAphB,oBACAuhB,cACAE,sBAEAnhB,iBACAqhB,wBACA7hB,oBAtBAQ,GAAAqhB,GAqhNA,CAAAxW,EAAAvc,EAAAzR,IAEAmpB,EAAA,IAxnFA,SAAAxO,EAAAlJ,EAAA8f,GA+SA,IAAAmT,EAAA,IA7SA,WAEA,IAAAC,KAEAtxC,EAAA,IAAAvc,GACA8tD,EAAA,KACAC,EAAA,IAAA/tD,GAAA,SAEA,OAEAm6C,QAAA,SAAA6T,GAEAF,IAAAE,GAAAH,IAEAhqB,EAAAmqB,mBACAF,EAAAE,IAMAC,UAAA,SAAAC,GAEAL,EAAAK,GAIA5W,SAAA,SAAAhhE,EAAAqnB,EAAAzkB,EAAAD,EAAA4gD,QAEAA,IAEAvjD,GAAA2C,EAAY0kB,GAAA1kB,EAAQC,GAAAD,GAIpBsjC,EAAA9yB,IAAAnT,EAAAqnB,EAAAzkB,EAAAD,QAEA80E,EAAAphE,OAAA4vB,KAEAsnB,EAAAsqB,WAAA73E,EAAAqnB,EAAAzkB,EAAAD,GACA80E,EAAA3jE,KAAAmyB,KAMAg+B,MAAA,WAEAsT,KAEAC,EAAA,KACAC,EAAAtkE,KAAA,YA2PA+W,EAAA,IAnPA,WAEA,IAAAqtD,KAEAO,EAAA,KACAC,EAAA,KACAC,EAAA,KAEA,OAEA/W,QAAA,SAAAte,GAEAA,EAEAtU,EAAAkf,EAAA0qB,YAIA1pC,EAAAgf,EAAA0qB,aAMApU,QAAA,SAAAqU,GAEAJ,IAAAI,GAAAX,IAEAhqB,EAAA2qB,aACAJ,EAAAI,IAMAC,QAAA,SAAAz1B,GAEA,GAAAq1B,IAAAr1B,EAAA,CAEA,GAAAA,EAEA,OAAAA,GAEA,KAAAj4C,GAEA8iD,EAAA7K,UAAA6K,EAAA6qB,OACA,MAEA,KAAA1tE,GAEA6iD,EAAA7K,UAAA6K,EAAA8qB,QACA,MAEA,KAAA1tE,GAEA4iD,EAAA7K,UAAA6K,EAAA+qB,MACA,MAEA,KAAA1tE,GAEA2iD,EAAA7K,UAAA6K,EAAAgrB,QACA,MAEA,KAAA1tE,GAEA0iD,EAAA7K,UAAA6K,EAAAirB,OACA,MAEA,KAAA1tE,GAEAyiD,EAAA7K,UAAA6K,EAAAkrB,QACA,MAEA,KAAA1tE,GAEAwiD,EAAA7K,UAAA6K,EAAAmrB,SACA,MAEA,KAAA1tE,GAEAuiD,EAAA7K,UAAA6K,EAAAorB,UACA,MAEA,QAEAprB,EAAA7K,UAAA6K,EAAAgrB,aAMAhrB,EAAA7K,UAAA6K,EAAAgrB,QAIAR,EAAAr1B,IAMAi1B,UAAA,SAAAC,GAEAL,EAAAK,GAIA5W,SAAA,SAAAt0B,GAEAsrC,IAAAtrC,IAEA6gB,EAAAqrB,WAAAlsC,GACAsrC,EAAAtrC,IAMAu3B,MAAA,WAEAsT,KAEAO,EAAA,KACAC,EAAA,KACAC,EAAA,QAwHA7tD,EAAA,IAhHA,WAEA,IAAAotD,KAEAsB,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KAEA,OAEAnY,QAAA,SAAAoY,GAEAA,EAEAhrC,EAAAkf,EAAA+rB,cAIA/qC,EAAAgf,EAAA+rB,eAMAzV,QAAA,SAAA0V,GAEAV,IAAAU,GAAAhC,IAEAhqB,EAAAgsB,eACAV,EAAAU,IAMApB,QAAA,SAAAqB,EAAAC,EAAAF,GAEAT,IAAAU,GACAT,IAAAU,GACAT,IAAAO,IAEAhsB,EAAAisB,cAAAC,EAAAF,GAEAT,EAAAU,EACAT,EAAAU,EACAT,EAAAO,IAMAG,MAAA,SAAAC,EAAAC,EAAAC,GAEAZ,IAAAU,GACAT,IAAAU,GACAT,IAAAU,IAEAtsB,EAAAusB,UAAAH,EAAAC,EAAAC,GAEAZ,EAAAU,EACAT,EAAAU,EACAT,EAAAU,IAMAlC,UAAA,SAAAC,GAEAL,EAAAK,GAIA5W,SAAA,SAAAqN,GAEA+K,IAAA/K,IAEA9gB,EAAAwsB,aAAA1L,GACA+K,EAAA/K,IAMApK,MAAA,WAEAsT,KAEAsB,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,QAcAY,EAAAzsB,EAAA79B,aAAA69B,EAAAupB,oBACAmD,EAAA,IAAAv4E,WAAAs4E,GACAE,EAAA,IAAAx4E,WAAAs4E,GACAG,EAAA,IAAAz4E,WAAAs4E,GAEApmB,KAEAwmB,EAAA,KAEAC,EAAA,KAEAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,KAEAC,EAAA,KACAC,EAAA,KAEAC,EAAA,KAEAC,EAAA,KACAC,EAAA,KAEA3E,EAAAhpB,EAAA79B,aAAA69B,EAAA4tB,kCAEAC,KACA5xD,EAAA,EACA6xD,EAAA9tB,EAAA79B,aAAA69B,EAAA+tB,UAEA,IAAAD,EAAA/zE,QAAA,UAEAkiB,EAAAuc,WAAA,kBAAAC,KAAAq1C,GAAA,IACAD,EAAA5xD,GAAA,IAEE,IAAA6xD,EAAA/zE,QAAA,eAEFkiB,EAAAuc,WAAA,uBAAAC,KAAAq1C,GAAA,IACAD,EAAA5xD,GAAA,GAIA,IAAA+xD,EAAA,KACAC,KAEAC,EAAA,IAAA/xD,GACAgyD,EAAA,IAAAhyD,GAEA,SAAA08C,EAAAl/D,EAAA7C,EAAA+Y,GAEA,IAAAqN,EAAA,IAAA/oB,WAAA,GACAsoB,EAAAujC,EAAA6Y,gBAEA7Y,EAAA8Y,YAAAn/D,EAAA8iB,GACAujC,EAAAwa,cAAA7gE,EAAAqmD,EAAA4a,mBAAA5a,EAAAwX,SACAxX,EAAAwa,cAAA7gE,EAAAqmD,EAAA2a,mBAAA3a,EAAAwX,SAEA,QAAA9lE,EAAA,EAAkBA,EAAAme,EAAWne,IAE7BsuD,EAAAka,WAAApjE,EAAApF,EAAA,EAAAsuD,EAAA+mB,KAAA,MAAA/mB,EAAA+mB,KAAA/mB,EAAAomB,cAAAlpD,GAIA,OAAAT,EAIA,IAAA2xD,KA2FA,SAAAttC,EAAAoD,QAEAmiB,EAAAniB,KAEA8b,EAAAlf,OAAAoD,GACAmiB,EAAAniB,OAMA,SAAAlD,EAAAkD,QAEAmiB,EAAAniB,KAEA8b,EAAAhf,QAAAkD,GACAmiB,EAAAniB,OAiDA,SAAAmyB,EAAA5hB,EAAAM,EAAAF,EAAAC,EAAAI,EAAAF,EAAAC,EAAAe,GAYA,GAVAvB,IAAA74C,EAEAklC,EAAAkf,EAAAuT,OAIAvyB,EAAAgf,EAAAuT,OAIA9e,IAAAx4C,EAAA,CAEA,GAAAw4C,IAAAs4B,GAAA/2B,IAAAs3B,EAEA,OAAA74B,GAEA,KAAA34C,EAEAk6C,GAEAgK,EAAAquB,sBAAAruB,EAAAknB,SAAAlnB,EAAAknB,UACAlnB,EAAAsuB,kBAAAtuB,EAAAsnB,IAAAtnB,EAAAsnB,IAAAtnB,EAAAsnB,IAAAtnB,EAAAsnB,OAIAtnB,EAAAjL,cAAAiL,EAAAknB,UACAlnB,EAAAuuB,UAAAvuB,EAAAynB,UAAAznB,EAAAsnB,MAGA,MAEA,KAAAvrE,EAEAi6C,GAEAgK,EAAAquB,sBAAAruB,EAAAknB,SAAAlnB,EAAAknB,UACAlnB,EAAAsuB,kBAAAtuB,EAAAqnB,KAAArnB,EAAAqnB,KAAArnB,EAAAwnB,oBAAAxnB,EAAA0nB,uBAIA1nB,EAAAjL,cAAAiL,EAAAknB,UACAlnB,EAAAuuB,UAAAvuB,EAAAqnB,KAAArnB,EAAAwnB,sBAGA,MAEA,KAAAxrE,EAEAg6C,GAEAgK,EAAAquB,sBAAAruB,EAAAknB,SAAAlnB,EAAAknB,UACAlnB,EAAAsuB,kBAAAtuB,EAAAqnB,KAAArnB,EAAAunB,UAAAvnB,EAAAqnB,KAAArnB,EAAAynB,aAIAznB,EAAAjL,cAAAiL,EAAAknB,UACAlnB,EAAAuuB,UAAAvuB,EAAAqnB,KAAArnB,EAAAunB,YAGA,MAEA,QAEAvxB,GAEAgK,EAAAquB,sBAAAruB,EAAAknB,SAAAlnB,EAAAknB,UACAlnB,EAAAsuB,kBAAAtuB,EAAAsnB,IAAAtnB,EAAA0nB,oBAAA1nB,EAAAsnB,IAAAtnB,EAAA0nB,uBAIA1nB,EAAAquB,sBAAAruB,EAAAknB,SAAAlnB,EAAAknB,UACAlnB,EAAAsuB,kBAAAtuB,EAAAynB,UAAAznB,EAAA0nB,oBAAA1nB,EAAAsnB,IAAAtnB,EAAA0nB,sBAQAsF,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,UAIAn4B,KAAAH,EACAC,KAAAH,EACAI,KAAAH,EAEAC,IAAAi4B,GAAA93B,IAAAi4B,IAEAntB,EAAAquB,sBAAAzX,EAAA4C,QAAAzkB,GAAA6hB,EAAA4C,QAAAtkB,IAEA83B,EAAAj4B,EACAo4B,EAAAj4B,GAIAL,IAAAo4B,GAAAn4B,IAAAo4B,GAAAl4B,IAAAo4B,GAAAn4B,IAAAo4B,IAEArtB,EAAAsuB,kBAAA1X,EAAA4C,QAAA3kB,GAAA+hB,EAAA4C,QAAA1kB,GAAA8hB,EAAA4C,QAAAxkB,GAAA4hB,EAAA4C,QAAAvkB,IAEAg4B,EAAAp4B,EACAq4B,EAAAp4B,EACAs4B,EAAAp4B,EACAq4B,EAAAp4B,GAMA83B,EAAAt4B,EACA64B,EAAAt3B,EA8BA,SAAAw4B,EAAAtkB,GAEAqjB,IAAArjB,IAEAA,EAEAlK,EAAAyuB,UAAAzuB,EAAA0uB,IAIA1uB,EAAAyuB,UAAAzuB,EAAA2uB,KAIApB,EAAArjB,GAMA,SAAA0kB,EAAAC,GAEAA,IAAA5zE,GAEA6lC,EAAAkf,EAAA4V,WAEAiZ,IAAArB,IAEAqB,IAAA3zE,EAEA8kD,EAAA6uB,SAAA7uB,EAAA8uB,MAEKD,IAAA1zE,EAEL6kD,EAAA6uB,SAAA7uB,EAAA+uB,OAIA/uB,EAAA6uB,SAAA7uB,EAAAgvB,kBAQAhuC,EAAAgf,EAAA4V,WAIA4X,EAAAqB,EAgBA,SAAAI,EAAAt5B,EAAAu5B,EAAAxsB,GAEA/M,GAEA7U,EAAAkf,EAAAmvB,qBAEAzB,IAAAwB,GAAAvB,IAAAjrB,IAEA1C,EAAArK,cAAAu5B,EAAAxsB,GAEAgrB,EAAAwB,EACAvB,EAAAjrB,IAMA1hB,EAAAgf,EAAAmvB,qBAsBA,SAAApZ,EAAAqZ,YAEAA,MAAApvB,EAAAgW,SAAAgT,EAAA,GAEAgF,IAAAoB,IAEApvB,EAAA+V,cAAAqZ,GACApB,EAAAoB,GAyHA,OAvhBAhB,EAAApuB,EAAA+Y,YAAAF,EAAA7Y,EAAA+Y,WAAA/Y,EAAA+Y,WAAA,GACAqV,EAAApuB,EAAAkc,kBAAArD,EAAA7Y,EAAAkc,iBAAAlc,EAAAsc,4BAAA,GAIAyN,EAAAtW,SAAA,SACA92C,EAAA82C,SAAA,GACA72C,EAAA62C,SAAA,GAEA3yB,EAAAkf,EAAA0qB,YACA/tD,EAAAiuD,QAAAvtE,IAEAmxE,MACAI,EAAA1zE,GACA4lC,EAAAkf,EAAA4V,WAEA90B,EAAAkf,EAAAuT,OACA8C,EAAAx6D,IAwgBA23D,SACA96B,MAAAqxC,EACA5qC,MAAAxiB,EACAmkD,QAAAlkD,GAGA64C,eA1gBA,WAEA,QAAA/jE,EAAA,EAAAC,EAAA+6E,EAAAp1E,OAA4C5F,EAAAC,EAAOD,IAEnDg7E,EAAAh7E,GAAA,GAugBAgkE,gBAjgBA,SAAAxsD,GAEAwjE,EAAAxjE,GAAA,EAEA,IAAAyjE,EAAAzjE,KAEA82C,EAAAqvB,wBAAAnmE,GACAyjE,EAAAzjE,GAAA,GAIA,IAAA0jE,EAAA1jE,KAEA4tC,EAAAtkD,IAAA,0BAEA88E,yBAAApmE,EAAA,GACA0jE,EAAA1jE,GAAA,IAkfAqmE,0BA5eA,SAAArmE,EAAAsmE,GAEA9C,EAAAxjE,GAAA,EAEA,IAAAyjE,EAAAzjE,KAEA82C,EAAAqvB,wBAAAnmE,GACAyjE,EAAAzjE,GAAA,GAIA0jE,EAAA1jE,KAAAsmE,IAEA14B,EAAAtkD,IAAA,0BAEA88E,yBAAApmE,EAAAsmE,GACA5C,EAAA1jE,GAAAsmE,IA6dA7Z,wBAvdA,WAEA,QAAAjkE,EAAA,EAAAC,EAAAg7E,EAAAr1E,OAAgD5F,IAAAC,IAASD,EAEzDi7E,EAAAj7E,KAAAg7E,EAAAh7E,KAEAsuD,EAAAyvB,yBAAA/9E,GACAi7E,EAAAj7E,GAAA,IAidAovC,SACAE,UACAo5B,4BArbA,WAEA,UAAAyS,IAEAA,KAEA/1B,EAAAtkD,IAAA,mCACAskD,EAAAtkD,IAAA,kCACAskD,EAAAtkD,IAAA,kCACAskD,EAAAtkD,IAAA,kCAIA,IAFA,IAAAk9E,EAAA1vB,EAAA79B,aAAA69B,EAAA2vB,4BAEAj+E,EAAA,EAAoBA,EAAAg+E,EAAAp4E,OAAoB5F,IAExCm7E,EAAA7yE,KAAA01E,EAAAh+E,IAQA,OAAAm7E,GAgaArX,WA5ZA,SAAA1R,GAEA,OAAAgpB,IAAAhpB,IAEA9D,EAAAwV,WAAA1R,GAEAgpB,EAAAhpB,OAwZAuS,cACAuZ,YAtRA,SAAArqC,EAAAsqC,GAEAtqC,EAAAmP,OAAAl5C,EACAwlC,EAAAgf,EAAA4V,WACA90B,EAAAkf,EAAA4V,WAEA,IAAA1L,EAAA3kB,EAAAmP,OAAAn5C,EACAs0E,IAAA3lB,MAEAskB,EAAAtkB,QAEA3kB,EAAAqP,YACAyhB,EAAA9wB,EAAAkP,SAAAlP,EAAAwP,cAAAxP,EAAAsP,SAAAtP,EAAAuP,SAAAvP,EAAA2P,mBAAA3P,EAAAyP,cAAAzP,EAAA0P,cAAA1P,EAAAyQ,oBACAqgB,EAAAz6D,GAEA+gB,EAAAiuD,QAAArlC,EAAA4P,WACAx4B,EAAA+2C,QAAAnuB,EAAA6P,WACAz4B,EAAA25C,QAAA/wB,EAAA8P,YACA00B,EAAAzT,QAAA/wB,EAAAmQ,YAEAu5B,EAAA1pC,EAAAoQ,cAAApQ,EAAAqQ,oBAAArQ,EAAAsQ,qBAoQA24B,eACAI,cAEAkB,aA3MA,SAAAnqE,GAEAA,IAAA8nE,IAEAI,GAAA7tB,EAAA+vB,UAAApqE,GAEA8nE,EAAA9nE,IAsMAspE,mBAEAtb,eA3KA,SAAAp3C,GAEAA,EAEAukB,EAAAkf,EAAAgwB,cAIAhvC,EAAAgf,EAAAgwB,eAqKAja,gBACA+C,YAjJA,SAAAmX,EAAAhT,GAEA,OAAA+Q,GAEAjY,IAIA,IAAAma,EAAAjC,EAAAD,YAEAkC,IAEAA,GAAmBv2E,YAAA8iB,gBACnBwxD,EAAAD,GAAAkC,GAIAA,EAAAv2E,OAAAs2E,GAAAC,EAAAzzD,UAAAwgD,IAEAjd,EAAA8Y,YAAAmX,EAAAhT,GAAAmR,EAAA6B,IAEAC,EAAAv2E,KAAAs2E,EACAC,EAAAzzD,QAAAwgD,IA4HA5C,qBAtHA,WAEA,IAEAra,EAAAqa,qBAAA8V,MAAAnwB,EAAA3oD,WAEG,MAAA9B,GAEHsC,QAAAtC,MAAA,oBAAAA,KA+GA2kE,WAzGA,WAEA,IAEAla,EAAAka,WAAAiW,MAAAnwB,EAAA3oD,WAEG,MAAA9B,GAEHsC,QAAAtC,MAAA,oBAAAA,KAmGA+mB,QA3FA,SAAAA,QAEA4xD,EAAAplE,OAAAwT,KAEA0jC,EAAA1jC,UAAAljB,EAAAkjB,EAAAzhB,EAAAyhB,EAAAxhB,EAAAwhB,EAAAnX,GACA+oE,EAAA3nE,KAAA+V,KAuFAE,SAjFA,SAAAA,QAEA2xD,EAAArlE,OAAA0T,KAEAwjC,EAAAxjC,WAAApjB,EAAAojB,EAAA3hB,EAAA2hB,EAAA1hB,EAAA0hB,EAAArX,GACAgpE,EAAA5nE,KAAAiW,KA8EAk6C,MAtEA,WAEA,QAAAhlE,EAAA,EAAkBA,EAAAi7E,EAAAr1E,OAA8B5F,IAEhD,IAAAi7E,EAAAj7E,KAEAsuD,EAAAyvB,yBAAA/9E,GACAi7E,EAAAj7E,GAAA,GAMA20D,KAEAwmB,EAAA,KAEAmB,EAAA,KACAC,KAEAnB,EAAA,KAEAC,EAAA,KAEAQ,EAAA,KACAC,EAAA,KAEAzD,EAAArT,QACA/5C,EAAA+5C,QACA95C,EAAA85C,UA0uDA,CAAArD,EAAAvc,EAAA8f,KACAt6C,QAAA2mD,GAAA18D,KAAAi9D,IAAAt8D,eAAAo8D,KACA9U,EAAAhyC,SAAAwmD,GAAAz8D,KAAAg9D,IAAAr8D,eAAAo8D,KAEArf,EAAA,IA3iMA,SAAAjE,GAEA,IAKAmT,GACAuF,MAAA,EACA0X,MAAA,EACAC,UAAA,EACA71D,OAAA,EACAqqC,MAAA,GAsDA,OACAoT,QAhEApzB,WAAA,EACAzmB,SAAA,GAgEA+0C,SACA7M,SAAA,KACAgqB,aACA5Z,MAfA,WAEAvD,EAAAuF,QACAvF,EAAAid,MAAA,EACAjd,EAAAkd,UAAA,EACAld,EAAA34C,OAAA,EACA24C,EAAAtO,MAAA,GAUAnwC,OAzDA,SAAA7E,EAAA0gE,EAAAC,GAMA,OAJAA,KAAA,EAEArd,EAAAid,QAEAG,GAEA,KAAAvwB,EAAAwW,UACArD,EAAAkd,WAAAG,GAAA3gE,EAAA,GACA,MAEA,KAAAmwC,EAAAywB,eACA,KAAAzwB,EAAA0wB,aACAvd,EAAAkd,WAAAG,GAAA3gE,EAAA,GACA,MAEA,KAAAmwC,EAAA2wB,MACAxd,EAAAtO,OAAA2rB,GAAA3gE,EAAA,GACA,MAEA,KAAAmwC,EAAA4wB,WACAzd,EAAAtO,OAAA2rB,GAAA3gE,EAAA,GACA,MAEA,KAAAmwC,EAAA6wB,UACA1d,EAAAtO,OAAA2rB,EAAA3gE,EACA,MAEA,KAAAmwC,EAAA8wB,OACA3d,EAAA34C,QAAAg2D,EAAA3gE,EACA,MAEA,QACAhY,QAAAtC,MAAA,sCAAAg7E,MA0/LA,CAAAld,GACAz2B,EAAA,IAhsIA,WAEA,IAAAA,EAAA,IAAAm0C,QAmCA,OACAv+E,IAlCA,SAAAM,GAEA,IAAAwD,EAAAsmC,EAAApqC,IAAAM,GASA,gBAPAwD,IAEAA,KACAsmC,EAAAh3B,IAAA9S,EAAAwD,IAIAA,GAwBA0tC,OApBA,SAAAlxC,GAEA8pC,EAAAo0C,OAAAl+E,IAmBA4hB,OAfA,SAAA5hB,EAAAyE,EAAA7E,GAEAkqC,EAAApqC,IAAAM,GAAAyE,GAAA7E,GAcA0sB,QAVA,WAEAwd,EAAA,IAAAm0C,WAgqIA3yD,EAAA,IAAAu4C,GAAAtD,EAAAvc,EAAA0X,EAAA5xB,EAAAypB,EAAAuQ,GAAA3S,GACAliC,EAAA,IA3xbA,SAAAi+B,GAEA,IAAAwT,EAAA,IAAAud,QAyIA,OAEAv+E,IA9CA,SAAA0W,GAIA,OAFAA,EAAAwpC,+BAAAxpC,IAAAgU,MAEAs2C,EAAAhhE,IAAA0W,IA2CA86B,OAvCA,SAAA96B,GAEAA,EAAAwpC,+BAAAxpC,IAAAgU,MAEA,IAAAA,EAAAs2C,EAAAhhE,IAAA0W,GAEAgU,IAEA8iC,EAAAixB,aAAA/zD,EAAAg0D,QAEA1d,EAAAwd,OAAA9nE,KA8BAwL,OAxBA,SAAAxL,EAAAioE,GAEAjoE,EAAAwpC,+BAAAxpC,IAAAgU,MAEA,IAAAA,EAAAs2C,EAAAhhE,IAAA0W,YAEAgU,EAEAs2C,EAAA5tD,IAAAsD,EA3HA,SAAAA,EAAAioE,GAEA,IAAA52E,EAAA2O,EAAA3O,MACA62E,EAAAloE,EAAA++B,QAAA+X,EAAAqxB,aAAArxB,EAAA+U,YAEAmc,EAAAlxB,EAAA2U,eAEA3U,EAAA4U,WAAAuc,EAAAD,GACAlxB,EAAA8U,WAAAqc,EAAA52E,EAAA62E,GAEAloE,EAAA4lC,mBAEA,IAAAn1C,EAAAqmD,EAAA8V,MAoCA,OAlCAv7D,aAAA0uC,aAEAtvC,EAAAqmD,EAAA8V,MAEGv7D,aAAA4uC,aAEHtxC,QAAA6O,KAAA,wEAEGnM,aAAAouC,YAEHhvC,EAAAqmD,EAAAyW,eAEGl8D,aAAAkuC,WAEH9uC,EAAAqmD,EAAAymB,MAEGlsE,aAAAwuC,YAEHpvC,EAAAqmD,EAAA2mB,aAEGpsE,aAAAsuC,WAEHlvC,EAAAqmD,EAAA0mB,IAEGnsE,aAAA6tC,UAEHzuC,EAAAqmD,EAAAwmB,KAEGjsE,aAAApG,aAEHwF,EAAAqmD,EAAAomB,gBAKA8K,SACAv3E,OACA23E,gBAAA/2E,EAAAg3E,kBACAt1D,QAAA/S,EAAA+S,SApDA,CA2HA/S,EAAAioE,IAEGj0D,EAAAjB,QAAA/S,EAAA+S,UApEH,SAAAi1D,EAAAhoE,EAAAioE,GAEA,IAAA52E,EAAA2O,EAAA3O,MACA2tC,EAAAh/B,EAAAg/B,YAEA8X,EAAA4U,WAAAuc,EAAAD,QAEAhoE,EAAA++B,QAEA+X,EAAA8U,WAAAqc,EAAA52E,EAAAylD,EAAA+U,cAEG,IAAA7sB,EAAAr4B,MAIHmwC,EAAAwxB,cAAAL,EAAA,EAAA52E,GAEG,IAAA2tC,EAAAr4B,MAEHhY,QAAAtC,MAAA,4KAIAyqD,EAAAwxB,cAAAL,EAAAjpC,EAAAt0C,OAAA2G,EAAAg3E,kBACAh3E,EAAAk3E,SAAAvpC,EAAAt0C,OAAAs0C,EAAAt0C,OAAAs0C,EAAAr4B,QAEAq4B,EAAAr4B,OAAA,GA1BA,CAsEAqN,EAAAg0D,OAAAhoE,EAAAioE,GAEAj0D,EAAAjB,QAAA/S,EAAA+S,WAspbA,CAAAo3C,GACAxuB,EAAA,IAryMA,SAAAmb,EAAAj+B,EAAAkiC,GAEA,IAAApf,KACA6sC,KAEA,SAAAC,EAAAr3E,GAEA,IAAAqnB,EAAArnB,EAAAxD,OACA86E,EAAA/sC,EAAAljB,EAAAuiB,IAQA,QAAAjyC,KANA,OAAA2/E,EAAAp4E,OAEAuoB,EAAAiiB,OAAA4tC,EAAAp4E,OAIAo4E,EAAA7vD,WAEAA,EAAAiiB,OAAA4tC,EAAA7vD,WAAA9vB,IAIA0vB,EAAAznB,oBAAA,UAAAy3E,UAEA9sC,EAAAljB,EAAAuiB,IAIA,IAAAh7B,EAAAwoE,EAAA/vD,EAAAuiB,IAEAh7B,IAEA6Y,EAAAiiB,OAAA96B,UACAwoE,EAAA/vD,EAAAuiB,MAIAh7B,EAAAwoE,EAAAE,EAAA1tC,OAIAniB,EAAAiiB,OAAA96B,UACAwoE,EAAAE,EAAA1tC,KAMA+f,EAAAgU,OAAApzB,aA8HA,OAEAryC,IA5HA,SAAAM,EAAA6uB,GAEA,IAAAiwD,EAAA/sC,EAAAljB,EAAAuiB,IAEA,OAAA0tC,IAEAjwD,EAAAjoB,iBAAA,UAAAi4E,GAEAhwD,EAAAG,iBAEA8vD,EAAAjwD,EAEGA,EAAAC,sBAEHD,EAAAkwD,kBAEAlwD,EAAAkwD,qBAAArhC,IAAAxvB,cAAAluB,IAIA8+E,EAAAjwD,EAAAkwD,iBAIAhtC,EAAAljB,EAAAuiB,IAAA0tC,EAEA3tB,EAAAgU,OAAApzB,aAEA+sC,IAiGAl9D,OA7FA,SAAAiN,GAEA,IAAAnoB,EAAAmoB,EAAAnoB,MACAs4E,EAAAnwD,EAAAI,WAQA,QAAA9vB,KANA,OAAAuH,GAEAuoB,EAAArN,OAAAlb,EAAAwmD,EAAAgV,sBAIA8c,EAEA/vD,EAAArN,OAAAo9D,EAAA7/E,GAAA+tD,EAAA6U,cAMA,IAAApkB,EAAA9uB,EAAA8uB,gBAEA,QAAAx+C,KAAAw+C,EAIA,IAFA,IAAAl2C,EAAAk2C,EAAAx+C,GAEAP,EAAA,EAAAC,EAAA4I,EAAAjD,OAAqC5F,EAAAC,EAAOD,IAE5CqwB,EAAArN,OAAAna,EAAA7I,GAAAsuD,EAAA6U,eAoEAkd,sBA5DA,SAAApwD,GAEA,IAAAzY,EAAAwoE,EAAA/vD,EAAAuiB,IAEA,GAAAh7B,EAAA,OAAAA,EAEA,IAuBA3O,EAvBAuvC,KAEAkoC,EAAArwD,EAAAnoB,MACAs4E,EAAAnwD,EAAAI,WAIA,UAAAiwD,EAIA,IAFA,IAEAtgF,EAAA,EAAAC,GAFA4I,EAAAy3E,EAAAz3E,OAEAjD,OAAqC5F,EAAAC,EAAOD,GAAA,GAE5C,IAAA0D,EAAAmF,EAAA7I,EAAA,GACA2D,EAAAkF,EAAA7I,EAAA,GACAK,EAAAwI,EAAA7I,EAAA,GAEAo4C,EAAA9vC,KAAA5E,EAAAC,IAAAtD,IAAAqD,QAQA,IAAA1D,EAAA,EAAAC,GAFA4I,EAAAu3E,EAAA//D,SAAAxX,OAEAjD,OAAA,IAAiD5F,EAAAC,EAAOD,GAAA,EAExD0D,EAAA1D,EAAA,EACA2D,EAAA3D,EAAA,EACAK,EAAAL,EAAA,EAEAo4C,EAAA9vC,KAAA5E,EAAAC,IAAAtD,IAAAqD,GAcA,OANA8T,EAAA,IAAAugC,GAAAK,GAAA,MAAAhB,GAAAJ,IAAAoB,EAAA,GAEA/nB,EAAArN,OAAAxL,EAAA82C,EAAAgV,sBAEA0c,EAAA/vD,EAAAuiB,IAAAh7B,EAEAA,IA2nMA,CAAAmqD,EAAAtxC,EAAAkiC,GACA+d,EAAA,IAl3LA,SAAAn9B,EAAAof,GAEA,IAAAguB,KAmCA,OAEAv9D,OAnCA,SAAA5hB,GAEA,IAAA4lE,EAAAzU,EAAAkP,OAAAuF,MAEA/2C,EAAA7uB,EAAA6uB,SACAiwD,EAAA/sC,EAAAryC,IAAAM,EAAA6uB,GAkBA,OAdAswD,EAAAL,EAAA1tC,MAAAw0B,IAEA/2C,EAAAC,YAEAgwD,EAAA1+B,iBAAApgD,GAIA+xC,EAAAnwB,OAAAk9D,GAEAK,EAAAL,EAAA1tC,IAAAw0B,GAIAkZ,GAaAxyD,QATA,WAEA6yD,OAi1LA,CAAAptC,EAAAof,GACAme,EAAA,IA19LA,SAAApiB,GAEA,IAAAkyB,KACAxzB,EAAA,IAAAzV,aAAA,GAwFA,OAEAv0B,OAxFA,SAAA5hB,EAAA6uB,EAAA4jB,EAAAue,GAEA,IAAAquB,EAAAr/E,EAAAiqD,sBAEAzlD,EAAA66E,EAAA76E,OAEA86E,EAAAF,EAAAvwD,EAAAuiB,IAEA,YAAAkuC,EAAA,CAIAA,KAEA,QAAA1gF,EAAA,EAAmBA,EAAA4F,EAAY5F,IAE/B0gF,EAAA1gF,MAAA,GAIAwgF,EAAAvwD,EAAAuiB,IAAAkuC,EAIA,IAAAnrC,EAAA1B,EAAA0B,cAAAtlB,EAAA8uB,gBAAA1+B,SACAm1B,EAAA3B,EAAA2B,cAAAvlB,EAAA8uB,gBAAAx3B,OAIA,IAAAvnB,EAAA,EAAkBA,EAAA4F,EAAY5F,IAI9B,KAFAktD,EAAAwzB,EAAA1gF,IAEA,KAEAu1C,GAAAtlB,EAAAixB,gBAAA,cAAAlhD,GACAw1C,GAAAvlB,EAAAixB,gBAAA,cAAAlhD,IAQA,IAAAA,EAAA,EAAkBA,EAAA4F,EAAY5F,KAE9BktD,EAAAwzB,EAAA1gF,IAEA,GAAAA,EACAktD,EAAA,GAAAuzB,EAAAzgF,GAQA,IAJA0gF,EAAAhlC,KAAAyK,IAIAnmD,EAAA,EAAkBA,EAAA,EAAOA,IAAA,CAEzB,IAAAktD,EAEA,GAFAA,EAAAwzB,EAAA1gF,GAEA,CAEA,IAAA8H,EAAAolD,EAAA,GACAlsD,EAAAksD,EAAA,GAEA,GAAAlsD,EAAA,CAEAu0C,GAAAtlB,EAAAuwB,aAAA,cAAAxgD,EAAAu1C,EAAAztC,IACA0tC,GAAAvlB,EAAAuwB,aAAA,cAAAxgD,EAAAw1C,EAAA1tC,IAEAklD,EAAAhtD,GAAAgB,EACA,UAMAgsD,EAAAhtD,GAAA,EAIAoyD,EAAAkJ,cAAAlK,SAAA9C,EAAA,wBAAAtB,KAm4LA,CAAA2U,GACA4O,EAAA,IAAA7b,GAAAoc,GAAA1rB,EAAAuP,GACA6b,EAAA,IA/hIA,WAEA,IAAAmQ,KA0BA,OACA7/E,IAzBA,SAAA27D,EAAAl2C,GAEA,IAAAo2B,EAAA8f,EAAAjqB,GAAA,IAAAjsB,EAAAisB,GACAouC,EAAAD,EAAAhkC,GAWA,gBATAikC,IAIAA,EAAA,IAvFA,WAEA,IAAAC,KACAC,EAAA,EAEAC,KACA79B,KAwDA,OACA69B,SACA79B,cAEAob,KA1DA,WAEAwiB,EAAA,EAEAC,EAAAn7E,OAAA,EACAs9C,EAAAt9C,OAAA,GAsDA0C,KAlDA,SAAAlH,EAAA6uB,EAAA4jB,EAAAzqC,EAAAuvC,GAEA,IAAAqoC,EAAAH,EAAAC,YAEAE,GAEAA,GACAxuC,GAAApxC,EAAAoxC,GACApxC,SACA6uB,WACA4jB,WACAue,QAAAve,EAAAue,QACA9hB,YAAAlvC,EAAAkvC,YACAlnC,IACAuvC,SAGAkoC,EAAAC,GAAAE,IAIAA,EAAAxuC,GAAApxC,EAAAoxC,GACAwuC,EAAA5/E,SACA4/E,EAAA/wD,WACA+wD,EAAAntC,WACAmtC,EAAA5uB,QAAAve,EAAAue,QACA4uB,EAAA1wC,YAAAlvC,EAAAkvC,YACA0wC,EAAA53E,IACA43E,EAAAroC,eAIA9E,EAAAqP,cAAA69B,GAAAz4E,KAAA04E,GAEAF,KAkBAplC,KAdA,WAEAqlC,EAAAn7E,OAAA,GAAAm7E,EAAArlC,KAAAqgB,IACA7Y,EAAAt9C,OAAA,GAAAs9C,EAAAxH,KAAAsgB,OA8BA2kB,EAAAhkC,GAAAikC,GAIAA,GAYAlzD,QARA,WAEAizD,QAwgIAnkB,EAAA,IAAAD,GAEAkU,EAAA,IAhzNA,SAAAtiB,EAAA2O,EAAA3pB,EAAAmR,GAEA,IAGA28B,EAAAC,EACAC,EAJAvI,EAAA,IAAAxyC,GAAA,GACAg7C,EAAA,EAqFA,SAAArf,EAAA/6B,EAAA/vB,GAEA6lD,EAAAgF,QAAA96B,MAAA+6B,SAAA/6B,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,EAAAsT,EAAAqtC,GAIA,OAEA+8B,cAAA,WAEA,OAAAzI,GAGA0I,cAAA,SAAAt6C,EAAA/vB,GAEA2hE,EAAA1kE,IAAA8yB,GAEA+6B,EAAA6W,EADAwI,WAAAnqE,IAAA,IAIAsqE,cAAA,WAEA,OAAAH,GAGAI,cAAA,SAAAvqE,GAGA8qD,EAAA6W,EADAwI,EAAAnqE,IAIAwqD,OA/GA,SAAAggB,EAAAhlB,EAAAl2C,EAAAm7D,GAEA,IAAAjR,EAAAhU,EAAAgU,WAEA,OAAAA,EAEA1O,EAAA6W,EAAAwI,GAEG3Q,KAAA5zC,UAEHklC,EAAA0O,EAAA,GACAiR,OAIAvzB,EAAA4hB,WAAA2R,IAEAvzB,EAAAqU,MAAArU,EAAA6hB,eAAA7hB,EAAA8hB,eAAA9hB,EAAA+hB,kBAIAO,KAAApjB,wBAEA8zB,KAEAA,EAAA,IAAAn7B,GACA,IAAA3G,GAAA,OACA,IAAA2F,IACAzoB,SAAAkQ,GAAAiB,KAAAnR,SACAoQ,aAAAF,GAAAiB,KAAAf,aACAC,eAAAH,GAAAiB,KAAAd,eACAoW,KAAAn5C,EACA65C,aACAC,cACAjZ,WAIAza,SAAAixB,gBAAA,UACAigC,EAAAlxD,SAAAixB,gBAAA,MAEAigC,EAAAhwC,eAAA,SAAAgd,EAAAsO,EAAAl2C,GAEAjjB,KAAAmjB,YAAAtN,aAAAoN,EAAAE,cAIA0sB,EAAAnwB,OAAAm+D,EAAAlxD,WAIAkxD,EAAAttC,SAAAtX,SAAAoR,MAAA3sC,MAAAyvE,EAEAgR,EAAAn5E,KAAA64E,IAAAlxD,SAAAkxD,EAAAttC,SAAA,SAEG48B,KAAApkD,qBAEH40D,IAEAA,EAAA,IAAAvwC,IAAA,cAEAwwC,EAAA,IAAAl7B,GACA,IAAAtF,GAAA,KACA,IAAA8D,IAA6Bd,aAAAC,cAAAjZ,UAG7ByI,EAAAnwB,OAAAk+D,EAAAjxD,WAIAixD,EAAArtC,SAAAjvC,IAAA6rE,EAIAtiB,EAAAoT,mBAAA0f,EAAA,KAAAC,EAAAjxD,SAAAixD,EAAArtC,SAAAqtC,EAAA,SA8tNA,CAAApQ,GAAAhU,EAAA3pB,EAAAo8B,GAEAoB,EAAA,IAjrNA,SAAAriB,EAAAlJ,EAAAmN,GAEA,IAAAssB,EA+CAv7E,KAAAq+E,QA7CA,SAAA3gF,GAEA69E,EAAA79E,GA4CAsC,KAAAm+D,OAxCA,SAAAzuC,EAAA7U,GAEAmwC,EAAAszB,WAAA/C,EAAA7rD,EAAA7U,GAEAo0C,EAAAvvC,OAAA7E,EAAA0gE,IAqCAv7E,KAAAu+E,gBAjCA,SAAA5xD,EAAA+C,EAAA7U,GAEA,IAAA0qD,EAAAzjB,EAAAtkD,IAAA,0BAEA,UAAA+nE,EAAA,CAOA,IAAAxoD,EAAA4P,EAAAI,WAAAhQ,SAEAA,EAAA2gC,8BAEA7iC,EAAAkC,EAAAmL,KAAArN,MAEA0qD,EAAAiZ,yBAAAjD,EAAA,EAAA1gE,EAAA8R,EAAA8xD,oBAIAlZ,EAAAiZ,yBAAAjD,EAAA7rD,EAAA7U,EAAA8R,EAAA8xD,mBAIAxvB,EAAAvvC,OAAA7E,EAAA0gE,EAAA5uD,EAAA8xD,wBAnBA57E,QAAAtC,MAAA,mIAypNA,CAAA89D,EAAAvc,EAAAmN,GACAqe,EAAA,IAlnMA,SAAAtiB,EAAAlJ,EAAAmN,GAEA,IAAAssB,EAQA52E,EAAA23E,EAoCAt8E,KAAAq+E,QA1CA,SAAA3gF,GAEA69E,EAAA79E,GAyCAsC,KAAAi9C,SAnCA,SAAAv/C,GAEAiH,EAAAjH,EAAAiH,KACA23E,EAAA5+E,EAAA4+E,iBAiCAt8E,KAAAm+D,OA7BA,SAAAzuC,EAAA7U,GAEAmwC,EAAAuW,aAAAga,EAAA1gE,EAAAlW,EAAA+qB,EAAA4sD,GAEArtB,EAAAvvC,OAAA7E,EAAA0gE,IA0BAv7E,KAAAu+E,gBAtBA,SAAA5xD,EAAA+C,EAAA7U,GAEA,IAAA0qD,EAAAzjB,EAAAtkD,IAAA,0BAEA,OAAA+nE,GAOAA,EAAAmZ,2BAAAnD,EAAA1gE,EAAAlW,EAAA+qB,EAAA4sD,EAAA3vD,EAAA8xD,mBAEAxvB,EAAAvvC,OAAA7E,EAAA0gE,EAAA5uD,EAAA8xD,oBAPA57E,QAAAtC,MAAA,0IAilMA,CAAA89D,EAAAvc,EAAAmN,GAEAse,GAAA,IAAAlO,GAAAmO,GAAAnP,EAAA7E,EAAApwC,EAAAioC,GAEApC,EAAAqC,SAAA2b,EAAA3b,SAEAkc,GAAA1jD,QAAAu0C,EACAmP,GAAAnc,eACAmc,GAAA1rB,aACA0rB,GAAA5lC,aACA4lC,GAAAN,cACAM,GAAAhU,QACAgU,GAAAve,OAIA2hB,KAIA,IAAA+N,GAAA,IAAAjW,GAAA8E,IAEAxtE,KAAA2+E,MAIA,IAAA9pB,GAAA,IAAAyG,GAAAkS,GAAAR,EAAA3b,EAAAoK,gBAyNA,SAAA6U,GAAAhrE,GAEAA,EAAAs5E,iBAEA/7E,QAAA+M,IAAA,sCAEA69D,MAIA,SAAA8C,KAEA1tE,QAAA+M,IAAA,0CAEA69D,MAEAmD,KAIA,SAAAiO,GAAAv5E,GAEA,IAAAirC,EAAAjrC,EAAAxD,OAEAyuC,EAAArrC,oBAAA,UAAA25E,IAQA,SAAAtuC,GAEAuuC,GAAAvuC,GAEA3I,EAAAoH,OAAAuB,GAJA,CANAA,GAeA,SAAAuuC,GAAAvuC,GAEA,IAAAilB,EAAA5tB,EAAApqC,IAAA+yC,GAAAue,QAEAve,EAAAue,oBAAApnC,IAEA8tC,GAEAyX,EAAA1U,eAAA/C,GAxQAx1D,KAAA60D,aAIA70D,KAAA+pB,WAAA,WAEA,OAAAs0C,GAIAr+D,KAAA++E,qBAAA,WAEA,OAAA1gB,EAAA0gB,wBAIA/+E,KAAAg/E,iBAAA,WAEA,IAAAzZ,EAAAzjB,EAAAtkD,IAAA,sBACA+nE,KAAA0Z,eAIAj/E,KAAAk/E,oBAAA,WAEA,IAAA3Z,EAAAzjB,EAAAtkD,IAAA,sBACA+nE,KAAA4Z,kBAIAn/E,KAAAgqE,cAAA,WAEA,OAAAsE,IAIAtuE,KAAAo/E,cAAA,SAAA1hF,YAEAA,IAEA4wE,GAAA5wE,EAEAsC,KAAA6qB,QAAAujD,GAAAC,SAIAruE,KAAAosB,QAAA,WAEA,OACAzb,MAAAy9D,GACAv9D,OAAAw9D,KAKAruE,KAAA6qB,QAAA,SAAAla,EAAAE,EAAAwuE,GAEA,IAAA1W,EAAAgW,GAAAxU,YAEAxB,KAAAgB,aAEA9mE,QAAA6O,KAAA,0EAKA08D,GAAAz9D,EACA09D,GAAAx9D,EAEAgxD,EAAAlxD,QAAA29D,GACAzM,EAAAhxD,SAAAy9D,QAEA+Q,IAEAxd,EAAAx+B,MAAA1yB,QAAA,KACAkxD,EAAAx+B,MAAAxyB,SAAA,MAIA7Q,KAAAs/E,YAAA,IAAA3uE,EAAAE,KAIA7Q,KAAAu/E,qBAAA,WAEA,OACA5uE,MAAAy9D,GAAAE,GACAz9D,OAAAw9D,GAAAC,KAKAtuE,KAAAiqE,qBAAA,SAAAt5D,EAAAE,EAAA2uE,GAEApR,GAAAz9D,EACA09D,GAAAx9D,EAEAy9D,GAAAkR,EAEA3d,EAAAlxD,QAAA6uE,EACA3d,EAAAhxD,SAAA2uE,EAEAx/E,KAAAs/E,YAAA,IAAA3uE,EAAAE,IAIA7Q,KAAAy/E,mBAAA,WAEA,OAAAzR,IAIAhuE,KAAAs/E,YAAA,SAAAl7E,EAAAyB,EAAA8K,EAAAE,GAEA09D,GAAA39D,IAAAxM,EAAAiqE,GAAAxoE,EAAAgL,EAAAF,EAAAE,GACA2oD,EAAAhyC,SAAAwmD,GAAAz8D,KAAAg9D,IAAAr8D,eAAAo8D,MAIAtuE,KAAA0/E,WAAA,SAAAt7E,EAAAyB,EAAA8K,EAAAE,GAEA29D,GAAA59D,IAAAxM,EAAAiqE,GAAAxoE,EAAAgL,EAAAF,EAAAE,GACA2oD,EAAAlyC,QAAA2mD,GAAA18D,KAAAi9D,IAAAt8D,eAAAo8D,MAIAtuE,KAAA2+D,eAAA,SAAAghB,GAEAnmB,EAAAmF,eAAA8P,GAAAkR,IAMA3/E,KAAA+9E,cAAA,WAEA,OAAA5Q,EAAA4Q,iBAIA/9E,KAAAg+E,cAAA,WAEA7Q,EAAA6Q,cAAA7C,MAAAhO,EAAA9qE,YAIArC,KAAAi+E,cAAA,WAEA,OAAA9Q,EAAA8Q,iBAIAj+E,KAAAk+E,cAAA,WAEA/Q,EAAA+Q,cAAA/C,MAAAhO,EAAA9qE,YAIArC,KAAAk/D,MAAA,SAAAx7B,EAAAyG,EAAA2hC,GAEA,IAAA8T,EAAA,YAEAl8C,QAAAk8C,GAAAvhB,EAAAwhB,4BACA11C,QAAAy1C,GAAAvhB,EAAAyhB,4BACAhU,QAAA8T,GAAAvhB,EAAA0hB,oBAEA1hB,EAAAa,MAAA0gB,IAIA5/E,KAAAs1E,WAAA,WAEAt1E,KAAAk/D,UAAA,OAIAl/D,KAAAq2E,WAAA,WAEAr2E,KAAAk/D,UAAA,OAIAl/D,KAAAw3E,aAAA,WAEAx3E,KAAAk/D,UAAA,OAIAl/D,KAAAggF,YAAA,SAAA7c,EAAAz/B,EAAAyG,EAAA2hC,GAEA9rE,KAAAi/D,gBAAAkE,GACAnjE,KAAAk/D,MAAAx7B,EAAAyG,EAAA2hC,IAMA9rE,KAAAoqB,QAAA,WAEAy3C,EAAA38D,oBAAA,mBAAAorE,OACAzO,EAAA38D,oBAAA,uBAAAqrE,OAEArD,EAAA9iD,UACA8uC,EAAA9uC,UACAwd,EAAAxd,UACA4iD,EAAA5iD,UAEAu0D,GAAAv0D,UAEA61D,MAyEAjgF,KAAAkgF,sBAAA,SAAApiF,EAAAgxD,EAAAve,GAEAipB,EAAAiH,iBAEA,IAAAjC,EAAA52B,EAAApqC,IAAAM,GAEAA,EAAAqiF,eAAA3hB,EAAAzhD,WAAAyhD,EAAAzhD,SAAAshD,EAAAsB,gBACA7hE,EAAAsiF,aAAA5hB,EAAAv6C,SAAAu6C,EAAAv6C,OAAAo6C,EAAAsB,gBACA7hE,EAAAuiF,SAAA7hB,EAAAl0C,KAAAk0C,EAAAl0C,GAAA+zC,EAAAsB,gBACA7hE,EAAAwiF,YAAA9hB,EAAA96B,QAAA86B,EAAA96B,MAAA26B,EAAAsB,gBAEA,IAAA4gB,EAAAzxB,EAAAmJ,gBAYA,GAVAn6D,EAAAqiF,eAEA9hB,EAAAuB,WAAAvB,EAAAwB,aAAArB,EAAAzhD,UACAshD,EAAAyB,WAAAzB,EAAAwB,aAAA/hE,EAAA0iF,cAAAniB,EAAAge,cAEA7iB,EAAAkH,gBAAA6f,EAAAxjE,UACAshD,EAAAwC,oBAAA0f,EAAAxjE,SAAA,EAAAshD,EAAAyC,SAAA,MAIAhjE,EAAAsiF,WAAA,CAIA,GAFA/hB,EAAAuB,WAAAvB,EAAAwB,aAAArB,EAAAv6C,SAEAssB,EAAAkwC,sBACAlwC,EAAAmwC,yBACAnwC,EAAAowC,2BACApwC,EAAAoP,YAEA,QAAAjjD,EAAA,EAAAC,EAAA,EAAAmB,EAAA+c,MAA0Cne,EAAAC,EAAOD,GAAA,GAEjD,IAAA6I,EAAAzH,EAAA8iF,YAEAC,GAAAt7E,EAAA7I,EAAA,GAAA6I,EAAA7I,EAAA,GAAA6I,EAAA7I,EAAA,MACAokF,GAAAv7E,EAAA7I,EAAA,GAAA6I,EAAA7I,EAAA,GAAA6I,EAAA7I,EAAA,MACAqkF,GAAAx7E,EAAA7I,EAAA,GAAA6I,EAAA7I,EAAA,GAAA6I,EAAA7I,EAAA,MAEA6I,EAAA7I,EAAA,GAAAmkF,EACAt7E,EAAA7I,EAAA,GAAAokF,EACAv7E,EAAA7I,EAAA,GAAAqkF,EAEAx7E,EAAA7I,EAAA,GAAAmkF,EACAt7E,EAAA7I,EAAA,GAAAokF,EACAv7E,EAAA7I,EAAA,GAAAqkF,EAEAx7E,EAAA7I,EAAA,GAAAmkF,EACAt7E,EAAA7I,EAAA,GAAAokF,EACAv7E,EAAA7I,EAAA,GAAAqkF,EAMA1iB,EAAAyB,WAAAzB,EAAAwB,aAAA/hE,EAAA8iF,YAAAviB,EAAAge,cAEA7iB,EAAAkH,gBAAA6f,EAAAt8D,QAEAo6C,EAAAwC,oBAAA0f,EAAAt8D,OAAA,EAAAo6C,EAAAyC,SAAA,KAIAhjE,EAAAuiF,QAAA9vC,EAAAjvC,MAEA+8D,EAAAuB,WAAAvB,EAAAwB,aAAArB,EAAAl0C,IACA+zC,EAAAyB,WAAAzB,EAAAwB,aAAA/hE,EAAAkjF,QAAA3iB,EAAAge,cAEA7iB,EAAAkH,gBAAA6f,EAAAj2D,IAEA+zC,EAAAwC,oBAAA0f,EAAAj2D,GAAA,EAAA+zC,EAAAyC,SAAA,MAIAhjE,EAAAwiF,WAAA/vC,EAAA5C,eAAAlnC,IAEA43D,EAAAuB,WAAAvB,EAAAwB,aAAArB,EAAA96B,OACA26B,EAAAyB,WAAAzB,EAAAwB,aAAA/hE,EAAAmjF,WAAA5iB,EAAAge,cAEA7iB,EAAAkH,gBAAA6f,EAAA78C,OAEA26B,EAAAwC,oBAAA0f,EAAA78C,MAAA,EAAA26B,EAAAyC,SAAA,MAIAtH,EAAAmH,0BAEAtC,EAAAigB,WAAAjgB,EAAAmD,UAAA,EAAA1jE,EAAA+c,OAEA/c,EAAA+c,MAAA,GAIA7a,KAAAi+D,mBAAA,SAAAh7C,EAAAmkB,EAAAza,EAAA4jB,EAAAzyC,EAAAu3C,GAEA,IAAAwlC,EAAA/8E,EAAA25C,QAAA35C,EAAAqlB,YAAAlI,cAAA,EAEAu+C,EAAAohB,YAAArqC,EAAAsqC,GAEA,IAAA/rB,EAAAoyB,GAAAj+D,EAAAmkB,EAAAmJ,EAAAzyC,GACAqjF,EAAAx0D,EAAAuiB,GAAA,IAAA4f,EAAA5f,GAAA,UAAAqB,EAAA6Q,WAEAggC,KAEAD,IAAAtT,KAEAA,GAAAsT,EACAC,MAIAtjF,EAAAiqD,wBAEAqlB,EAAA1tD,OAAA5hB,EAAA6uB,EAAA4jB,EAAAue,GAEAsyB,MAMA,IAWAltE,EAXA1P,EAAAmoB,EAAAnoB,MACAuY,EAAA4P,EAAAI,WAAAhQ,SACAskE,EAAA,OAEA9wC,EAAA6Q,YAEA58C,EAAAqrC,EAAAktC,sBAAApwD,GACA00D,EAAA,GAKA,IAAAx2B,EAAAwiB,EAEA,OAAA7oE,IAEA0P,EAAA6Y,EAAAvvB,IAAAgH,IAEAqmD,EAAAyiB,GACArwB,SAAA/oC,IAIAktE,IAiHA,SAAA7wC,EAAAue,EAAAniC,GAEA,GAAAA,KAAA20D,2BAEA,OAAAx/B,EAAAtkD,IAAA,0BAEAqF,QAAAtC,MAAA,sJAJA,CAWAi5D,EAAAiH,iBAEA,IAAAqc,EAAAnwD,EAAAI,WAEAwzD,EAAAzxB,EAAAmJ,gBAEAspB,EAAAhxC,EAAA4R,uBAEA,QAAAllD,KAAAsjF,EAAA,CAEA,IAAAiB,EAAAjB,EAAAtjF,GAEA,GAAAukF,GAAA,GAEA,IAAAC,EAAA3E,EAAA7/E,GAEA,YAAAwkF,EAAA,CAEA,IAAAzuC,EAAAyuC,EAAAzuC,WACAlnB,EAAA21D,EAAA1uC,SAEA7+B,EAAA6Y,EAAAvvB,IAAAikF,GAIA,YAAAvtE,EAAA,SAEA,IAAAgoE,EAAAhoE,EAAAgoE,OACAv3E,EAAAuP,EAAAvP,KACA23E,EAAApoE,EAAAooE,gBAEA,GAAAmF,EAAA/jC,6BAAA,CAEA,IAAAx1B,EAAAu5D,EAAAv5D,KACAw5D,EAAAx5D,EAAAw5D,OACA9iF,EAAA6iF,EAAA7iF,OAEAspB,KAAAy5D,8BAEAnoB,EAAA+gB,0BAAAiH,EAAAt5D,EAAAsyD,2BAEA7tD,EAAA8xD,oBAEA9xD,EAAA8xD,kBAAAv2D,EAAAsyD,iBAAAtyD,EAAArN,QAMA2+C,EAAAkH,gBAAA8gB,GAIAnjB,EAAAuB,WAAAvB,EAAAwB,aAAAqc,GACA7d,EAAAwC,oBAAA2gB,EAAA11D,EAAAnnB,EAAAquC,EAAA0uC,EAAApF,EAAA19E,EAAA09E,QAIAmF,EAAAG,4BAEApoB,EAAA+gB,0BAAAiH,EAAAC,EAAAjH,2BAEA7tD,EAAA8xD,oBAEA9xD,EAAA8xD,kBAAAgD,EAAAjH,iBAAAiH,EAAA5mE,QAMA2+C,EAAAkH,gBAAA8gB,GAIAnjB,EAAAuB,WAAAvB,EAAAwB,aAAAqc,GACA7d,EAAAwC,oBAAA2gB,EAAA11D,EAAAnnB,EAAAquC,EAAA,UAIK,YAAAuuC,EAAA,CAEL,IAAA7jF,EAAA6jF,EAAAtkF,GAEA,YAAAS,EAEA,OAAAA,EAAA4E,QAEA,OACA+7D,EAAAwjB,gBAAAL,EAAA9jF,GACA,MAEA,OACA2gE,EAAAyjB,gBAAAN,EAAA9jF,GACA,MAEA,OACA2gE,EAAA0jB,gBAAAP,EAAA9jF,GACA,MAEA,QACA2gE,EAAA2jB,gBAAAR,EAAA9jF,MAYA87D,EAAAmH,2BA7HA,CA/GApwB,EAAAue,EAAAniC,GAEA,OAAAnoB,GAEA65D,EAAAuB,WAAAvB,EAAA2B,qBAAA9rD,EAAAgoE,SAQA,IAAA+F,EAAA75D,IAEA,OAAA5jB,EAEAy9E,EAAAz9E,EAAAqW,eAEGkC,IAEHklE,EAAAllE,EAAAlC,OAIA,IAAAqnE,EAAAv1D,EAAA+uB,UAAAhsB,MAAA2xD,EACAc,EAAAx1D,EAAA+uB,UAAA7gC,MAAAwmE,EAEAplC,EAAA,OAAA5G,IAAA3lB,MAAA2xD,EAAA,EACAtkC,EAAA,OAAA1H,IAAAx6B,MAAAwmE,EAAAj5D,IAEAg6D,EAAA9iF,KAAAoG,IAAAw8E,EAAAjmC,GACAomC,EAAA/iF,KAAAmG,IAAAw8E,EAAAC,EAAAC,EAAAlmC,EAAAc,GAAA,EAEAulC,EAAAhjF,KAAAoG,IAAA,EAAA28E,EAAAD,EAAA,GAEA,OAAAE,EAAA,CAIA,GAAAxkF,EAAA25C,OAEA,QAAAlH,EAAA6Q,UAEAoY,EAAAshB,aAAAvqC,EAAA8Q,mBAAA+uB,MACAvlB,EAAAwzB,QAAAhgB,EAAAsd,YAIA,OAAA79E,EAAA6kD,UAEA,KAAA71C,GACA+9C,EAAAwzB,QAAAhgB,EAAAmD,WACA,MAEA,KAAAz0D,GACA89C,EAAAwzB,QAAAhgB,EAAAod,gBACA,MAEA,KAAAzuE,GACA69C,EAAAwzB,QAAAhgB,EAAAqd,mBAQG,GAAA59E,EAAAmgD,OAAA,CAEH,IAAA88B,EAAAxqC,EAAAqR,mBAEAm5B,MAAA,GAEAvhB,EAAAshB,aAAAC,EAAA3K,MAEAtyE,EAAAykF,eAEA13B,EAAAwzB,QAAAhgB,EAAAsd,OAEI79E,EAAA0kF,WAEJ33B,EAAAwzB,QAAAhgB,EAAAwd,WAIAhxB,EAAAwzB,QAAAhgB,EAAAud,iBAIG99E,EAAAkgD,UAEH6M,EAAAwzB,QAAAhgB,EAAAyd,QAIAnvD,KAAA20D,0BAEA30D,EAAA8xD,kBAAA,GAEA5zB,EAAA0zB,gBAAA5xD,EAAAy1D,EAAAE,GAMAz3B,EAAAsT,OAAAikB,EAAAE,KAyIAtiF,KAAAyiF,QAAA,SAAAtpB,EAAAl2C,IAEAspD,EAAArT,EAAA17D,IAAA27D,EAAAl2C,IACA+3C,OAEA7B,EAAA1sC,SAAA,SAAA3uB,GAEAA,EAAA4kF,UAEAnW,EAAArR,UAAAp9D,GAEAA,EAAA+uC,YAEA0/B,EAAApR,WAAAr9D,MAQAyuE,EAAAtR,YAAAh4C,GAEAk2C,EAAA1sC,SAAA,SAAA3uB,GAEA,GAAAA,EAAAyyC,SAEA,GAAAlxC,MAAAm6B,QAAA17B,EAAAyyC,UAEA,QAAA7zC,EAAA,EAAqBA,EAAAoB,EAAAyyC,SAAAjuC,OAA4B5F,IAEjDimF,GAAA7kF,EAAAyyC,SAAA7zC,GAAAy8D,EAAA/xB,IAAAtpC,QAMA6kF,GAAA7kF,EAAAyyC,SAAA4oB,EAAA/xB,IAAAtpC,MAYA,IA+xCA8kF,GA/xCAC,MACAC,GAAA,KAYA,SAAA7C,KAEA4C,MAIA,SAAAE,KAEA,IAAApa,EAAAgW,GAAAxU,YAEAxB,KAAAgB,aAEAhB,EAAAqa,sBAAAC,IAIAja,OAAAga,sBAAAC,IAMA,SAAAA,GAAAC,QAEAL,KAEAC,GAAAI,GAEAH,MAoTA,SAAAI,GAAAhF,EAAAhlB,EAAAl2C,EAAAmgE,GAEA,QAAA1mF,EAAA,EAAAC,EAAAwhF,EAAA77E,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAAghF,EAAAS,EAAAzhF,GAEAoB,EAAA4/E,EAAA5/E,OACA6uB,EAAA+wD,EAAA/wD,SACA4jB,WAAA6yC,EAAA1F,EAAAntC,SAAA6yC,EACA/tC,EAAAqoC,EAAAroC,MAEA,GAAApyB,EAAAogE,cAAA,CAEAtV,GAAA9qD,EAIA,IAFA,IAAAwlD,EAAAxlD,EAAAwlD,QAEAt6C,EAAA,EAAAwmB,EAAA8zB,EAAAnmE,OAAyC6rB,EAAAwmB,EAAQxmB,IAAA,CAEjD,IAAAm1D,EAAA7a,EAAAt6C,GAEA,GAAArwB,EAAAouC,OAAAD,KAAAq3C,EAAAp3C,QAAA,CAEA,IAAAo9B,EAAAga,EAAAha,OAEAllE,EAAAklE,EAAAllE,EAAAgqE,GACAvoE,EAAAyjE,EAAAzjE,EAAAwoE,GACA19D,EAAA24D,EAAAxjE,EAAAsoE,GACAv9D,EAAAy4D,EAAAn5D,EAAAk+D,GAEA7U,EAAAhyC,SAAAwmD,GAAAp9D,IAAAxM,EAAAyB,EAAA8K,EAAAE,GAAAqB,eAAAo8D,KAEAxQ,GAAAhgE,EAAAq7D,EAAAmqB,EAAA32D,EAAA4jB,EAAA8E,UAQA04B,GAAA,KAEAjQ,GAAAhgE,EAAAq7D,EAAAl2C,EAAA0J,EAAA4jB,EAAA8E,IAQA,SAAAyoB,GAAAhgE,EAAAq7D,EAAAl2C,EAAA0J,EAAA4jB,EAAA8E,GAQA,GANAv3C,EAAA+vC,eAAA2/B,GAAArU,EAAAl2C,EAAA0J,EAAA4jB,EAAA8E,GACAk3B,EAAArT,EAAA17D,IAAA27D,EAAA4U,IAAA9qD,GAEAnlB,EAAA2uC,gBAAA/zB,iBAAAuK,EAAAkqB,mBAAArvC,EAAAqlB,aACArlB,EAAAoyB,aAAAnL,gBAAAjnB,EAAA2uC,iBAEA3uC,EAAAylF,wBAAA,CAEA,IAAA1I,EAAA/8E,EAAA25C,QAAA35C,EAAAqlB,YAAAlI,cAAA,EAEAu+C,EAAAohB,YAAArqC,EAAAsqC,GAEA,IAAA/rB,EAAAoyB,GAAAj+D,EAAAk2C,EAAA/xB,IAAAmJ,EAAAzyC,GAEA+vE,GAAA,GA/1BA,SAAA/vE,EAAAgxD,EAAAve,GAEAzyC,EAAAqgE,OAAA,SAAArgE,GAEA0vE,GAAA0S,sBAAApiF,EAAAgxD,EAAAve,KAJA,CAi2BAzyC,EAAAgxD,EAAAve,QAIAi9B,GAAAvP,mBAAAh7C,EAAAk2C,EAAA/xB,IAAAza,EAAA4jB,EAAAzyC,EAAAu3C,GAIAv3C,EAAAgwC,cAAA0/B,GAAArU,EAAAl2C,EAAA0J,EAAA4jB,EAAA8E,GACAk3B,EAAArT,EAAA17D,IAAA27D,EAAA4U,IAAA9qD,GAIA,SAAA0/D,GAAApyC,EAAAnJ,EAAAtpC,GAEA,IAAA0lF,EAAA57C,EAAApqC,IAAA+yC,GAEA9I,EAAA8kC,EAAA/S,MAAA/xB,OACAqzB,EAAAyR,EAAA/S,MAAAsB,aAEAzqB,EAAA48B,EAAA1a,cACAhiB,EAAA9I,EAAA+xB,MAAAsB,EAAA1zB,EAAAsnC,GAAAO,UAAAP,GAAAQ,gBAAApxE,GAEAw3D,EAAA2X,EAAA7X,eAAA7kB,EAAAF,GAEAye,EAAA00B,EAAA10B,QACA20B,KAEA,YAAA30B,EAGAve,EAAA7rC,iBAAA,UAAAm6E,SAEG,GAAA/vB,EAAAwG,SAGHwpB,GAAAvuC,QAEG,GAAAizC,EAAAE,aAAAj8C,EAAA+xB,MAAAngB,KAEHzR,EAAAloB,OAAA6wB,EAAA,aAAA9I,EAAA+xB,MAAAngB,MACAoqC,SAEG,aAAApzC,EAAAsiB,SAGH,OAKA8wB,KAIA,GAAAA,EAAA,CAEA,GAAApzC,EAAAsiB,SAAA,CAEA,IAAAtD,EAAAlmB,GAAAkH,EAAAsiB,UAEA6wB,EAAAn0B,QACApyD,KAAAszC,EAAA5rC,KACAs0B,SAAAF,GAAA1nB,MAAAg+C,EAAAp2B,UACAoQ,aAAAgmB,EAAAhmB,aACAC,eAAA+lB,EAAA/lB,qBAKAk6C,EAAAn0B,QACApyD,KAAAszC,EAAA5rC,KACAs0B,SAAAsX,EAAAtX,SACAoQ,aAAAkH,EAAAlH,aACAC,eAAAiH,EAAAjH,gBAKAiH,EAAAyS,gBAAAwgC,EAAAn0B,OAAAme,IAEA1e,EAAAme,EAAA5X,eAAA9kB,EAAAizC,EAAAn0B,OAAAhf,EAAAilB,GAEAkuB,EAAA10B,UACAve,EAAAue,UAIA,IAAAyxB,EAAAzxB,EAAAmJ,gBAEA,GAAA1nB,EAAA0B,aAAA,CAEA1B,EAAAozC,yBAAA,EAEA,QAAAjnF,EAAA,EAAmBA,EAAA8wE,GAAAlZ,gBAA2B53D,IAE9C6jF,EAAA,cAAA7jF,IAAA,GAEA6zC,EAAAozC,2BAQA,GAAApzC,EAAA2B,aAIA,IAFA3B,EAAAqzC,yBAAA,EAEAlnF,EAAA,EAAmBA,EAAA8wE,GAAAjZ,gBAA2B73D,IAE9C6jF,EAAA,cAAA7jF,IAAA,GAEA6zC,EAAAqzC,2BAQA,IAAA3qD,EAAAuqD,EAAAn0B,OAAAp2B,UAEAsX,EAAAmT,kBACAnT,EAAAgmB,2BACAhmB,EAAAsR,WAEA2hC,EAAA3yB,kBAAA6d,GAAAO,UACAuU,EAAAtU,gBAAAR,GAAAQ,gBACAj2C,EAAAqnB,eAAAouB,GAAAK,SAIAyU,EAAAp8C,MAIAo8C,EAAAE,WAAAj8C,EAAA+xB,MAAAngB,KAEA9I,EAAA9I,SAIAxO,EAAAyO,kBAAAhqC,MAAA+pC,EAAA+xB,MAAAC,QACAxgC,EAAA0O,kBAAAjqC,MAAA+pC,EAAA+xB,MAAAhF,YACAv7B,EAAAkP,WAAAzqC,MAAA+pC,EAAA+xB,MAAA/E,KACAx7B,EAAAiQ,eAAAxrC,MAAA+pC,EAAA+xB,MAAA9E,SACAz7B,EAAAyP,YAAAhrC,MAAA+pC,EAAA+xB,MAAAntC,MACA4M,EAAA8P,iBAAArrC,MAAA+pC,EAAA+xB,MAAA7E,KAEA17B,EAAAgP,qBAAAvqC,MAAA+pC,EAAA+xB,MAAAvxB,qBACAhP,EAAAiP,wBAAAxqC,MAAA+pC,EAAA+xB,MAAAtxB,wBACAjP,EAAAuP,cAAA9qC,MAAA+pC,EAAA+xB,MAAAhxB,cACAvP,EAAAwP,iBAAA/qC,MAAA+pC,EAAA+xB,MAAA/wB,iBACAxP,EAAA4P,eAAAnrC,MAAA+pC,EAAA+xB,MAAA3wB,eACA5P,EAAA6P,kBAAAprC,MAAA+pC,EAAA+xB,MAAA1wB,mBAKA,IAAA+6C,EAAAL,EAAA10B,QAAAkJ,cACA8rB,EACAj1B,GAAAmB,aAAA6zB,EAAA15B,IAAAlxB,GAEAuqD,EAAAM,eAIA,SAAA5C,GAAAj+D,EAAAmkB,EAAAmJ,EAAAzyC,GAEAqwE,GAAA,EAEA,IAAAqV,EAAA57C,EAAApqC,IAAA+yC,GACA9I,EAAA8kC,EAAA/S,MAAA/xB,OAEA,GAAAwoC,KAEAC,IAAAjtD,IAAA6qD,IAAA,CAEA,IAAAiW,EACA9gE,IAAA6qD,IACAv9B,EAAArB,KAAA0+B,GAKAc,GAAAkB,SACAr/B,EAAA+P,eAAA/P,EAAAgQ,iBAAAhQ,EAAAiQ,YACAv9B,EAAAugE,EAAAO,QAMAxzC,EAAAwN,uBAEAylC,EAAA10B,QAEAve,EAAAwN,eAEIxN,EAAAnJ,KAAAo8C,EAAAp8C,QAEJmJ,EAAAwN,eAEIxN,EAAA9I,QAAA+7C,EAAAE,aAAAj8C,EAAA+xB,MAAAngB,KAEJ9I,EAAAwN,oBAAA,IAEIylC,EAAA3yB,mBACJ2yB,EAAA3yB,oBAAA6d,GAAAO,WACAuU,EAAAtU,kBAAAR,GAAAQ,kBAEA3+B,EAAAwN,iBAMAxN,EAAAwN,cAEA4kC,GAAApyC,EAAAnJ,EAAAtpC,GACAyyC,EAAAwN,gBAIA,IAynBA9kB,EAAAv7B,EAznBAsmF,KACAC,KACAC,KAEAp1B,EAAA00B,EAAA10B,QACAq1B,EAAAr1B,EAAAkJ,cACAosB,EAAAZ,EAAAn0B,OAAAp2B,SAkBA,GAhBAugC,EAAAgH,WAAA1R,aAEAk1B,KACAC,KACAC,MAIA3zC,EAAArB,KAAA0+B,KAEAA,GAAAr9B,EAAArB,GAEA+0C,MAIAD,GAAA/gE,IAAA6qD,GAAA,CA6BA,GA3BAqW,EAAAr2B,SAAAuQ,EAAA,mBAAAp7C,EAAAC,kBAEAmuC,EAAA+C,wBAEA+vB,EAAAr2B,SAAAuQ,EAAA,gBACA,GAAA/+D,KAAAsQ,IAAAqT,EAAAnF,IAAA,GAAAxe,KAAAuQ,MAMAi+D,MAAAC,IAAA9qD,KAEA6qD,GAAAC,IAAA9qD,EAMAghE,KACAC,MAOA3zC,EAAAmT,kBACAnT,EAAAkwC,qBACAlwC,EAAAmwC,wBACAnwC,EAAAhL,OAAA,CAEA,IAAA8+C,EAAAF,EAAA7iF,IAAAgjF,wBAEAD,GAEAA,EAAAv2B,SAAAuQ,EACA8R,GAAAzrD,sBAAAzB,EAAAE,eAMAotB,EAAAkwC,qBACAlwC,EAAAg0C,uBACAh0C,EAAAkT,qBACAlT,EAAAmwC,wBACAnwC,EAAAmT,kBACAnT,EAAAiR,WAEA2iC,EAAAr2B,SAAAuQ,EAAA,aAAAp7C,EAAAkqB,oBAUA,GAAAoD,EAAAiR,SAAA,CAEA2iC,EAAAr0B,YAAAuO,EAAAvgE,EAAA,cACAqmF,EAAAr0B,YAAAuO,EAAAvgE,EAAA,qBAEA,IAAAi1D,EAAAj1D,EAAAi1D,SAEA,GAAAA,EAAA,CAEA,IAAAD,EAAAC,EAAAD,MAEA,GAAAzB,EAAA2B,oBAAA,CAEA,YAAAD,EAAAyxB,YAAA,CAUA,IAAA14D,EAAAxsB,KAAAyT,KAAA,EAAA+/C,EAAAxwD,QACAwpB,EAAApe,GAAAgC,eAAAoc,GACAA,EAAAxsB,KAAAoG,IAAAomB,EAAA,GAEA,IAAA24D,EAAA,IAAAxwC,aAAAnoB,IAAA,GACA24D,EAAA7zE,IAAAmiD,EAAA0xB,cAEA,IAAAD,EAAA,IAAAv8D,GAAAw8D,EAAA34D,IAAA9gB,GAAAR,IACAg6E,EAAAzmC,eAEAgV,EAAA0xB,eACA1xB,EAAAyxB,cACAzxB,EAAA2xB,gBAAA54D,EAIAq4D,EAAAr2B,SAAAuQ,EAAA,cAAAtL,EAAAyxB,aACAL,EAAAr2B,SAAAuQ,EAAA,kBAAAtL,EAAA2xB,sBAIAP,EAAAr0B,YAAAuO,EAAAtL,EAAA,iBAoIA,OA5HAkxB,IAEAE,EAAAr2B,SAAAuQ,EAAA,sBAAAmP,GAAAV,qBACAqX,EAAAr2B,SAAAuQ,EAAA,wBAAAmP,GAAAT,uBAEAx8B,EAAA9I,SA0eA/pC,EA/dAwmF,GA+dAjrD,EA/dAmrD,GAieA18C,kBAAAqW,YAAArgD,EAEAu7B,EAAA0O,kBAAAoW,YAAArgD,EACAu7B,EAAAyP,YAAAqV,YAAArgD,EACAu7B,EAAAkP,WAAA4V,YAAArgD,EACAu7B,EAAAiQ,eAAA6U,YAAArgD,EACAu7B,EAAA8P,iBAAAgV,YAAArgD,GAjeA0pC,GAAAmJ,EAAAnJ,KAwRA,SAAAnO,EAAAmO,GAEAnO,EAAAuO,SAAA9pC,MAAA0pC,EAAA1D,MAEA0D,EAAA+5B,OAEAloC,EAAAqO,QAAA5pC,MAAA0pC,EAAAvpB,KACAob,EAAAsO,OAAA7pC,MAAA0pC,EAAAtpB,KAEGspB,EAAA+sB,YAEHl7B,EAAAoO,WAAA3pC,MAAA0pC,EAAAg6B,SAXA,CAtRAgjB,EAAAh9C,GAIAmJ,EAAAkT,oBAEAkhC,GAAAP,EAAA7zC,GAEIA,EAAAg0C,uBAEJI,GAAAP,EAAA7zC,GA6RA,SAAAtX,EAAAsX,GAEAA,EAAApK,cAEAlN,EAAAkN,YAAAzoC,MAAA6yC,EAAApK,aAJA,CA5RAi+C,EAAA7zC,IAEIA,EAAAkwC,qBAEJkE,GAAAP,EAAA7zC,GAEAA,EAAAq0C,mBAmUA,SAAA3rD,EAAAsX,GAEAs0C,GAAA5rD,EAAAsX,GAEAA,EAAApJ,cAEAlO,EAAAkO,YAAAzpC,MAAA6yC,EAAApJ,aANA,CAjUAi9C,EAAA7zC,GAIAs0C,GAAAT,EAAA7zC,IAIIA,EAAAmwC,wBAEJiE,GAAAP,EAAA7zC,GAEAA,EAAAu0C,uBAuXA,SAAA7rD,EAAAsX,GAEAtX,EAAAkS,UAAAztC,MAAA6yC,EAAApF,UACAlS,EAAAmS,mBAAA1tC,MAAA6yC,EAAAnF,mBAEA25C,GAAA9rD,EAAAsX,GALA,CArXA6zC,EAAA7zC,GAIAw0C,GAAAX,EAAA7zC,IAIIA,EAAAy0C,qBAEJL,GAAAP,EAAA7zC,GAoXA,SAAAtX,EAAAsX,GAEAA,EAAA5J,kBAEA1N,EAAA0N,gBAAAjpC,MAAA6yC,EAAA5J,gBACA1N,EAAA2N,kBAAAlpC,MAAA6yC,EAAA3J,kBACA3N,EAAA4N,iBAAAnpC,MAAA6yC,EAAA1J,kBANA,CAnXAu9C,EAAA7zC,IAEIA,EAAAstB,wBAEJ8mB,GAAAP,EAAA7zC,GA2XA,SAAAtX,EAAAsX,GAEAA,EAAA5J,kBAEA1N,EAAA0N,gBAAAjpC,MAAA6yC,EAAA5J,gBACA1N,EAAA2N,kBAAAlpC,MAAA6yC,EAAA3J,kBACA3N,EAAA4N,iBAAAnpC,MAAA6yC,EAAA1J,kBAIA5N,EAAAyR,kBAAAhtC,MAAA6T,KAAAg/B,EAAA7F,mBACAzR,EAAA0R,aAAAjtC,MAAA6yC,EAAA5F,aACA1R,EAAA2R,YAAAltC,MAAA6yC,EAAA3F,YAZA,CA1XAw5C,EAAA7zC,IAEIA,EAAAowC,sBAEJgE,GAAAP,EAAA7zC,GAsYA,SAAAtX,EAAAsX,GAEAA,EAAAlK,UAEApN,EAAAoN,QAAA3oC,MAAA6yC,EAAAlK,QACApN,EAAAqN,UAAA5oC,MAAA6yC,EAAAjK,WAIAiK,EAAA/J,YAEAvN,EAAAuN,UAAA9oC,MAAA6yC,EAAA/J,UACAvN,EAAAwN,YAAA/oC,MAAA6T,KAAAg/B,EAAA9J,cAIA8J,EAAA5J,kBAEA1N,EAAA0N,gBAAAjpC,MAAA6yC,EAAA5J,gBACA1N,EAAA2N,kBAAAlpC,MAAA6yC,EAAA3J,kBACA3N,EAAA4N,iBAAAnpC,MAAA6yC,EAAA1J,kBApBA,CArYAu9C,EAAA7zC,IAEIA,EAAA00C,qBAwLJ,SAAAhsD,EAAAsX,GAEAtX,EAAA+L,QAAAtnC,MAAA6yC,EAAA7M,MACAzK,EAAAgM,QAAAvnC,MAAA6yC,EAAAtL,QAHA,CAtLAm/C,EAAA7zC,GAEAA,EAAA20C,sBA2LA,SAAAjsD,EAAAsX,GAEAtX,EAAAgR,SAAAvsC,MAAA6yC,EAAAtG,SACAhR,EAAAiR,UAAAxsC,MAAA6yC,EAAAtG,SAAAsG,EAAA+S,QACArqB,EAAAnd,MAAApe,MAAA6yC,EAAAz0B,MAJA,CAzLAsoE,EAAA7zC,IAIIA,EAAA40C,iBA6LJ,SAAAlsD,EAAAsX,GAEAtX,EAAA+L,QAAAtnC,MAAA6yC,EAAA7M,MACAzK,EAAAgM,QAAAvnC,MAAA6yC,EAAAtL,QACAhM,EAAAnN,KAAApuB,MAAA6yC,EAAAzkB,KAAAwiD,GACAr1C,EAAAnd,MAAApe,MAAA,GAAA2wE,GAEAp1C,EAAA33B,IAAA5D,MAAA6yC,EAAAjvC,IAEA,OAAAivC,EAAAjvC,WAEAivC,EAAAjvC,IAAAslB,kBAEA2pB,EAAAjvC,IAAA0nB,eAIAiQ,EAAAiM,YAAAxnC,MAAA6T,KAAAg/B,EAAAjvC,IAAAsE,SAjBA,CA3LAw+E,EAAA7zC,GAEIA,EAAA60C,mBAEJhB,EAAA1gD,MAAAhmC,MAAA6yC,EAAA7M,MACA0gD,EAAAn/C,QAAAvnC,MAAA6yC,EAAAtL,kBAOAm/C,EAAAiB,QAAAjB,EAAAiB,MAAA3nF,MAAAqnC,GAAAugD,gBACAlB,EAAAmB,QAAAnB,EAAAmB,MAAA7nF,MAAAqnC,GAAAygD,OAEA32B,GAAAkB,OAAAsO,EAAAmlB,EAAAM,aAAAM,EAAA5W,KAIAj9B,EAAAmT,uBAAAnT,EAAA8R,qBAEAwM,GAAAkB,OAAAsO,EAAAmlB,EAAAM,aAAAM,EAAA5W,IACAj9B,EAAA8R,uBAMA8hC,EAAAr2B,SAAAuQ,EAAA,kBAAAvgE,EAAA2uC,iBACA03C,EAAAr2B,SAAAuQ,EAAA,eAAAvgE,EAAAoyB,cACAi0D,EAAAr2B,SAAAuQ,EAAA,cAAAvgE,EAAAqlB,aAEA2rC,EAMA,SAAA61B,GAAA1rD,EAAAsX,GAyEA,IAAAk1C,EAvEAxsD,EAAAgM,QAAAvnC,MAAA6yC,EAAAtL,QAEAsL,EAAA7M,QAEAzK,EAAA+L,QAAAtnC,MAAA6yC,EAAA7M,OAIA6M,EAAA/G,UAEAvQ,EAAAuQ,SAAA9rC,MAAA6T,KAAAg/B,EAAA/G,UAAAt3B,eAAAq+B,EAAA6S,mBAIA7S,EAAAjvC,MAEA23B,EAAA33B,IAAA5D,MAAA6yC,EAAAjvC,KAIAivC,EAAApL,WAEAlM,EAAAkM,SAAAznC,MAAA6yC,EAAApL,UAIAoL,EAAAlL,cAEApM,EAAAoM,YAAA3nC,MAAA6yC,EAAAlL,aAIAkL,EAAAhL,SAEAtM,EAAAsM,OAAA7nC,MAAA6yC,EAAAhL,OAMAtM,EAAAuM,WAAA9nC,MAAA6yC,EAAAhL,QAAAgL,EAAAhL,OAAAwkB,eAAA,IAEA9wB,EAAAwM,aAAA/nC,MAAA6yC,EAAA9K,aACAxM,EAAAyM,gBAAAhoC,MAAA6yC,EAAA7K,gBAEAzM,EAAA0M,YAAAjoC,MAAAkqC,EAAApqC,IAAA+yC,EAAAhL,QAAA88B,eAIA9xB,EAAAvK,WAEA/M,EAAA+M,SAAAtoC,MAAA6yC,EAAAvK,SACA/M,EAAAgN,kBAAAvoC,MAAA6yC,EAAAtK,mBAIAsK,EAAA1K,QAEA5M,EAAA4M,MAAAnoC,MAAA6yC,EAAA1K,MACA5M,EAAA6M,eAAApoC,MAAA6yC,EAAAzK,gBAcAyK,EAAAjvC,IAEAmkF,EAAAl1C,EAAAjvC,IAEGivC,EAAAlL,YAEHogD,EAAAl1C,EAAAlL,YAEGkL,EAAA5J,gBAEH8+C,EAAAl1C,EAAA5J,gBAEG4J,EAAA/J,UAEHi/C,EAAAl1C,EAAA/J,UAEG+J,EAAAlK,QAEHo/C,EAAAl1C,EAAAlK,QAEGkK,EAAAxJ,aAEH0+C,EAAAl1C,EAAAxJ,aAEGwJ,EAAAtJ,aAEHw+C,EAAAl1C,EAAAtJ,aAEGsJ,EAAApL,SAEHsgD,EAAAl1C,EAAApL,SAEGoL,EAAApK,cAEHs/C,EAAAl1C,EAAApK,sBAIAs/C,IAGAA,EAAA76D,sBAEA66D,IAAAh+D,cAIAg+D,EAAA7+D,kBAEA6+D,EAAAz8D,eAIAiQ,EAAAiM,YAAAxnC,MAAA6T,KAAAk0E,EAAA7/E,SAuEA,SAAAi/E,GAAA5rD,EAAAsX,GAEAtX,EAAAyQ,SAAAhsC,MAAA6yC,EAAA7G,SACAzQ,EAAA0Q,UAAAjsC,MAAA4B,KAAAoG,IAAA6qC,EAAA5G,UAAA,MAEA4G,EAAApK,cAEAlN,EAAAkN,YAAAzoC,MAAA6yC,EAAApK,aAIAoK,EAAAlK,UAEApN,EAAAoN,QAAA3oC,MAAA6yC,EAAAlK,QACApN,EAAAqN,UAAA5oC,MAAA6yC,EAAAjK,WAIAiK,EAAA/J,YAEAvN,EAAAuN,UAAA9oC,MAAA6yC,EAAA/J,UACAvN,EAAAwN,YAAA/oC,MAAA6T,KAAAg/B,EAAA9J,cAIA8J,EAAA5J,kBAEA1N,EAAA0N,gBAAAjpC,MAAA6yC,EAAA5J,gBACA1N,EAAA2N,kBAAAlpC,MAAA6yC,EAAA3J,kBACA3N,EAAA4N,iBAAAnpC,MAAA6yC,EAAA1J,kBAkBA,SAAAk+C,GAAA9rD,EAAAsX,GAEAtX,EAAA4Q,UAAAnsC,MAAA6yC,EAAA1G,UACA5Q,EAAA6Q,UAAApsC,MAAA6yC,EAAAzG,UAEAyG,EAAAxJ,eAEA9N,EAAA8N,aAAArpC,MAAA6yC,EAAAxJ,cAIAwJ,EAAAtJ,eAEAhO,EAAAgO,aAAAvpC,MAAA6yC,EAAAtJ,cAIAsJ,EAAApK,cAEAlN,EAAAkN,YAAAzoC,MAAA6yC,EAAApK,aAIAoK,EAAAlK,UAEApN,EAAAoN,QAAA3oC,MAAA6yC,EAAAlK,QACApN,EAAAqN,UAAA5oC,MAAA6yC,EAAAjK,WAIAiK,EAAA/J,YAEAvN,EAAAuN,UAAA9oC,MAAA6yC,EAAA/J,UACAvN,EAAAwN,YAAA/oC,MAAA6T,KAAAg/B,EAAA9J,cAIA8J,EAAA5J,kBAEA1N,EAAA0N,gBAAAjpC,MAAA6yC,EAAA5J,gBACA1N,EAAA2N,kBAAAlpC,MAAA6yC,EAAA3J,kBACA3N,EAAA4N,iBAAAnpC,MAAA6yC,EAAA1J,kBAIA0J,EAAAhL,SAGAtM,EAAA8Q,gBAAArsC,MAAA6yC,EAAAxG,iBAxoCA/pC,KAAA0lF,QAAA,SAAAzjE,GAGA,QADA6gE,GAAA7gE,GA1CA4gE,KAEAE,KAEAF,OAuCA5C,MAMAjgF,KAAAm+D,OAAA,SAAAhF,EAAAl2C,EAAAkgD,EAAAib,GAEA,GAAAn7D,KAAA8rB,UAOA,IAAA0+B,GAAA,CAIAI,GAAA,GACAD,IAAA,EACAE,GAAA,UAIA3U,EAAA+E,YAAA/E,EAAAnsC,oBAIA,OAAA/J,EAAAqpB,QAAArpB,EAAA+J,oBAEA2xD,GAAAxtC,UAEAluB,EAAA07D,GAAArU,UAAArnD,KAMAspD,EAAArT,EAAA17D,IAAA27D,EAAAl2C,IACA+3C,OAEA7B,EAAAtrB,eAAA2/B,GAAArU,EAAAl2C,EAAAkgD,GAEAxH,GAAAjjD,iBAAAuK,EAAAC,iBAAAD,EAAAkqB,oBACAuuB,GAAArrC,cAAAsrC,IAEAuU,GAAAlwE,KAAAw9D,qBACAyS,GAAAvB,GAAA1T,KAAAh7D,KAAAsgD,eAAA4vB,GAAAjtD,IAEAqpD,EAAAY,EAAA1vE,IAAA27D,EAAAl2C,IACA+3C,OA0JA,SAAA2qB,EAAA7nF,EAAAmlB,EAAA4pD,GAEA,QAAA/uE,EAAA8uC,QAAA,CAIA,GAFA9uC,EAAAouC,OAAAD,KAAAhpB,EAAAipB,QAIA,GAAApuC,EAAA4kF,QAEAnW,EAAArR,UAAAp9D,GAEAA,EAAA+uC,YAEA0/B,EAAApR,WAAAr9D,QAII,GAAAA,EAAA8nF,SAEJ9nF,EAAAivC,gBAAA2uB,GAAAjqC,iBAAA3zB,IAEAyuE,EAAAlR,WAAAv9D,QAII,GAAAA,EAAAylF,wBAEJ1W,GAEAsD,GAAAzrD,sBAAA5mB,EAAAqlB,aACApI,aAAA4gD,IAIA2Q,EAAAtnE,KAAAlH,EAAA,KAAAA,EAAAyyC,SAAA4/B,GAAArqE,EAAA,WAEI,IAAAhI,EAAA25C,QAAA35C,EAAAmgD,QAAAngD,EAAAkgD,YAEJlgD,EAAA+0D,eAEA/0D,EAAAi1D,SAAArzC,UAIA5hB,EAAAivC,eAAA2uB,GAAApqC,iBAAAxzB,IAAA,CAEA+uE,GAEAsD,GAAAzrD,sBAAA5mB,EAAAqlB,aACApI,aAAA4gD,IAIA,IAAAhvC,EAAAqgD,EAAAttD,OAAA5hB,GACAyyC,EAAAzyC,EAAAyyC,SAEA,GAAAlxC,MAAAm6B,QAAA+W,GAIA,IAFA,IAAAiE,EAAA7nB,EAAA6nB,OAEA93C,EAAA,EAAAC,EAAA63C,EAAAlyC,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAA24C,EAAAb,EAAA93C,GACAshE,EAAAztB,EAAA8E,EAAA5H,eAEAuwB,KAAApxB,SAEA0/B,EAAAtnE,KAAAlH,EAAA6uB,EAAAqxC,EAAAmS,GAAArqE,EAAAuvC,QAMM9E,EAAA3D,SAEN0/B,EAAAtnE,KAAAlH,EAAA6uB,EAAA4jB,EAAA4/B,GAAArqE,EAAA,MAUA,IAAAymC,EAAAzuC,EAAAyuC,SAEA,IAAA7vC,EAAA,EAAAC,EAAA4vC,EAAAjqC,OAAuC5F,EAAAC,EAAOD,IAE9CipF,EAAAp5C,EAAA7vC,GAAAumB,EAAA4pD,IA1FA,CAxJA1T,EAAAl2C,EAAAuqD,GAAAX,kBAEAW,GAAAX,aAEAP,EAAAl0B,OAMA63B,IAAAvB,GAAAgB,eAEA,IAAA5U,EAAAyR,EAAA/S,MAAAsB,aAEAjG,GAAAsJ,OAAArD,EAAA3B,EAAAl2C,GAEAspD,EAAAtR,YAAAh4C,GAEAgtD,IAAAvB,GAAAiB,aAIA3vE,KAAAivD,KAAAqsB,WAAAt7E,KAAAivD,KAAAyS,iBAEAyB,IAEAA,EAAA,MAIAnjE,KAAAi/D,gBAAAkE,GAIAgK,EAAAhP,OAAAmO,EAAAnT,EAAAl2C,EAAAm7D,GAIA,IAAAyH,EAAAvZ,EAAAmR,OACAqI,EAAAxZ,EAAA1sB,YAEA,GAAAuZ,EAAAiqB,iBAAA,CAEA,IAAAA,EAAAjqB,EAAAiqB,iBAEAyC,EAAAvjF,QAAA6gF,GAAA0C,EAAA1sB,EAAAl2C,EAAAmgE,GACA0C,EAAAxjF,QAAA6gF,GAAA2C,EAAA3sB,EAAAl2C,EAAAmgE,QAMAyC,EAAAvjF,QAAA6gF,GAAA0C,EAAA1sB,EAAAl2C,GAIA6iE,EAAAxjF,QAAA6gF,GAAA2C,EAAA3sB,EAAAl2C,GAMA,IAAA83C,EAAAwR,EAAA/S,MAAAuB,aAEAwS,GAAApP,OAAApD,EAAA5B,EAAAl2C,GAIAkgD,GAEA/5C,EAAA4+C,yBAAA7E,GAMA3J,EAAAgF,QAAAr0B,MAAAu0B,YACAlF,EAAAgF,QAAAr0B,MAAAm3B,YACA9H,EAAAgF,QAAA96B,MAAA49B,YAEA9H,EAAAygB,qBAEA9gB,EAAArrB,cAAA0/B,GAAArU,EAAAl2C,GAEA07D,GAAAxtC,SAEAwtC,GAAAnT,cAMAc,EAAA,KACAC,EAAA,WAxIA1pE,QAAAtC,MAAA,2EAguCAP,KAAA8qD,iBAhBA,WAEA,IAAAi7B,EAAA5X,GAUA,OARA4X,GAAA10B,EAAA2iB,aAEAnxE,QAAA6O,KAAA,sCAAAq0E,EAAA,+CAAA10B,EAAA2iB,aAIA7F,IAAA,EAEA4X,GAOA/lF,KAAAssD,cAEAs2B,MAGA,SAAAn7D,EAAAg8C,GAEAh8C,KAAAmD,sBAEAg4D,KAEA//E,QAAA6O,KAAA,gHACAkxE,OAIAn7D,aAIA2B,EAAAkjC,aAAA7kC,EAAAg8C,KAMAzjE,KAAAgmF,WAAA,WAEA,IAAApD,KAEA,gBAAAn7D,EAAAg8C,GAEAmf,IAEA//E,QAAA6O,KAAA,6EACAkxE,MAIAx5D,EAAAkjC,aAAA7kC,EAAAg8C,IAbA,GAmBAzjE,KAAAwsD,eAAA,WAEA,IAAAo2B,KAEA,gBAAAn7D,EAAAg8C,GAGAh8C,KAAAqD,0BAEA83D,IAEA//E,QAAA6O,KAAA,uHACAkxE,MAIAn7D,aAMAA,KAAAsiC,eACA1qD,MAAAm6B,QAAA/R,EAAAzB,QAAA,IAAAyB,EAAAzB,MAAA1jB,OAKA8mB,EAAAojC,eAAA/kC,EAAAg8C,GAMAr6C,EAAAm+C,sBAAA9/C,EAAAg8C,IAlCA,GA0CAzjE,KAAAszD,gBAAA,WAEA,OAAAoa,IAIA1tE,KAAAi/D,gBAAA,SAAAkE,GAEAuK,GAAAvK,EAEAA,YAAAv7B,EAAApqC,IAAA2lE,GAAAG,oBAEAl6C,EAAAo+C,kBAAArE,GAIA,IAAAgD,EAAA,KACAsB,KAEA,GAAAtE,EAAA,CAEA,IAAAG,EAAA17B,EAAApqC,IAAA2lE,GAAAG,mBAEAH,EAAAr4C,yBAEAq7C,EAAA7C,EAAAH,EAAAp7C,gBACA0/C,MAIAtB,EAAA7C,EAIA0K,GAAAz8D,KAAA4xD,EAAA37C,UACAymD,GAAA18D,KAAA4xD,EAAA77C,SACA4mD,GAAA/K,EAAA57C,iBAIAymD,GAAAz8D,KAAAg9D,IAAAr8D,eAAAo8D,IACAL,GAAA18D,KAAAi9D,IAAAt8D,eAAAo8D,IACAJ,GAAAO,GAeA,GAXAd,KAAAxH,IAEA9H,EAAAiI,gBAAAjI,EAAAkI,YAAAJ,GACAwH,GAAAxH,GAIA3M,EAAAhyC,SAAAwmD,IACAxU,EAAAlyC,QAAA2mD,IACAzU,EAAAmF,eAAAuP,IAEAzG,EAAA,CAEA,IAAA9E,EAAA/6B,EAAApqC,IAAA2lE,EAAA17C,SACA42C,EAAAmI,qBAAAnI,EAAAkI,YAAAlI,EAAAuJ,kBAAAvJ,EAAAiJ,4BAAAnE,EAAAp7C,eAAA46C,EAAAI,eAAAI,EAAAn7C,qBAMAhoB,KAAAimF,uBAAA,SAAA9iB,EAAA/+D,EAAAyB,EAAA8K,EAAAE,EAAAqrE,GAEA,GAAA/Y,KAAAv4C,oBAAA,CAOA,IAAAu7C,EAAAv+B,EAAApqC,IAAA2lE,GAAAG,mBAEA,GAAA6C,EAAA,CAEA,IAAA+f,KAEA/f,IAAAwH,KAEAtP,EAAAiI,gBAAAjI,EAAAkI,YAAAJ,GAEA+f,MAIA,IAEA,IAAAz+D,EAAA07C,EAAA17C,QACA0+D,EAAA1+D,EAAAtnB,OACAmlE,EAAA79C,EAAA9iB,KAEA,GAAAwhF,IAAAn7E,IAAA42D,GAAA4C,QAAA2hB,KAAA9nB,EAAAlxC,aAAAkxC,EAAA+nB,kCAGA,YADAvjF,QAAAtC,MAAA,6GAKA,KAAA+kE,IAAAp7D,IAAA03D,GAAA4C,QAAAc,KAAAjH,EAAAlxC,aAAAkxC,EAAAgoB,iCACA/gB,IAAA96D,KAAAs3C,EAAAtkD,IAAA,sBAAAskD,EAAAtkD,IAAA,8BACA8nE,IAAA76D,IAAAq3C,EAAAtkD,IAAA,gCAGA,YADAqF,QAAAtC,MAAA,uHAKA89D,EAAAioB,uBAAAjoB,EAAAkI,eAAAlI,EAAAkoB,qBAIAniF,GAAA,GAAAA,GAAA++D,EAAAxyD,SAAA9K,GAAA,GAAAA,GAAAs9D,EAAAtyD,UAEAwtD,EAAAmoB,WAAApiF,EAAAyB,EAAA8K,EAAAE,EAAA+wD,GAAA4C,QAAA2hB,GAAAvkB,GAAA4C,QAAAc,GAAA4W,GAMAr5E,QAAAtC,MAAA,8GAII,QAEJ2lF,GAEA7nB,EAAAiI,gBAAAjI,EAAAkI,YAAAoH,WA7DA9qE,QAAAtC,MAAA,6FAuEAP,KAAAymF,yBAAA,SAAA1pE,EAAA0K,EAAAi/D,GAEA,IAAA/1E,EAAA8W,EAAAzB,MAAArV,MACAE,EAAA4W,EAAAzB,MAAAnV,OACA0zD,EAAA3C,GAAA4C,QAAA/8C,EAAAtnB,QAEAH,KAAAssD,aAAA7kC,EAAA,GAEA42C,EAAAsoB,eAAAtoB,EAAA0F,WAAA2iB,GAAA,EAAAniB,EAAAxnD,EAAA3Y,EAAA2Y,EAAAlX,EAAA8K,EAAAE,EAAA,IAIA7Q,KAAA4mF,qBAAA,SAAA7pE,EAAA8pE,EAAAC,EAAAJ,GAEA,IAAA/1E,EAAAk2E,EAAA7gE,MAAArV,MACAE,EAAAg2E,EAAA7gE,MAAAnV,OACA0zD,EAAA3C,GAAA4C,QAAAsiB,EAAA3mF,QACAskE,EAAA7C,GAAA4C,QAAAsiB,EAAAniF,MACAoiF,EAAAF,EAAA97D,cAAA87D,EAAA7gE,MAAAkC,KAAA2+D,EAAA7gE,MAEAhmB,KAAAssD,aAAAw6B,EAAA,GAEAzoB,EAAA2oB,cAAA3oB,EAAA0F,WAAA2iB,GAAA,EAAA3pE,EAAA3Y,EAAA2Y,EAAAlX,EAAA8K,EAAAE,EAAA0zD,EAAAE,EAAAsiB,IAWA,SAAAE,GAAAvjD,EAAA09B,GAEAphE,KAAA/C,KAAA,GAEA+C,KAAA0jC,MAAA,IAAAZ,GAAAY,GACA1jC,KAAAohE,qBAAA,MA2BA,SAAA8lB,GAAAxjD,EAAA7lB,EAAAC,GAEA9d,KAAA/C,KAAA,GAEA+C,KAAA0jC,MAAA,IAAAZ,GAAAY,GAEA1jC,KAAA6d,kBAAA,EACA7d,KAAA8d,iBAAA,IA2BA,SAAAqpE,KAEA96C,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,QAEA3E,KAAAmtE,WAAA,KACAntE,KAAAonC,IAAA,KACApnC,KAAAojF,iBAAA,KAEApjF,KAAAk+D,cAiDA,SAAAkpB,GAAA/2C,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,iBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UACA9iC,KAAAsB,IAAA,KAEAtB,KAAAmlB,SAAA,EAEAnlB,KAAAonC,OACApnC,KAAAynC,UAEAznC,KAAAyhD,UAAApR,GA0BA,SAAAg3C,GAAA92C,GAEAlE,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,SAEA3E,KAAAuwC,sBAAA,IAAA62C,GAEApnF,KAAAsU,OAAA,IAAAvE,GAAA,OAoEA,SAAAu3E,KAEAj7C,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,MAEAvH,OAAAsT,iBAAA1Q,MACAunF,QACAhqF,cACAG,YAmKA,SAAA8pF,GAAA10B,EAAA20B,GAWA,GAPA30B,QAEA9yD,KAAA8yD,QAAAttD,MAAA,GACAxF,KAAAykF,aAAA,IAAAxwC,aAAA,GAAAj0C,KAAA8yD,MAAAxwD,iBAIAmlF,EAEAznF,KAAA0nF,yBAIA,GAAA1nF,KAAA8yD,MAAAxwD,SAAAmlF,EAAAnlF,OAEAtC,KAAAynF,eAAAjiF,MAAA,OAEG,CAEH3C,QAAA6O,KAAA,oDAEA1R,KAAAynF,gBAEA,QAAA/qF,EAAA,EAAAivB,EAAA3rB,KAAA8yD,MAAAxwD,OAA2C5F,EAAAivB,EAAQjvB,IAEnDsD,KAAAynF,aAAAziF,KAAA,IAAAgL,KAgJA,SAAA23E,KAEAt7C,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,OAkBA,SAAAijF,GAAAj7D,EAAA4jB,GAEAmS,GAAA7lD,KAAAmD,KAAA2sB,EAAA4jB,GAEAvwC,KAAA2E,KAAA,cAEA3E,KAAA6nF,SAAA,WACA7nF,KAAA8nF,WAAA,IAAA93E,GACAhQ,KAAA+nF,kBAAA,IAAA/3E,GAEA,IACA+iD,EAAA,IAAAy0B,GADAxnF,KAAAgoF,aAGAhoF,KAAAhB,KAAA+zD,EAAA/yD,KAAAmjB,aAEAnjB,KAAAioF,uBAkMA,SAAAj2B,GAAA3hB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UAEA9iC,KAAA4hD,UAAA,EACA5hD,KAAAkoF,QAAA,QACAloF,KAAAmoF,SAAA,QAEAnoF,KAAAynC,UAEAznC,KAAAyhD,UAAApR,GA2BA,SAAA+3C,GAAAz7D,EAAA4jB,EAAAgrC,GAEA,OAAAA,EAGA,OADA14E,QAAA6O,KAAA,mGACA,IAAA22E,GAAA17D,EAAA4jB,GAIAlE,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,OAEA3E,KAAA2sB,sBAAA,IAAA6uB,GACAx7C,KAAAuwC,sBAAA,IAAAyhB,IAA6EtuB,MAAA,SAAApkC,KAAAC,WAqO7E,SAAA8oF,GAAA17D,EAAA4jB,GAEA63C,GAAAvrF,KAAAmD,KAAA2sB,EAAA4jB,GAEAvwC,KAAA2E,KAAA,eA2EA,SAAA2jF,GAAA37D,EAAA4jB,GAEA63C,GAAAvrF,KAAAmD,KAAA2sB,EAAA4jB,GAEAvwC,KAAA2E,KAAA,WA0BA,SAAAutD,GAAA7hB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,iBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UAEA9iC,KAAAsB,IAAA,KAEAtB,KAAA8rB,KAAA,EACA9rB,KAAAqjD,mBAEArjD,KAAAynC,UAEAznC,KAAAyhD,UAAApR,GA4BA,SAAAk4C,GAAA57D,EAAA4jB,GAEAlE,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,SAEA3E,KAAA2sB,sBAAA,IAAA6uB,GACAx7C,KAAAuwC,sBAAA,IAAA2hB,IAA0ExuB,MAAA,SAAApkC,KAAAC,WAmI1E,SAAAipF,KAEAn8C,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,QAgBA,SAAA8jF,GAAAC,EAAAziE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,GAEAP,GAAAlpB,KAAAmD,KAAA0oF,EAAAziE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,GAEAtmB,KAAA6mB,mBA4BA,SAAA8hE,GAAAliE,EAAA9V,EAAAE,EAAA1Q,EAAAwE,EAAAshB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAR,GAAAlpB,KAAAmD,KAAA,KAAAimB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,EAAAC,GAEAvmB,KAAAgmB,OAAerV,QAAAE,UACf7Q,KAAAymB,UAKAzmB,KAAA+mB,SAKA/mB,KAAA6mB,mBAcA,SAAA+hE,GAAAj4E,EAAAE,EAAAlM,EAAAshB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnmB,GAIA,IAFAA,eAAAgL,MAEAA,IAAAhL,IAAAiL,GAEA,UAAA5K,MAAA,6FAIAmE,GAAAxE,IAAAgL,KAAAxG,EAAA0F,aACA1F,GAAAxE,IAAAiL,KAAAzG,EAAAkG,IAEAkb,GAAAlpB,KAAAmD,KAAA,KAAAimB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlmB,EAAAwE,EAAA2hB,GAEAtmB,KAAAgmB,OAAerV,QAAAE,UAEf7Q,KAAAomB,uBAAAxc,GACA5J,KAAAqmB,uBAAAzc,GAEA5J,KAAA+mB,SACA/mB,KAAA6mB,mBAaA,SAAAgiE,GAAAl8D,GAEA6uB,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,oBAIA,IAIAjI,EAAAyxB,EAAAxxB,EAAAQ,EAAA2rF,EACgCzqF,EAAA0nD,EAAAC,EAChCzjD,EACAg2C,EAPA1rB,KAKAk8D,GAAA,KAAAC,KACApnF,GAAA,aAKA,GAAA+qB,KAAAC,WAAA,CAIA,IAAAmlB,EAAAplB,EAAAolB,MAEA,IAAAr1C,EAAA,EAAAC,EAAAo1C,EAAAzvC,OAAgC5F,EAAAC,EAAOD,IAAA,CAEvC,IAAAg4C,EAAA3C,EAAAr1C,GAEA,IAAAyxB,EAAA,EAAeA,EAAA,EAAOA,IAEtB43B,EAAArR,EAAA9yC,EAAAusB,IACA63B,EAAAtR,EAAA9yC,GAAAusB,EAAA,OACA46D,EAAA,GAAAzpF,KAAAmG,IAAAsgD,EAAAC,GACA+iC,EAAA,GAAAzpF,KAAAoG,IAAAqgD,EAAAC,YAIAgjC,EAFAzmF,EAAAwmF,EAAA,OAAAA,EAAA,MAIAC,EAAAzmF,IAAqB23C,OAAA6uC,EAAA,GAAA5uC,OAAA4uC,EAAA,KAUrB,IAAAxmF,KAAAymF,EAEA3qF,EAAA2qF,EAAAzmF,GAEAg2C,EAAA5rB,EAAAE,SAAAxuB,EAAA67C,QACArtB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAEAyyC,EAAA5rB,EAAAE,SAAAxuB,EAAA87C,QACAttB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,QAIE,GAAA6mB,KAAAG,iBAAA,CAEF,IAAA/P,EAAA+3B,EAAAN,EACAa,EAAA3lB,EACAwqB,EAAAC,EAIA,GAFA5B,EAAA,IAAA/nC,GAEA,OAAAmc,EAAAnoB,MAAA,CAgBA,IAZAuY,EAAA4P,EAAAI,WAAAhQ,SACA+3B,EAAAnoB,EAAAnoB,MAGA,KAFAgwC,EAAA7nB,EAAA6nB,QAEAlyC,SAEAkyC,IAAgB9kB,MAAA,EAAA7U,MAAAi6B,EAAAj6B,MAAA4yB,cAAA,KAMhBtwC,EAAA,EAAA2rF,EAAAt0C,EAAAlyC,OAAmCnF,EAAA2rF,IAAQ3rF,EAO3C,IAAAT,EAHAgzB,GAFA2lB,EAAAb,EAAAr3C,IAEAuyB,MAGA/yB,EAAA+yB,EAFA2lB,EAAAx6B,MAE2Cne,EAAAC,EAAOD,GAAA,EAElD,IAAAyxB,EAAA,EAAiBA,EAAA,EAAOA,IAExB43B,EAAAjR,EAAA3gC,KAAAzX,EAAAyxB,GACA63B,EAAAlR,EAAA3gC,KAAAzX,GAAAyxB,EAAA,MACA46D,EAAA,GAAAzpF,KAAAmG,IAAAsgD,EAAAC,GACA+iC,EAAA,GAAAzpF,KAAAoG,IAAAqgD,EAAAC,YAIAgjC,EAFAzmF,EAAAwmF,EAAA,OAAAA,EAAA,MAIAC,EAAAzmF,IAAuB23C,OAAA6uC,EAAA,GAAA5uC,OAAA4uC,EAAA,KAYvB,IAAAxmF,KAAAymF,EAEA3qF,EAAA2qF,EAAAzmF,GAEAg2C,EAAAtkC,oBAAA8I,EAAA1e,EAAA67C,QACArtB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAEAyyC,EAAAtkC,oBAAA8I,EAAA1e,EAAA87C,QACAttB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,QAUA,IAAApJ,EAAA,EAAAC,GAFAogB,EAAA4P,EAAAI,WAAAhQ,UAEAlC,MAAA,EAA2Cne,EAAAC,EAAOD,IAElD,IAAAyxB,EAAA,EAAgBA,EAAA,EAAOA,IAKvB+rB,EAAA,EAAAx9C,EAAAyxB,EACAoqB,EAAAtkC,oBAAA8I,EAAAm9B,GACArtB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAEAq0C,EAAA,EAAAz9C,GAAAyxB,EAAA,KACAoqB,EAAAtkC,oBAAA8I,EAAAo9B,GACAttB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAYA9F,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IAiBA,SAAAo8D,GAAAC,EAAAC,EAAAC,GAEAv3C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqwC,YACA64C,OACAC,SACAC,UAGAppF,KAAA60C,mBAAA,IAAAw0C,GAAAH,EAAAC,EAAAC,IACAppF,KAAA03C,gBASA,SAAA2xC,GAAAH,EAAAC,EAAAC,GAEA5tC,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,2BAEA3E,KAAAqwC,YACA64C,OACAC,SACAC,UAKA,IAYA1sF,EAAAyxB,EAZA2mB,KACAjoB,KACAwnB,KACAC,KAIArwB,EAAA,IAAAzT,GAEAiY,EAAA,IAAAjY,GAAAmV,EAAA,IAAAnV,GACA84E,EAAA,IAAA94E,GAAA+4E,EAAA,IAAA/4E,GAMAg5E,EAAAL,EAAA,EAEA,IAAAzsF,EAAA,EAAaA,GAAA0sF,EAAa1sF,IAAA,CAE1B,IAAA8U,EAAA9U,EAAA0sF,EAEA,IAAAj7D,EAAA,EAAcA,GAAAg7D,EAAah7D,IAAA,CAE3B,IAAAgL,EAAAhL,EAAAg7D,EAIAD,EAAA/vD,EAAA3nB,EAAAiX,GACAoE,EAAA7nB,KAAAyjB,EAAArkB,EAAAqkB,EAAA5iB,EAAA4iB,EAAA3iB,GAMAqzB,EA9BA,MA8BA,GAEA+vD,EAAA/vD,EAhCA,KAgCA3nB,EAAAmU,GACA2jE,EAAAv3E,WAAA0W,EAAA9C,KAIAujE,EAAA/vD,EArCA,KAqCA3nB,EAAAmU,GACA2jE,EAAAv3E,WAAA4T,EAAA8C,IAIAjX,EA1CA,MA0CA,GAEA03E,EAAA/vD,EAAA3nB,EA5CA,KA4CAmU,GACA4jE,EAAAx3E,WAAA0W,EAAA9C,KAIAujE,EAAA/vD,EAAA3nB,EAjDA,KAiDAmU,GACA4jE,EAAAx3E,WAAA4T,EAAA8C,IAMAxE,EAAAxL,aAAA6wE,EAAAC,GAAAr2E,YACAmhC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAIAwuC,EAAAtvC,KAAAm0B,EAAA3nB,IAQA,IAAA9U,EAAA,EAAaA,EAAA0sF,EAAY1sF,IAEzB,IAAAyxB,EAAA,EAAcA,EAAAg7D,EAAYh7D,IAAA,CAE1B,IAAA/tB,EAAA1D,EAAA8sF,EAAAr7D,EACA9tB,EAAA3D,EAAA8sF,EAAAr7D,EAAA,EACApxB,GAAAL,EAAA,GAAA8sF,EAAAr7D,EAAA,EACAnxB,GAAAN,EAAA,GAAA8sF,EAAAr7D,EAIA2mB,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAQAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IAgBA,SAAAm1C,GAAA58D,EAAAioB,EAAAtwB,EAAAklE,GAEA73C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqwC,YACAxjB,WACAioB,UACAtwB,SACAklE,UAGA1pF,KAAA60C,mBAAA,IAAA80C,GAAA98D,EAAAioB,EAAAtwB,EAAAklE,IACA1pF,KAAA03C,gBASA,SAAAiyC,GAAA98D,EAAAioB,EAAAtwB,EAAAklE,GAEAluC,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,2BAEA3E,KAAAqwC,YACAxjB,WACAioB,UACAtwB,SACAklE,UAGAllE,KAAA,EAKA,IAAA86C,KACAsqB,KAwDA,SAAAC,EAAAzpF,EAAAC,EAAAtD,EAAA2sF,GAEA,IAMAhtF,EAAAyxB,EANA27D,EAAAxqF,KAAAyE,IAAA,EAAA2lF,GAIAl4E,KAMA,IAAA9U,EAAA,EAAcA,GAAAotF,EAAWptF,IAAA,CAEzB8U,EAAA9U,MAEA,IAAAqtF,EAAA3pF,EAAAiR,QAAAzC,KAAA7R,EAAAL,EAAAotF,GACAE,EAAA3pF,EAAAgR,QAAAzC,KAAA7R,EAAAL,EAAAotF,GAEAG,EAAAH,EAAAptF,EAEA,IAAAyxB,EAAA,EAAeA,GAAA87D,EAAW97D,IAI1B3c,EAAA9U,GAAAyxB,GAFA,IAAAA,GAAAzxB,IAAAotF,EAEAC,EAIAA,EAAA14E,QAAAzC,KAAAo7E,EAAA77D,EAAA87D,GAUA,IAAAvtF,EAAA,EAAcA,EAAAotF,EAAUptF,IAExB,IAAAyxB,EAAA,EAAeA,EAAA,GAAA27D,EAAAptF,GAAA,EAA0ByxB,IAAA,CAEzC,IAAAmrB,EAAAh6C,KAAA4E,MAAAiqB,EAAA,GAEAA,EAAA,MAEA+7D,EAAA14E,EAAA9U,GAAA48C,EAAA,IACA4wC,EAAA14E,EAAA9U,EAAA,GAAA48C,IACA4wC,EAAA14E,EAAA9U,GAAA48C,MAIA4wC,EAAA14E,EAAA9U,GAAA48C,EAAA,IACA4wC,EAAA14E,EAAA9U,EAAA,GAAA48C,EAAA,IACA4wC,EAAA14E,EAAA9U,EAAA,GAAA48C,MAmFA,SAAA4wC,EAAA3xC,GAEA+mB,EAAAt6D,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIA,SAAAqkF,EAAA3lF,EAAA+zC,GAEA,IAAAmpC,EAAA,EAAAl9E,EAEA+zC,EAAAn0C,EAAAyoB,EAAA60D,EAAA,GACAnpC,EAAA1yC,EAAAgnB,EAAA60D,EAAA,GACAnpC,EAAAzyC,EAAA+mB,EAAA60D,EAAA,GAsCA,SAAA0I,EAAA9/D,EAAAo3D,EAAA/7E,EAAA0kF,GAEAA,EAAA,OAAA//D,EAAAlmB,IAEAwlF,EAAAlI,GAAAp3D,EAAAlmB,EAAA,GAIA,IAAAuB,EAAAvB,GAAA,IAAAuB,EAAAG,IAEA8jF,EAAAlI,GAAA2I,EAAA,EAAA/qF,KAAAsO,GAAA,IAQA,SAAAy8E,EAAA1kF,GAEA,OAAArG,KAAA8T,MAAAzN,EAAAG,GAAAH,EAAAvB,IAxOA,SAAAslF,GAQA,IANA,IAAAtpF,EAAA,IAAAoQ,GACAnQ,EAAA,IAAAmQ,GACAzT,EAAA,IAAAyT,GAIA9T,EAAA,EAAkBA,EAAAo4C,EAAAxyC,OAAoB5F,GAAA,EAItCytF,EAAAr1C,EAAAp4C,EAAA,GAAA0D,GACA+pF,EAAAr1C,EAAAp4C,EAAA,GAAA2D,GACA8pF,EAAAr1C,EAAAp4C,EAAA,GAAAK,GAIA8sF,EAAAzpF,EAAAC,EAAAtD,EAAA2sF,GAlBA,CArCAA,KAAA,GA8HA,SAAAllE,GAMA,IAJA,IAAA+zB,EAAA,IAAA/nC,GAIA9T,EAAA,EAAkBA,EAAA4iE,EAAAh9D,OAAyB5F,GAAA,EAE3C67C,EAAAn0C,EAAAk7D,EAAA5iE,EAAA,GACA67C,EAAA1yC,EAAAy5D,EAAA5iE,EAAA,GACA67C,EAAAzyC,EAAAw5D,EAAA5iE,EAAA,GAEA67C,EAAArlC,YAAAhB,eAAAsS,GAEA86C,EAAA5iE,EAAA,GAAA67C,EAAAn0C,EACAk7D,EAAA5iE,EAAA,GAAA67C,EAAA1yC,EACAy5D,EAAA5iE,EAAA,GAAA67C,EAAAzyC,EAhBA,CAjHA0e,GAuIA,WAIA,IAFA,IAAA+zB,EAAA,IAAA/nC,GAEA9T,EAAA,EAAkBA,EAAA4iE,EAAAh9D,OAAyB5F,GAAA,GAE3C67C,EAAAn0C,EAAAk7D,EAAA5iE,EAAA,GACA67C,EAAA1yC,EAAAy5D,EAAA5iE,EAAA,GACA67C,EAAAzyC,EAAAw5D,EAAA5iE,EAAA,GAEA,IAAAy8B,EAAAkxD,EAAA9xC,GAAA,EAAAj5C,KAAAsO,GAAA,GACA4D,GAqHA7L,EArHA4yC,EAuHAj5C,KAAA8T,OAAAzN,EAAAE,EAAAvG,KAAAyT,KAAApN,EAAAvB,EAAAuB,EAAAvB,EAAAuB,EAAAG,EAAAH,EAAAG,IAvHAxG,KAAAsO,GAAA,IACAg8E,EAAA5kF,KAAAm0B,EAAA,EAAA3nB,GAoHA,IAAA7L,cAjDA,IAVA,IAAAvF,EAAA,IAAAoQ,GACAnQ,EAAA,IAAAmQ,GACAzT,EAAA,IAAAyT,GAEA85E,EAAA,IAAA95E,GAEA83C,EAAA,IAAAv4C,GACAw4C,EAAA,IAAAx4C,GACAy4C,EAAA,IAAAz4C,GAEArT,EAAA,EAAAyxB,EAAA,EAAyBzxB,EAAA4iE,EAAAh9D,OAAyB5F,GAAA,EAAAyxB,GAAA,GAElD/tB,EAAAwQ,IAAA0uD,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,IACA2D,EAAAuQ,IAAA0uD,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,IACAK,EAAA6T,IAAA0uD,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,GAAA4iE,EAAA5iE,EAAA,IAEA4rD,EAAA13C,IAAAg5E,EAAAz7D,EAAA,GAAAy7D,EAAAz7D,EAAA,IACAo6B,EAAA33C,IAAAg5E,EAAAz7D,EAAA,GAAAy7D,EAAAz7D,EAAA,IACAq6B,EAAA53C,IAAAg5E,EAAAz7D,EAAA,GAAAy7D,EAAAz7D,EAAA,IAEAm8D,EAAA/4E,KAAAnR,GAAAqR,IAAApR,GAAAoR,IAAA1U,GAAAqV,aAAA,GAEA,IAAAm4E,EAAAF,EAAAC,GAEAF,EAAA9hC,EAAAn6B,EAAA,EAAA/tB,EAAAmqF,GACAH,EAAA7hC,EAAAp6B,EAAA,EAAA9tB,EAAAkqF,GACAH,EAAA5hC,EAAAr6B,EAAA,EAAApxB,EAAAwtF,KAiCA5kF,GA1GA,WAIA,QAAAjJ,EAAA,EAAkBA,EAAAktF,EAAAtnF,OAAqB5F,GAAA,GAIvC,IAAAkiB,EAAAgrE,EAAAltF,EAAA,GACAsiB,EAAA4qE,EAAAltF,EAAA,GACAgb,EAAAkyE,EAAAltF,EAAA,GAEAgJ,EAAApG,KAAAoG,IAAAkZ,EAAAI,EAAAtH,GACAjS,EAAAnG,KAAAmG,IAAAmZ,EAAAI,EAAAtH,GAIAhS,EAAA,IAAAD,EAAA,KAEAmZ,EAAA,KAAAgrE,EAAAltF,EAAA,OACAsiB,EAAA,KAAA4qE,EAAAltF,EAAA,OACAgb,EAAA,KAAAkyE,EAAAltF,EAAA,SArBA,GAtBA,GA/HAsD,KAAAk9C,aAAA,eAAAlJ,GAAAsrB,EAAA,IACAt/D,KAAAk9C,aAAA,aAAAlJ,GAAAsrB,EAAA95D,QAAA,IACAxF,KAAAk9C,aAAA,SAAAlJ,GAAA41C,EAAA,IAEA,IAAAF,EAEA1pF,KAAA61C,uBAIA71C,KAAA2+C,mBAuQA,SAAA6rC,GAAAhmE,EAAAklE,GAEA73C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAAqwC,YACA7rB,SACAklE,UAGA1pF,KAAA60C,mBAAA,IAAA41C,GAAAjmE,EAAAklE,IACA1pF,KAAA03C,gBASA,SAAA+yC,GAAAjmE,EAAAklE,GAUAC,GAAA9sF,KAAAmD,MAPA,gCAIA,yBAGAwkB,EAAAklE,GAEA1pF,KAAA2E,KAAA,4BAEA3E,KAAAqwC,YACA7rB,SACAklE,UAeA,SAAAgB,GAAAlmE,EAAAklE,GAEA73C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqwC,YACA7rB,SACAklE,UAGA1pF,KAAA60C,mBAAA,IAAA81C,GAAAnmE,EAAAklE,IACA1pF,KAAA03C,gBASA,SAAAizC,GAAAnmE,EAAAklE,GAaAC,GAAA9sF,KAAAmD,MAVA,mBACA,sBAIA,kBACA,kBACA,aAGAwkB,EAAAklE,GAEA1pF,KAAA2E,KAAA,2BAEA3E,KAAAqwC,YACA7rB,SACAklE,UAeA,SAAAkB,GAAApmE,EAAAklE,GAEA73C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAAqwC,YACA7rB,SACAklE,UAGA1pF,KAAA60C,mBAAA,IAAAg2C,GAAArmE,EAAAklE,IACA1pF,KAAA03C,gBASA,SAAAmzC,GAAArmE,EAAAklE,GAEA,IAAAtrF,GAAA,EAAAkB,KAAAyT,KAAA,MAEA8Z,IACA,EAAAzuB,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,EACA,KAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EACAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,KAUAurF,GAAA9sF,KAAAmD,KAAA6sB,GANA,kCACA,kCACA,8BACA,iCAGArI,EAAAklE,GAEA1pF,KAAA2E,KAAA,4BAEA3E,KAAAqwC,YACA7rB,SACAklE,UAeA,SAAAoB,GAAAtmE,EAAAklE,GAEA73C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,uBAEA3E,KAAAqwC,YACA7rB,SACAklE,UAGA1pF,KAAA60C,mBAAA,IAAAk2C,GAAAvmE,EAAAklE,IACA1pF,KAAA03C,gBASA,SAAAqzC,GAAAvmE,EAAAklE,GAEA,IAAAtrF,GAAA,EAAAkB,KAAAyT,KAAA,MACAtV,EAAA,EAAAW,EAEAyuB,IAGA,iBACA,cACA,eACA,aAGA,GAAApvB,GAAAW,EAAA,GAAAX,EAAAW,EACA,EAAAX,GAAAW,EAAA,EAAAX,EAAAW,GAGAX,GAAAW,EAAA,GAAAX,EAAAW,EAAA,EACAX,GAAAW,EAAA,EAAAX,EAAAW,EAAA,GAGAA,EAAA,GAAAX,EAAAW,EAAA,GAAAX,GACAW,EAAA,EAAAX,EAAAW,EAAA,EAAAX,GAkBAksF,GAAA9sF,KAAAmD,KAAA6sB,GAdA,sBACA,sBACA,uBACA,qBACA,sBACA,sBACA,sBACA,uBACA,qBACA,uBACA,wBACA,sBAGArI,EAAAklE,GAEA1pF,KAAA2E,KAAA,6BAEA3E,KAAAqwC,YACA7rB,SACAklE,UAoBA,SAAAsB,GAAA18B,EAAA28B,EAAAzmE,EAAA0mE,EAAAC,EAAAC,GAEAv5C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,eAEA3E,KAAAqwC,YACAie,OACA28B,kBACAzmE,SACA0mE,iBACAC,mBAGAC,GAAAvoF,QAAA6O,KAAA,+CAEA,IAAA25E,EAAA,IAAAC,GAAAh9B,EAAA28B,EAAAzmE,EAAA0mE,EAAAC,GAIAnrF,KAAAurF,SAAAF,EAAAE,SACAvrF,KAAAq0C,QAAAg3C,EAAAh3C,QACAr0C,KAAAwrF,UAAAH,EAAAG,UAIAxrF,KAAA60C,mBAAAw2C,GACArrF,KAAA03C,gBASA,SAAA4zC,GAAAh9B,EAAA28B,EAAAzmE,EAAA0mE,EAAAC,GAEA3vC,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqwC,YACAie,OACA28B,kBACAzmE,SACA0mE,iBACAC,UAGAF,KAAA,GACAzmE,KAAA,EACA0mE,KAAA,EACAC,QAEA,IAAAM,EAAAn9B,EAAAo9B,oBAAAT,EAAAE,GAIAnrF,KAAAurF,SAAAE,EAAAF,SACAvrF,KAAAq0C,QAAAo3C,EAAAp3C,QACAr0C,KAAAwrF,UAAAC,EAAAD,UAIA,IAKA9uF,EAAAyxB,EALAoqB,EAAA,IAAA/nC,GACAyT,EAAA,IAAAzT,GACA8Z,EAAA,IAAAva,GACA47E,EAAA,IAAAn7E,GAMAqc,KACAwnB,KACAC,KACAQ,KAyCA,SAAA82C,EAAAlvF,GAIAivF,EAAAr9B,EAAAu9B,WAAAnvF,EAAAuuF,EAAAU,GAIA,IAAAG,EAAAL,EAAAp3C,QAAA33C,GACAqvF,EAAAN,EAAAD,UAAA9uF,GAIA,IAAAyxB,EAAA,EAAcA,GAAA+8D,EAAqB/8D,IAAA,CAEnC,IAAA3c,EAAA2c,EAAA+8D,EAAA5rF,KAAAsO,GAAA,EAEA4G,EAAAlV,KAAAkV,IAAAhD,GACA+C,GAAAjV,KAAAiV,IAAA/C,GAIAyS,EAAA7f,EAAAmQ,EAAAu3E,EAAA1nF,EAAAoQ,EAAAu3E,EAAA3nF,EACA6f,EAAApe,EAAA0O,EAAAu3E,EAAAjmF,EAAA2O,EAAAu3E,EAAAlmF,EACAoe,EAAAne,EAAAyO,EAAAu3E,EAAAhmF,EAAA0O,EAAAu3E,EAAAjmF,EACAme,EAAA/Q,YAEAmhC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAIAyyC,EAAAn0C,EAAAunF,EAAAvnF,EAAAogB,EAAAP,EAAA7f,EACAm0C,EAAA1yC,EAAA8lF,EAAA9lF,EAAA2e,EAAAP,EAAApe,EACA0yC,EAAAzyC,EAAA6lF,EAAA7lF,EAAA0e,EAAAP,EAAAne,EAEA+mB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,KA7DA,WAEA,IAAApJ,EAAA,EAAcA,EAAAuuF,EAAqBvuF,IAEnCkvF,EAAAlvF,GASAkvF,OAAAT,EAAAF,EAAA,GA4EA,WAEA,IAAAvuF,EAAA,EAAcA,GAAAuuF,EAAsBvuF,IAEpC,IAAAyxB,EAAA,EAAeA,GAAA+8D,EAAqB/8D,IAEpC7D,EAAAlmB,EAAA1H,EAAAuuF,EACA3gE,EAAAzkB,EAAAsoB,EAAA+8D,EAEA52C,EAAAtvC,KAAAslB,EAAAlmB,EAAAkmB,EAAAzkB,GATA,GAtBA,WAEA,IAAAsoB,EAAA,EAAcA,GAAA88D,EAAsB98D,IAEpC,IAAAzxB,EAAA,EAAeA,GAAAwuF,EAAqBxuF,IAAA,CAEpC,IAAA0D,GAAA8qF,EAAA,IAAA/8D,EAAA,IAAAzxB,EAAA,GACA2D,GAAA6qF,EAAA,GAAA/8D,GAAAzxB,EAAA,GACAK,GAAAmuF,EAAA,GAAA/8D,EAAAzxB,EACAM,GAAAkuF,EAAA,IAAA/8D,EAAA,GAAAzxB,EAIAo4C,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,IAdA,GAnEA,GAPAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA4HA,SAAA03C,GAAAxnE,EAAAynE,EAAAhB,EAAAC,EAAAhtF,EAAAuZ,EAAAy0E,GAEAr6C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAAqwC,YACA7rB,SACAynE,OACAhB,kBACAC,iBACAhtF,IACAuZ,cAGAy0E,GAAArpF,QAAA6O,KAAA,4FAEA1R,KAAA60C,mBAAA,IAAAs3C,GAAA3nE,EAAAynE,EAAAhB,EAAAC,EAAAhtF,EAAAuZ,IACAzX,KAAA03C,gBASA,SAAAy0C,GAAA3nE,EAAAynE,EAAAhB,EAAAC,EAAAhtF,EAAAuZ,GAEA+jC,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,0BAEA3E,KAAAqwC,YACA7rB,SACAynE,OACAhB,kBACAC,iBACAhtF,IACAuZ,KAGA+M,KAAA,EACAynE,KAAA,GACAhB,EAAA3rF,KAAA4E,MAAA+mF,IAAA,GACAC,EAAA5rF,KAAA4E,MAAAgnF,IAAA,EACAhtF,KAAA,EACAuZ,KAAA,EAIA,IAOA/a,EAAAyxB,EAPA2mB,KACAjoB,KACAwnB,KACAC,KAMAiE,EAAA,IAAA/nC,GACAyT,EAAA,IAAAzT,GAEA47E,EAAA,IAAA57E,GACA67E,EAAA,IAAA77E,GAEAu7E,EAAA,IAAAv7E,GACA87E,EAAA,IAAA97E,GACAs7E,EAAA,IAAAt7E,GAIA,IAAA9T,EAAA,EAAaA,GAAAuuF,IAAsBvuF,EAAA,CAInC,IAAAy8B,EAAAz8B,EAAAuuF,EAAA/sF,EAAAoB,KAAAsO,GAAA,EAoBA,IAfA2+E,EAAApzD,EAAAj7B,EAAAuZ,EAAA+M,EAAA4nE,GACAG,EAAApzD,EAAA,IAAAj7B,EAAAuZ,EAAA+M,EAAA6nE,GAIAC,EAAAv6E,WAAAs6E,EAAAD,GACAN,EAAAn6E,WAAA06E,EAAAD,GACAL,EAAAtzE,aAAA6zE,EAAAR,GACAA,EAAArzE,aAAAszE,EAAAO,GAIAP,EAAA74E,YACA44E,EAAA54E,YAEAib,EAAA,EAAcA,GAAA+8D,IAAqB/8D,EAAA,CAKnC,IAAA3c,EAAA2c,EAAA+8D,EAAA5rF,KAAAsO,GAAA,EACAwX,GAAA6mE,EAAA3sF,KAAAiV,IAAA/C,GACA6T,EAAA4mE,EAAA3sF,KAAAkV,IAAAhD,GAKA+mC,EAAAn0C,EAAAgoF,EAAAhoF,GAAAghB,EAAA0mE,EAAA1nF,EAAAihB,EAAA0mE,EAAA3nF,GACAm0C,EAAA1yC,EAAAumF,EAAAvmF,GAAAuf,EAAA0mE,EAAAjmF,EAAAwf,EAAA0mE,EAAAlmF,GACA0yC,EAAAzyC,EAAAsmF,EAAAtmF,GAAAsf,EAAA0mE,EAAAhmF,EAAAuf,EAAA0mE,EAAAjmF,GAEA+mB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAme,EAAAlS,WAAAwmC,EAAA6zC,GAAAl5E,YAEAmhC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAIAwuC,EAAAtvC,KAAAtI,EAAAuuF,GACA32C,EAAAtvC,KAAAmpB,EAAA+8D,IAQA,IAAA/8D,EAAA,EAAaA,GAAA88D,EAAsB98D,IAEnC,IAAAzxB,EAAA,EAAcA,GAAAwuF,EAAqBxuF,IAAA,CAInC,IAAA0D,GAAA8qF,EAAA,IAAA/8D,EAAA,IAAAzxB,EAAA,GACA2D,GAAA6qF,EAAA,GAAA/8D,GAAAzxB,EAAA,GACAK,GAAAmuF,EAAA,GAAA/8D,EAAAzxB,EACAM,GAAAkuF,EAAA,IAAA/8D,EAAA,GAAAzxB,EAIAo4C,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAeA,SAAAuvF,EAAApzD,EAAAj7B,EAAAuZ,EAAA+M,EAAAzH,GAEA,IAAAyvE,EAAAltF,KAAAiV,IAAA4kB,GACAszD,EAAAntF,KAAAkV,IAAA2kB,GACAuzD,EAAAj1E,EAAAvZ,EAAAi7B,EACAwzD,EAAArtF,KAAAiV,IAAAm4E,GAEA3vE,EAAA3Y,EAAAogB,GAAA,EAAAmoE,GAAA,GAAAH,EACAzvE,EAAAlX,EAAA2e,GAAA,EAAAmoE,GAAAF,EAAA,GACA1vE,EAAAjX,EAAA0e,EAAAllB,KAAAkV,IAAAk4E,GAAA,GAhBA1sF,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA8BA,SAAAs4C,GAAApoE,EAAAynE,EAAAf,EAAAD,EAAA4B,GAEAh7C,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,gBAEA3E,KAAAqwC,YACA7rB,SACAynE,OACAf,iBACAD,kBACA4B,OAGA7sF,KAAA60C,mBAAA,IAAAi4C,GAAAtoE,EAAAynE,EAAAf,EAAAD,EAAA4B,IACA7sF,KAAA03C,gBASA,SAAAo1C,GAAAtoE,EAAAynE,EAAAf,EAAAD,EAAA4B,GAEArxC,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAAqwC,YACA7rB,SACAynE,OACAf,iBACAD,kBACA4B,OAGAroE,KAAA,EACAynE,KAAA,GACAf,EAAA5rF,KAAA4E,MAAAgnF,IAAA,EACAD,EAAA3rF,KAAA4E,MAAA+mF,IAAA,EACA4B,KAAA,EAAAvtF,KAAAsO,GAIA,IAWAugB,EAAAzxB,EAXAo4C,KACAjoB,KACAwnB,KACAC,KAIAhgC,EAAA,IAAA9D,GACA+nC,EAAA,IAAA/nC,GACAyT,EAAA,IAAAzT,GAMA,IAAA2d,EAAA,EAAaA,GAAA+8D,EAAqB/8D,IAElC,IAAAzxB,EAAA,EAAcA,GAAAuuF,EAAsBvuF,IAAA,CAEpC,IAAAy8B,EAAAz8B,EAAAuuF,EAAA4B,EACAr7E,EAAA2c,EAAA+8D,EAAA5rF,KAAAsO,GAAA,EAIA2qC,EAAAn0C,GAAAogB,EAAAynE,EAAA3sF,KAAAiV,IAAA/C,IAAAlS,KAAAiV,IAAA4kB,GACAof,EAAA1yC,GAAA2e,EAAAynE,EAAA3sF,KAAAiV,IAAA/C,IAAAlS,KAAAkV,IAAA2kB,GACAof,EAAAzyC,EAAAmmF,EAAA3sF,KAAAkV,IAAAhD,GAEAqb,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAwO,EAAAlQ,EAAAogB,EAAAllB,KAAAiV,IAAA4kB,GACA7kB,EAAAzO,EAAA2e,EAAAllB,KAAAkV,IAAA2kB,GACAlV,EAAAlS,WAAAwmC,EAAAjkC,GAAApB,YAEAmhC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAIAwuC,EAAAtvC,KAAAtI,EAAAuuF,GACA32C,EAAAtvC,KAAAmpB,EAAA+8D,GAQA,IAAA/8D,EAAA,EAAaA,GAAA+8D,EAAqB/8D,IAElC,IAAAzxB,EAAA,EAAcA,GAAAuuF,EAAsBvuF,IAAA,CAIpC,IAAA0D,GAAA6qF,EAAA,GAAA98D,EAAAzxB,EAAA,EACA2D,GAAA4qF,EAAA,IAAA98D,EAAA,GAAAzxB,EAAA,EACAK,GAAAkuF,EAAA,IAAA98D,EAAA,GAAAzxB,EACAM,GAAAiuF,EAAA,GAAA98D,EAAAzxB,EAIAo4C,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAQAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA9qRAkd,GAAAxzD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAwzD,GAAAxzD,UAAAsT,YAAAkgD,GAEAA,GAAAxzD,UAAAgnF,uBAEAxzB,GAAAxzD,UAAAuT,KAAA,SAAAxP,GAoBA,OAlBAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAm1D,aAAApzD,EAAAozD,aAEAn1D,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aAEAjyC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAmlC,SAAApjC,EAAAojC,SAEAnlC,KAAA2mC,gBAAA5kC,EAAA4kC,gBACA3mC,KAAA4mC,kBAAA7kC,EAAA6kC,kBACA5mC,KAAA6mC,iBAAA9kC,EAAA8kC,iBAEA7mC,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBAEArhD,MAuDAyxD,GAAAzzD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAyzD,GAAAzzD,UAAAsT,YAAAmgD,GAEAA,GAAAzzD,UAAA6/D,0BAEApM,GAAAzzD,UAAAuT,KAAA,SAAAxP,GAmBA,OAjBAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0qC,kBAAAn5B,KAAAxP,EAAA2oC,mBACA1qC,KAAA2qC,aAAA5oC,EAAA4oC,aACA3qC,KAAA4qC,YAAA7oC,EAAA6oC,YAEA5qC,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aAEAjyC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAmlC,SAAApjC,EAAAojC,SAEAnlC,KAAA2mC,gBAAA5kC,EAAA4kC,gBACA3mC,KAAA4mC,kBAAA7kC,EAAA6kC,kBACA5mC,KAAA6mC,iBAAA9kC,EAAA8kC,iBAEA7mC,MAkbAo/D,GAAAphE,UAAAZ,OAAA0rB,OAAA/C,GAAA/nB,WACAohE,GAAAphE,UAAAsT,YAAA8tD,GA01EA8I,GAAAlqE,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAokB,GAAAlvC,YAEAsT,YAAA42D,GAEA6kB,uBAEAx7E,KAAA,SAAAxP,EAAA6uC,GAiBA,OAfA1D,GAAAlvC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,EAAA6uC,GAEA5wC,KAAAmoE,IAAApmE,EAAAomE,IACAnoE,KAAAqtC,KAAAtrC,EAAAsrC,KAEArtC,KAAA6d,KAAA9b,EAAA8b,KACA7d,KAAA8d,IAAA/b,EAAA+b,IACA9d,KAAAqoE,MAAAtmE,EAAAsmE,MAEAroE,KAAAooE,OAAArmE,EAAAqmE,OACApoE,KAAAstC,KAAA,OAAAvrC,EAAAurC,KAAA,KAAAlwC,OAAA4D,UAA6De,EAAAurC,MAE7DttC,KAAAsoE,UAAAvmE,EAAAumE,UACAtoE,KAAAuoE,WAAAxmE,EAAAwmE,WAEAvoE,MAYAgtF,eAAA,SAAAC,GAGA,IAAAC,EAAA,GAAAltF,KAAAmtF,gBAAAF,EAEAjtF,KAAAmoE,IAAA,EAAAz6D,GAAAG,QAAAvO,KAAA8tF,KAAAF,GACAltF,KAAAutC,0BAOA8/C,eAAA,WAEA,IAAAH,EAAA5tF,KAAA6iC,IAAA,GAAAz0B,GAAAC,QAAA3N,KAAAmoE,KAEA,SAAAnoE,KAAAmtF,gBAAAD,GAIAI,gBAAA,WAEA,SAAA5/E,GAAAG,QAAAvO,KAAA8tF,KACA9tF,KAAA6iC,IAAA,GAAAz0B,GAAAC,QAAA3N,KAAAmoE,KAAAnoE,KAAAqtC,OAIAkgD,aAAA,WAGA,OAAAvtF,KAAAsoE,UAAAhpE,KAAAmG,IAAAzF,KAAAooE,OAAA,IAIA+kB,cAAA,WAGA,OAAAntF,KAAAsoE,UAAAhpE,KAAAoG,IAAA1F,KAAAooE,OAAA,IAuCAp3B,cAAA,SAAAC,EAAAC,EAAA9sC,EAAAyB,EAAA8K,EAAAE,GAEA7Q,KAAAooE,OAAAn3B,EAAAC,EAEA,OAAAlxC,KAAAstC,OAEAttC,KAAAstC,MACA6D,WACAF,UAAA,EACAC,WAAA,EACAE,QAAA,EACAC,QAAA,EACA1gC,MAAA,EACAE,OAAA,IAKA7Q,KAAAstC,KAAA6D,WACAnxC,KAAAstC,KAAA2D,YACAjxC,KAAAstC,KAAA4D,aACAlxC,KAAAstC,KAAA8D,QAAAhtC,EACApE,KAAAstC,KAAA+D,QAAAxrC,EACA7F,KAAAstC,KAAA38B,QACA3Q,KAAAstC,KAAAz8B,SAEA7Q,KAAAutC,0BAIA+D,gBAAA,WAEA,OAAAtxC,KAAAstC,OAEAttC,KAAAstC,KAAA6D,YAIAnxC,KAAAutC,0BAIAA,uBAAA,WAEA,IAAA1vB,EAAA7d,KAAA6d,KACAF,EAAAE,EAAAve,KAAA6iC,IACA,GAAAz0B,GAAAC,QAAA3N,KAAAmoE,KAAAnoE,KAAAqtC,KACAx8B,EAAA,EAAA8M,EACAhN,EAAA3Q,KAAAooE,OAAAv3D,EACA4M,GAAA,GAAA9M,EACA28B,EAAAttC,KAAAstC,KAEA,UAAAttC,KAAAstC,MAAAttC,KAAAstC,KAAA6D,QAAA,CAEA,IAAAF,EAAA3D,EAAA2D,UACAC,EAAA5D,EAAA4D,WAEAzzB,GAAA6vB,EAAA8D,QAAAzgC,EAAAsgC,EACAtzB,GAAA2vB,EAAA+D,QAAAxgC,EAAAqgC,EACAvgC,GAAA28B,EAAA38B,MAAAsgC,EACApgC,GAAAy8B,EAAAz8B,OAAAqgC,EAIA,IAAAs8C,EAAAxtF,KAAAuoE,WACA,IAAAilB,IAAA/vE,GAAAI,EAAA2vE,EAAAxtF,KAAAutF,gBAEAvtF,KAAAkjB,iBAAA1F,gBAAAC,IAAA9M,EAAAgN,IAAA9M,EAAAgN,EAAA7d,KAAA8d,MAIAmL,OAAA,SAAAC,GAEA,IAAAhB,EAAAmkB,GAAAruC,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAgBA,OAdAhB,EAAApqB,OAAAqqE,IAAAnoE,KAAAmoE,IACAjgD,EAAApqB,OAAAuvC,KAAArtC,KAAAqtC,KAEAnlB,EAAApqB,OAAA+f,KAAA7d,KAAA6d,KACAqK,EAAApqB,OAAAggB,IAAA9d,KAAA8d,IACAoK,EAAApqB,OAAAuqE,MAAAroE,KAAAqoE,MAEAngD,EAAApqB,OAAAsqE,OAAApoE,KAAAooE,OAEA,OAAApoE,KAAAstC,OAAAplB,EAAApqB,OAAAwvC,KAAAlwC,OAAA4D,UAAgEhB,KAAAstC,OAEhEplB,EAAApqB,OAAAwqE,UAAAtoE,KAAAsoE,UACApgD,EAAApqB,OAAAyqE,WAAAvoE,KAAAuoE,WAEArgD,KAkBAsgD,GAAAxqE,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/C,GAAAlqE,YAEAsT,YAAAk3D,GAEA6a,mBA2uFA4D,GAAAjpF,UAAAm2D,aAEA8yB,GAAAjpF,UAAAqT,MAAA,WAEA,WAAA41E,GAAAjnF,KAAA0jC,MAAAU,SAAApkC,KAAAohE,UAIA6lB,GAAAjpF,UAAAirB,OAAA,WAEA,OACAtkB,KAAA,UACA++B,MAAA1jC,KAAA0jC,MAAAU,SACAg9B,QAAAphE,KAAAohE,UAqBA8lB,GAAAlpF,UAAAmjE,SAEA+lB,GAAAlpF,UAAAqT,MAAA,WAEA,WAAA61E,GAAAlnF,KAAA0jC,MAAAU,SAAApkC,KAAA6d,KAAA7d,KAAA8d,MAIAopE,GAAAlpF,UAAAirB,OAAA,WAEA,OACAtkB,KAAA,MACA++B,MAAA1jC,KAAA0jC,MAAAU,SACAvmB,KAAA7d,KAAA6d,KACAC,IAAA9d,KAAA8d,MAuBAqpE,GAAAnpF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAA61E,GAEA51E,KAAA,SAAAxP,EAAA6uC,GAWA,OATAvE,GAAAruC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,EAAA6uC,GAEA,OAAA7uC,EAAAorE,aAAAntE,KAAAmtE,WAAAprE,EAAAorE,WAAA97D,SACA,OAAAtP,EAAAqlC,MAAApnC,KAAAonC,IAAArlC,EAAAqlC,IAAA/1B,SACA,OAAAtP,EAAAqhF,mBAAApjF,KAAAojF,iBAAArhF,EAAAqhF,iBAAA/xE,SAEArR,KAAAk+D,WAAAn8D,EAAAm8D,WACAl+D,KAAA4mB,iBAAA7kB,EAAA6kB,iBAEA5mB,MAIAipB,OAAA,SAAAC,GAEA,IAAAhB,EAAAmkB,GAAAruC,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAKA,OAHA,OAAAlpB,KAAAmtE,aAAAjlD,EAAApqB,OAAAqvE,WAAAntE,KAAAmtE,WAAAlkD,OAAAC,IACA,OAAAlpB,KAAAonC,MAAAlf,EAAApqB,OAAAspC,IAAApnC,KAAAonC,IAAAne,UAEAf,KAqCAk/D,GAAAppF,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAopF,GAAAppF,UAAAsT,YAAA81E,GACAA,GAAAppF,UAAAyvF,oBAEArG,GAAAppF,UAAAuT,KAAA,SAAAxP,GASA,OAPAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OACA1jC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAmlB,SAAApjB,EAAAojB,SAEAnlB,MAqBAqnF,GAAArpF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAA+1E,GAEAzB,YAEAn2C,SAEAkpB,GAAA,IAAAnoD,GACAooD,GAAA,IAAApoD,GACAqoD,GAAA,IAAAroD,GAEA,SAAAw4C,EAAAI,GAEAwP,GAAAl0C,sBAAA1kB,KAAAmjB,aACA6lC,EAAArF,IAAAG,oBAAA8U,GAAAD,IAEAE,GAAAl0C,mBAAA3kB,KAAAmjB,aACA,IAAAuqE,EAAA70B,GAAAz0D,EAAAy0D,GAAAhzD,EAAA,EAEA,KAAA+yD,GAAAtlD,kBAAAqlD,IAAA+0B,GAAA,CAEA,IAAAtlD,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAslD,IAEAvwB,EAAA4gB,EAAAnrC,MAAAuqB,EAAA4gB,EAAAlrC,KAEAsrC,EAAApkD,MAEAojC,WACA/b,MAAAssC,GAAAtnD,QACAqjC,KAAA,KACA52C,OAAAkC,UAQAqR,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAAuwC,UAAAh/B,KAAAvR,OAIAuR,KAAA,SAAAxP,GAMA,OAJAsqC,GAAAruC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,YAEAA,EAAAuS,QAAAtU,KAAAsU,OAAA/C,KAAAxP,EAAAuS,QAEAtU,QA4BAsnF,GAAAtpF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAg2E,GAEA/1E,KAAA,SAAAxP,GAEAsqC,GAAAruC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,MAIA,IAFA,IAAAwlF,EAAAxlF,EAAAwlF,OAEA7qF,EAAA,EAAAC,EAAA4qF,EAAAjlF,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAAgqF,EAAAa,EAAA7qF,GAEAsD,KAAA2tF,SAAAjH,EAAA5oF,OAAAuT,QAAAq1E,EAAAt+C,UAIA,OAAApoC,MAIA2tF,SAAA,SAAA7vF,EAAAsqC,YAEAA,MAAA,GAEAA,EAAA9oC,KAAA2T,IAAAm1B,GAIA,IAFA,IAAAm/C,EAAAvnF,KAAAunF,OAEA5qF,EAAA,EAAkBA,EAAA4qF,EAAAjlF,UAElB8lC,EAAAm/C,EAAA5qF,GAAAyrC,UAFqCzrC,KAUrC4qF,EAAAniF,OAAAzI,EAAA,GAAwByrC,WAAAtqC,WAExBkC,KAAAyR,IAAA3T,IAIA8vF,qBAAA,SAAAxlD,GAIA,IAFA,IAAAm/C,EAAAvnF,KAAAunF,OAEA7qF,EAAA,EAAAC,EAAA4qF,EAAAjlF,OAAqC5F,EAAAC,KAErCyrC,EAAAm/C,EAAA7qF,GAAA0rC,UAF4C1rC,KAU5C,OAAA6qF,EAAA7qF,EAAA,GAAAoB,QAIA2xC,SAEAqpB,GAAA,IAAAtoD,GAEA,SAAAw4C,EAAAI,GAEA0P,GAAAp0C,sBAAA1kB,KAAAmjB,aAEA,IAAAilB,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAylD,IAEA94D,KAAA4tF,qBAAAxlD,GAAAqH,QAAAuZ,EAAAI,KAMA1pC,OAAA,WAEA,IAAAld,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GAEA,gBAAAyS,GAEA,IAAAskE,EAAAvnF,KAAAunF,OAEA,GAAAA,EAAAjlF,OAAA,GAEAE,EAAAkiB,sBAAAzB,EAAAE,aACAtP,EAAA6Q,sBAAA1kB,KAAAmjB,aAEA,IAAAilB,EAAA5lC,EAAA6Q,WAAAQ,GAEA0zE,EAAA,GAAAzpF,OAAA8uC,WAEA,QAAAlwC,EAAA,EAAAC,EAAA4qF,EAAAjlF,OAAuC5F,EAAAC,GAEvCyrC,GAAAm/C,EAAA7qF,GAAA0rC,SAF8C1rC,IAI9C6qF,EAAA7qF,EAAA,GAAAoB,OAAA8uC,WACA26C,EAAA7qF,GAAAoB,OAAA8uC,WAUA,KAAWlwC,EAAAC,EAAOD,IAElB6qF,EAAA7qF,GAAAoB,OAAA8uC,aAnCA,GA6CA3jB,OAAA,SAAAC,GAEA,IAAAhB,EAAAmkB,GAAAruC,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAEAhB,EAAApqB,OAAAypF,UAIA,IAFA,IAAAA,EAAAvnF,KAAAunF,OAEA7qF,EAAA,EAAAC,EAAA4qF,EAAAjlF,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAAgqF,EAAAa,EAAA7qF,GAEAwrB,EAAApqB,OAAAypF,OAAAviF,MACAlH,OAAA4oF,EAAA5oF,OAAA4E,KACA0lC,SAAAs+C,EAAAt+C,WAKA,OAAAlgB,KAoDA9qB,OAAA4D,OAAAwmF,GAAAxpF,WAEA0pF,kBAAA,WAEA1nF,KAAAynF,gBAEA,QAAA/qF,EAAA,EAAAivB,EAAA3rB,KAAA8yD,MAAAxwD,OAA0C5F,EAAAivB,EAAQjvB,IAAA,CAElD,IAAAskB,EAAA,IAAAhR,GAEAhQ,KAAA8yD,MAAAp2D,IAEAskB,EAAA3F,WAAArb,KAAA8yD,MAAAp2D,GAAAymB,aAIAnjB,KAAAynF,aAAAziF,KAAAgc,KAMA4pD,KAAA,WAEA,IAAAijB,EAAAnxF,EAAAivB,EAIA,IAAAjvB,EAAA,EAAAivB,EAAA3rB,KAAA8yD,MAAAxwD,OAAsC5F,EAAAivB,EAAQjvB,KAE9CmxF,EAAA7tF,KAAA8yD,MAAAp2D,KAIAmxF,EAAA1qE,YAAA9H,WAAArb,KAAAynF,aAAA/qF,IAQA,IAAAA,EAAA,EAAAivB,EAAA3rB,KAAA8yD,MAAAxwD,OAAsC5F,EAAAivB,EAAQjvB,KAE9CmxF,EAAA7tF,KAAA8yD,MAAAp2D,MAIAmxF,EAAAvhD,QAAAuhD,EAAAvhD,OAAAwhD,QAEAD,EAAAjoF,OAAAyV,WAAAwyE,EAAAvhD,OAAAnpB,aACA0qE,EAAAjoF,OAAAqM,SAAA47E,EAAA1qE,cAIA0qE,EAAAjoF,OAAA2L,KAAAs8E,EAAA1qE,aAIA0qE,EAAAjoF,OAAAoX,UAAA6wE,EAAA9wE,SAAA8wE,EAAA9nF,WAAA8nF,EAAA/xE,SAQA4D,QAEAq5C,GAAA,IAAA/oD,GACAgpD,GAAA,IAAAhpD,GAEA,WASA,IAPA,IAAA8iD,EAAA9yD,KAAA8yD,MACA20B,EAAAznF,KAAAynF,aACAhD,EAAAzkF,KAAAykF,aACAD,EAAAxkF,KAAAwkF,YAIA9nF,EAAA,EAAAivB,EAAAmnC,EAAAxwD,OAAsC5F,EAAAivB,EAAQjvB,IAAA,CAI9C,IAAAkJ,EAAAktD,EAAAp2D,GAAAo2D,EAAAp2D,GAAAymB,YAAA61C,GAEAD,GAAArgD,iBAAA9S,EAAA6hF,EAAA/qF,IACAq8D,GAAA/kD,QAAAywE,EAAA,GAAA/nF,YAIA8nF,IAEAA,EAAAzmC,kBAQA1sC,MAAA,WAEA,WAAAm2E,GAAAxnF,KAAA8yD,MAAA9yD,KAAAynF,eAIAsG,cAAA,SAAA9wF,GAEA,QAAAP,EAAA,EAAAivB,EAAA3rB,KAAA8yD,MAAAxwD,OAA0C5F,EAAAivB,EAAQjvB,IAAA,CAElD,IAAAmxF,EAAA7tF,KAAA8yD,MAAAp2D,GAEA,GAAAmxF,EAAA5wF,SAEA,OAAA4wF,MA0BAlG,GAAA3pF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAq2E,GAEAmG,YA6BAlG,GAAA5pF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAA45B,GAAA1kD,YAEAsT,YAAAs2E,GAEA/0B,iBAEAm1B,UAAA,WAEA,IAAA6F,EAAAG,EACAtxF,EAAAivB,EADAmnC,KAGA,GAAA9yD,KAAA2sB,mBAAA3sB,KAAA2sB,SAAAmmC,MAAA,CAIA,IAAAp2D,EAAA,EAAAivB,EAAA3rB,KAAA2sB,SAAAmmC,MAAAxwD,OAAgD5F,EAAAivB,EAAQjvB,IAExDsxF,EAAAhuF,KAAA2sB,SAAAmmC,MAAAp2D,GAIAmxF,EAAA,IAAAlG,GACA70B,EAAA9tD,KAAA6oF,GAIAA,EAAA5wF,KAAA+wF,EAAA/wF,KACA4wF,EAAA9wE,SAAAhJ,UAAAi6E,EAAAC,KACAJ,EAAA9nF,WAAAgO,UAAAi6E,EAAAE,eACAF,EAAAG,KAAAN,EAAA/xE,MAAA/H,UAAAi6E,EAAAG,KAMA,IAAAzxF,EAAA,EAAAivB,EAAA3rB,KAAA2sB,SAAAmmC,MAAAxwD,OAAgD5F,EAAAivB,EAAQjvB,KAIxD,KAFAsxF,EAAAhuF,KAAA2sB,SAAAmmC,MAAAp2D,IAEA4vC,QAAA,OAAA0hD,EAAA1hD,iBAAAwmB,EAAAk7B,EAAA1hD,QAIAwmB,EAAAk7B,EAAA1hD,QAAA76B,IAAAqhD,EAAAp2D,IAMAsD,KAAAyR,IAAAqhD,EAAAp2D,IAaA,OAFAsD,KAAAgtB,sBAEA8lC,GAIA9zD,KAAA,SAAA+zD,EAAA+0B,GAEA9nF,KAAA+yD,oBAEA+0B,IAEA9nF,KAAAgtB,sBAEAhtB,KAAA+yD,SAAA20B,oBAEAI,EAAA9nF,KAAAmjB,aAIAnjB,KAAA8nF,WAAAv2E,KAAAu2E,GACA9nF,KAAA+nF,kBAAA1sE,WAAAysE,IAIAld,KAAA,WAEA5qE,KAAA+yD,SAAA6X,QAIAqd,qBAAA,WAEA,IAAAnsE,EAAApf,EAEA,GAAAsD,KAAA2sB,UAAA3sB,KAAA2sB,SAAAC,WAEA,IAAAlwB,EAAA,EAAeA,EAAAsD,KAAA2sB,SAAAwlB,YAAA7vC,OAAsC5F,IAAA,CAErD,IAAA0xF,EAAApuF,KAAA2sB,SAAAwlB,YAAAz1C,IAEAof,EAAA,EAAAsyE,EAAAp7E,oBAEAoV,IAEAgmE,EAAAl8E,eAAA4J,GAIAsyE,EAAAx9E,IAAA,cAMG,GAAA5Q,KAAA2sB,UAAA3sB,KAAA2sB,SAAAG,iBAAA,CAEH,IAAAuhE,EAAA,IAAAlnE,GAEAmnE,EAAAtuF,KAAA2sB,SAAAI,WAAAuhE,WAEA,IAAA5xF,EAAA,EAAeA,EAAA4xF,EAAAzzE,MAAsBne,IAErC2xF,EAAAjqF,EAAAkqF,EAAAn6E,KAAAzX,GACA2xF,EAAAxoF,EAAAyoF,EAAAl6E,KAAA1X,GACA2xF,EAAAvoF,EAAAwoF,EAAAxzE,KAAApe,GACA2xF,EAAAl+E,EAAAm+E,EAAA3jE,KAAAjuB,IAEAof,EAAA,EAAAuyE,EAAAr7E,oBAEAoV,IAEAimE,EAAAn8E,eAAA4J,GAIAuyE,EAAAz9E,IAAA,SAIA09E,EAAA3zC,QAAAj+C,EAAA2xF,EAAAjqF,EAAAiqF,EAAAxoF,EAAAwoF,EAAAvoF,EAAAuoF,EAAAl+E,KAQA6c,kBAAA,SAAA4iB,GAEA8S,GAAA1kD,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,GAEA,aAAA5vC,KAAA6nF,SAEA7nF,KAAA+nF,kBAAA1sE,WAAArb,KAAAmjB,aAEG,aAAAnjB,KAAA6nF,SAEH7nF,KAAA+nF,kBAAA1sE,WAAArb,KAAA8nF,YAIAjlF,QAAA6O,KAAA,6CAAA1R,KAAA6nF,WAMAx2E,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAA2sB,SAAA3sB,KAAAuwC,UAAAh/B,KAAAvR,SAsCAgyD,GAAAh0D,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAg0D,GAAAh0D,UAAAsT,YAAA0gD,GAEAA,GAAAh0D,UAAAinF,uBAEAjzB,GAAAh0D,UAAAuT,KAAA,SAAAxP,GAUA,OARAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OAEA1jC,KAAA4hD,UAAA7/C,EAAA6/C,UACA5hD,KAAAkoF,QAAAnmF,EAAAmmF,QACAloF,KAAAmoF,SAAApmF,EAAAomF,SAEAnoF,MA0BAooF,GAAApqF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAA82E,GAEAnqC,UAEAswC,sBAEA7+D,GAAA,IAAAlf,GACAsf,GAAA,IAAAtf,GAEA,WAEA,IAAAmc,EAAA3sB,KAAA2sB,SAEA,GAAAA,EAAAG,iBAIA,UAAAH,EAAAnoB,MAAA,CAKA,IAHA,IAAAgqF,EAAA7hE,EAAAI,WAAAhQ,SACAs1B,GAAA,GAEA31C,EAAA,EAAAC,EAAA6xF,EAAA3zE,MAAkDne,EAAAC,EAAOD,IAEzDgzB,GAAAzb,oBAAAu6E,EAAA9xF,EAAA,GACAozB,GAAA7b,oBAAAu6E,EAAA9xF,GAEA21C,EAAA31C,GAAA21C,EAAA31C,EAAA,GACA21C,EAAA31C,IAAAgzB,GAAArc,WAAAyc,IAIAnD,EAAAuwB,aAAA,mBAAAlJ,GAAA3B,EAAA,SAIAxvC,QAAA6O,KAAA,sGAII,GAAAib,EAAAC,WAAA,CAEJ,IAAAC,EAAAF,EAAAE,SAKA,KAJAwlB,EAAA1lB,EAAA0lB,eAEA,KAEA31C,EAAA,EAAAC,EAAAkwB,EAAAvqB,OAAyC5F,EAAAC,EAAOD,IAEhD21C,EAAA31C,GAAA21C,EAAA31C,EAAA,GACA21C,EAAA31C,IAAAmwB,EAAAnwB,EAAA,GAAA2W,WAAAwZ,EAAAnwB,IAMA,OAAAsD,OAMAyvC,QAAA,WAEA,IAAAyY,EAAA,IAAAl4C,GACA2zC,EAAA,IAAArB,GACAz8B,EAAA,IAAAwC,GAEA,gBAAA2gC,EAAAI,GAEA,IAAAtR,EAAAkR,EAAAylC,cACAC,EAAA52C,IAEAnrB,EAAA3sB,KAAA2sB,SACAxJ,EAAAnjB,KAAAmjB,YASA,GALA,OAAAwJ,EAAA4E,gBAAA5E,EAAA6E,wBAEA3L,EAAAtU,KAAAob,EAAA4E,gBACA1L,EAAA9K,aAAAoI,QAEA6lC,EAAArF,IAAAt2B,iBAAAxH,GAAA,CAIAqiC,EAAA7sC,WAAA8H,GACAwgC,EAAApyC,KAAAy3C,EAAArF,KAAA5oC,aAAAmtC,GAEA,IAAAymC,EAAA,IAAAn+E,GACAo+E,EAAA,IAAAp+E,GACAq+E,EAAA,IAAAr+E,GACAs+E,EAAA,IAAAt+E,GACAu+E,EAAA/uF,WAAAuiF,eAAA,IAEA,GAAA51D,EAAAG,iBAAA,CAEA,IAAAtoB,EAAAmoB,EAAAnoB,MAEAuwC,EADApoB,EAAAI,WACAhQ,SAAAxX,MAEA,UAAAf,EAIA,IAFA,IAAAswC,EAAAtwC,EAAAe,MAEA7I,EAAA,EAAAC,EAAAm4C,EAAAxyC,OAAA,EAA6C5F,EAAAC,EAAOD,GAAAqyF,EAAA,CAEpD,IAAA3uF,EAAA00C,EAAAp4C,GACA2D,EAAAy0C,EAAAp4C,EAAA,GAEAiyF,EAAA56E,UAAAghC,EAAA,EAAA30C,GACAwuF,EAAA76E,UAAAghC,EAAA,EAAA10C,GAEAsjD,EAAAM,oBAAA0qC,EAAAC,EAAAE,EAAAD,GAEAH,IAEAI,EAAA/zE,aAAA/a,KAAAmjB,cAEAilB,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAy7E,IAEA9lC,EAAAnrC,MAAAuqB,EAAA4gB,EAAAlrC,KAEAsrC,EAAApkD,MAEAojC,WAGA/b,MAAAwiE,EAAAx9E,QAAA0J,aAAA/a,KAAAmjB,aACA3e,MAAA9H,EACAg4C,KAAA,KACAyU,UAAA,KACArrD,OAAAkC,aAQA,IAAAtD,EAAA,EAAAC,EAAAo4C,EAAAzyC,OAAA,IAAmD5F,EAAAC,EAAOD,GAAAqyF,EAE1DJ,EAAA56E,UAAAghC,EAAA,EAAAr4C,GACAkyF,EAAA76E,UAAAghC,EAAA,EAAAr4C,EAAA,GAEAinD,EAAAM,oBAAA0qC,EAAAC,EAAAE,EAAAD,GAEAH,IAEAI,EAAA/zE,aAAA/a,KAAAmjB,cAEAilB,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAy7E,IAEA9lC,EAAAnrC,MAAAuqB,EAAA4gB,EAAAlrC,KAEAsrC,EAAApkD,MAEAojC,WAGA/b,MAAAwiE,EAAAx9E,QAAA0J,aAAA/a,KAAAmjB,aACA3e,MAAA9H,EACAg4C,KAAA,KACAyU,UAAA,KACArrD,OAAAkC,aAQI,GAAA2sB,EAAAC,WAEJ,KAAAC,EAAAF,EAAAE,SACAmiE,EAAAniE,EAAAvqB,OAEA,IAAA5F,EAAA,EAAoBA,EAAAsyF,EAAA,EAAoBtyF,GAAAqyF,EAAA,CAExC,IAMA3mD,EANAub,EAAAM,oBAAAp3B,EAAAnwB,GAAAmwB,EAAAnwB,EAAA,GAAAoyF,EAAAD,GAEAH,IAEAI,EAAA/zE,aAAA/a,KAAAmjB,cAEAilB,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAy7E,IAEA9lC,EAAAnrC,MAAAuqB,EAAA4gB,EAAAlrC,KAEAsrC,EAAApkD,MAEAojC,WAGA/b,MAAAwiE,EAAAx9E,QAAA0J,aAAA/a,KAAAmjB,aACA3e,MAAA9H,EACAg4C,KAAA,KACAyU,UAAA,KACArrD,OAAAkC,YAzIA,GAqJAqR,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAA2sB,SAAA3sB,KAAAuwC,UAAAh/B,KAAAvR,SAkBAqoF,GAAArqF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs/D,GAAApqF,YAEAsT,YAAA+2E,GAEA9F,kBAEAgM,qBAAA,WAEA,IAAA7+D,EAAA,IAAAlf,GACAsf,EAAA,IAAAtf,GAEA,kBAEA,IAAAmc,EAAA3sB,KAAA2sB,SAEA,GAAAA,EAAAG,iBAIA,UAAAH,EAAAnoB,MAAA,CAKA,IAHA,IAAAgqF,EAAA7hE,EAAAI,WAAAhQ,SACAs1B,KAEA31C,EAAA,EAAAC,EAAA6xF,EAAA3zE,MAAkDne,EAAAC,EAAOD,GAAA,EAEzDgzB,EAAAzb,oBAAAu6E,EAAA9xF,GACAozB,EAAA7b,oBAAAu6E,EAAA9xF,EAAA,GAEA21C,EAAA31C,GAAA,IAAAA,EAAA,EAAA21C,EAAA31C,EAAA,GACA21C,EAAA31C,EAAA,GAAA21C,EAAA31C,GAAAgzB,EAAArc,WAAAyc,GAIAnD,EAAAuwB,aAAA,mBAAAlJ,GAAA3B,EAAA,SAIAxvC,QAAA6O,KAAA,8GAII,GAAAib,EAAAC,WAEJ,KAAAC,EAAAF,EAAAE,SAGA,IAFAwlB,EAAA1lB,EAAA0lB,cAEA31C,EAAA,EAAAC,EAAAkwB,EAAAvqB,OAAyC5F,EAAAC,EAAOD,GAAA,EAEhDgzB,EAAAne,KAAAsb,EAAAnwB,IACAozB,EAAAve,KAAAsb,EAAAnwB,EAAA,IAEA21C,EAAA31C,GAAA,IAAAA,EAAA,EAAA21C,EAAA31C,EAAA,GACA21C,EAAA31C,EAAA,GAAA21C,EAAA31C,GAAAgzB,EAAArc,WAAAyc,GAMA,OAAA9vB,MArDA,KAyEAsoF,GAAAtqF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs/D,GAAApqF,YAEAsT,YAAAg3E,GAEA9F,gBAqCAtwB,GAAAl0D,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAk0D,GAAAl0D,UAAAsT,YAAA4gD,GAEAA,GAAAl0D,UAAAmnF,oBAEAjzB,GAAAl0D,UAAAuT,KAAA,SAAAxP,GAWA,OATAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OAEA1jC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAA8rB,KAAA/pB,EAAA+pB,KACA9rB,KAAAqjD,gBAAAthD,EAAAshD,gBAEArjD,MAmBAuoF,GAAAvqF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAi3E,GAEAvqC,YAEAvO,QAAA,WAEA,IAAAyY,EAAA,IAAAl4C,GACA2zC,EAAA,IAAArB,GACAz8B,EAAA,IAAAwC,GAEA,gBAAA2gC,EAAAI,GAEA,IAAAtrD,EAAAkC,KACA2sB,EAAA3sB,KAAA2sB,SACAxJ,EAAAnjB,KAAAmjB,YACA8rE,EAAAjmC,EAAAkmC,OAAA3G,OAAA0G,UAUA,GANA,OAAAtiE,EAAA4E,gBAAA5E,EAAA6E,wBAEA3L,EAAAtU,KAAAob,EAAA4E,gBACA1L,EAAA9K,aAAAoI,GACA0C,EAAArB,QAAAyqE,OAEAjmC,EAAArF,IAAAt2B,iBAAAxH,GAAA,CAIAqiC,EAAA7sC,WAAA8H,GACAwgC,EAAApyC,KAAAy3C,EAAArF,KAAA5oC,aAAAmtC,GAEA,IAAAinC,EAAAF,IAAAjvF,KAAA8b,MAAA1X,EAAApE,KAAA8b,MAAAjW,EAAA7F,KAAA8b,MAAAhW,GAAA,GACAspF,EAAAD,IACApyE,EAAA,IAAAvM,GACAmoD,EAAA,IAAAnoD,GA8BA,GAAAmc,EAAAG,iBAAA,CAEA,IAAAtoB,EAAAmoB,EAAAnoB,MAEAuwC,EADApoB,EAAAI,WACAhQ,SAAAxX,MAEA,UAAAf,EAIA,IAFA,IAAAswC,EAAAtwC,EAAAe,MAEA7I,EAAA,EAAAivB,EAAAmpB,EAAAxyC,OAA0C5F,EAAAivB,EAAQjvB,IAAA,CAElD,IAAA0D,EAAA00C,EAAAp4C,GAEAqgB,EAAAhJ,UAAAghC,EAAA,EAAA30C,GAEAivF,EAAAtyE,EAAA3c,OAMA,CAAA1D,EAAA,UAAAC,EAAAo4C,EAAAzyC,OAAA,EAA+C5F,EAAAC,EAAOD,IAEtDqgB,EAAAhJ,UAAAghC,EAAA,EAAAr4C,GAEA2yF,EAAAtyE,EAAArgB,QAQA,KAAAmwB,EAAAF,EAAAE,SAEA,IAAAnwB,EAAA,EAAAC,EAAAkwB,EAAAvqB,OAAyC5F,EAAAC,EAAOD,IAEhD2yF,EAAAxiE,EAAAnwB,OAlEA,SAAA2yF,EAAAhjE,EAAA7nB,GAEA,IAAA8qF,EAAA3rC,EAAAK,kBAAA33B,GAEA,GAAAijE,EAAAF,EAAA,CAEAzrC,EAAAG,oBAAAz3B,EAAAssC,GACAA,EAAA59C,aAAAoI,GAEA,IAAAilB,EAAA4gB,EAAArF,IAAApB,OAAAlvC,WAAAslD,GAEA,GAAAvwB,EAAA4gB,EAAAnrC,MAAAuqB,EAAA4gB,EAAAlrC,IAAA,OAEAsrC,EAAApkD,MAEAojC,WACAmnD,cAAAjwF,KAAAyT,KAAAu8E,GACAjjE,MAAAssC,EAAAtnD,QACA7M,QACAkwC,KAAA,KACA52C,cArDA,GA6GAuT,MAAA,WAEA,WAAArR,KAAAsR,YAAAtR,KAAA2sB,SAAA3sB,KAAAuwC,UAAAh/B,KAAAvR,SAkBAwoF,GAAAxqF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAk3E,GAEAgH,aAgBA/G,GAAAzqF,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAA/C,GAAA/nB,YAEAsT,YAAAm3E,GAEAzlB,kBAEAtjD,OAAA,WAEA,IAAAgpE,EAAA1oF,KAAAgmB,MAEA0iE,EAAA+G,YAAA/G,EAAAgH,oBAEA1vF,KAAA+9C,mBA+BA4qC,GAAA3qF,UAAAZ,OAAA0rB,OAAA/C,GAAA/nB,WACA2qF,GAAA3qF,UAAAsT,YAAAq3E,GAEAA,GAAA3qF,UAAAmnE,uBAgCAyjB,GAAA5qF,UAAAZ,OAAA0rB,OAAA/C,GAAA/nB,WACA4qF,GAAA5qF,UAAAsT,YAAAs3E,GACAA,GAAA5qF,UAAA4mE,kBA4KAikB,GAAA7qF,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACA6qF,GAAA7qF,UAAAsT,YAAAu3E,GA6BAI,GAAAjrF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAirF,GAAAjrF,UAAAsT,YAAA23E,GAuHAI,GAAArrF,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAqrF,GAAArrF,UAAAsT,YAAA+3E,GA6BAI,GAAAzrF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAyrF,GAAAzrF,UAAAsT,YAAAm4E,GA8SAE,GAAA3rF,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACA2rF,GAAA3rF,UAAAsT,YAAAq4E,GAyBAa,GAAAxsF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAwsF,GAAAxsF,UAAAsT,YAAAk5E,GAyBAC,GAAAzsF,UAAAZ,OAAA0rB,OAAA6gE,GAAA3rF,WACAysF,GAAAzsF,UAAAsT,YAAAm5E,GAyBAC,GAAA1sF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACA0sF,GAAA1sF,UAAAsT,YAAAo5E,GA4BAC,GAAA3sF,UAAAZ,OAAA0rB,OAAA6gE,GAAA3rF,WACA2sF,GAAA3sF,UAAAsT,YAAAq5E,GAyBAC,GAAA5sF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACA4sF,GAAA5sF,UAAAsT,YAAAs5E,GAgCAC,GAAA7sF,UAAAZ,OAAA0rB,OAAA6gE,GAAA3rF,WACA6sF,GAAA7sF,UAAAsT,YAAAu5E,GAyBAC,GAAA9sF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACA8sF,GAAA9sF,UAAAsT,YAAAw5E,GAwDAC,GAAA/sF,UAAAZ,OAAA0rB,OAAA6gE,GAAA3rF,WACA+sF,GAAA/sF,UAAAsT,YAAAy5E,GA6CAC,GAAAhtF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAgtF,GAAAhtF,UAAAsT,YAAA05E,GAwKAM,GAAAttF,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAstF,GAAAttF,UAAAsT,YAAAg6E,GAiCAU,GAAAhuF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAguF,GAAAhuF,UAAAsT,YAAA06E,GAwJAG,GAAAnuF,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAmuF,GAAAnuF,UAAAsT,YAAA66E,GA6BAS,GAAA5uF,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACA4uF,GAAA5uF,UAAAsT,YAAAs7E,GAwGAE,GAAA9uF,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACA8uF,GAAA9uF,UAAAsT,YAAAw7E,GA2DA,SAAA6C,GAAAznE,EAAAwH,EAAAI,EAAA8/D,EAAAC,GAEA,IAAAnzF,EAAAozF,EAEA,GAAAD,IA6tBA,SAAA3nE,EAAAwH,EAAAI,EAAA8/D,GAIA,IAFA,IAAAG,EAAA,EAEArzF,EAAAgzB,EAAAvB,EAAA2B,EAAA8/D,EAAoClzF,EAAAozB,EAASpzB,GAAAkzF,EAE7CG,IAAA7nE,EAAAiG,GAAAjG,EAAAxrB,KAAAwrB,EAAAxrB,EAAA,GAAAwrB,EAAAiG,EAAA,IACAA,EAAAzxB,EAIA,OAAAqzF,EAXA,CA7tBA7nE,EAAAwH,EAAAI,EAAA8/D,GAAA,EAEA,IAAAlzF,EAAAgzB,EAAkBhzB,EAAAozB,EAASpzB,GAAAkzF,EAAAE,EAAAE,GAAAtzF,EAAAwrB,EAAAxrB,GAAAwrB,EAAAxrB,EAAA,GAAAozF,QAI3B,IAAApzF,EAAAozB,EAAA8/D,EAAsBlzF,GAAAgzB,EAAYhzB,GAAAkzF,EAAAE,EAAAE,GAAAtzF,EAAAwrB,EAAAxrB,GAAAwrB,EAAAxrB,EAAA,GAAAozF,GAWlC,OAPAA,GAAAh8E,GAAAg8E,IAAAlhC,QAEAqhC,GAAAH,GACAA,IAAAlhC,MAIAkhC,EAMA,SAAAI,GAAAxgE,EAAAI,GAEA,IAAAJ,EAAA,OAAAA,EACAI,MAAAJ,GAEA,IAAAygE,EAAAjyF,EAAAwxB,EAEA,GAIA,GAFAygE,KAEAjyF,EAAAkyF,UAAAt8E,GAAA5V,IAAA0wD,OAAA,IAAAyhC,GAAAnyF,EAAAoyF,KAAApyF,IAAA0wD,MASA1wD,IAAA0wD,SATA,CAIA,GAFAqhC,GAAA/xF,IACAA,EAAA4xB,EAAA5xB,EAAAoyF,QACApyF,EAAA0wD,KAAA,MACAuhC,YAQEA,GAAAjyF,IAAA4xB,GAEF,OAAAA,EAMA,SAAAygE,GAAAC,EAAAnV,EAAAuU,EAAA1kE,EAAAC,EAAAslE,EAAAC,GAEA,GAAAF,EAAA,EAIAE,GAAAD,GAkWA,SAAA/gE,EAAAxE,EAAAC,EAAAslE,GAEA,IAAAvyF,EAAAwxB,EAEA,GAEA,OAAAxxB,EAAA4H,IAAA5H,EAAA4H,EAAA6qF,GAAAzyF,EAAAkG,EAAAlG,EAAA2H,EAAAqlB,EAAAC,EAAAslE,IACAvyF,EAAA0yF,MAAA1yF,EAAAoyF,KACApyF,EAAA2yF,MAAA3yF,EAAA0wD,KACA1wD,IAAA0wD,WAEE1wD,IAAAwxB,GAEFxxB,EAAA0yF,MAAAC,MAAA,KACA3yF,EAAA0yF,MAAA,KASA,SAAAtT,GAEA,IAAA5gF,EAAAwB,EAAAuZ,EAAApZ,EAAAyyF,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,EAEA,GAOA,IALAhzF,EAAAo/E,EACAA,EAAA,KACAwT,EAAA,KACAC,EAAA,EAEA7yF,GAAA,CAMA,IAJA6yF,IACAt5E,EAAAvZ,EACA8yF,EAAA,EAEAt0F,EAAA,EAAeA,EAAAw0F,IAEfF,IACAv5E,IAAAo5E,OAH2Bn0F,KAU3B,IAFAu0F,EAAAC,EAEAF,EAAA,GAAAC,EAAA,GAAAx5E,GAEA,IAAAu5E,IAAA,IAAAC,IAAAx5E,GAAAvZ,EAAA4H,GAAA2R,EAAA3R,IAEAzH,EAAAH,EACAA,IAAA2yF,MACAG,MAIA3yF,EAAAoZ,EACAA,IAAAo5E,MACAI,KAIAH,IAAAD,MAAAxyF,EACAi/E,EAAAj/E,EAEAA,EAAAuyF,MAAAE,EACAA,EAAAzyF,EAIAH,EAAAuZ,EAIAq5E,EAAAD,MAAA,KACAK,GAAA,QAEEH,EAAA,GA1DF,CAPA7yF,GAhBA,CAlWAsyF,EAAAtlE,EAAAC,EAAAslE,GAMA,IAJA,IAAAH,EAAA1hC,EAAAuiC,EAAAX,EAIAA,EAAAF,OAAAE,EAAA5hC,MAKA,GAHA0hC,EAAAE,EAAAF,KACA1hC,EAAA4hC,EAAA5hC,KAEA6hC,EAAAW,GAAAZ,EAAAtlE,EAAAC,EAAAslE,GAAAY,GAAAb,GAGAnV,EAAAr2E,KAAAsrF,EAAA5zF,EAAAkzF,GACAvU,EAAAr2E,KAAAwrF,EAAA9zF,EAAAkzF,GACAvU,EAAAr2E,KAAA4pD,EAAAlyD,EAAAkzF,GAEAK,GAAAO,GAGAA,EAAA5hC,OACAuiC,EAAAviC,YAUA,IAJA4hC,EAAA5hC,KAIAuiC,EAAA,CAIAT,EAMI,IAAAA,EAGJH,GADAC,EAAAc,GAAAd,EAAAnV,EAAAuU,GACAvU,EAAAuU,EAAA1kE,EAAAC,EAAAslE,EAAA,GAII,IAAAC,GAEJa,GAAAf,EAAAnV,EAAAuU,EAAA1kE,EAAAC,EAAAslE,GAbAF,GAAAL,GAAAM,GAAAnV,EAAAuU,EAAA1kE,EAAAC,EAAAslE,EAAA,GAiBA,QAUA,SAAAY,GAAAb,GAEA,IAAApwF,EAAAowF,EAAAF,KACAjwF,EAAAmwF,EACAzzF,EAAAyzF,EAAA5hC,KAEA,GAAAyhC,GAAAjwF,EAAAC,EAAAtD,IAAA,WAKA,IAFA,IAAAmB,EAAAsyF,EAAA5hC,UAEA1wD,IAAAsyF,EAAAF,MAAA,CAEA,GAAAkB,GAAApxF,EAAAgE,EAAAhE,EAAAyF,EAAAxF,EAAA+D,EAAA/D,EAAAwF,EAAA9I,EAAAqH,EAAArH,EAAA8I,EAAA3H,EAAAkG,EAAAlG,EAAA2H,IAAAwqF,GAAAnyF,EAAAoyF,KAAApyF,IAAA0wD,OAAA,EAEA,SAIA1wD,IAAA0wD,KAIA,SAIA,SAAAwiC,GAAAZ,EAAAtlE,EAAAC,EAAAslE,GAEA,IAAArwF,EAAAowF,EAAAF,KACAjwF,EAAAmwF,EACAzzF,EAAAyzF,EAAA5hC,KAEA,GAAAyhC,GAAAjwF,EAAAC,EAAAtD,IAAA,WAkBA,IAdA,IAAA00F,EAAArxF,EAAAgE,EAAA/D,EAAA+D,EAAAhE,EAAAgE,EAAArH,EAAAqH,EAAAhE,EAAAgE,EAAArH,EAAAqH,EAAA/D,EAAA+D,EAAArH,EAAAqH,EAAA/D,EAAA+D,EAAArH,EAAAqH,EACAstF,EAAAtxF,EAAAyF,EAAAxF,EAAAwF,EAAAzF,EAAAyF,EAAA9I,EAAA8I,EAAAzF,EAAAyF,EAAA9I,EAAA8I,EAAAxF,EAAAwF,EAAA9I,EAAA8I,EAAAxF,EAAAwF,EAAA9I,EAAA8I,EACA8rF,EAAAvxF,EAAAgE,EAAA/D,EAAA+D,EAAAhE,EAAAgE,EAAArH,EAAAqH,EAAAhE,EAAAgE,EAAArH,EAAAqH,EAAA/D,EAAA+D,EAAArH,EAAAqH,EAAA/D,EAAA+D,EAAArH,EAAAqH,EACAwtF,EAAAxxF,EAAAyF,EAAAxF,EAAAwF,EAAAzF,EAAAyF,EAAA9I,EAAA8I,EAAAzF,EAAAyF,EAAA9I,EAAA8I,EAAAxF,EAAAwF,EAAA9I,EAAA8I,EAAAxF,EAAAwF,EAAA9I,EAAA8I,EAIAulB,EAAAulE,GAAAc,EAAAC,EAAAxmE,EAAAC,EAAAslE,GACAllE,EAAAolE,GAAAgB,EAAAC,EAAA1mE,EAAAC,EAAAslE,GAIAvyF,EAAAsyF,EAAAK,MAEA3yF,KAAA4H,GAAAylB,GAAA,CAEA,GAAArtB,IAAAsyF,EAAAF,MAAApyF,IAAAsyF,EAAA5hC,MACA4iC,GAAApxF,EAAAgE,EAAAhE,EAAAyF,EAAAxF,EAAA+D,EAAA/D,EAAAwF,EAAA9I,EAAAqH,EAAArH,EAAA8I,EAAA3H,EAAAkG,EAAAlG,EAAA2H,IACAwqF,GAAAnyF,EAAAoyF,KAAApyF,IAAA0wD,OAAA,WACA1wD,IAAA2yF,MAQA,IAFA3yF,EAAAsyF,EAAAI,MAEA1yF,KAAA4H,GAAAslB,GAAA,CAEA,GAAAltB,IAAAsyF,EAAAF,MAAApyF,IAAAsyF,EAAA5hC,MACA4iC,GAAApxF,EAAAgE,EAAAhE,EAAAyF,EAAAxF,EAAA+D,EAAA/D,EAAAwF,EAAA9I,EAAAqH,EAAArH,EAAA8I,EAAA3H,EAAAkG,EAAAlG,EAAA2H,IACAwqF,GAAAnyF,EAAAoyF,KAAApyF,IAAA0wD,OAAA,WAEA1wD,IAAA0yF,MAIA,SAMA,SAAAU,GAAA5hE,EAAA2rD,EAAAuU,GAEA,IAAA1xF,EAAAwxB,EAEA,GAEA,IAAAtvB,EAAAlC,EAAAoyF,KAAAjwF,EAAAnC,EAAA0wD,WAEA96C,GAAA1T,EAAAC,IAAA+oD,GAAAhpD,EAAAlC,IAAA0wD,KAAAvuD,IAAAwxF,GAAAzxF,EAAAC,IAAAwxF,GAAAxxF,EAAAD,KAEAi7E,EAAAr2E,KAAA5E,EAAA1D,EAAAkzF,GACAvU,EAAAr2E,KAAA9G,EAAAxB,EAAAkzF,GACAvU,EAAAr2E,KAAA3E,EAAA3D,EAAAkzF,GAIAK,GAAA/xF,GACA+xF,GAAA/xF,EAAA0wD,MAEA1wD,EAAAwxB,EAAArvB,GAIAnC,IAAA0wD,WAEE1wD,IAAAwxB,GAEF,OAAAxxB,EAMA,SAAAqzF,GAAA7hE,EAAA2rD,EAAAuU,EAAA1kE,EAAAC,EAAAslE,GAIA,IAAArwF,EAAAsvB,EAEA,GAIA,IAFA,IAAArvB,EAAAD,EAAAwuD,UAEAvuD,IAAAD,EAAAkwF,MAAA,CAEA,GAAAlwF,EAAA1D,IAAA2D,EAAA3D,GAAAo1F,GAAA1xF,EAAAC,GAAA,CAIA,IAAAtD,EAAAg1F,GAAA3xF,EAAAC,GAWA,OAPAD,EAAA8vF,GAAA9vF,IAAAwuD,MACA7xD,EAAAmzF,GAAAnzF,IAAA6xD,MAIA2hC,GAAAnwF,EAAAi7E,EAAAuU,EAAA1kE,EAAAC,EAAAslE,QACAF,GAAAxzF,EAAAs+E,EAAAuU,EAAA1kE,EAAAC,EAAAslE,GAKApwF,IAAAuuD,KAIAxuD,IAAAwuD,WAEExuD,IAAAsvB,GAmCF,SAAAsiE,GAAA5xF,EAAAC,GAEA,OAAAD,EAAAgE,EAAA/D,EAAA+D,EAMA,SAAA6tF,GAAAC,EAAAC,GAIA,GAFAA,EAcA,SAAAD,EAAAC,GAEA,IAIAr1F,EAJAoB,EAAAi0F,EACAC,EAAAF,EAAA9tF,EACAiuF,EAAAH,EAAArsF,EACA2c,OAMA,GAEA,GAAA6vE,GAAAn0F,EAAA2H,GAAAwsF,GAAAn0F,EAAA0wD,KAAA/oD,GAAA3H,EAAA0wD,KAAA/oD,IAAA3H,EAAA2H,EAAA,CAEA,IAAAzB,EAAAlG,EAAAkG,GAAAiuF,EAAAn0F,EAAA2H,IAAA3H,EAAA0wD,KAAAxqD,EAAAlG,EAAAkG,IAAAlG,EAAA0wD,KAAA/oD,EAAA3H,EAAA2H,GAEA,GAAAzB,GAAAguF,GAAAhuF,EAAAoe,EAAA,CAIA,GAFAA,EAAApe,EAEAA,IAAAguF,EAAA,CAEA,GAAAC,IAAAn0F,EAAA2H,EAAA,OAAA3H,EACA,GAAAm0F,IAAAn0F,EAAA0wD,KAAA/oD,EAAA,OAAA3H,EAAA0wD,KAIA9xD,EAAAoB,EAAAkG,EAAAlG,EAAA0wD,KAAAxqD,EAAAlG,IAAA0wD,MAMA1wD,IAAA0wD,WAEE1wD,IAAAi0F,GAEF,IAAAr1F,EAAA,YAEA,GAAAs1F,IAAA5vE,EAAA,OAAA1lB,EAAAwzF,KAMA,IAIAnuD,EAJAgvD,EAAAr0F,EACAw1F,EAAAx1F,EAAAsH,EACAmuF,EAAAz1F,EAAA+I,EACA2sF,EAAApqE,IAKA,IAFAlqB,EAAApB,EAAA8xD,KAEA1wD,IAAAizF,GAEAiB,GAAAl0F,EAAAkG,GAAAlG,EAAAkG,GAAAkuF,GAAAF,IAAAl0F,EAAAkG,GACAotF,GAAAa,EAAAE,EAAAH,EAAA5vE,EAAA6vE,EAAAC,EAAAC,EAAAF,EAAAE,EAAA/vE,EAAA4vE,EAAAC,EAAAn0F,EAAAkG,EAAAlG,EAAA2H,MAEAs8B,EAAA7iC,KAAA2T,IAAAo/E,EAAAn0F,EAAA2H,IAAAusF,EAAAl0F,EAAAkG,IAEAouF,GAAArwD,IAAAqwD,GAAAt0F,EAAAkG,EAAAtH,EAAAsH,IAAAytF,GAAA3zF,EAAAg0F,KAEAp1F,EAAAoB,EACAs0F,EAAArwD,GAMAjkC,IAAA0wD,KAIA,OAAA9xD,EA1EA,CAdAo1F,EAAAC,GAEA,CAEA,IAAA9xF,EAAA0xF,GAAAI,EAAAD,GAEAhC,GAAA7vF,IAAAuuD,OAiLA,SAAA+hC,GAAAvsF,EAAAyB,EAAAqlB,EAAAC,EAAAslE,GAiBA,OAPArsF,EAAA,aADAA,EAAA,YADAA,EAAA,YADAA,EAAA,WAHAA,EAAA,OAAAA,EAAA8mB,GAAAulE,GAGArsF,GAAA,IACAA,GAAA,IACAA,GAAA,IACAA,GAAA,KAKAyB,EAAA,aADAA,EAAA,YADAA,EAAA,YADAA,EAAA,WAPAA,EAAA,OAAAA,EAAAslB,GAAAslE,GAOA5qF,GAAA,IACAA,GAAA,IACAA,GAAA,IACAA,GAAA,KAEA,EAMA,SAAA4sF,GAAA/iE,GAEA,IAAAxxB,EAAAwxB,EAAAgjE,EAAAhjE,EAEA,GAEAxxB,EAAAkG,EAAAsuF,EAAAtuF,IAAAsuF,EAAAx0F,GACAA,IAAA0wD,WAEE1wD,IAAAwxB,GAEF,OAAAgjE,EAMA,SAAAlB,GAAAjuE,EAAAC,EAAAE,EAAAC,EAAAyB,EAAAC,EAAAstE,EAAAC,GAEA,OAAAxtE,EAAAutE,IAAAnvE,EAAAovE,IAAArvE,EAAAovE,IAAAttE,EAAAutE,IAAA,IACArvE,EAAAovE,IAAAhvE,EAAAivE,IAAAlvE,EAAAivE,IAAAnvE,EAAAovE,IAAA,IACAlvE,EAAAivE,IAAAttE,EAAAutE,IAAAxtE,EAAAutE,IAAAhvE,EAAAivE,IAAA,EAMA,SAAAd,GAAA1xF,EAAAC,GAEA,OAAAD,EAAAwuD,KAAAlyD,IAAA2D,EAAA3D,GAAA0D,EAAAkwF,KAAA5zF,IAAA2D,EAAA3D,IAmCA,SAAA0D,EAAAC,GAEA,IAAAnC,EAAAkC,EAEA,GAEA,GAAAlC,EAAAxB,IAAA0D,EAAA1D,GAAAwB,EAAA0wD,KAAAlyD,IAAA0D,EAAA1D,GAAAwB,EAAAxB,IAAA2D,EAAA3D,GAAAwB,EAAA0wD,KAAAlyD,IAAA2D,EAAA3D,GACA0sD,GAAAlrD,IAAA0wD,KAAAxuD,EAAAC,GAEA,SAIAnC,IAAA0wD,WAEE1wD,IAAAkC,GAEF,SAjBA,CAnCAA,EAAAC,IACAwxF,GAAAzxF,EAAAC,IAAAwxF,GAAAxxF,EAAAD,IAmEA,SAAAA,EAAAC,GAEA,IAAAnC,EAAAkC,EACAyyF,KACAF,GAAAvyF,EAAAgE,EAAA/D,EAAA+D,GAAA,EACAwuF,GAAAxyF,EAAAyF,EAAAxF,EAAAwF,GAAA,EAEA,GAEA3H,EAAA2H,EAAA+sF,GAAA10F,EAAA0wD,KAAA/oD,EAAA+sF,GAAA10F,EAAA0wD,KAAA/oD,IAAA3H,EAAA2H,GACA8sF,GAAAz0F,EAAA0wD,KAAAxqD,EAAAlG,EAAAkG,IAAAwuF,EAAA10F,EAAA2H,IAAA3H,EAAA0wD,KAAA/oD,EAAA3H,EAAA2H,GAAA3H,EAAAkG,IAEAyuF,MAIA30F,IAAA0wD,WAEE1wD,IAAAkC,GAEF,OAAAyyF,EApBA,CAnEAzyF,EAAAC,GAMA,SAAAgwF,GAAAnyF,EAAAuZ,EAAAha,GAEA,OAAAga,EAAA5R,EAAA3H,EAAA2H,IAAApI,EAAA2G,EAAAqT,EAAArT,IAAAqT,EAAArT,EAAAlG,EAAAkG,IAAA3G,EAAAoI,EAAA4R,EAAA5R,GAMA,SAAAiO,GAAA6R,EAAAC,GAEA,OAAAD,EAAAvhB,IAAAwhB,EAAAxhB,GAAAuhB,EAAA9f,IAAA+f,EAAA/f,EAMA,SAAAujD,GAAAzjC,EAAAwmB,EAAAvmB,EAAAktE,GAEA,SAAAh/E,GAAA6R,EAAAwmB,IAAAr4B,GAAA8R,EAAAktE,IACAh/E,GAAA6R,EAAAmtE,IAAAh/E,GAAA8R,EAAAumB,KAEAkkD,GAAA1qE,EAAAwmB,EAAAvmB,GAAA,GAAAyqE,GAAA1qE,EAAAwmB,EAAA2mD,GAAA,GACAzC,GAAAzqE,EAAAktE,EAAAntE,GAAA,GAAA0qE,GAAAzqE,EAAAktE,EAAA3mD,GAAA,EA6BA,SAAA0lD,GAAAzxF,EAAAC,GAEA,OAAAgwF,GAAAjwF,EAAAkwF,KAAAlwF,IAAAwuD,MAAA,EACAyhC,GAAAjwF,EAAAC,EAAAD,EAAAwuD,OAAA,GAAAyhC,GAAAjwF,IAAAkwF,KAAAjwF,IAAA,EACAgwF,GAAAjwF,EAAAC,EAAAD,EAAAkwF,MAAA,GAAAD,GAAAjwF,IAAAwuD,KAAAvuD,GAAA,EAiCA,SAAA0xF,GAAA3xF,EAAAC,GAEA,IAAAoO,EAAA,IAAAskF,GAAA3yF,EAAA1D,EAAA0D,EAAAgE,EAAAhE,EAAAyF,GACA8I,EAAA,IAAAokF,GAAA1yF,EAAA3D,EAAA2D,EAAA+D,EAAA/D,EAAAwF,GACAmtF,EAAA5yF,EAAAwuD,KACAqkC,EAAA5yF,EAAAiwF,KAcA,OAZAlwF,EAAAwuD,KAAAvuD,EACAA,EAAAiwF,KAAAlwF,EAEAqO,EAAAmgD,KAAAokC,EACAA,EAAA1C,KAAA7hF,EAEAE,EAAAigD,KAAAngD,EACAA,EAAA6hF,KAAA3hF,EAEAskF,EAAArkC,KAAAjgD,EACAA,EAAA2hF,KAAA2C,EAEAtkF,EAMA,SAAAqhF,GAAAtzF,EAAA0H,EAAAyB,EAAAiqF,GAEA,IAAA5xF,EAAA,IAAA60F,GAAAr2F,EAAA0H,EAAAyB,GAgBA,OAdAiqF,GAOA5xF,EAAA0wD,KAAAkhC,EAAAlhC,KACA1wD,EAAAoyF,KAAAR,EACAA,EAAAlhC,KAAA0hC,KAAApyF,EACA4xF,EAAAlhC,KAAA1wD,IARAA,EAAAoyF,KAAApyF,EACAA,EAAA0wD,KAAA1wD,GAWAA,EAIA,SAAA+xF,GAAA/xF,GAEAA,EAAA0wD,KAAA0hC,KAAApyF,EAAAoyF,KACApyF,EAAAoyF,KAAA1hC,KAAA1wD,EAAA0wD,KAEA1wD,EAAA0yF,QAAA1yF,EAAA0yF,MAAAC,MAAA3yF,EAAA2yF,OACA3yF,EAAA2yF,QAAA3yF,EAAA2yF,MAAAD,MAAA1yF,EAAA0yF,OAIA,SAAAmC,GAAAr2F,EAAA0H,EAAAyB,GAGA7F,KAAAtD,IAGAsD,KAAAoE,IACApE,KAAA6F,IAGA7F,KAAAswF,KAAA,KACAtwF,KAAA4uD,KAAA,KAGA5uD,KAAA8F,EAAA,KAGA9F,KAAA4wF,MAAA,KACA5wF,KAAA6wF,MAAA,KAGA7wF,KAAAowF,WAuBA,IAAA8C,IAIAC,KAAA,SAAAC,GAKA,IAHA,IAAAz1F,EAAAy1F,EAAA9wF,OACAlC,EAAA,EAEAlC,EAAAP,EAAA,EAAA8Z,EAAA,EAA6BA,EAAA9Z,EAAOO,EAAAuZ,IAEpCrX,GAAAgzF,EAAAl1F,GAAAkG,EAAAgvF,EAAA37E,GAAA5R,EAAAutF,EAAA37E,GAAArT,EAAAgvF,EAAAl1F,GAAA2H,EAIA,SAAAzF,GAIAizF,YAAA,SAAAC,GAEA,OAAAJ,GAAAC,KAAAG,GAAA,GAIAC,iBAAA,SAAAH,EAAAI,GAEA,IAAA3mE,KACA4mE,KACA1hD,KAEA2hD,GAAAN,GACAO,GAAA9mE,EAAAumE,GAIA,IAAAQ,EAAAR,EAAA9wF,OAEAkxF,EAAA9xF,QAAAgyF,IAEA,QAAAh3F,EAAA,EAAkBA,EAAA82F,EAAAlxF,OAAkB5F,IAEpC+2F,EAAAzuF,KAAA4uF,GACAA,GAAAJ,EAAA92F,GAAA4F,OACAqxF,GAAA9mE,EAAA2mE,EAAA92F,IAMA,IAAA2+E,EAx1BA,SAAAnzD,EAAAurE,EAAA7D,GAEAA,KAAA,EAEA,IAOA1kE,EAAAC,EAAAE,EAAAC,EAAAlnB,EAAAyB,EAAA4qF,EAPAoD,EAAAJ,KAAAnxF,OACAwxF,EAAAD,EAAAJ,EAAA,GAAA7D,EAAA1nE,EAAA5lB,OACA6vF,EAAAxC,GAAAznE,EAAA,EAAA4rE,EAAAlE,MACAvU,KAEA,IAAA8W,EAAA,OAAA9W,EAQA,GAJAwY,IAAA1B,EAmUA,SAAAjqE,EAAAurE,EAAAtB,EAAAvC,GAEA,IAAAlzF,EAAA4iB,EAAAg+D,EAAAyW,KAEA,IAAAr3F,EAAA,EAAA4iB,EAAAm0E,EAAAnxF,OAAuC5F,EAAA4iB,EAAS5iB,KAIhD4gF,EAAAqS,GAAAznE,EAFAurE,EAAA/2F,GAAAkzF,EACAlzF,EAAA4iB,EAAA,EAAAm0E,EAAA/2F,EAAA,GAAAkzF,EAAA1nE,EAAA5lB,OACAstF,SACAtS,EAAA1uB,OAAA0uB,EAAA8S,YACA2D,EAAA/uF,KAAAytF,GAAAnV,IAQA,IAJAyW,EAAA37C,KAAA45C,IAIAt1F,EAAA,EAAaA,EAAAq3F,EAAAzxF,OAAkB5F,IAE/Bu1F,GAAA8B,EAAAr3F,GAAAy1F,GACAA,EAAAjC,GAAAiC,IAAAvjC,MAIA,OAAAujC,EAzBA,CAnUAjqE,EAAAurE,EAAAtB,EAAAvC,IAIA1nE,EAAA5lB,OAAA,GAAAstF,EAAA,CAEA1kE,EAAAG,EAAAnD,EAAA,GACAiD,EAAAG,EAAApD,EAAA,GAEA,QAAAxrB,EAAAkzF,EAAqBlzF,EAAAo3F,EAAcp3F,GAAAkzF,EAEnCxrF,EAAA8jB,EAAAxrB,GACAmJ,EAAAqiB,EAAAxrB,EAAA,GACA0H,EAAA8mB,MAAA9mB,GACAyB,EAAAslB,MAAAtlB,GACAzB,EAAAinB,MAAAjnB,GACAyB,EAAAylB,MAAAzlB,GAOA4qF,EAAA,KADAA,EAAAnxF,KAAAoG,IAAA2lB,EAAAH,EAAAI,EAAAH,IACA,EAAAslE,EAAA,EAMA,OAFAF,GAAA4B,EAAA9W,EAAAuU,EAAA1kE,EAAAC,EAAAslE,GAEApV,EA8yBA2Y,CAAAnnE,EAAA4mE,GAIA,IAAA/2F,EAAA,EAAkBA,EAAA2+E,EAAA/4E,OAAsB5F,GAAA,EAExCq1C,EAAA/sC,KAAAq2E,EAAA71E,MAAA9I,IAAA,IAIA,OAAAq1C,IAMA,SAAA2hD,GAAAluE,GAEA,IAAA7oB,EAAA6oB,EAAAljB,OAEA3F,EAAA,GAAA6oB,EAAA7oB,EAAA,GAAAmX,OAAA0R,EAAA,KAEAA,EAAAgzC,MAMA,SAAAm7B,GAAA9mE,EAAAumE,GAEA,QAAA12F,EAAA,EAAiBA,EAAA02F,EAAA9wF,OAAoB5F,IAErCmwB,EAAA7nB,KAAAouF,EAAA12F,GAAA0H,GACAyoB,EAAA7nB,KAAAouF,EAAA12F,GAAAmJ,GA+BA,SAAAouF,GAAAlkD,EAAA1oB,GAEAwqB,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,kBAEA3E,KAAAqwC,YACAN,SACA1oB,WAGArnB,KAAA60C,mBAAA,IAAAq/C,GAAAnkD,EAAA1oB,IACArnB,KAAA03C,gBASA,SAAAw8C,GAAAnkD,EAAA1oB,GAEAm0B,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,wBAEA3E,KAAAqwC,YACAN,SACA1oB,WAUA,IALA,IAAAmF,EAAAxsB,KAEAm0F,KACAnT,KAEAtkF,EAAA,EAAAC,GAPAozC,EAAA1wC,MAAAm6B,QAAAuW,UAOAztC,OAAoC5F,EAAAC,EAAOD,IAG3C03F,EADArkD,EAAArzC,IAcA,SAAA03F,EAAA9jD,GAEA,IAmBA+jD,EACAC,EAAAC,EAAAtwE,EAAAuwE,EAmCAC,EAAAz2E,EAAA02E,EAvDAC,KAIAC,WAAAvtE,EAAAutE,cAAAvtE,EAAAutE,cAAA,GACAC,WAAAxtE,EAAAwtE,MAAAxtE,EAAAwtE,MAAA,EACAC,WAAAztE,EAAAytE,OAAAztE,EAAAytE,OAAA,IAEAC,WAAA1tE,EAAA0tE,cAAA1tE,EAAA0tE,aACAC,WAAA3tE,EAAA2tE,eAAA3tE,EAAA2tE,eAAA,EACAC,WAAA5tE,EAAA4tE,UAAA5tE,EAAA4tE,UAAAD,EAAA,EACAE,WAAA7tE,EAAA6tE,cAAA7tE,EAAA6tE,cAAA,EAEAC,EAAA9tE,EAAA8tE,YAEAC,WAAA/tE,EAAAguE,YAAAhuE,EAAAguE,YAAAC,GAIAC,KAGAJ,IAEAd,EAAAc,EAAAK,gBAAAX,GAEAU,KACAR,KAMAT,EAAAa,EAAAzJ,oBAAAmJ,MAIAN,EAAA,IAAA/jF,GACAyT,EAAA,IAAAzT,GACAgkF,EAAA,IAAAhkF,IAMAukF,IAEAG,EAAA,EACAF,EAAA,EACAC,EAAA,GAQA,IAAAQ,EAAAnlD,EAAAolD,cAAAd,GAEA/nE,EAAA4oE,EAAAnlD,MACAkjD,EAAAiC,EAAAjC,MAIA,IAFAN,GAAAG,YAAAxmE,GAQA,IAJAA,IAAA8oE,UAIA33E,EAAA,EAAA02E,EAAAlB,EAAAlxF,OAAkC0b,EAAA02E,EAAQ12E,IAE1Cy2E,EAAAjB,EAAAx1E,GAEAk1E,GAAAG,YAAAoB,KAEAjB,EAAAx1E,GAAAy2E,EAAAkB,WASA,IAAA5jD,EAAAmhD,GAAAK,iBAAA1mE,EAAA2mE,GAIAJ,EAAAvmE,EAEA,IAAA7O,EAAA,EAAA02E,EAAAlB,EAAAlxF,OAAiC0b,EAAA02E,EAAQ12E,IAEzCy2E,EAAAjB,EAAAx1E,GAEA6O,IAAA+oE,OAAAnB,GAKA,SAAAoB,EAAAC,EAAAzH,EAAAviE,GAIA,OAFAuiE,GAAAxrF,QAAAtC,MAAA,6CAEA8tF,EAAAh9E,QAAAa,eAAA4Z,GAAAra,IAAAqkF,GAIA,IAAAz1F,EAAA01F,EAAA33F,EAAA0H,EACAkwF,EACAthD,EADAuhD,EAAAppE,EAAAvqB,OACA4zF,EAAAnkD,EAAAzvC,OAMA,SAAA6zF,EAAAC,EAAAC,EAAAC,GASA,IAAAC,EAAAC,EAAAC,EAKAC,EAAAN,EAAAhyF,EAAAiyF,EAAAjyF,EACAuyF,EAAAP,EAAAvwF,EAAAwwF,EAAAxwF,EACA+wF,EAAAN,EAAAlyF,EAAAgyF,EAAAhyF,EACAyyF,EAAAP,EAAAzwF,EAAAuwF,EAAAvwF,EAEAixF,EAAAJ,IAAAC,IAGAI,EAAAL,EAAAG,EAAAF,EAAAC,EAEA,GAAAt3F,KAAA2T,IAAA8jF,GAAAlzF,OAAAC,QAAA,CAMA,IAAAkzF,EAAA13F,KAAAyT,KAAA+jF,GACAG,EAAA33F,KAAAyT,KAAA6jF,IAAAC,KAIAK,EAAAb,EAAAjyF,EAAAuyF,EAAAK,EACAG,EAAAd,EAAAxwF,EAAA6wF,EAAAM,EAOAI,IALAd,EAAAlyF,EAAAyyF,EAAAI,EAKAC,GAAAL,GAJAP,EAAAzwF,EAAA+wF,EAAAK,EAKAE,GAAAP,IACAF,EAAAG,EAAAF,EAAAC,GASAS,GALAd,EAAAW,EAAAR,EAAAU,EAAAhB,EAAAhyF,GAKAmyF,GAJAC,EAAAW,EAAAR,EAAAS,EAAAhB,EAAAvwF,GAIA2wF,EACA,GAAAa,GAAA,EAEA,WAAAtnF,GAAAwmF,EAAAC,GAIAC,EAAAn3F,KAAAyT,KAAAskF,EAAA,OAII,CAIJ,IAAAC,KACAZ,EAAA7yF,OAAAC,QAEA8yF,EAAA/yF,OAAAC,UAEAwzF,MAMAZ,GAAA7yF,OAAAC,QAEA8yF,GAAA/yF,OAAAC,UAEAwzF,MAMAh4F,KAAA6E,KAAAwyF,KAAAr3F,KAAA6E,KAAA0yF,KAEAS,MAQAA,GAGAf,GAAAI,EACAH,EAAAE,EACAD,EAAAn3F,KAAAyT,KAAA+jF,KAKAP,EAAAG,EACAF,EAAAG,EACAF,EAAAn3F,KAAAyT,KAAA+jF,EAAA,IAMA,WAAA/mF,GAAAwmF,EAAAE,EAAAD,EAAAC,GAOA,IAFA,IAAAc,KAEA76F,EAAA,EAAAivB,EAAAynE,EAAA9wF,OAAA6rB,EAAAxC,EAAA,EAAA2tB,EAAA58C,EAAA,EAA8DA,EAAAivB,EAAQjvB,IAAAyxB,IAAAmrB,IAEtEnrB,IAAAxC,IAAAwC,EAAA,GACAmrB,IAAA3tB,IAAA2tB,EAAA,GAKAi+C,EAAA76F,GAAAy5F,EAAA/C,EAAA12F,GAAA02F,EAAAjlE,GAAAilE,EAAA95C,IAIA,IACAk+C,EA6FAr5F,EA9FAs5F,KACAC,EAAAH,EAAA3B,SAEA,IAAA53E,EAAA,EAAA02E,EAAAlB,EAAAlxF,OAAiC0b,EAAA02E,EAAQ12E,IAAA,CAMzC,IAJAy2E,EAAAjB,EAAAx1E,GAEAw5E,KAEA96F,EAAA,EAAAyxB,GAAAxC,EAAA8oE,EAAAnyF,QAAA,EAAAg3C,EAAA58C,EAAA,EAAyDA,EAAAivB,EAAQjvB,IAAAyxB,IAAAmrB,IAEjEnrB,IAAAxC,IAAAwC,EAAA,GACAmrB,IAAA3tB,IAAA2tB,EAAA,GAGAk+C,EAAA96F,GAAAy5F,EAAA1B,EAAA/3F,GAAA+3F,EAAAtmE,GAAAsmE,EAAAn7C,IAIAm+C,EAAAzyF,KAAAwyF,GACAE,IAAA9B,OAAA4B,GAOA,IAAAn3F,EAAA,EAAcA,EAAA60F,EAAmB70F,IAAA,CAUjC,IANAjC,EAAAiC,EAAA60F,EACApvF,EAAAkvF,EAAA11F,KAAAiV,IAAAnW,EAAAkB,KAAAsO,GAAA,GACAmoF,EAAAd,EAAA31F,KAAAkV,IAAApW,EAAAkB,KAAAsO,GAAA,GAIAlR,EAAA,EAAAivB,EAAAynE,EAAA9wF,OAAoC5F,EAAAivB,EAAQjvB,IAI5C8U,GAFAwkF,EAAAH,EAAAzC,EAAA12F,GAAA66F,EAAA76F,GAAAq5F,IAEA3xF,EAAA4xF,EAAAnwF,GAAAC,GAMA,IAAAkY,EAAA,EAAA02E,EAAAlB,EAAAlxF,OAAkC0b,EAAA02E,EAAQ12E,IAK1C,IAHAy2E,EAAAjB,EAAAx1E,GACAw5E,EAAAC,EAAAz5E,GAEAthB,EAAA,EAAAivB,EAAA8oE,EAAAnyF,OAAmC5F,EAAAivB,EAAQjvB,IAI3C8U,GAFAwkF,EAAAH,EAAApB,EAAA/3F,GAAA86F,EAAA96F,GAAAq5F,IAEA3xF,EAAA4xF,EAAAnwF,GAAAC,GAYA,IAJAiwF,EAAAd,EAIAv4F,EAAA,EAAcA,EAAAu5F,EAAUv5F,IAExBs5F,EAAAjB,EAAAc,EAAAhpE,EAAAnwB,GAAAg7F,EAAAh7F,GAAAq5F,GAAAlpE,EAAAnwB,GAEA64F,GAQAtxE,EAAA1S,KAAA+iF,EAAAjgD,QAAA,IAAAniC,eAAA8jF,EAAA5xF,GACAmwF,EAAAhjF,KAAA+iF,EAAA9I,UAAA,IAAAt5E,eAAA8jF,EAAAnwF,GAEA2uF,EAAAjjF,KAAA8iF,EAAA,IAAA5iF,IAAAwS,GAAAxS,IAAA8iF,GAEA/iF,EAAAgjF,EAAApwF,EAAAowF,EAAA3uF,EAAA2uF,EAAA1uF,IAXA0L,EAAAwkF,EAAA5xF,EAAA4xF,EAAAnwF,EAAA,GAsBA,IAAA1H,EAAA,EAAcA,GAAA02F,EAAY12F,IAE1B,IAAAzB,EAAA,EAAeA,EAAAu5F,EAAUv5F,IAEzBs5F,EAAAjB,EAAAc,EAAAhpE,EAAAnwB,GAAAg7F,EAAAh7F,GAAAq5F,GAAAlpE,EAAAnwB,GAEA64F,GAQAtxE,EAAA1S,KAAA+iF,EAAAjgD,QAAAl2C,IAAA+T,eAAA8jF,EAAA5xF,GACAmwF,EAAAhjF,KAAA+iF,EAAA9I,UAAArtF,IAAA+T,eAAA8jF,EAAAnwF,GAEA2uF,EAAAjjF,KAAA8iF,EAAAl2F,IAAAsT,IAAAwS,GAAAxS,IAAA8iF,GAEA/iF,EAAAgjF,EAAApwF,EAAAowF,EAAA3uF,EAAA2uF,EAAA1uF,IAXA0L,EAAAwkF,EAAA5xF,EAAA4xF,EAAAnwF,EAAAivF,EAAAD,EAAA12F,GAuBA,IAAAkC,EAAA60F,EAAA,EAA8B70F,GAAA,EAAQA,IAAA,CAQtC,IANAjC,EAAAiC,EAAA60F,EACApvF,EAAAkvF,EAAA11F,KAAAiV,IAAAnW,EAAAkB,KAAAsO,GAAA,GACAmoF,EAAAd,EAAA31F,KAAAkV,IAAApW,EAAAkB,KAAAsO,GAAA,GAIAlR,EAAA,EAAAivB,EAAAynE,EAAA9wF,OAAoC5F,EAAAivB,EAAQjvB,IAG5C8U,GADAwkF,EAAAH,EAAAzC,EAAA12F,GAAA66F,EAAA76F,GAAAq5F,IACA3xF,EAAA4xF,EAAAnwF,EAAAivF,EAAAhvF,GAMA,IAAAkY,EAAA,EAAA02E,EAAAlB,EAAAlxF,OAAkC0b,EAAA02E,EAAQ12E,IAK1C,IAHAy2E,EAAAjB,EAAAx1E,GACAw5E,EAAAC,EAAAz5E,GAEAthB,EAAA,EAAAivB,EAAA8oE,EAAAnyF,OAAmC5F,EAAAivB,EAAQjvB,IAE3Cs5F,EAAAH,EAAApB,EAAA/3F,GAAA86F,EAAA96F,GAAAq5F,GAEAR,EAMA/jF,EAAAwkF,EAAA5xF,EAAA4xF,EAAAnwF,EAAAwuF,EAAAQ,EAAA,GAAAhvF,EAAAwuF,EAAAQ,EAAA,GAAAzwF,EAAA0B,GAJA0L,EAAAwkF,EAAA5xF,EAAA4xF,EAAAnwF,EAAAivF,EAAAhvF,GA4GA,SAAA6xF,EAAAvE,EAAAwE,GAEA,IAAAzpE,EAAAmrB,EAGA,IAFA58C,EAAA02F,EAAA9wF,SAEA5F,GAAA,IAEAyxB,EAAAzxB,GACA48C,EAAA58C,EAAA,GACA,IAAA48C,EAAA85C,EAAA9wF,OAAA,GAIA,IAAAnE,EAAA,EACA05F,EAAAhD,EAAA,EAAAK,EAEA,IAAA/2F,EAAA,EAAgBA,EAAA05F,EAAQ15F,IAAA,CAExB,IAAA25F,EAAA7B,EAAA93F,EACA45F,EAAA9B,GAAA93F,EAAA,GAOA65F,EALAJ,EAAAzpE,EAAA2pE,EACAF,EAAAt+C,EAAAw+C,EACAF,EAAAt+C,EAAAy+C,EACAH,EAAAzpE,EAAA4pE,KAUA,SAAAvmF,EAAApN,EAAAyB,EAAAC,GAEA6uF,EAAA3vF,KAAAZ,GACAuwF,EAAA3vF,KAAAa,GACA8uF,EAAA3vF,KAAAc,GAKA,SAAAmyF,EAAA73F,EAAAC,EAAAtD,GAEAm7F,EAAA93F,GACA83F,EAAA73F,GACA63F,EAAAn7F,GAEA,IAAAo7F,EAAAhE,EAAA7xF,OAAA,EACAgyC,EAAA8gD,EAAAgD,cAAA5rE,EAAA2nE,EAAAgE,EAAA,EAAAA,EAAA,EAAAA,EAAA,GAEAE,EAAA/jD,EAAA,IACA+jD,EAAA/jD,EAAA,IACA+jD,EAAA/jD,EAAA,IAIA,SAAA0jD,EAAA53F,EAAAC,EAAAtD,EAAAC,GAEAk7F,EAAA93F,GACA83F,EAAA73F,GACA63F,EAAAl7F,GAEAk7F,EAAA73F,GACA63F,EAAAn7F,GACAm7F,EAAAl7F,GAGA,IAAAm7F,EAAAhE,EAAA7xF,OAAA,EACAgyC,EAAA8gD,EAAAkD,mBAAA9rE,EAAA2nE,EAAAgE,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,GAEAE,EAAA/jD,EAAA,IACA+jD,EAAA/jD,EAAA,IACA+jD,EAAA/jD,EAAA,IAEA+jD,EAAA/jD,EAAA,IACA+jD,EAAA/jD,EAAA,IACA+jD,EAAA/jD,EAAA,IAIA,SAAA4jD,EAAA1zF,GAEA2vF,EAAAnvF,KAAA2vF,EAAA,EAAAnwF,EAAA,IACA2vF,EAAAnvF,KAAA2vF,EAAA,EAAAnwF,EAAA,IACA2vF,EAAAnvF,KAAA2vF,EAAA,EAAAnwF,EAAA,IAKA,SAAA6zF,EAAAE,GAEAvX,EAAAh8E,KAAAuzF,EAAAn0F,GACA48E,EAAAh8E,KAAAuzF,EAAA1yF,IA/KA,WAEA,IAAA6pB,EAAAykE,EAAA7xF,OAAA,EAEA,GAAAyyF,EAAA,CAEA,IAAA3pB,EAAA,EACAxsE,EAAAq3F,EAAA7qB,EAIA,IAAA1uE,EAAA,EAAgBA,EAAAw5F,EAAUx5F,IAG1Bu7F,GADAvjD,EAAA3C,EAAAr1C,IACA,GAAAkC,EAAA81C,EAAA,GAAA91C,EAAA81C,EAAA,GAAA91C,GASA,IAJAA,EAAAq3F,GADA7qB,EAAAypB,EAAA,EAAAK,GAKAx4F,EAAA,EAAgBA,EAAAw5F,EAAUx5F,IAG1Bu7F,GADAvjD,EAAA3C,EAAAr1C,IACA,GAAAkC,EAAA81C,EAAA,GAAA91C,EAAA81C,EAAA,GAAA91C,OAII,CAIJ,IAAAlC,EAAA,EAAgBA,EAAAw5F,EAAUx5F,IAG1Bu7F,GADAvjD,EAAA3C,EAAAr1C,IACA,GAAAg4C,EAAA,GAAAA,EAAA,IAMA,IAAAh4C,EAAA,EAAgBA,EAAAw5F,EAAUx5F,IAG1Bu7F,GADAvjD,EAAA3C,EAAAr1C,IACA,GAAAu5F,EAAApB,EAAAngD,EAAA,GAAAuhD,EAAApB,EAAAngD,EAAA,GAAAuhD,EAAApB,GAMAroE,EAAAwwB,SAAAttB,EAAAykE,EAAA7xF,OAAA,EAAAotB,EAAA,GApDA,GA0DA,WAEA,IAAAA,EAAAykE,EAAA7xF,OAAA,EACAs1F,EAAA,EAIA,IAHAD,EAAAvE,EAAAwE,GACAA,GAAAxE,EAAA9wF,OAEA0b,EAAA,EAAA02E,EAAAlB,EAAAlxF,OAAkC0b,EAAA02E,EAAQ12E,IAG1C25E,EADAlD,EAAAjB,EAAAx1E,GACA45E,GAGAA,GAAAnD,EAAAnyF,OAKAkqB,EAAAwwB,SAAAttB,EAAAykE,EAAA7xF,OAAA,EAAAotB,EAAA,GAlBA,GAtfA1vB,KAAAk9C,aAAA,eAAAlJ,GAAAmgD,EAAA,IACAn0F,KAAAk9C,aAAA,SAAAlJ,GAAAgtC,EAAA,IAEAhhF,KAAA61C,uBAnCAo+C,GAAAj2F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAi2F,GAAAj2F,UAAAsT,YAAA2iF,GAkpBAC,GAAAl2F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAk2F,GAAAl2F,UAAAsT,YAAA4iF,GAEA,IAAAoB,IAEA8C,cAAA,SAAAzrE,EAAAE,EAAA2rE,EAAAC,EAAAC,GAEA,IAAAC,EAAA9rE,EAAA,EAAA2rE,GACAI,EAAA/rE,EAAA,EAAA2rE,EAAA,GACAK,EAAAhsE,EAAA,EAAA4rE,GACAK,EAAAjsE,EAAA,EAAA4rE,EAAA,GACAM,EAAAlsE,EAAA,EAAA6rE,GACAM,EAAAnsE,EAAA,EAAA6rE,EAAA,GAEA,OACA,IAAA3oF,GAAA4oF,EAAAC,GACA,IAAA7oF,GAAA8oF,EAAAC,GACA,IAAA/oF,GAAAgpF,EAAAC,KAKAV,mBAAA,SAAA3rE,EAAAE,EAAA2rE,EAAAC,EAAAC,EAAAO,GAEA,IAAAN,EAAA9rE,EAAA,EAAA2rE,GACAI,EAAA/rE,EAAA,EAAA2rE,EAAA,GACAU,EAAArsE,EAAA,EAAA2rE,EAAA,GACAK,EAAAhsE,EAAA,EAAA4rE,GACAK,EAAAjsE,EAAA,EAAA4rE,EAAA,GACAU,EAAAtsE,EAAA,EAAA4rE,EAAA,GACAM,EAAAlsE,EAAA,EAAA6rE,GACAM,EAAAnsE,EAAA,EAAA6rE,EAAA,GACAU,EAAAvsE,EAAA,EAAA6rE,EAAA,GACAW,EAAAxsE,EAAA,EAAAosE,GACAK,EAAAzsE,EAAA,EAAAosE,EAAA,GACAM,EAAA1sE,EAAA,EAAAosE,EAAA,GAEA,OAAA35F,KAAA2T,IAAA2lF,EAAAE,GAAA,KAGA,IAAA/oF,GAAA4oF,EAAA,EAAAO,GACA,IAAAnpF,GAAA8oF,EAAA,EAAAM,GACA,IAAAppF,GAAAgpF,EAAA,EAAAK,GACA,IAAArpF,GAAAspF,EAAA,EAAAE,KAMA,IAAAxpF,GAAA6oF,EAAA,EAAAM,GACA,IAAAnpF,GAAA+oF,EAAA,EAAAK,GACA,IAAAppF,GAAAipF,EAAA,EAAAI,GACA,IAAArpF,GAAAupF,EAAA,EAAAC,MA6BA,SAAAC,GAAAC,EAAAppD,GAEAwB,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,eAEA3E,KAAAqwC,YACAopD,OACAppD,cAGArwC,KAAA60C,mBAAA,IAAA6kD,GAAAD,EAAAppD,IACArwC,KAAA03C,gBASA,SAAAgiD,GAAAD,EAAAppD,GAIA,IAAAspD,GAFAtpD,SAEAspD,KAEA,IAAAA,MAAAC,OAGA,OADA/2F,QAAAtC,MAAA,wEACA,IAAAsxC,GAIA,IAAA9B,EAAA4pD,EAAAE,eAAAJ,EAAAppD,EAAAvkB,KAAAukB,EAAAukD,eAIAvkD,EAAAykD,gBAAAzkD,EAAAx/B,OAAAw/B,EAAAx/B,OAAA,YAIAw/B,EAAA2kD,iBAAA3kD,EAAA2kD,eAAA,aACA3kD,EAAA4kD,YAAA5kD,EAAA4kD,UAAA,YACA5kD,EAAA0kD,eAAA1kD,EAAA0kD,iBAEAb,GAAAr3F,KAAAmD,KAAA+vC,EAAAM,GAEArwC,KAAA2E,KAAA,qBAeA,SAAAm1F,GAAAt1E,EAAAo3B,EAAAC,EAAAk+C,EAAAC,EAAAC,EAAAC,GAEAroD,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,iBAEA3E,KAAAqwC,YACA7rB,SACAo3B,gBACAC,iBACAk+C,WACAC,YACAC,aACAC,eAGAl6F,KAAA60C,mBAAA,IAAAslD,GAAA31E,EAAAo3B,EAAAC,EAAAk+C,EAAAC,EAAAC,EAAAC,IACAl6F,KAAA03C,gBASA,SAAAyiD,GAAA31E,EAAAo3B,EAAAC,EAAAk+C,EAAAC,EAAAC,EAAAC,GAEA1+C,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,uBAEA3E,KAAAqwC,YACA7rB,SACAo3B,gBACAC,iBACAk+C,WACAC,YACAC,aACAC,eAGA11E,KAAA,EAEAo3B,EAAAt8C,KAAAoG,IAAA,EAAApG,KAAA4E,MAAA03C,IAAA,GACAC,EAAAv8C,KAAAoG,IAAA,EAAApG,KAAA4E,MAAA23C,IAAA,GAEAk+C,eAAA,EACAC,eAAA,EAAA16F,KAAAsO,GAKA,IAEAgV,EAAAC,EAFAu3E,GAHAH,eAAA,IACAC,eAAA56F,KAAAsO,IAMApJ,EAAA,EACA61F,KAEA9hD,EAAA,IAAA/nC,GACAyT,EAAA,IAAAzT,GAIAskC,KACAjoB,KACAwnB,KACAC,KAIA,IAAAzxB,EAAA,EAAcA,GAAAg5B,EAAsBh5B,IAAA,CAEpC,IAAAy3E,KAEA9oF,EAAAqR,EAAAg5B,EAEA,IAAAj5B,EAAA,EAAeA,GAAAg5B,EAAqBh5B,IAAA,CAEpC,IAAAuW,EAAAvW,EAAAg5B,EAIArD,EAAAn0C,GAAAogB,EAAAllB,KAAAiV,IAAAwlF,EAAA5gE,EAAA6gE,GAAA16F,KAAAkV,IAAAylF,EAAAzoF,EAAA0oF,GACA3hD,EAAA1yC,EAAA2e,EAAAllB,KAAAiV,IAAA0lF,EAAAzoF,EAAA0oF,GACA3hD,EAAAzyC,EAAA0e,EAAAllB,KAAAkV,IAAAulF,EAAA5gE,EAAA6gE,GAAA16F,KAAAkV,IAAAylF,EAAAzoF,EAAA0oF,GAEArtE,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAme,EAAArT,IAAA2nC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAAAoN,YACAmhC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAIAwuC,EAAAtvC,KAAAm0B,EAAA,EAAA3nB,GAEA8oF,EAAAt1F,KAAAR,KAIA61F,EAAAr1F,KAAAs1F,GAMA,IAAAz3E,EAAA,EAAcA,EAAAg5B,EAAqBh5B,IAEnC,IAAAD,EAAA,EAAeA,EAAAg5B,EAAoBh5B,IAAA,CAEnC,IAAAxiB,EAAAi6F,EAAAx3E,GAAAD,EAAA,GACAviB,EAAAg6F,EAAAx3E,GAAAD,GACA7lB,EAAAs9F,EAAAx3E,EAAA,GAAAD,GACA5lB,EAAAq9F,EAAAx3E,EAAA,GAAAD,EAAA,IAEA,IAAAC,GAAAo3E,EAAA,IAAAnlD,EAAA9vC,KAAA5E,EAAAC,EAAArD,IACA6lB,IAAAg5B,EAAA,GAAAu+C,EAAA96F,KAAAsO,KAAAknC,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAQAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IAcA,SAAAimD,GAAAC,EAAAC,EAAAC,EAAAC,EAAAV,EAAAC,GAEAroD,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,eAEA3E,KAAAqwC,YACAmqD,cACAC,cACAC,gBACAC,cACAV,aACAC,eAGAl6F,KAAA60C,mBAAA,IAAA+lD,GAAAJ,EAAAC,EAAAC,EAAAC,EAAAV,EAAAC,IACAl6F,KAAA03C,gBASA,SAAAkjD,GAAAJ,EAAAC,EAAAC,EAAAC,EAAAV,EAAAC,GAEA1+C,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqwC,YACAmqD,cACAC,cACAC,gBACAC,cACAV,aACAC,eAGAM,KAAA,GACAC,KAAA,EAEAR,eAAA,EACAC,eAAA,EAAA56F,KAAAsO,GAEA8sF,aAAAp7F,KAAAoG,IAAA,EAAAg1F,GAAA,EAKA,IAOAG,EAKA1sE,EAAAzxB,EAZAo4C,KACAjoB,KACAwnB,KACAC,KAKA9vB,EAAAg2E,EACAM,GAAAL,EAAAD,IAbAG,aAAAr7F,KAAAoG,IAAA,EAAAi1F,GAAA,GAcApiD,EAAA,IAAA/nC,GACA8Z,EAAA,IAAAva,GAKA,IAAAoe,EAAA,EAAaA,GAAAwsE,EAAkBxsE,IAAA,CAE/B,IAAAzxB,EAAA,EAAcA,GAAAg+F,EAAoBh+F,IAIlCm+F,EAAAZ,EAAAv9F,EAAAg+F,EAAAR,EAIA3hD,EAAAn0C,EAAAogB,EAAAllB,KAAAiV,IAAAsmF,GACAtiD,EAAA1yC,EAAA2e,EAAAllB,KAAAkV,IAAAqmF,GAEAhuE,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAuuC,EAAArvC,KAAA,OAIAslB,EAAAlmB,GAAAm0C,EAAAn0C,EAAAq2F,EAAA,KACAnwE,EAAAzkB,GAAA0yC,EAAA1yC,EAAA40F,EAAA,KAEAnmD,EAAAtvC,KAAAslB,EAAAlmB,EAAAkmB,EAAAzkB,GAMA2e,GAAAs2E,EAMA,IAAA3sE,EAAA,EAAaA,EAAAwsE,EAAiBxsE,IAAA,CAE9B,IAAA4sE,EAAA5sE,GAAAusE,EAAA,GAEA,IAAAh+F,EAAA,EAAcA,EAAAg+F,EAAmBh+F,IAAA,CAIjC,IAAA0D,EAFAy6F,EAAAn+F,EAAAq+F,EAGA16F,EAAAw6F,EAAAH,EAAA,EACA39F,EAAA89F,EAAAH,EAAA,EACA19F,EAAA69F,EAAA,EAIA/lD,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,IAQAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IAgBA,SAAA0mD,GAAAx1E,EAAAy1E,EAAAlB,EAAAC,GAEAnoD,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,gBAEA3E,KAAAqwC,YACA7qB,SACAy1E,WACAlB,WACAC,aAGAh6F,KAAA60C,mBAAA,IAAAqmD,GAAA11E,EAAAy1E,EAAAlB,EAAAC,IACAh6F,KAAA03C,gBASA,SAAAwjD,GAAA11E,EAAAy1E,EAAAlB,EAAAC,GAEAx+C,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAAqwC,YACA7qB,SACAy1E,WACAlB,WACAC,aAGAiB,EAAA37F,KAAA4E,MAAA+2F,IAAA,GACAlB,KAAA,EACAC,KAAA,EAAA16F,KAAAsO,GAIAosF,EAAAtsF,GAAAW,MAAA2rF,EAAA,IAAA16F,KAAAsO,IAKA,IAMAutF,EAIAz+F,EAAAyxB,EAVA2mB,KACAjoB,KACAynB,KAKA8mD,EAAA,EAAAH,EACA1iD,EAAA,IAAA/nC,GACA8Z,EAAA,IAAAva,GAKA,IAAArT,EAAA,EAAaA,GAAAu+F,EAAev+F,IAAA,CAE5B,IAAA6nB,EAAAw1E,EAAAr9F,EAAA0+F,EAAApB,EAEAxlF,EAAAlV,KAAAkV,IAAA+P,GACAhQ,EAAAjV,KAAAiV,IAAAgQ,GAEA,IAAA4J,EAAA,EAAcA,GAAA3I,EAAAljB,OAAA,EAA4B6rB,IAI1CoqB,EAAAn0C,EAAAohB,EAAA2I,GAAA/pB,EAAAoQ,EACA+jC,EAAA1yC,EAAA2f,EAAA2I,GAAAtoB,EACA0yC,EAAAzyC,EAAA0f,EAAA2I,GAAA/pB,EAAAmQ,EAEAsY,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAwkB,EAAAlmB,EAAA1H,EAAAu+F,EACA3wE,EAAAzkB,EAAAsoB,GAAA3I,EAAAljB,OAAA,GAEAgyC,EAAAtvC,KAAAslB,EAAAlmB,EAAAkmB,EAAAzkB,GASA,IAAAnJ,EAAA,EAAaA,EAAAu+F,EAAcv+F,IAE3B,IAAAyxB,EAAA,EAAcA,EAAA3I,EAAAljB,OAAA,EAA2B6rB,IAAA,CAIzC,IAAA/tB,EAFA+6F,EAAAhtE,EAAAzxB,EAAA8oB,EAAAljB,OAGAjC,EAAA86F,EAAA31E,EAAAljB,OACAvF,EAAAo+F,EAAA31E,EAAAljB,OAAA,EACAtF,EAAAm+F,EAAA,EAIArmD,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAmBA,GAXAgD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IAIAt0C,KAAA61C,uBAKAmkD,IAAA,EAAA16F,KAAAsO,GAAA,CAEA,IAAAymC,EAAAr0C,KAAA+sB,WAAA9I,OAAA1e,MACA81F,EAAA,IAAA7qF,GACA8qF,EAAA,IAAA9qF,GACA7S,EAAA,IAAA6S,GAMA,IAFA2qF,EAAAF,EAAAz1E,EAAAljB,OAAA,EAEA5F,EAAA,EAAAyxB,EAAA,EAAqBzxB,EAAA8oB,EAAAljB,OAAmB5F,IAAAyxB,GAAA,EAIxCktE,EAAAj3F,EAAAiwC,EAAAlmB,EAAA,GACAktE,EAAAx1F,EAAAwuC,EAAAlmB,EAAA,GACAktE,EAAAv1F,EAAAuuC,EAAAlmB,EAAA,GAIAmtE,EAAAl3F,EAAAiwC,EAAA8mD,EAAAhtE,EAAA,GACAmtE,EAAAz1F,EAAAwuC,EAAA8mD,EAAAhtE,EAAA,GACAmtE,EAAAx1F,EAAAuuC,EAAA8mD,EAAAhtE,EAAA,GAIAxwB,EAAAgU,WAAA0pF,EAAAC,GAAApoF,YAIAmhC,EAAAlmB,EAAA,GAAAkmB,EAAA8mD,EAAAhtE,EAAA,GAAAxwB,EAAAyG,EACAiwC,EAAAlmB,EAAA,GAAAkmB,EAAA8mD,EAAAhtE,EAAA,GAAAxwB,EAAAkI,EACAwuC,EAAAlmB,EAAA,GAAAkmB,EAAA8mD,EAAAhtE,EAAA,GAAAxwB,EAAAmI,GAkBA,SAAAy1F,GAAAxrD,EAAA6kD,GAEA/iD,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,gBAEA,iBAAAiwF,IAEA/xF,QAAA6O,KAAA,4DAEAkjF,mBAIA50F,KAAAqwC,YACAN,SACA6kD,iBAGA50F,KAAA60C,mBAAA,IAAA2mD,GAAAzrD,EAAA6kD,IACA50F,KAAA03C,gBAmBA,SAAA8jD,GAAAzrD,EAAA6kD,GAEAp5C,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAAqwC,YACAN,SACA6kD,iBAGAA,KAAA,GAIA,IAAA9/C,KACAjoB,KACAwnB,KACAC,KAIA2H,EAAA,EACAc,EAAA,EAIA,QAAA19C,MAAAm6B,QAAAuW,GAEAqkD,EAAArkD,QAIA,QAAArzC,EAAA,EAAkBA,EAAAqzC,EAAAztC,OAAmB5F,IAErC03F,EAAArkD,EAAArzC,IAEAsD,KAAAg9C,SAAAf,EAAAc,EAAArgD,GAEAu/C,GAAAc,EACAA,EAAA,EAgBA,SAAAq3C,EAAA9jD,GAEA,IAAA5zC,EAAAC,EAAA8+F,EAEAC,EAAA7uE,EAAAvqB,OAAA,EACAkjB,EAAA8qB,EAAAolD,cAAAd,GAEA+G,EAAAn2E,EAAA8qB,MACAsrD,EAAAp2E,EAAAguE,MAIA,QAAAN,GAAAG,YAAAsI,GAMA,IAJAA,IAAAhG,UAIAj5F,EAAA,EAAAC,EAAAi/F,EAAAt5F,OAAsC5F,EAAAC,EAAOD,IAE7C++F,EAAAG,EAAAl/F,QAEAw2F,GAAAG,YAAAoI,KAEAG,EAAAl/F,GAAA++F,EAAA9F,WAQA,IAAA5jD,EAAAmhD,GAAAK,iBAAAoI,EAAAC,GAIA,IAAAl/F,EAAA,EAAAC,EAAAi/F,EAAAt5F,OAAqC5F,EAAAC,EAAOD,IAE5C++F,EAAAG,EAAAl/F,GACAi/F,IAAA/F,OAAA6F,GAMA,IAAA/+F,EAAA,EAAAC,EAAAg/F,EAAAr5F,OAAwC5F,EAAAC,EAAOD,IAAA,CAE/C,IAAA67C,EAAAojD,EAAAj/F,GAEAmwB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA,GACAwuC,EAAArvC,KAAA,OACAsvC,EAAAtvC,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,GAMA,IAAAnJ,EAAA,EAAAC,EAAAo1C,EAAAzvC,OAAgC5F,EAAAC,EAAOD,IAAA,CAEvC,IAAAg4C,EAAA3C,EAAAr1C,GAEA0D,EAAAs0C,EAAA,GAAAgnD,EACAr7F,EAAAq0C,EAAA,GAAAgnD,EACA3+F,EAAA23C,EAAA,GAAAgnD,EAEA5mD,EAAA9vC,KAAA5E,EAAAC,EAAAtD,GACAggD,GAAA,GA1EA/8C,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA8FA,SAAArrB,GAAA8mB,EAAA7nB,GAIA,GAFAA,EAAA6nB,UAEA1wC,MAAAm6B,QAAAuW,GAEA,QAAArzC,EAAA,EAAAC,EAAAozC,EAAAztC,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAA4zC,EAAAP,EAAArzC,GAEAwrB,EAAA6nB,OAAA/qC,KAAAsrC,EAAA5tC,WAMAwlB,EAAA6nB,OAAA/qC,KAAA+qC,EAAArtC,MAIA,OAAAwlB,EASA,SAAA2zE,GAAAlvE,EAAAmvE,GAEAtgD,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,gBAEA3E,KAAAqwC,YACAyrD,kBAGAA,eAAA,EAIA,IAKgC/1C,EAAAC,EAChCzjD,EAIAy8C,EAVAnyB,KAIAkvE,EAAAz8F,KAAAiV,IAAA7G,GAAAC,QAAAmuF,GACA/S,GAAA,KAAAC,KACApnF,GAAA,aAMA+qB,EAAAG,kBAEAkyB,EAAA,IAAAnN,IACAgD,mBAAAloB,GAIAqyB,EAAAryB,EAAAtb,QAIA2tC,EAAAtH,gBACAsH,EAAA1J,qBAOA,IALA,IAAA0mD,EAAAh9C,EAAAnyB,SACAklB,EAAAiN,EAAAjN,MAIAr1C,EAAA,EAAAC,EAAAo1C,EAAAzvC,OAAmC5F,EAAAC,EAAOD,IAI1C,IAFA,IAAAg4C,EAAA3C,EAAAr1C,GAEAyxB,EAAA,EAAkBA,EAAA,EAAOA,IAEzB43B,EAAArR,EAAA9yC,EAAAusB,IACA63B,EAAAtR,EAAA9yC,GAAAusB,EAAA,OACA46D,EAAA,GAAAzpF,KAAAmG,IAAAsgD,EAAAC,GACA+iC,EAAA,GAAAzpF,KAAAoG,IAAAqgD,EAAAC,YAIAgjC,EAFAzmF,EAAAwmF,EAAA,OAAAA,EAAA,IAIAC,EAAAzmF,IAAoB23C,OAAA6uC,EAAA,GAAA5uC,OAAA4uC,EAAA,GAAAkT,MAAAv/F,EAAAw/F,cAIpBlT,EAAAzmF,GAAA25F,MAAAx/F,EAUA,IAAA6F,KAAAymF,EAAA,CAEA,IAAA3qF,EAAA2qF,EAAAzmF,GAIA,YAAAlE,EAAA69F,OAAAnqD,EAAA1zC,EAAA49F,OAAAh4E,OAAApR,IAAAk/B,EAAA1zC,EAAA69F,OAAAj4E,SAAA83E,EAAA,CAEA,IAAAxjD,EAAAyjD,EAAA39F,EAAA67C,QACArtB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAEAyyC,EAAAyjD,EAAA39F,EAAA87C,QACAttB,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,IAQA9F,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IAcA,SAAAsvE,GAAAC,EAAAC,EAAAxrF,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,GAEAroD,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,mBAEA3E,KAAAqwC,YACA+rD,YACAC,eACAxrF,SACAq6E,iBACArvC,iBACAygD,YACArC,aACAC,eAGAl6F,KAAA60C,mBAAA,IAAA0nD,GAAAH,EAAAC,EAAAxrF,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,IACAl6F,KAAA03C,gBASA,SAAA6kD,GAAAH,EAAAC,EAAAxrF,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,GAEA1+C,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,yBAEA3E,KAAAqwC,YACA+rD,YACAC,eACAxrF,SACAq6E,iBACArvC,iBACAygD,YACArC,aACAC,eAGA,IAAA1tE,EAAAxsB,KAEAo8F,eAAA,EACAC,eAAA,EACAxrF,KAAA,EAEAq6E,EAAA5rF,KAAA4E,MAAAgnF,IAAA,EACArvC,EAAAv8C,KAAA4E,MAAA23C,IAAA,EAEAygD,gBACArC,eAAA,EACAC,eAAA,EAAA56F,KAAAsO,GAIA,IAAAknC,KACAjoB,KACAwnB,KACAC,KAIA9vC,EAAA,EACAg4F,KACAjjC,EAAA1oD,EAAA,EACAorC,EAAA,EAoHA,SAAAwgD,EAAA9+E,GAEA,IAAAvZ,EAAAs4F,EAAAC,EAEAryE,EAAA,IAAAva,GACAwoC,EAAA,IAAA/nC,GAEAusC,EAAA,EAEAv4B,OAAA7G,EAAAy+E,EAAAC,EACAl4F,OAAAwZ,EAAA,KASA,IANA++E,EAAAl4F,EAMAJ,EAAA,EAAcA,GAAA8mF,EAAqB9mF,IAInCyoB,EAAA7nB,KAAA,EAAAu0D,EAAAp1D,EAAA,GAIAkwC,EAAArvC,KAAA,EAAAb,EAAA,GAIAmwC,EAAAtvC,KAAA,OAIAR,IAUA,IAJAm4F,EAAAn4F,EAIAJ,EAAA,EAAcA,GAAA8mF,EAAqB9mF,IAAA,CAEnC,IACAiY,EADAjY,EAAA8mF,EACAgP,EAAAD,EAEA2C,EAAAt9F,KAAAiV,IAAA8H,GACAwgF,EAAAv9F,KAAAkV,IAAA6H,GAIAk8B,EAAAn0C,EAAAogB,EAAAq4E,EACAtkD,EAAA1yC,EAAA0zD,EAAAp1D,EACAo0C,EAAAzyC,EAAA0e,EAAAo4E,EACA/vE,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAuuC,EAAArvC,KAAA,EAAAb,EAAA,GAIAmmB,EAAAlmB,EAAA,GAAAw4F,EAAA,GACAtyE,EAAAzkB,EAAA,GAAAg3F,EAAA14F,EAAA,GACAmwC,EAAAtvC,KAAAslB,EAAAlmB,EAAAkmB,EAAAzkB,GAIArB,IAMA,IAAAJ,EAAA,EAAcA,EAAA8mF,EAAoB9mF,IAAA,CAElC,IAAArH,EAAA2/F,EAAAt4F,EACA1H,EAAAigG,EAAAv4F,OAEAuZ,EAIAm3B,EAAA9vC,KAAAtI,IAAA,EAAAK,GAMA+3C,EAAA9vC,KAAAtI,EAAA,EAAAA,EAAAK,GAIAggD,GAAA,EAMAvwB,EAAAwwB,SAAAf,EAAAc,OAAAp/B,EAAA,KAIAs+B,GAAAc,GA3MA,WAEA,IAAA34C,EAAAyB,EACAoe,EAAA,IAAAzT,GACA+nC,EAAA,IAAA/nC,GAEAusC,EAAA,EAGA+/C,GAAAT,EAAAD,GAAAvrF,EAIA,IAAAhL,EAAA,EAAcA,GAAAg2C,EAAqBh2C,IAAA,CAEnC,IAAAk3F,KAEAvrF,EAAA3L,EAAAg2C,EAIAr3B,EAAAhT,GAAA6qF,EAAAD,KAEA,IAAAh4F,EAAA,EAAeA,GAAA8mF,EAAqB9mF,IAAA,CAEpC,IAAA+0B,EAAA/0B,EAAA8mF,EAEA7uE,EAAA8c,EAAA+gE,EAAAD,EAEA4C,EAAAv9F,KAAAkV,IAAA6H,GACAugF,EAAAt9F,KAAAiV,IAAA8H,GAIAk8B,EAAAn0C,EAAAogB,EAAAq4E,EACAtkD,EAAA1yC,GAAA2L,EAAAX,EAAA0oD,EACAhhB,EAAAzyC,EAAA0e,EAAAo4E,EACA/vE,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAme,EAAArT,IAAAisF,EAAAC,EAAAF,GAAA1pF,YACAmhC,EAAArvC,KAAAif,EAAA7f,EAAA6f,EAAApe,EAAAoe,EAAAne,GAIAwuC,EAAAtvC,KAAAm0B,EAAA,EAAA3nB,GAIAurF,EAAA/3F,KAAAR,KAMAg4F,EAAAx3F,KAAA+3F,GAMA,IAAA34F,EAAA,EAAcA,EAAA8mF,EAAoB9mF,IAElC,IAAAyB,EAAA,EAAeA,EAAAg2C,EAAoBh2C,IAAA,CAInC,IAAAzF,EAAAo8F,EAAA32F,GAAAzB,GACA/D,EAAAm8F,EAAA32F,EAAA,GAAAzB,GACArH,EAAAy/F,EAAA32F,EAAA,GAAAzB,EAAA,GACApH,EAAAw/F,EAAA32F,GAAAzB,EAAA,GAIA0wC,EAAA9vC,KAAA5E,EAAAC,EAAArD,GACA83C,EAAA9vC,KAAA3E,EAAAtD,EAAAC,GAIA+/C,GAAA,EAQAvwB,EAAAwwB,SAAAf,EAAAc,EAAA,GAIAd,GAAAc,EA5FA,IAhBAigD,IAEAV,IAEAF,EAAA,GAAAK,MACAJ,EAAA,GAAAI,OAMAz8F,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA4NA,SAAA2oD,GAAAz4E,EAAA3T,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,GAEAiC,GAAAt/F,KAAAmD,KAAA,EAAAwkB,EAAA3T,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,GAEAl6F,KAAA2E,KAAA,eAEA3E,KAAAqwC,YACA7rB,SACA3T,SACAq6E,iBACArvC,iBACAygD,YACArC,aACAC,eAUA,SAAAgD,GAAA14E,EAAA3T,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,GAEAqC,GAAA1/F,KAAAmD,KAAA,EAAAwkB,EAAA3T,EAAAq6E,EAAArvC,EAAAygD,EAAArC,EAAAC,GAEAl6F,KAAA2E,KAAA,qBAEA3E,KAAAqwC,YACA7rB,SACA3T,SACAq6E,iBACArvC,iBACAygD,YACArC,aACAC,eAgBA,SAAAiD,GAAA34E,EAAAy2E,EAAAhB,EAAAC,GAEAroD,GAAAh1C,KAAAmD,MAEAA,KAAA2E,KAAA,iBAEA3E,KAAAqwC,YACA7rB,SACAy2E,WACAhB,aACAC,eAGAl6F,KAAA60C,mBAAA,IAAAuoD,GAAA54E,EAAAy2E,EAAAhB,EAAAC,IACAl6F,KAAA03C,gBASA,SAAA0lD,GAAA54E,EAAAy2E,EAAAhB,EAAAC,GAEA1+C,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,uBAEA3E,KAAAqwC,YACA7rB,SACAy2E,WACAhB,aACAC,eAGA11E,KAAA,EACAy2E,aAAA37F,KAAAoG,IAAA,EAAAu1F,GAAA,EAEAhB,eAAA,EACAC,eAAA,EAAA56F,KAAAsO,GAIA,IAOAlR,EAAAyB,EAPA22C,KACAjoB,KACAwnB,KACAC,KAKAiE,EAAA,IAAA/nC,GACA8Z,EAAA,IAAAva,GAQA,IAJA8c,EAAA7nB,KAAA,OACAqvC,EAAArvC,KAAA,OACAsvC,EAAAtvC,KAAA,OAEA7G,EAAA,EAAAzB,EAAA,EAAoByB,GAAA88F,EAAe98F,IAAAzB,GAAA,GAEnC,IAAAm+F,EAAAZ,EAAA97F,EAAA88F,EAAAf,EAIA3hD,EAAAn0C,EAAAogB,EAAAllB,KAAAiV,IAAAsmF,GACAtiD,EAAA1yC,EAAA2e,EAAAllB,KAAAkV,IAAAqmF,GAEAhuE,EAAA7nB,KAAAuzC,EAAAn0C,EAAAm0C,EAAA1yC,EAAA0yC,EAAAzyC,GAIAuuC,EAAArvC,KAAA,OAIAslB,EAAAlmB,GAAAyoB,EAAAnwB,GAAA8nB,EAAA,KACA8F,EAAAzkB,GAAAgnB,EAAAnwB,EAAA,GAAA8nB,EAAA,KAEA8vB,EAAAtvC,KAAAslB,EAAAlmB,EAAAkmB,EAAAzkB,GAMA,IAAAnJ,EAAA,EAAaA,GAAAu+F,EAAev+F,IAE5Bo4C,EAAA9vC,KAAAtI,IAAA,KAMAsD,KAAAi9C,SAAAnI,GACA90C,KAAAk9C,aAAA,eAAAlJ,GAAAnnB,EAAA,IACA7sB,KAAAk9C,aAAA,aAAAlJ,GAAAK,EAAA,IACAr0C,KAAAk9C,aAAA,SAAAlJ,GAAAM,EAAA,IA3wCAklD,GAAAx7F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAw7F,GAAAx7F,UAAAsT,YAAAkoF,GAmCAE,GAAA17F,UAAAZ,OAAA0rB,OAAAorE,GAAAl2F,WACA07F,GAAA17F,UAAAsT,YAAAooF,GA+BAI,GAAA97F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACA87F,GAAA97F,UAAAsT,YAAAwoF,GAgHAK,GAAAn8F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAm8F,GAAAn8F,UAAAsT,YAAA6oF,GA6BAI,GAAAv8F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAu8F,GAAAv8F,UAAAsT,YAAAipF,GAiHAK,GAAA58F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACA48F,GAAA58F,UAAAsT,YAAAspF,GA6BAI,GAAAh9F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAg9F,GAAAh9F,UAAAsT,YAAA0pF,GAmJAE,GAAAl9F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAk9F,GAAAl9F,UAAAsT,YAAA4pF,GAiCAK,GAAAv9F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAu9F,GAAAv9F,UAAAsT,YAAAiqF,GAEAA,GAAAv9F,UAAAirB,OAAA,WAEA,IAAAf,EAAA2pB,GAAA7zC,UAAAirB,OAAApsB,KAAAmD,MAIA,OAAAipB,GAFAjpB,KAAAqwC,WAAAN,OAEA7nB,IAwIAszE,GAAAx9F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAw9F,GAAAx9F,UAAAsT,YAAAkqF,GAEAA,GAAAx9F,UAAAirB,OAAA,WAEA,IAAAf,EAAAszB,GAAAx9C,UAAAirB,OAAApsB,KAAAmD,MAIA,OAAAipB,GAFAjpB,KAAAqwC,WAAAN,OAEA7nB,IAqIA2zE,GAAA79F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACA69F,GAAA79F,UAAAsT,YAAAuqF,GA+BAM,GAAAn+F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAm+F,GAAAn+F,UAAAsT,YAAA6qF,GAmRAI,GAAAv+F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAu+F,GAAAv+F,UAAAsT,YAAAirF,GA0BAU,GAAAj/F,UAAAZ,OAAA0rB,OAAAqzE,GAAAn+F,WACAi/F,GAAAj/F,UAAAsT,YAAA2rF,GAsBAC,GAAAl/F,UAAAZ,OAAA0rB,OAAAyzE,GAAAv+F,WACAk/F,GAAAl/F,UAAAsT,YAAA4rF,GA4BAC,GAAAn/F,UAAAZ,OAAA0rB,OAAA+oB,GAAA7zC,WACAm/F,GAAAn/F,UAAAsT,YAAA6rF,GAmFAC,GAAAp/F,UAAAZ,OAAA0rB,OAAA0yB,GAAAx9C,WACAo/F,GAAAp/F,UAAAsT,YAAA8rF,GAIA,IAAAC,GAAAjgG,OAAAkgG,QACAzU,qBACAI,sBACAI,4BACAmB,uBACAC,6BACAC,sBACAC,4BACAC,uBACAC,6BACAC,wBACAC,8BACAtB,sBACAE,4BACAqB,gBACAM,sBACAU,qBACAG,2BACAS,iBACAE,uBACA0M,gBACAE,sBACAI,kBACAK,wBACAI,gBACAK,sBACAz9C,iBACAC,uBACA49C,iBACAE,uBACAK,iBACAC,uBACAvH,mBACAC,yBACA2H,iBACAoB,gBACAC,sBACAf,oBACAI,0BACAY,kBACAC,wBACAzhD,eACAI,uBAWA,SAAAoW,GAAA9hB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,iBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,GACA9iC,KAAA4/C,eAEA5/C,KAAAyhD,UAAApR,GAuBA,SAAAktD,GAAAltD,GAEAqR,GAAA7kD,KAAAmD,KAAAqwC,GAEArwC,KAAA2E,KAAA,oBA4DA,SAAAmtD,GAAAzhB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2hD,SAAiB67C,SAAA,IAEjBx9F,KAAA2E,KAAA,uBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UACA9iC,KAAA6pC,UAAA,GACA7pC,KAAA8pC,UAAA,GAEA9pC,KAAAsB,IAAA,KAEAtB,KAAAgmC,SAAA,KACAhmC,KAAAimC,kBAAA,EAEAjmC,KAAA6lC,MAAA,KACA7lC,KAAA8lC,eAAA,EAEA9lC,KAAAwpC,SAAA,IAAA1G,GAAA,GACA9iC,KAAAojD,kBAAA,EACApjD,KAAAmmC,YAAA,KAEAnmC,KAAAqmC,QAAA,KACArmC,KAAAsmC,UAAA,EAEAtmC,KAAAwmC,UAAA,KACAxmC,KAAAymC,YAAA,IAAA12B,GAAA,KAEA/P,KAAA2mC,gBAAA,KACA3mC,KAAA4mC,kBAAA,EACA5mC,KAAA6mC,iBAAA,EAEA7mC,KAAA+mC,aAAA,KAEA/mC,KAAAinC,aAAA,KAEAjnC,KAAAmlC,SAAA,KAEAnlC,KAAAulC,OAAA,KACAvlC,KAAA+pC,gBAAA,EAEA/pC,KAAA0lC,gBAAA,IAEA1lC,KAAAohD,aACAphD,KAAAqhD,mBAAA,EACArhD,KAAAshD,iBAAA,QACAthD,KAAAuhD,kBAAA,QAEAvhD,KAAAwhD,YACAxhD,KAAAiyC,gBACAjyC,KAAAkyC,gBAEAlyC,KAAAyhD,UAAApR,GAyEA,SAAA0hB,GAAA1hB,GAEAyhB,GAAAj1D,KAAAmD,MAEAA,KAAA2hD,SAAiB87C,SAAA,IAEjBz9F,KAAA2E,KAAA,uBAEA3E,KAAAylC,aAAA,GAEAzlC,KAAAmrC,UAAA,EACAnrC,KAAAorC,mBAAA,EAEAprC,KAAAyhD,UAAApR,GA0EA,SAAAuhB,GAAAvhB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UACA9iC,KAAA0pC,SAAA,IAAA5G,GAAA,SACA9iC,KAAA2pC,UAAA,GAEA3pC,KAAAsB,IAAA,KAEAtB,KAAAgmC,SAAA,KACAhmC,KAAAimC,kBAAA,EAEAjmC,KAAA6lC,MAAA,KACA7lC,KAAA8lC,eAAA,EAEA9lC,KAAAwpC,SAAA,IAAA1G,GAAA,GACA9iC,KAAAojD,kBAAA,EACApjD,KAAAmmC,YAAA,KAEAnmC,KAAAqmC,QAAA,KACArmC,KAAAsmC,UAAA,EAEAtmC,KAAAwmC,UAAA,KACAxmC,KAAAymC,YAAA,IAAA12B,GAAA,KAEA/P,KAAA2mC,gBAAA,KACA3mC,KAAA4mC,kBAAA,EACA5mC,KAAA6mC,iBAAA,EAEA7mC,KAAAqlC,YAAA,KAEArlC,KAAAmlC,SAAA,KAEAnlC,KAAAulC,OAAA,KACAvlC,KAAAmhD,QAAAz4C,GACA1I,KAAAylC,aAAA,EACAzlC,KAAA0lC,gBAAA,IAEA1lC,KAAAohD,aACAphD,KAAAqhD,mBAAA,EACArhD,KAAAshD,iBAAA,QACAthD,KAAAuhD,kBAAA,QAEAvhD,KAAAwhD,YACAxhD,KAAAiyC,gBACAjyC,KAAAkyC,gBAEAlyC,KAAAyhD,UAAApR,GAqEA,SAAAwhB,GAAAxhB,GAEAuhB,GAAA/0D,KAAAmD,MAEAA,KAAA2hD,SAAiB+7C,KAAA,IAEjB19F,KAAA2E,KAAA,mBAEA3E,KAAAmnC,YAAA,KAEAnnC,KAAAyhD,UAAApR,GA6CA,SAAAqhB,GAAArhB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAAqmC,QAAA,KACArmC,KAAAsmC,UAAA,EAEAtmC,KAAAwmC,UAAA,KACAxmC,KAAAymC,YAAA,IAAA12B,GAAA,KAEA/P,KAAA2mC,gBAAA,KACA3mC,KAAA4mC,kBAAA,EACA5mC,KAAA6mC,iBAAA,EAEA7mC,KAAAohD,aACAphD,KAAAqhD,mBAAA,EAEArhD,KAAAonC,OACApnC,KAAAynC,UAEAznC,KAAAwhD,YACAxhD,KAAAiyC,gBACAjyC,KAAAkyC,gBAEAlyC,KAAAyhD,UAAApR,GAwEA,SAAAshB,GAAAthB,GAEAmP,GAAA3iD,KAAAmD,MAEAA,KAAA2E,KAAA,sBAEA3E,KAAA0jC,MAAA,IAAAZ,GAAA,UAEA9iC,KAAAsB,IAAA,KAEAtB,KAAAgmC,SAAA,KACAhmC,KAAAimC,kBAAA,EAEAjmC,KAAA6lC,MAAA,KACA7lC,KAAA8lC,eAAA,EAEA9lC,KAAAwpC,SAAA,IAAA1G,GAAA,GACA9iC,KAAAojD,kBAAA,EACApjD,KAAAmmC,YAAA,KAEAnmC,KAAAqlC,YAAA,KAEArlC,KAAAmlC,SAAA,KAEAnlC,KAAAulC,OAAA,KACAvlC,KAAAmhD,QAAAz4C,GACA1I,KAAAylC,aAAA,EACAzlC,KAAA0lC,gBAAA,IAEA1lC,KAAAohD,aACAphD,KAAAqhD,mBAAA,EACArhD,KAAAshD,iBAAA,QACAthD,KAAAuhD,kBAAA,QAEAvhD,KAAAwhD,YACAxhD,KAAAiyC,gBACAjyC,KAAAkyC,gBAEAlyC,KAAAyhD,UAAApR,GAgEA,SAAA4hB,GAAA5hB,GAEA2hB,GAAAn1D,KAAAmD,MAEAA,KAAA2E,KAAA,qBAEA3E,KAAA8b,MAAA,EACA9b,KAAAiqC,SAAA,EACAjqC,KAAAsjD,QAAA,EAEAtjD,KAAAyhD,UAAApR,GAzqBA8hB,GAAAn0D,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACAm0D,GAAAn0D,UAAAsT,YAAA6gD,GAEAA,GAAAn0D,UAAAonF,oBAEAjzB,GAAAn0D,UAAAuT,KAAA,SAAAxP,GAMA,OAJAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OAEA1jC,MAgBAu9F,GAAAv/F,UAAAZ,OAAA0rB,OAAA44B,GAAA1jD,WACAu/F,GAAAv/F,UAAAsT,YAAAisF,GAEAA,GAAAv/F,UAAAu4D,uBA+GAzE,GAAA9zD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACA8zD,GAAA9zD,UAAAsT,YAAAwgD,GAEAA,GAAA9zD,UAAA0iF,0BAEA5uB,GAAA9zD,UAAAuT,KAAA,SAAAxP,GAoDA,OAlDAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA2hD,SAAiB67C,SAAA,IAEjBx9F,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OACA1jC,KAAA6pC,UAAA9nC,EAAA8nC,UACA7pC,KAAA8pC,UAAA/nC,EAAA+nC,UAEA9pC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAgmC,SAAAjkC,EAAAikC,SACAhmC,KAAAimC,kBAAAlkC,EAAAkkC,kBAEAjmC,KAAA6lC,MAAA9jC,EAAA8jC,MACA7lC,KAAA8lC,eAAA/jC,EAAA+jC,eAEA9lC,KAAAwpC,SAAAj4B,KAAAxP,EAAAynC,UACAxpC,KAAAmmC,YAAApkC,EAAAokC,YACAnmC,KAAAojD,kBAAArhD,EAAAqhD,kBAEApjD,KAAAqmC,QAAAtkC,EAAAskC,QACArmC,KAAAsmC,UAAAvkC,EAAAukC,UAEAtmC,KAAAwmC,UAAAzkC,EAAAykC,UACAxmC,KAAAymC,YAAAl1B,KAAAxP,EAAA0kC,aAEAzmC,KAAA2mC,gBAAA5kC,EAAA4kC,gBACA3mC,KAAA4mC,kBAAA7kC,EAAA6kC,kBACA5mC,KAAA6mC,iBAAA9kC,EAAA8kC,iBAEA7mC,KAAA+mC,aAAAhlC,EAAAglC,aAEA/mC,KAAAinC,aAAAllC,EAAAklC,aAEAjnC,KAAAmlC,SAAApjC,EAAAojC,SAEAnlC,KAAAulC,OAAAxjC,EAAAwjC,OACAvlC,KAAA+pC,gBAAAhoC,EAAAgoC,gBAEA/pC,KAAA0lC,gBAAA3jC,EAAA2jC,gBAEA1lC,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBACArhD,KAAAshD,iBAAAv/C,EAAAu/C,iBACAthD,KAAAuhD,kBAAAx/C,EAAAw/C,kBAEAvhD,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aACAjyC,KAAAkyC,aAAAnwC,EAAAmwC,aAEAlyC,MA6BA+xD,GAAA/zD,UAAAZ,OAAA0rB,OAAAgpC,GAAA9zD,WACA+zD,GAAA/zD,UAAAsT,YAAAygD,GAEAA,GAAA/zD,UAAA8mF,0BAEA/yB,GAAA/zD,UAAAuT,KAAA,SAAAxP,GAWA,OATA+vD,GAAA9zD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA2hD,SAAiB87C,SAAA,IAEjBz9F,KAAAylC,aAAA1jC,EAAA0jC,aAEAzlC,KAAAmrC,UAAAppC,EAAAopC,UACAnrC,KAAAorC,mBAAArpC,EAAAqpC,mBAEAprC,MA4GA4xD,GAAA5zD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACA4zD,GAAA5zD,UAAAsT,YAAAsgD,GAEAA,GAAA5zD,UAAAyiF,uBAEA7uB,GAAA5zD,UAAAuT,KAAA,SAAAxP,GAgDA,OA9CAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OACA1jC,KAAA0pC,SAAAn4B,KAAAxP,EAAA2nC,UACA1pC,KAAA2pC,UAAA5nC,EAAA4nC,UAEA3pC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAgmC,SAAAjkC,EAAAikC,SACAhmC,KAAAimC,kBAAAlkC,EAAAkkC,kBAEAjmC,KAAA6lC,MAAA9jC,EAAA8jC,MACA7lC,KAAA8lC,eAAA/jC,EAAA+jC,eAEA9lC,KAAAwpC,SAAAj4B,KAAAxP,EAAAynC,UACAxpC,KAAAmmC,YAAApkC,EAAAokC,YACAnmC,KAAAojD,kBAAArhD,EAAAqhD,kBAEApjD,KAAAqmC,QAAAtkC,EAAAskC,QACArmC,KAAAsmC,UAAAvkC,EAAAukC,UAEAtmC,KAAAwmC,UAAAzkC,EAAAykC,UACAxmC,KAAAymC,YAAAl1B,KAAAxP,EAAA0kC,aAEAzmC,KAAA2mC,gBAAA5kC,EAAA4kC,gBACA3mC,KAAA4mC,kBAAA7kC,EAAA6kC,kBACA5mC,KAAA6mC,iBAAA9kC,EAAA8kC,iBAEA7mC,KAAAqlC,YAAAtjC,EAAAsjC,YAEArlC,KAAAmlC,SAAApjC,EAAAojC,SAEAnlC,KAAAulC,OAAAxjC,EAAAwjC,OACAvlC,KAAAmhD,QAAAp/C,EAAAo/C,QACAnhD,KAAAylC,aAAA1jC,EAAA0jC,aACAzlC,KAAA0lC,gBAAA3jC,EAAA2jC,gBAEA1lC,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBACArhD,KAAAshD,iBAAAv/C,EAAAu/C,iBACAthD,KAAAuhD,kBAAAx/C,EAAAw/C,kBAEAvhD,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aACAjyC,KAAAkyC,aAAAnwC,EAAAmwC,aAEAlyC,MA0BA6xD,GAAA7zD,UAAAZ,OAAA0rB,OAAA8oC,GAAA5zD,WACA6zD,GAAA7zD,UAAAsT,YAAAugD,GAEAA,GAAA7zD,UAAA4mF,sBAEA/yB,GAAA7zD,UAAAuT,KAAA,SAAAxP,GAMA,OAJA6vD,GAAA5zD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAmnC,YAAAplC,EAAAolC,YAEAnnC,MA4DA0xD,GAAA1zD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACA0zD,GAAA1zD,UAAAsT,YAAAogD,GAEAA,GAAA1zD,UAAA2iF,wBAEAjvB,GAAA1zD,UAAAuT,KAAA,SAAAxP,GAqBA,OAnBAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAqmC,QAAAtkC,EAAAskC,QACArmC,KAAAsmC,UAAAvkC,EAAAukC,UAEAtmC,KAAAwmC,UAAAzkC,EAAAykC,UACAxmC,KAAAymC,YAAAl1B,KAAAxP,EAAA0kC,aAEAzmC,KAAA2mC,gBAAA5kC,EAAA4kC,gBACA3mC,KAAA4mC,kBAAA7kC,EAAA6kC,kBACA5mC,KAAA6mC,iBAAA9kC,EAAA8kC,iBAEA7mC,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBAEArhD,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aACAjyC,KAAAkyC,aAAAnwC,EAAAmwC,aAEAlyC,MAoFA2xD,GAAA3zD,UAAAZ,OAAA0rB,OAAA02B,GAAAxhD,WACA2zD,GAAA3zD,UAAAsT,YAAAqgD,GAEAA,GAAA3zD,UAAAumF,yBAEA5yB,GAAA3zD,UAAAuT,KAAA,SAAAxP,GAoCA,OAlCAy9C,GAAAxhD,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OAEA1jC,KAAAsB,IAAAS,EAAAT,IAEAtB,KAAAgmC,SAAAjkC,EAAAikC,SACAhmC,KAAAimC,kBAAAlkC,EAAAkkC,kBAEAjmC,KAAA6lC,MAAA9jC,EAAA8jC,MACA7lC,KAAA8lC,eAAA/jC,EAAA+jC,eAEA9lC,KAAAwpC,SAAAj4B,KAAAxP,EAAAynC,UACAxpC,KAAAmmC,YAAApkC,EAAAokC,YACAnmC,KAAAojD,kBAAArhD,EAAAqhD,kBAEApjD,KAAAqlC,YAAAtjC,EAAAsjC,YAEArlC,KAAAmlC,SAAApjC,EAAAojC,SAEAnlC,KAAAulC,OAAAxjC,EAAAwjC,OACAvlC,KAAAmhD,QAAAp/C,EAAAo/C,QACAnhD,KAAAylC,aAAA1jC,EAAA0jC,aACAzlC,KAAA0lC,gBAAA3jC,EAAA2jC,gBAEA1lC,KAAAohD,UAAAr/C,EAAAq/C,UACAphD,KAAAqhD,mBAAAt/C,EAAAs/C,mBACArhD,KAAAshD,iBAAAv/C,EAAAu/C,iBACAthD,KAAAuhD,kBAAAx/C,EAAAw/C,kBAEAvhD,KAAAwhD,SAAAz/C,EAAAy/C,SACAxhD,KAAAiyC,aAAAlwC,EAAAkwC,aACAjyC,KAAAkyC,aAAAnwC,EAAAmwC,aAEAlyC,MAiCAiyD,GAAAj0D,UAAAZ,OAAA0rB,OAAAkpC,GAAAh0D,WACAi0D,GAAAj0D,UAAAsT,YAAA2gD,GAEAA,GAAAj0D,UAAAknF,wBAEAjzB,GAAAj0D,UAAAuT,KAAA,SAAAxP,GAQA,OANAiwD,GAAAh0D,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA8b,MAAA/Z,EAAA+Z,MACA9b,KAAAiqC,SAAAloC,EAAAkoC,SACAjqC,KAAAsjD,QAAAvhD,EAAAuhD,QAEAtjD,MAMA,IAAA29F,GAAAvgG,OAAAkgG,QACAnrC,kBACAi1B,kBACAmW,qBACA77C,kBACAwQ,kBACAH,wBACAD,wBACAF,qBACAC,oBACAH,sBACAC,uBACAH,qBACAC,wBACAvQ,qBACA+Q,sBACAD,qBACAxS,cAOAo+C,IAEAzsD,WAEA0sD,SAEApsF,IAAA,SAAAlP,EAAAu7F,QAEA99F,KAAAmxC,UAIAnxC,KAAA69F,MAAAt7F,GAAAu7F,IAIAtgG,IAAA,SAAA+E,GAEA,QAAAvC,KAAAmxC,QAIA,OAAAnxC,KAAA69F,MAAAt7F,IAIAysC,OAAA,SAAAzsC,UAEAvC,KAAA69F,MAAAt7F,IAIA28D,MAAA,WAEAl/D,KAAA69F,WAUA,SAAAE,GAAAC,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEAm+F,KACAC,EAAA,EACAC,EAAA,EACAC,SAEAt+F,KAAAu+F,eACAv+F,KAAAg+F,SACAh+F,KAAAi+F,aACAj+F,KAAAk+F,UAEAl+F,KAAAw+F,UAAA,SAAA/0E,GAEA40E,SAEAF,YAEA3xE,EAAA+xE,SAEA/xE,EAAA+xE,QAAA90E,EAAA20E,EAAAC,GAMAF,MAIAn+F,KAAAy+F,QAAA,SAAAh1E,GAEA20E,aAEA5xE,EAAAyxE,YAEAzxE,EAAAyxE,WAAAx0E,EAAA20E,EAAAC,GAIAD,IAAAC,IAEAF,UAAA,IAEA3xE,EAAAwxE,QAEAxxE,EAAAwxE,WAQAh+F,KAAA0+F,UAAA,SAAAj1E,YAEA+C,EAAA0xE,SAEA1xE,EAAA0xE,QAAAz0E,IAMAzpB,KAAA2+F,WAAA,SAAAl1E,GAEA,OAAA60E,EAEAA,EAAA70E,GAIAA,GAIAzpB,KAAA4+F,eAAA,SAAAC,GAGA,OADAP,EAAAO,EACA7+F,MAMA,IAAA8+F,GAAA,IAAAf,GAMAgB,MAEA,SAAAC,GAAAC,GAEAj/F,KAAAi/F,qBAAAH,GA6gBA,SAAAI,GAAAD,GAEAj/F,KAAAi/F,qBAAAH,GAyKA,SAAAK,GAAAF,GAEAj/F,KAAAi/F,qBAAAH,GAyFA,SAAAM,KAEAp/F,KAAA2E,KAAA,QAEA3E,KAAAq/F,mBAAA,IA4XA,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAV,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,eAEA3E,KAAAu/F,MAAA,EACAv/F,KAAAw/F,MAAA,EAEAx/F,KAAAy/F,WAAA,EACAz/F,KAAA0/F,WAAA,EAEA1/F,KAAA2/F,eAAA,EACA3/F,KAAA4/F,aAAA,EAAAtgG,KAAAsO,GAEA5N,KAAA6/F,iBAEA7/F,KAAA8/F,aAAA,EAuIA,SAAAC,GAAAR,EAAAC,EAAAQ,EAAAL,EAAAC,EAAAC,GAEAP,GAAAziG,KAAAmD,KAAAu/F,EAAAC,EAAAQ,IAAAL,EAAAC,EAAAC,GAEA7/F,KAAA2E,KAAA,WA+BA,SAAAs7F,KAEA,IAAAC,EAAA,EAAAvgF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAUA,SAAAm7C,EAAAp8C,EAAAI,EAAA+lC,EAAAC,GAEAk7C,EAAAthF,EACAe,EAAAolC,EACAnlC,GAAA,EAAAhB,EAAA,EAAAI,EAAA,EAAA+lC,EAAAC,EACAnlC,EAAA,EAAAjB,EAAA,EAAAI,EAAA+lC,EAAAC,EAIA,OAEAm7C,eAAA,SAAAvhF,EAAAI,EAAAtH,EAAA0oF,EAAAC,GAEArlC,EAAAh8C,EAAAtH,EAAA2oF,GAAA3oF,EAAAkH,GAAAyhF,GAAAD,EAAAphF,KAIAshF,yBAAA,SAAA1hF,EAAAI,EAAAtH,EAAA0oF,EAAAG,EAAAC,EAAAC,GAGA,IAAAz7C,GAAAhmC,EAAAJ,GAAA2hF,GAAA7oF,EAAAkH,IAAA2hF,EAAAC,IAAA9oF,EAAAsH,GAAAwhF,EACAE,GAAAhpF,EAAAsH,GAAAwhF,GAAAJ,EAAAphF,IAAAwhF,EAAAC,IAAAL,EAAA1oF,GAAA+oF,EAMAzlC,EAAAh8C,EAAAtH,EAHAstC,GAAAw7C,EACAE,GAAAF,IAMAG,KAAA,SAAAviG,GAEA,IAAAsiG,EAAAtiG,IAEA,OAAA8hG,EAAAvgF,EAAAvhB,EAAAwhB,EAAA8gF,EAAA7gF,GADA6gF,EAAAtiG,KAx3CAhB,OAAA4D,OAAAg+F,GAAAhhG,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,YAEAz0E,MAAA,aAEAzpB,KAAAsuD,OAAA7kC,EAAAzpB,KAAAsuD,KAAA7kC,GAEAA,EAAAzpB,KAAAi/F,QAAAN,WAAAl1E,GAEA,IAAA+C,EAAAxsB,KAEA6gG,EAAAjD,GAAApgG,IAAAisB,GAEA,YAAAo3E,EAYA,OAVAr0E,EAAAyyE,QAAAT,UAAA/0E,GAEAq3E,WAAA,WAEA9C,KAAA6C,GAEAr0E,EAAAyyE,QAAAR,QAAAh1E,IAEI,GAEJo3E,EAMA,YAAA9B,GAAAt1E,GAAA,CAeA,IACAs3E,EAAAt3E,EAAAnlB,MADA,+BAIA,GAAAy8F,EAAA,CAEA,IAAAC,EAAAD,EAAA,GACAE,IAAAF,EAAA,GACA74E,EAAA64E,EAAA,GAEA74E,EAAA8gD,OAAAk4B,mBAAAh5E,GAEA+4E,IAAA/4E,EAAA8gD,OAAAm4B,KAAAj5E,IAEA,IAEA,IAAAk5E,EACAC,GAAArhG,KAAAqhG,cAAA,IAAAC,cAEA,OAAAD,GAEA,kBACA,WAIA,IAFA,IAAA/zD,EAAA,IAAAnuC,WAAA+oB,EAAA5lB,QAEA5F,EAAA,EAAsBA,EAAAwrB,EAAA5lB,OAAiB5F,IAEvC4wC,EAAA5wC,GAAAwrB,EAAAq5E,WAAA7kG,GAMA0kG,EAFA,SAAAC,EAEA,IAAAG,MAAAl0D,EAAA4uC,SAA8Cv3E,KAAAq8F,IAI9C1zD,EAAA4uC,OAIA,MAEA,eAEA,IAAAulB,EAAA,IAAAC,UACAN,EAAAK,EAAAE,gBAAAz5E,EAAA84E,GAEA,MAEA,WAEAI,EAAAjxD,KAAAU,MAAA3oB,GAEA,MAEA,QAEAk5E,EAAAl5E,EAOA8gD,OAAA83B,WAAA,WAEA9C,KAAAoD,GAEA50E,EAAAyyE,QAAAR,QAAAh1E,IAEK,GAED,MAAAlpB,GAGJyoE,OAAA83B,WAAA,WAEA5C,KAAA39F,GAEAisB,EAAAyyE,QAAAR,QAAAh1E,GACA+C,EAAAyyE,QAAAP,UAAAj1E,IAEK,QAIF,CAIHs1E,GAAAt1E,MAEAs1E,GAAAt1E,GAAAzkB,MAEAg5F,SACAC,aACAC,YAIA,IAAA0D,EAAA,IAAAC,eA6FA,QAAAC,KA3FAF,EAAAG,KAAA,MAAAt4E,MAEAm4E,EAAAl9F,iBAAA,gBAAAY,GAEA,IAAA87F,EAAAphG,KAAAohG,SAEAxD,GAAAnsF,IAAAgY,EAAA23E,GAEA,IAAAY,EAAAjD,GAAAt1E,GAIA,UAFAs1E,GAAAt1E,GAEA,MAAAzpB,KAAAiiG,OAAA,CAEA,QAAAvlG,EAAA,EAAAivB,EAAAq2E,EAAA1/F,OAA4C5F,EAAAivB,EAAQjvB,KAEpDulB,EAAA+/E,EAAAtlG,IACAshG,QAAA/7E,EAAA+7E,OAAAoD,GAIA50E,EAAAyyE,QAAAR,QAAAh1E,QAEK,OAAAzpB,KAAAiiG,OAAA,CAOL,IAFAp/F,QAAA6O,KAAA,6CAEAhV,EAAA,EAAAivB,EAAAq2E,EAAA1/F,OAA4C5F,EAAAivB,EAAQjvB,KAEpDulB,EAAA+/E,EAAAtlG,IACAshG,QAAA/7E,EAAA+7E,OAAAoD,GAIA50E,EAAAyyE,QAAAR,QAAAh1E,OAEK,CAEL,IAAA/sB,EAAA,EAAAivB,EAAAq2E,EAAA1/F,OAA4C5F,EAAAivB,EAAQjvB,IAAA,CAEpD,IAAAulB,KAAA+/E,EAAAtlG,IACAwhG,SAAAj8E,EAAAi8E,QAAA54F,GAIAknB,EAAAyyE,QAAAR,QAAAh1E,GACA+C,EAAAyyE,QAAAP,UAAAj1E,SAMAm4E,EAAAl9F,iBAAA,oBAAAY,GAIA,IAFA,IAAA08F,EAAAjD,GAAAt1E,GAEA/sB,EAAA,EAAAivB,EAAAq2E,EAAA1/F,OAA2C5F,EAAAivB,EAAQjvB,IAAA,CAEnD,IAAAulB,EAAA+/E,EAAAtlG,GACAulB,EAAAg8E,YAAAh8E,EAAAg8E,WAAA34F,SAMAs8F,EAAAl9F,iBAAA,iBAAAY,GAEA,IAAA08F,EAAAjD,GAAAt1E,UAEAs1E,GAAAt1E,GAEA,QAAA/sB,EAAA,EAAAivB,EAAAq2E,EAAA1/F,OAA2C5F,EAAAivB,EAAQjvB,IAAA,CAEnD,IAAAulB,EAAA+/E,EAAAtlG,GACAulB,EAAAi8E,SAAAj8E,EAAAi8E,QAAA54F,GAIAknB,EAAAyyE,QAAAR,QAAAh1E,GACA+C,EAAAyyE,QAAAP,UAAAj1E,aAEI,IAEJzpB,KAAAqhG,eAAAO,EAAAP,aAAArhG,KAAAqhG,uBACArhG,KAAAkiG,kBAAAN,EAAAM,gBAAAliG,KAAAkiG,iBAEAN,EAAAO,kBAAAP,EAAAO,0BAAAniG,KAAAghG,SAAAhhG,KAAAghG,SAAA,cAEAhhG,KAAAoiG,cAEAR,EAAAS,iBAAAP,EAAA9hG,KAAAoiG,cAAAN,IAIAF,EAAAU,KAAA,MAMA,OAFA91E,EAAAyyE,QAAAT,UAAA/0E,GAEAm4E,EA5NA7C,GAAAt1E,GAAAzkB,MAEAg5F,SACAC,aACAC,aA4NAqE,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,MAIAwiG,gBAAA,SAAA9kG,GAGA,OADAsC,KAAAqhG,aAAA3jG,EACAsC,MAIAyiG,mBAAA,SAAA/kG,GAGA,OADAsC,KAAAkiG,gBAAAxkG,EACAsC,MAIA0iG,YAAA,SAAAhlG,GAGA,OADAsC,KAAAghG,SAAAtjG,EACAsC,MAIAqiG,iBAAA,SAAA3kG,GAGA,OADAsC,KAAAoiG,cAAA1kG,EACAsC,QAqBA5C,OAAA4D,OATA,SAAAi+F,GAEAj/F,KAAAi/F,qBAAAH,GAGA9+F,KAAA2iG,QAAA,MAIA3kG,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEAwpB,KAEA/B,EAAA,IAAAkhE,GACAlhE,EAAAzB,MAAAwD,EAEA,IAAAo5E,EAAA,IAAA5D,GAAAh/F,KAAAi/F,SAIA,SAAA4D,EAAAnmG,GAEAkmG,EAAAhC,KAAAn3E,EAAA/sB,GAAA,SAAAw/E,GAEA,IAAA4mB,EAAAt2E,EAAAm2E,QAAAzmB,MAEA1yD,EAAA9sB,IACAiU,MAAAmyF,EAAAnyF,MACAE,OAAAiyF,EAAAjyF,OACA1Q,OAAA2iG,EAAA3iG,OACAsmB,QAAAq8E,EAAAr8E,SAKA,KAFAs8E,GAAA,KAIA,IAAAD,EAAAE,cACAv7E,EAAApB,UAAAtc,IAEA0d,EAAAtnB,OAAA2iG,EAAA3iG,OACAsnB,EAAAs2B,eAEAigD,KAAAv2E,KAIIw2E,EAAAC,GAIJ,GAlCA0E,EAAAL,QAAAviG,KAAAsuD,MACAs0C,EAAAJ,gBAAA,eAiCAnjG,MAAAm6B,QAAA/P,GAIA,IAFA,IAAAs5E,EAAA,EAEArmG,EAAA,EAAAivB,EAAAlC,EAAAnnB,OAAoC5F,EAAAivB,IAAQjvB,EAE5CmmG,EAAAnmG,QAQAkmG,EAAAhC,KAAAn3E,EAAA,SAAAyyD,GAEA,IAAA4mB,EAAAt2E,EAAAm2E,QAAAzmB,MAEA,GAAA4mB,EAAAG,UAIA,IAFA,IAAAlxD,EAAA+wD,EAAAr8E,QAAAnkB,OAAAwgG,EAAAE,YAEA1iG,EAAA,EAAqBA,EAAAyxC,EAAWzxC,IAAA,CAEhCkpB,EAAAlpB,IAAqBmmB,YAErB,QAAA/pB,EAAA,EAAsBA,EAAAomG,EAAAE,YAA0BtmG,IAEhD8sB,EAAAlpB,GAAAmmB,QAAAzhB,KAAA89F,EAAAr8E,QAAAnmB,EAAAwiG,EAAAE,YAAAtmG,IACA8sB,EAAAlpB,GAAAH,OAAA2iG,EAAA3iG,OACAqpB,EAAAlpB,GAAAqQ,MAAAmyF,EAAAnyF,MACA6Y,EAAAlpB,GAAAuQ,OAAAiyF,EAAAjyF,YAQA4W,EAAAzB,MAAArV,MAAAmyF,EAAAnyF,MACA8W,EAAAzB,MAAAnV,OAAAiyF,EAAAjyF,OACA4W,EAAAhB,QAAAq8E,EAAAr8E,QAIA,IAAAq8E,EAAAE,cAEAv7E,EAAApB,UAAAtc,IAIA0d,EAAAtnB,OAAA2iG,EAAA3iG,OACAsnB,EAAAs2B,eAEAigD,KAAAv2E,IAEIw2E,EAAAC,GAIJ,OAAAz2E,GAIA86E,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,QAqBA5C,OAAA4D,OATA,SAAAi+F,GAEAj/F,KAAAi/F,qBAAAH,GAGA9+F,KAAA2iG,QAAA,MAIA3kG,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEAynB,EAAA,IAAAQ,GAEA26E,EAAA,IAAA5D,GAAAh/F,KAAAi/F,SA2DA,OA1DA2D,EAAAJ,gBAAA,eAEAI,EAAAhC,KAAAn3E,EAAA,SAAAyyD,GAEA,IAAAgnB,EAAA12E,EAAAm2E,QAAAzmB,GAEAgnB,aAEAA,EAAAl9E,MAEAyB,EAAAzB,MAAAk9E,EAAAl9E,eAEIk9E,EAAAh7E,OAEJT,EAAAzB,MAAArV,MAAAuyF,EAAAvyF,MACA8W,EAAAzB,MAAAnV,OAAAqyF,EAAAryF,OACA4W,EAAAzB,MAAAkC,KAAAg7E,EAAAh7E,MAIAT,EAAAvB,eAAAg9E,EAAAh9E,MAAAg9E,EAAAh9E,MAAAxc,GACA+d,EAAAtB,eAAA+8E,EAAA/8E,MAAA+8E,EAAA/8E,MAAAzc,GAEA+d,EAAArB,mBAAA88E,EAAA98E,UAAA88E,EAAA98E,UAAArc,GACA0d,EAAApB,mBAAA68E,EAAA78E,UAAA68E,EAAA78E,UAAApc,GAEAwd,EAAAnB,oBAAA48E,EAAA58E,WAAA48E,EAAA58E,WAAA,WAEA48E,EAAA/iG,SAEAsnB,EAAAtnB,OAAA+iG,EAAA/iG,iBAGA+iG,EAAAv+F,OAEA8iB,EAAA9iB,KAAAu+F,EAAAv+F,eAIAu+F,EAAAz8E,UAEAgB,EAAAhB,QAAAy8E,EAAAz8E,SAIA,IAAAy8E,EAAAF,cAEAv7E,EAAApB,UAAAtc,IAIA0d,EAAAs2B,eAEAigD,KAAAv2E,EAAAy7E,KAEGjF,EAAAC,GAGHz2E,KAgBArqB,OAAA4D,OAAAk+F,GAAAlhG,WAEAmlG,YAAA,YAEAvC,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,YAEAz0E,MAAA,aAEAzpB,KAAAsuD,OAAA7kC,EAAAzpB,KAAAsuD,KAAA7kC,GAEAA,EAAAzpB,KAAAi/F,QAAAN,WAAAl1E,GAEA,IAAA+C,EAAAxsB,KAEA6gG,EAAAjD,GAAApgG,IAAAisB,GAEA,YAAAo3E,EAYA,OAVAr0E,EAAAyyE,QAAAT,UAAA/0E,GAEAq3E,WAAA,WAEA9C,KAAA6C,GAEAr0E,EAAAyyE,QAAAR,QAAAh1E,IAEI,GAEJo3E,EAIA,IAAA76E,EAAA4D,SAAAC,gBAAA,sCAuCA,OArCA7D,EAAAthB,iBAAA,kBAEAk5F,GAAAnsF,IAAAgY,EAAAzpB,MAEAg+F,KAAAh+F,MAEAwsB,EAAAyyE,QAAAR,QAAAh1E,QAYAzD,EAAAthB,iBAAA,iBAAAY,GAEA44F,KAAA54F,GAEAknB,EAAAyyE,QAAAR,QAAAh1E,GACA+C,EAAAyyE,QAAAP,UAAAj1E,QAIA,UAAAA,EAAA/qB,OAAA,eAEAsB,KAAAmjG,cAAAn9E,EAAAm9E,YAAAnjG,KAAAmjG,aAIA32E,EAAAyyE,QAAAT,UAAA/0E,GAEAzD,EAAAo9E,IAAA35E,EAEAzD,GAIAq9E,eAAA,SAAA3lG,GAGA,OADAsC,KAAAmjG,YAAAzlG,EACAsC,MAIAuiG,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,QAgBA5C,OAAA4D,OANA,SAAAi+F,GAEAj/F,KAAAi/F,qBAAAH,IAIA9gG,WAEAmlG,YAAA,YAEAvC,KAAA,SAAA0C,EAAAtF,EAAAC,EAAAC,GAEA,IAAAz2E,EAAA,IAAAq7B,GAEA8/C,EAAA,IAAA1D,GAAAl/F,KAAAi/F,SACA2D,EAAAS,eAAArjG,KAAAmjG,aACAP,EAAAL,QAAAviG,KAAAsuD,MAEA,IAAAy0C,EAAA,EAEA,SAAAF,EAAAnmG,GAEAkmG,EAAAhC,KAAA0C,EAAA5mG,GAAA,SAAAspB,GAEAyB,EAAA+B,OAAA9sB,GAAAspB,EAIA,KAFA+8E,IAIAt7E,EAAAs2B,eAEAigD,KAAAv2E,YAIIy2E,GAIJ,QAAAxhG,EAAA,EAAkBA,EAAA4mG,EAAAhhG,SAAiB5F,EAEnCmmG,EAAAnmG,GAIA,OAAA+qB,GAIA47E,eAAA,SAAA3lG,GAGA,OADAsC,KAAAmjG,YAAAzlG,EACAsC,MAIAuiG,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,QAgBA5C,OAAA4D,OAAAm+F,GAAAnhG,WAEAmlG,YAAA,YAEAvC,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAAz2E,EAAA,IAAA1B,GAEA68E,EAAA,IAAA1D,GAAAl/F,KAAAi/F,SAsBA,OArBA2D,EAAAS,eAAArjG,KAAAmjG,aACAP,EAAAL,QAAAviG,KAAAsuD,MAEAs0C,EAAAhC,KAAAn3E,EAAA,SAAAzD,GAEAyB,EAAAzB,QAGA,IAAAu9E,EAAA95E,EAAA+5E,OAAA,wBAAA/5E,EAAA+5E,OAAA,sBAEA/7E,EAAAtnB,OAAAojG,EAAAx4F,GAAAC,GACAyc,EAAAs2B,oBAAA,IAEAigD,GAEAA,EAAAv2E,IAIGw2E,EAAAC,GAEHz2E,GAIA47E,eAAA,SAAA3lG,GAGA,OADAsC,KAAAmjG,YAAAzlG,EACAsC,MAIAuiG,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,QAiDA5C,OAAA4D,OAAAo+F,GAAAphG,WAKAylG,SAAA,WAGA,OADA5gG,QAAA6O,KAAA,6CACA,MAOAm6E,WAAA,SAAA1yD,EAAAuqE,GAEA,IAAAtlG,EAAA4B,KAAA2jG,eAAAxqE,GACA,OAAAn5B,KAAAyjG,SAAArlG,EAAAslG,IAMAE,UAAA,SAAAC,YAEAA,MAAA,GAIA,IAFA,IAAAr+E,KAEAxoB,EAAA,EAAkBA,GAAA6mG,EAAgB7mG,IAElCwoB,EAAAxgB,KAAAhF,KAAAyjG,SAAAzmG,EAAA6mG,IAIA,OAAAr+E,GAMAgwE,gBAAA,SAAAqO,YAEAA,MAAA,GAIA,IAFA,IAAAr+E,KAEAxoB,EAAA,EAAkBA,GAAA6mG,EAAgB7mG,IAElCwoB,EAAAxgB,KAAAhF,KAAA6rF,WAAA7uF,EAAA6mG,IAIA,OAAAr+E,GAMAs+E,UAAA,WAEA,IAAAC,EAAA/jG,KAAAgkG,aACA,OAAAD,IAAAzhG,OAAA,IAMA0hG,WAAA,SAAAH,GAIA,YAFAA,MAAA7jG,KAAAq/F,oBAEAr/F,KAAAikG,iBACAjkG,KAAAikG,gBAAA3hG,SAAAuhG,EAAA,IACA7jG,KAAA+9C,YAEA,OAAA/9C,KAAAikG,gBAIAjkG,KAAA+9C,eAEA,IACAmmD,EACAhmG,EAFAwyC,KACAo/C,EAAA9vF,KAAAyjG,SAAA,GACA1T,EAAA,EAIA,IAFAr/C,EAAA1rC,KAAA,GAEA9G,EAAA,EAAcA,GAAA2lG,EAAgB3lG,IAG9B6xF,IADAmU,EAAAlkG,KAAAyjG,SAAAvlG,EAAA2lG,IACAxwF,WAAAy8E,GACAp/C,EAAA1rC,KAAA+qF,GACAD,EAAAoU,EAMA,OAFAlkG,KAAAikG,gBAAAvzD,EAEAA,GAIAyzD,iBAAA,WAEAnkG,KAAA+9C,eACA/9C,KAAAgkG,cAMAL,eAAA,SAAAxqE,EAAAiP,GAEA,IAIAg8D,EAJAC,EAAArkG,KAAAgkG,aAEAtnG,EAAA,EAAAivB,EAAA04E,EAAA/hG,OAMA8hG,EAFAh8D,GAMAjP,EAAAkrE,EAAA14E,EAAA,GAQA,IAFA,IAAA24E,EAAAt1F,EAAA,EAAAC,EAAA0c,EAAA,EAEA3c,GAAAC,GAMA,IAFAq1F,EAAAD,EAFA3nG,EAAA4C,KAAA4E,MAAA8K,GAAAC,EAAAD,GAAA,IAEAo1F,GAEA,EAEAp1F,EAAAtS,EAAA,MAEI,MAAA4nG,EAAA,GAIA,CAEJr1F,EAAAvS,EACA,MALAuS,EAAAvS,EAAA,EAeA,GAAA2nG,EAFA3nG,EAAAuS,KAEAm1F,EAEA,OAAA1nG,GAAAivB,EAAA,GAMA,IAAA44E,EAAAF,EAAA3nG,GAaA,OAFAA,GAJA0nG,EAAAG,IANAF,EAAA3nG,EAAA,GAEA6nG,KAQA54E,EAAA,IAWA64E,WAAA,SAAApmG,GAEA,IACA4mD,EAAA5mD,EADA,KAEAsiG,EAAAtiG,EAFA,KAMA4mD,EAAA,IAAAA,EAAA,GACA07C,EAAA,IAAAA,EAAA,GAEA,IAAA+D,EAAAzkG,KAAAyjG,SAAAz+C,GAIA,OAHAhlD,KAAAyjG,SAAA/C,GAEArvF,QAAAS,IAAA2yF,GACAvxF,aAIAwxF,aAAA,SAAAvrE,GAEA,IAAA/6B,EAAA4B,KAAA2jG,eAAAxqE,GACA,OAAAn5B,KAAAwkG,WAAApmG,IAIAstF,oBAAA,SAAAuP,EAAA9P,GAIA,IASAzuF,EAAAy8B,EAAA9c,EATA4H,EAAA,IAAAzT,GAEA+6E,KACAl3C,KACAm3C,KAEA6C,EAAA,IAAA79E,GACAm0F,EAAA,IAAA30F,GAMA,IAAAtT,EAAA,EAAcA,GAAAu+F,EAAev+F,IAE7By8B,EAAAz8B,EAAAu+F,EAEA1P,EAAA7uF,GAAAsD,KAAA0kG,aAAAvrE,GACAoyD,EAAA7uF,GAAAwW,YAOAmhC,EAAA,OAAA7jC,GACAg7E,EAAA,OAAAh7E,GACA,IAAA/K,EAAA5B,OAAA+gG,UACAloF,EAAApd,KAAA2T,IAAAs4E,EAAA,GAAAnnF,GACAuY,EAAArd,KAAA2T,IAAAs4E,EAAA,GAAA1lF,GACAg/F,EAAAvlG,KAAA2T,IAAAs4E,EAAA,GAAAzlF,GA8BA,IA5BA4W,GAAAjX,IAEAA,EAAAiX,EACAuH,EAAArT,IAAA,QAIA+L,GAAAlX,IAEAA,EAAAkX,EACAsH,EAAArT,IAAA,QAIAi0F,GAAAp/F,GAEAwe,EAAArT,IAAA,OAIAy9E,EAAA51E,aAAA8yE,EAAA,GAAAtnE,GAAA/Q,YAEAmhC,EAAA,GAAA57B,aAAA8yE,EAAA,GAAA8C,GACA7C,EAAA,GAAA/yE,aAAA8yE,EAAA,GAAAl3C,EAAA,IAKA33C,EAAA,EAAcA,GAAAu+F,EAAev+F,IAE7B23C,EAAA33C,GAAA23C,EAAA33C,EAAA,GAAA2U,QAEAm6E,EAAA9uF,GAAA8uF,EAAA9uF,EAAA,GAAA2U,QAEAg9E,EAAA51E,aAAA8yE,EAAA7uF,EAAA,GAAA6uF,EAAA7uF,IAEA2xF,EAAA/rF,SAAAuB,OAAAC,UAEAuqF,EAAAn7E,YAEAmJ,EAAA/c,KAAA6kB,KAAAzW,GAAAW,MAAAk9E,EAAA7uF,EAAA,GAAAmW,IAAA04E,EAAA7uF,KAAA,MAEA23C,EAAA33C,GAAAqe,aAAA4pF,EAAAnoF,iBAAA6xE,EAAAhyE,KAIAmvE,EAAA9uF,GAAA+b,aAAA8yE,EAAA7uF,GAAA23C,EAAA33C,IAMA,QAAAyuF,EAWA,IATA9uE,EAAA/c,KAAA6kB,KAAAzW,GAAAW,MAAAgmC,EAAA,GAAAxhC,IAAAwhC,EAAA4mD,KAAA,MACA5+E,GAAA4+E,EAEA1P,EAAA,GAAA14E,IAAAw7E,EAAA51E,aAAA47B,EAAA,GAAAA,EAAA4mD,KAAA,IAEA5+E,MAIA3f,EAAA,EAAeA,GAAAu+F,EAAev+F,IAG9B23C,EAAA33C,GAAAqe,aAAA4pF,EAAAnoF,iBAAA+uE,EAAA7uF,GAAA2f,EAAA3f,IACA8uF,EAAA9uF,GAAA+b,aAAA8yE,EAAA7uF,GAAA23C,EAAA33C,IAMA,OACA6uF,WACAl3C,UACAm3C,cAKAn6E,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAxP,GAIA,OAFA/B,KAAAq/F,mBAAAt9F,EAAAs9F,mBAEAr/F,MAIAipB,OAAA,WAEA,IAAAf,GACAmB,UACApC,QAAA,IACAtiB,KAAA,QACA2kB,UAAA,iBAOA,OAHApB,EAAAm3E,mBAAAr/F,KAAAq/F,mBACAn3E,EAAAvjB,KAAA3E,KAAA2E,KAEAujB,GAIA48E,SAAA,SAAAC,GAIA,OAFA/kG,KAAAq/F,mBAAA0F,EAAA1F,mBAEAr/F,QA2BAs/F,GAAAthG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACAshG,GAAAthG,UAAAsT,YAAAguF,GAEAA,GAAAthG,UAAAgnG,kBAEA1F,GAAAthG,UAAAylG,SAAA,SAAArlG,EAAAslG,GASA,IAPA,IAAAr3E,EAAAq3E,GAAA,IAAA3zF,GAEAk1F,EAAA,EAAA3lG,KAAAsO,GACAs3F,EAAAllG,KAAA4/F,UAAA5/F,KAAA2/F,YACAwF,EAAA7lG,KAAA2T,IAAAiyF,GAAArhG,OAAAC,QAGAohG,EAAA,GAAAA,GAAAD,EACA,KAAAC,EAAAD,GAAAC,GAAAD,EAEAC,EAAArhG,OAAAC,UAIAohG,EAFAC,EAEA,EAIAF,QAMAjlG,KAAA6/F,YAAAsF,IAEAD,IAAAD,EAEAC,GAAAD,EAIAC,GAAAD,GAMA,IAAA9xF,EAAAnT,KAAA2/F,YAAAvhG,EAAA8mG,EACA9gG,EAAApE,KAAAu/F,GAAAv/F,KAAAy/F,QAAAngG,KAAAiV,IAAApB,GACAtN,EAAA7F,KAAAw/F,GAAAx/F,KAAA0/F,QAAApgG,KAAAkV,IAAArB,GAEA,OAAAnT,KAAA8/F,UAAA,CAEA,IAAAvrF,EAAAjV,KAAAiV,IAAAvU,KAAA8/F,WACAtrF,EAAAlV,KAAAkV,IAAAxU,KAAA8/F,WAEApjF,EAAAtY,EAAApE,KAAAu/F,GACA5iF,EAAA9W,EAAA7F,KAAAw/F,GAGAp7F,EAAAsY,EAAAnI,EAAAoI,EAAAnI,EAAAxU,KAAAu/F,GACA15F,EAAA6W,EAAAlI,EAAAmI,EAAApI,EAAAvU,KAAAw/F,GAIA,OAAAnzE,EAAAzb,IAAAxM,EAAAyB,IAIAy5F,GAAAthG,UAAAuT,KAAA,SAAAxP,GAiBA,OAfAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAu/F,GAAAx9F,EAAAw9F,GACAv/F,KAAAw/F,GAAAz9F,EAAAy9F,GAEAx/F,KAAAy/F,QAAA19F,EAAA09F,QACAz/F,KAAA0/F,QAAA39F,EAAA29F,QAEA1/F,KAAA2/F,YAAA59F,EAAA49F,YACA3/F,KAAA4/F,UAAA79F,EAAA69F,UAEA5/F,KAAA6/F,WAAA99F,EAAA89F,WAEA7/F,KAAA8/F,UAAA/9F,EAAA+9F,UAEA9/F,MAKAs/F,GAAAthG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAeA,OAbAkoB,EAAAq3E,GAAAv/F,KAAAu/F,GACAr3E,EAAAs3E,GAAAx/F,KAAAw/F,GAEAt3E,EAAAu3E,QAAAz/F,KAAAy/F,QACAv3E,EAAAw3E,QAAA1/F,KAAA0/F,QAEAx3E,EAAAy3E,YAAA3/F,KAAA2/F,YACAz3E,EAAA03E,UAAA5/F,KAAA4/F,UAEA13E,EAAA23E,WAAA7/F,KAAA6/F,WAEA33E,EAAA43E,UAAA9/F,KAAA8/F,UAEA53E,GAIAo3E,GAAAthG,UAAA8mG,SAAA,SAAAC,GAiBA,OAfA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAu/F,GAAAwF,EAAAxF,GACAv/F,KAAAw/F,GAAAuF,EAAAvF,GAEAx/F,KAAAy/F,QAAAsF,EAAAtF,QACAz/F,KAAA0/F,QAAAqF,EAAArF,QAEA1/F,KAAA2/F,YAAAoF,EAAApF,YACA3/F,KAAA4/F,UAAAmF,EAAAnF,UAEA5/F,KAAA6/F,WAAAkF,EAAAlF,WAEA7/F,KAAA8/F,UAAAiF,EAAAjF,UAEA9/F,MAYA+/F,GAAA/hG,UAAAZ,OAAA0rB,OAAAw2E,GAAAthG,WACA+hG,GAAA/hG,UAAAsT,YAAAyuF,GAEAA,GAAA/hG,UAAAonG,cAiFA,IAAAjqF,GAAA,IAAA3K,GACAmiF,GAAA,IAAAsN,GACArN,GAAA,IAAAqN,GACAoF,GAAA,IAAApF,GAEA,SAAAqF,GAAA9/E,EAAA2lE,EAAAoa,EAAAlF,GAEAjB,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,mBAEA3E,KAAAwlB,aACAxlB,KAAAmrF,aACAnrF,KAAAulG,aAAA,cACAvlG,KAAAqgG,WAAA,GAsKA,SAAAmF,GAAApnG,EAAAqqB,EAAA9C,EAAAC,EAAA8C,GAEA,IAAAgF,EAAA,IAAA9H,EAAA6C,GACAjmB,EAAA,IAAAkmB,EAAA/C,GACA+6E,EAAAtiG,IAEA,SAAAunB,EAAA,EAAAC,EAAA8H,EAAAlrB,IADApE,EAAAsiG,KACA,EAAA/6E,EAAA,EAAAC,EAAA,EAAA8H,EAAAlrB,GAAAk+F,EAAAhzE,EAAAtvB,EAAAunB,EAyBA,SAAA8/E,GAAArnG,EAAAqqB,EAAA9C,EAAAC,GAEA,OArBA,SAAAxnB,EAAAF,GAEA,IAAAo7C,EAAA,EAAAl7C,EACA,OAAAk7C,IAAAp7C,EAHA,CAqBAE,EAAAqqB,GAdA,SAAArqB,EAAAF,GAEA,YAAAE,KAYAunB,EAdA,CAcAvnB,GARA,SAAAA,EAAAF,GAEA,OAAAE,IAOAwnB,EATA,CASAxnB,GAgCA,SAAAsnG,GAAAtnG,EAAAqqB,EAAA9C,EAAAC,EAAA8C,GAEA,OA5BA,SAAAtqB,EAAAF,GAEA,IAAAo7C,EAAA,EAAAl7C,EACA,OAAAk7C,MAAAp7C,EAHA,CA4BAE,EAAAqqB,GArBA,SAAArqB,EAAAF,GAEA,IAAAo7C,EAAA,EAAAl7C,EACA,SAAAk7C,IAAAl7C,EAAAF,EAHA,CAqBAE,EAAAunB,GAdA,SAAAvnB,EAAAF,GAEA,YAAAE,OAYAwnB,EAdA,CAcAxnB,GARA,SAAAA,EAAAF,GAEA,OAAAE,MAOAsqB,EATA,CASAtqB,GAIA,SAAAunG,GAAAj4E,EAAAlrB,EAAAqR,EAAA+xF,GAEAxG,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,mBAEA3E,KAAA0tB,MAAA,IAAA3d,GACA/P,KAAAwC,MAAA,IAAAuN,GACA/P,KAAA6T,MAAA,IAAA9D,GACA/P,KAAA4lG,MAAA,IAAA71F,GA+DA,SAAA81F,GAAAn4E,EAAAlrB,EAAAqR,EAAA+xF,GAEAxG,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,oBAEA3E,KAAA0tB,MAAA,IAAAld,GACAxQ,KAAAwC,MAAA,IAAAgO,GACAxQ,KAAA6T,MAAA,IAAArD,GACAxQ,KAAA4lG,MAAA,IAAAp1F,GAgEA,SAAAs1F,GAAAtjG,EAAAqR,GAEAurF,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,YAEA3E,KAAAwC,MAAA,IAAAuN,GACA/P,KAAA6T,MAAA,IAAA9D,GA6EA,SAAAg2F,GAAAvjG,EAAAqR,GAEAurF,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,aAEA3E,KAAAwC,MAAA,IAAAgO,GACAxQ,KAAA6T,MAAA,IAAArD,GAqEA,SAAAw1F,GAAAt4E,EAAAlrB,EAAAqR,GAEAurF,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,uBAEA3E,KAAA0tB,MAAA,IAAA3d,GACA/P,KAAAwC,MAAA,IAAAuN,GACA/P,KAAA6T,MAAA,IAAA9D,GA4DA,SAAAk2F,GAAAv4E,EAAAlrB,EAAAqR,GAEAurF,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,wBAEA3E,KAAA0tB,MAAA,IAAAld,GACAxQ,KAAAwC,MAAA,IAAAgO,GACAxQ,KAAA6T,MAAA,IAAArD,GA6DA,SAAA01F,GAAA1gF,GAEA45E,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,cAEA3E,KAAAwlB,aA3qBA8/E,GAAAtnG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACAsnG,GAAAtnG,UAAAsT,YAAAg0F,GAEAA,GAAAtnG,UAAAmoG,sBAEAb,GAAAtnG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAoBAj7E,EAAA9C,EAAAC,EAAA8C,EApBA2D,EAAAq3E,GAAA,IAAAlzF,GAEAgV,EAAAxlB,KAAAwlB,OACA7oB,EAAA6oB,EAAAljB,OAEApE,GAAAvB,GAAAqD,KAAAmrF,OAAA,MAAA/sF,EACAgoG,EAAA9mG,KAAA4E,MAAAhG,GACAmoG,EAAAnoG,EAAAkoG,EA0CA,GAxCApmG,KAAAmrF,OAEAib,KAAA,KAAA9mG,KAAA4E,MAAA5E,KAAA2T,IAAAmzF,GAAAzpG,GAAA,GAAAA,EAEE,IAAA0pG,GAAAD,IAAAzpG,EAAA,IAEFypG,EAAAzpG,EAAA,EACA0pG,EAAA,GAMArmG,KAAAmrF,QAAAib,EAAA,EAEA39E,EAAAjD,GAAA4gF,EAAA,GAAAzpG,IAKAwe,GAAApJ,WAAAyT,EAAA,GAAAA,EAAA,IAAA/T,IAAA+T,EAAA,IACAiD,EAAAtN,IAIAwK,EAAAH,EAAA4gF,EAAAzpG,GACAipB,EAAAJ,GAAA4gF,EAAA,GAAAzpG,GAEAqD,KAAAmrF,QAAAib,EAAA,EAAAzpG,EAEA+rB,EAAAlD,GAAA4gF,EAAA,GAAAzpG,IAKAwe,GAAApJ,WAAAyT,EAAA7oB,EAAA,GAAA6oB,EAAA7oB,EAAA,IAAA8U,IAAA+T,EAAA7oB,EAAA,IACA+rB,EAAAvN,IAIA,gBAAAnb,KAAAulG,WAAA,YAAAvlG,KAAAulG,UAAA,CAGA,IAAAxhG,EAAA,YAAA/D,KAAAulG,UAAA,OACAhF,EAAAjhG,KAAAyE,IAAA0kB,EAAAnV,kBAAAqS,GAAA5hB,GACAy8F,EAAAlhG,KAAAyE,IAAA4hB,EAAArS,kBAAAsS,GAAA7hB,GACA08F,EAAAnhG,KAAAyE,IAAA6hB,EAAAtS,kBAAAoV,GAAA3kB,GAGAy8F,EAAA,OAAAA,EAAA,GACAD,EAAA,OAAAA,EAAAC,GACAC,EAAA,OAAAA,EAAAD,GAEA7N,GAAA2N,yBAAA73E,EAAArkB,EAAAuhB,EAAAvhB,EAAAwhB,EAAAxhB,EAAAskB,EAAAtkB,EAAAm8F,EAAAC,EAAAC,GACA7N,GAAA0N,yBAAA73E,EAAA5iB,EAAA8f,EAAA9f,EAAA+f,EAAA/f,EAAA6iB,EAAA7iB,EAAA06F,EAAAC,EAAAC,GACA4E,GAAA/E,yBAAA73E,EAAA3iB,EAAA6f,EAAA7f,EAAA8f,EAAA9f,EAAA4iB,EAAA5iB,EAAAy6F,EAAAC,EAAAC,OAEE,eAAAzgG,KAAAulG,YAEF5S,GAAAwN,eAAA13E,EAAArkB,EAAAuhB,EAAAvhB,EAAAwhB,EAAAxhB,EAAAskB,EAAAtkB,EAAApE,KAAAqgG,SACAzN,GAAAuN,eAAA13E,EAAA5iB,EAAA8f,EAAA9f,EAAA+f,EAAA/f,EAAA6iB,EAAA7iB,EAAA7F,KAAAqgG,SACAgF,GAAAlF,eAAA13E,EAAA3iB,EAAA6f,EAAA7f,EAAA8f,EAAA9f,EAAA4iB,EAAA5iB,EAAA9F,KAAAqgG,UAUA,OANAh0E,EAAAzb,IACA+hF,GAAAgO,KAAA0F,GACAzT,GAAA+N,KAAA0F,GACAhB,GAAA1E,KAAA0F,IAGAh6E,GAIAi5E,GAAAtnG,UAAAuT,KAAA,SAAAxP,GAEAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAwlB,UAEA,QAAA9oB,EAAA,EAAAC,EAAAoF,EAAAyjB,OAAAljB,OAA2C5F,EAAAC,EAAOD,IAAA,CAElD,IAAA2vB,EAAAtqB,EAAAyjB,OAAA9oB,GAEAsD,KAAAwlB,OAAAxgB,KAAAqnB,EAAAhb,SAQA,OAJArR,KAAAmrF,OAAAppF,EAAAopF,OACAnrF,KAAAulG,UAAAxjG,EAAAwjG,UACAvlG,KAAAqgG,QAAAt+F,EAAAs+F,QAEArgG,MAIAslG,GAAAtnG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAEAkoB,EAAA1C,UAEA,QAAA9oB,EAAA,EAAAC,EAAAqD,KAAAwlB,OAAAljB,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAA2vB,EAAArsB,KAAAwlB,OAAA9oB,GACAwrB,EAAA1C,OAAAxgB,KAAAqnB,EAAArY,WAQA,OAJAkU,EAAAijE,OAAAnrF,KAAAmrF,OACAjjE,EAAAq9E,UAAAvlG,KAAAulG,UACAr9E,EAAAm4E,QAAArgG,KAAAqgG,QAEAn4E,GAIAo9E,GAAAtnG,UAAA8mG,SAAA,SAAAC,GAEA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAwlB,UAEA,QAAA9oB,EAAA,EAAAC,EAAAooG,EAAAv/E,OAAAljB,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAA2vB,EAAA04E,EAAAv/E,OAAA9oB,GACAsD,KAAAwlB,OAAAxgB,UAAAwL,IAAAuD,UAAAsY,IAQA,OAJArsB,KAAAmrF,OAAA4Z,EAAA5Z,OACAnrF,KAAAulG,UAAAR,EAAAQ,UACAvlG,KAAAqgG,QAAA0E,EAAA1E,QAEArgG,MAiGA2lG,GAAA3nG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACA2nG,GAAA3nG,UAAAsT,YAAAq0F,GAEAA,GAAA3nG,UAAAsoG,sBAEAX,GAAA3nG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAA3zF,GAEA2d,EAAA1tB,KAAA0tB,GAAAlrB,EAAAxC,KAAAwC,GAAAqR,EAAA7T,KAAA6T,GAAA+xF,EAAA5lG,KAAA4lG,GAOA,OALAv5E,EAAAzb,IACA80F,GAAAtnG,EAAAsvB,EAAAtpB,EAAA5B,EAAA4B,EAAAyP,EAAAzP,EAAAwhG,EAAAxhG,GACAshG,GAAAtnG,EAAAsvB,EAAA7nB,EAAArD,EAAAqD,EAAAgO,EAAAhO,EAAA+/F,EAAA//F,IAGAwmB,GAIAs5E,GAAA3nG,UAAAuT,KAAA,SAAAxP,GASA,OAPAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0tB,GAAAnc,KAAAxP,EAAA2rB,IACA1tB,KAAAwC,GAAA+O,KAAAxP,EAAAS,IACAxC,KAAA6T,GAAAtC,KAAAxP,EAAA8R,IACA7T,KAAA4lG,GAAAr0F,KAAAxP,EAAA6jG,IAEA5lG,MAIA2lG,GAAA3nG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAOA,OALAkoB,EAAAwF,GAAA1tB,KAAA0tB,GAAA1Z,UACAkU,EAAA1lB,GAAAxC,KAAAwC,GAAAwR,UACAkU,EAAArU,GAAA7T,KAAA6T,GAAAG,UACAkU,EAAA09E,GAAA5lG,KAAA4lG,GAAA5xF,UAEAkU,GAIAy9E,GAAA3nG,UAAA8mG,SAAA,SAAAC,GASA,OAPA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAA0tB,GAAA3Z,UAAAgxF,EAAAr3E,IACA1tB,KAAAwC,GAAAuR,UAAAgxF,EAAAviG,IACAxC,KAAA6T,GAAAE,UAAAgxF,EAAAlxF,IACA7T,KAAA4lG,GAAA7xF,UAAAgxF,EAAAa,IAEA5lG,MAiBA6lG,GAAA7nG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACA6nG,GAAA7nG,UAAAsT,YAAAu0F,GAEAA,GAAA7nG,UAAAuoG,uBAEAV,GAAA7nG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAAlzF,GAEAkd,EAAA1tB,KAAA0tB,GAAAlrB,EAAAxC,KAAAwC,GAAAqR,EAAA7T,KAAA6T,GAAA+xF,EAAA5lG,KAAA4lG,GAQA,OANAv5E,EAAAzb,IACA80F,GAAAtnG,EAAAsvB,EAAAtpB,EAAA5B,EAAA4B,EAAAyP,EAAAzP,EAAAwhG,EAAAxhG,GACAshG,GAAAtnG,EAAAsvB,EAAA7nB,EAAArD,EAAAqD,EAAAgO,EAAAhO,EAAA+/F,EAAA//F,GACA6/F,GAAAtnG,EAAAsvB,EAAA5nB,EAAAtD,EAAAsD,EAAA+N,EAAA/N,EAAA8/F,EAAA9/F,IAGAumB,GAIAw5E,GAAA7nG,UAAAuT,KAAA,SAAAxP,GASA,OAPAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0tB,GAAAnc,KAAAxP,EAAA2rB,IACA1tB,KAAAwC,GAAA+O,KAAAxP,EAAAS,IACAxC,KAAA6T,GAAAtC,KAAAxP,EAAA8R,IACA7T,KAAA4lG,GAAAr0F,KAAAxP,EAAA6jG,IAEA5lG,MAIA6lG,GAAA7nG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAOA,OALAkoB,EAAAwF,GAAA1tB,KAAA0tB,GAAA1Z,UACAkU,EAAA1lB,GAAAxC,KAAAwC,GAAAwR,UACAkU,EAAArU,GAAA7T,KAAA6T,GAAAG,UACAkU,EAAA09E,GAAA5lG,KAAA4lG,GAAA5xF,UAEAkU,GAIA29E,GAAA7nG,UAAA8mG,SAAA,SAAAC,GASA,OAPA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAA0tB,GAAA3Z,UAAAgxF,EAAAr3E,IACA1tB,KAAAwC,GAAAuR,UAAAgxF,EAAAviG,IACAxC,KAAA6T,GAAAE,UAAAgxF,EAAAlxF,IACA7T,KAAA4lG,GAAA7xF,UAAAgxF,EAAAa,IAEA5lG,MAeA8lG,GAAA9nG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACA8nG,GAAA9nG,UAAAsT,YAAAw0F,GAEAA,GAAA9nG,UAAAwoG,eAEAV,GAAA9nG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAA3zF,GAaA,OAXA,IAAA3R,EAEAiuB,EAAA9a,KAAAvR,KAAA6T,KAIAwY,EAAA9a,KAAAvR,KAAA6T,IAAA/B,IAAA9R,KAAAwC,IACA6pB,EAAAna,eAAA9T,GAAAqT,IAAAzR,KAAAwC,KAIA6pB,GAMAy5E,GAAA9nG,UAAA6tF,WAAA,SAAA1yD,EAAAuqE,GAEA,OAAA1jG,KAAAyjG,SAAAtqE,EAAAuqE,IAIAoC,GAAA9nG,UAAAwmG,WAAA,WAIA,OAFAxkG,KAAA6T,GAAAxC,QAAAS,IAAA9R,KAAAwC,IAEA0Q,aAIA4yF,GAAA9nG,UAAAuT,KAAA,SAAAxP,GAOA,OALAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAwC,GAAA+O,KAAAxP,EAAAS,IACAxC,KAAA6T,GAAAtC,KAAAxP,EAAA8R,IAEA7T,MAIA8lG,GAAA9nG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAKA,OAHAkoB,EAAA1lB,GAAAxC,KAAAwC,GAAAwR,UACAkU,EAAArU,GAAA7T,KAAA6T,GAAAG,UAEAkU,GAIA49E,GAAA9nG,UAAA8mG,SAAA,SAAAC,GAOA,OALA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAwC,GAAAuR,UAAAgxF,EAAAviG,IACAxC,KAAA6T,GAAAE,UAAAgxF,EAAAlxF,IAEA7T,MAeA+lG,GAAA/nG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACA+nG,GAAA/nG,UAAAsT,YAAAy0F,GAEAA,GAAA/nG,UAAAyoG,gBAEAV,GAAA/nG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAAlzF,GAaA,OAXA,IAAApS,EAEAiuB,EAAA9a,KAAAvR,KAAA6T,KAIAwY,EAAA9a,KAAAvR,KAAA6T,IAAA/B,IAAA9R,KAAAwC,IACA6pB,EAAAna,eAAA9T,GAAAqT,IAAAzR,KAAAwC,KAIA6pB,GAMA05E,GAAA/nG,UAAA6tF,WAAA,SAAA1yD,EAAAuqE,GAEA,OAAA1jG,KAAAyjG,SAAAtqE,EAAAuqE,IAIAqC,GAAA/nG,UAAAuT,KAAA,SAAAxP,GAOA,OALAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAwC,GAAA+O,KAAAxP,EAAAS,IACAxC,KAAA6T,GAAAtC,KAAAxP,EAAA8R,IAEA7T,MAIA+lG,GAAA/nG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAKA,OAHAkoB,EAAA1lB,GAAAxC,KAAAwC,GAAAwR,UACAkU,EAAArU,GAAA7T,KAAA6T,GAAAG,UAEAkU,GAIA69E,GAAA/nG,UAAA8mG,SAAA,SAAAC,GAOA,OALA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAwC,GAAAuR,UAAAgxF,EAAAviG,IACAxC,KAAA6T,GAAAE,UAAAgxF,EAAAlxF,IAEA7T,MAgBAgmG,GAAAhoG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACAgoG,GAAAhoG,UAAAsT,YAAA00F,GAEAA,GAAAhoG,UAAA0oG,0BAEAV,GAAAhoG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAA3zF,GAEA2d,EAAA1tB,KAAA0tB,GAAAlrB,EAAAxC,KAAAwC,GAAAqR,EAAA7T,KAAA6T,GAOA,OALAwY,EAAAzb,IACA60F,GAAArnG,EAAAsvB,EAAAtpB,EAAA5B,EAAA4B,EAAAyP,EAAAzP,GACAqhG,GAAArnG,EAAAsvB,EAAA7nB,EAAArD,EAAAqD,EAAAgO,EAAAhO,IAGAwmB,GAIA25E,GAAAhoG,UAAAuT,KAAA,SAAAxP,GAQA,OANAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0tB,GAAAnc,KAAAxP,EAAA2rB,IACA1tB,KAAAwC,GAAA+O,KAAAxP,EAAAS,IACAxC,KAAA6T,GAAAtC,KAAAxP,EAAA8R,IAEA7T,MAIAgmG,GAAAhoG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAMA,OAJAkoB,EAAAwF,GAAA1tB,KAAA0tB,GAAA1Z,UACAkU,EAAA1lB,GAAAxC,KAAAwC,GAAAwR,UACAkU,EAAArU,GAAA7T,KAAA6T,GAAAG,UAEAkU,GAIA89E,GAAAhoG,UAAA8mG,SAAA,SAAAC,GAQA,OANA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAA0tB,GAAA3Z,UAAAgxF,EAAAr3E,IACA1tB,KAAAwC,GAAAuR,UAAAgxF,EAAAviG,IACAxC,KAAA6T,GAAAE,UAAAgxF,EAAAlxF,IAEA7T,MAgBAimG,GAAAjoG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACAioG,GAAAjoG,UAAAsT,YAAA20F,GAEAA,GAAAjoG,UAAA2oG,2BAEAV,GAAAjoG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAAlzF,GAEAkd,EAAA1tB,KAAA0tB,GAAAlrB,EAAAxC,KAAAwC,GAAAqR,EAAA7T,KAAA6T,GAQA,OANAwY,EAAAzb,IACA60F,GAAArnG,EAAAsvB,EAAAtpB,EAAA5B,EAAA4B,EAAAyP,EAAAzP,GACAqhG,GAAArnG,EAAAsvB,EAAA7nB,EAAArD,EAAAqD,EAAAgO,EAAAhO,GACA4/F,GAAArnG,EAAAsvB,EAAA5nB,EAAAtD,EAAAsD,EAAA+N,EAAA/N,IAGAumB,GAIA45E,GAAAjoG,UAAAuT,KAAA,SAAAxP,GAQA,OANAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0tB,GAAAnc,KAAAxP,EAAA2rB,IACA1tB,KAAAwC,GAAA+O,KAAAxP,EAAAS,IACAxC,KAAA6T,GAAAtC,KAAAxP,EAAA8R,IAEA7T,MAIAimG,GAAAjoG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAMA,OAJAkoB,EAAAwF,GAAA1tB,KAAA0tB,GAAA1Z,UACAkU,EAAA1lB,GAAAxC,KAAAwC,GAAAwR,UACAkU,EAAArU,GAAA7T,KAAA6T,GAAAG,UAEAkU,GAIA+9E,GAAAjoG,UAAA8mG,SAAA,SAAAC,GAQA,OANA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAA0tB,GAAA3Z,UAAAgxF,EAAAr3E,IACA1tB,KAAAwC,GAAAuR,UAAAgxF,EAAAviG,IACAxC,KAAA6T,GAAAE,UAAAgxF,EAAAlxF,IAEA7T,MAcAkmG,GAAAloG,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACAkoG,GAAAloG,UAAAsT,YAAA40F,GAEAA,GAAAloG,UAAA4oG,iBAEAV,GAAAloG,UAAAylG,SAAA,SAAArlG,EAAAslG,GAEA,IAAAr3E,EAAAq3E,GAAA,IAAA3zF,GAEAyV,EAAAxlB,KAAAwlB,OACAtnB,GAAAsnB,EAAAljB,OAAA,GAAAlE,EAEAgoG,EAAA9mG,KAAA4E,MAAAhG,GACAmoG,EAAAnoG,EAAAkoG,EAEA39E,EAAAjD,EAAA,IAAA4gF,MAAA,GACAzgF,EAAAH,EAAA4gF,GACAxgF,EAAAJ,EAAA4gF,EAAA5gF,EAAAljB,OAAA,EAAAkjB,EAAAljB,OAAA,EAAA8jG,EAAA,GACA19E,EAAAlD,EAAA4gF,EAAA5gF,EAAAljB,OAAA,EAAAkjB,EAAAljB,OAAA,EAAA8jG,EAAA,GAOA,OALA/5E,EAAAzb,IACA40F,GAAAa,EAAA59E,EAAArkB,EAAAuhB,EAAAvhB,EAAAwhB,EAAAxhB,EAAAskB,EAAAtkB,GACAohG,GAAAa,EAAA59E,EAAA5iB,EAAA8f,EAAA9f,EAAA+f,EAAA/f,EAAA6iB,EAAA7iB,IAGAwmB,GAIA65E,GAAAloG,UAAAuT,KAAA,SAAAxP,GAEAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAwlB,UAEA,QAAA9oB,EAAA,EAAAC,EAAAoF,EAAAyjB,OAAAljB,OAA2C5F,EAAAC,EAAOD,IAAA,CAElD,IAAA2vB,EAAAtqB,EAAAyjB,OAAA9oB,GAEAsD,KAAAwlB,OAAAxgB,KAAAqnB,EAAAhb,SAIA,OAAArR,MAIAkmG,GAAAloG,UAAAirB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAEAkoB,EAAA1C,UAEA,QAAA9oB,EAAA,EAAAC,EAAAqD,KAAAwlB,OAAAljB,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAA2vB,EAAArsB,KAAAwlB,OAAA9oB,GACAwrB,EAAA1C,OAAAxgB,KAAAqnB,EAAArY,WAIA,OAAAkU,GAIAg+E,GAAAloG,UAAA8mG,SAAA,SAAAC,GAEA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAwlB,UAEA,QAAA9oB,EAAA,EAAAC,EAAAooG,EAAAv/E,OAAAljB,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAA2vB,EAAA04E,EAAAv/E,OAAA9oB,GACAsD,KAAAwlB,OAAAxgB,UAAA+K,IAAAgE,UAAAsY,IAIA,OAAArsB,MAMA,IAAA6mG,GAAAzpG,OAAAkgG,QACAyC,YACAuF,oBACAK,oBACAE,qBACAvG,gBACAwG,aACAC,cACAC,wBACAC,yBACAC,iBAaA,SAAAY,KAEA1H,GAAAviG,KAAAmD,MAEAA,KAAA2E,KAAA,YAEA3E,KAAA+mG,UACA/mG,KAAAgnG,aAoPA,SAAAC,GAAAzhF,GAEAshF,GAAAjqG,KAAAmD,MAEAA,KAAA2E,KAAA,OAEA3E,KAAAknG,aAAA,IAAAn3F,GAEAyV,GAEAxlB,KAAAyrB,cAAAjG,GAyKA,SAAA2hF,GAAA3hF,GAEAyhF,GAAApqG,KAAAmD,KAAAwlB,GAEAxlB,KAAA0C,KAAAgL,GAAAI,eAEA9N,KAAA2E,KAAA,QAEA3E,KAAAwzF,SAgGA,SAAA4T,GAAA1jE,EAAAy2B,GAEA9tB,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,QAEA3E,KAAA0jC,MAAA,IAAAZ,GAAAY,GACA1jC,KAAAm6D,uBAAA,EAEAn6D,KAAA8sC,qBA+CA,SAAAu6D,GAAAr+D,EAAAC,EAAAkxB,GAEAitC,GAAAvqG,KAAAmD,KAAAgpC,EAAAmxB,GAEAn6D,KAAA2E,KAAA,kBAEA3E,KAAA6sC,kBAEA7sC,KAAA+c,SAAAxL,KAAA86B,GAAAG,WACAxsC,KAAAgpB,eAEAhpB,KAAAipC,YAAA,IAAAnG,GAAAmG,GA0BA,SAAAq+D,GAAArkF,GAEAjjB,KAAAijB,SAEAjjB,KAAAs6D,KAAA,EACAt6D,KAAAwkB,OAAA,EAEAxkB,KAAAu6D,QAAA,IAAAxqD,GAAA,SAEA/P,KAAAsB,IAAA,KACAtB,KAAA4F,OAAA,IAAAoK,GA8CA,SAAAu3F,KAEAD,GAAAzqG,KAAAmD,KAAA,IAAAkoE,GAAA,cAmCA,SAAAs/B,GAAA9jE,EAAAy2B,EAAA/xB,EAAAj1B,EAAAsnD,EAAAlyB,GAEA6+D,GAAAvqG,KAAAmD,KAAA0jC,EAAAy2B,GAEAn6D,KAAA2E,KAAA,YAEA3E,KAAA+c,SAAAxL,KAAA86B,GAAAG,WACAxsC,KAAAgpB,eAEAhpB,KAAA8B,OAAA,IAAAuqC,GAEAjvC,OAAAC,eAAA2C,KAAA,SACAxC,IAAA,WAIA,OAAAwC,KAAAm6D,UAAA76D,KAAAsO,IAGAgD,IAAA,SAAA62F,GAIAznG,KAAAm6D,UAAAstC,EAAAnoG,KAAAsO,MAKA5N,KAAAooC,sBAAA,EACApoC,KAAAmT,mBAAA7T,KAAAsO,GAAA,EACA5N,KAAAy6D,sBAAA,EACAz6D,KAAAuoC,mBAAA,EAEAvoC,KAAA6nC,OAAA,IAAA0/D,GAkCA,SAAAG,GAAAhkE,EAAAy2B,EAAA/xB,EAAAG,GAEA6+D,GAAAvqG,KAAAmD,KAAA0jC,EAAAy2B,GAEAn6D,KAAA2E,KAAA,aAEAvH,OAAAC,eAAA2C,KAAA,SACAxC,IAAA,WAIA,SAAAwC,KAAAm6D,UAAA76D,KAAAsO,IAGAgD,IAAA,SAAA62F,GAIAznG,KAAAm6D,UAAAstC,GAAA,EAAAnoG,KAAAsO,OAKA5N,KAAAooC,sBAAA,EACApoC,KAAAuoC,mBAAA,EAEAvoC,KAAA6nC,OAAA,IAAAy/D,GAAA,IAAAp/B,GAAA,cA6BA,SAAAy/B,KAEAL,GAAAzqG,KAAAmD,KAAA,IAAAotC,IAAA,kBAeA,SAAAw6D,GAAAlkE,EAAAy2B,GAEAitC,GAAAvqG,KAAAmD,KAAA0jC,EAAAy2B,GAEAn6D,KAAA2E,KAAA,mBAEA3E,KAAA+c,SAAAxL,KAAA86B,GAAAG,WACAxsC,KAAAgpB,eAEAhpB,KAAA8B,OAAA,IAAAuqC,GAEArsC,KAAA6nC,OAAA,IAAA8/D,GA4BA,SAAAE,GAAAnkE,EAAAy2B,GAEAitC,GAAAvqG,KAAAmD,KAAA0jC,EAAAy2B,GAEAn6D,KAAA2E,KAAA,eAEA3E,KAAA6sC,kBAgBA,SAAAi7D,GAAApkE,EAAAy2B,EAAAxpD,EAAAE,GAEAu2F,GAAAvqG,KAAAmD,KAAA0jC,EAAAy2B,GAEAn6D,KAAA2E,KAAA,gBAEA3E,KAAA2Q,mBAAA,GACA3Q,KAAA6Q,oBAAA,GA4CA,SAAAk3F,GAAA9qG,EAAA+qG,EAAAr3D,EAAAs3D,GAEAC,GAAArrG,KAAAmD,KAAA/C,EAAA+qG,EAAAr3D,EAAAs3D,GA6BA,SAAAE,GAAAlrG,EAAA+qG,EAAAr3D,GAEAu3D,GAAArrG,KAAAmD,KAAA/C,EAAA+qG,EAAAr3D,GA4CA,SAAAy3D,GAAAC,EAAAC,EAAAC,EAAAC,GAEAxoG,KAAAqoG,qBACAroG,KAAAyoG,aAAA,EAEAzoG,KAAAwoG,wBACAA,EAAA,IAAAF,EAAAh3F,YAAAi3F,GACAvoG,KAAAsoG,eACAtoG,KAAA0oG,UAAAH,EAyOA,SAAAI,GAAAN,EAAAC,EAAAC,EAAAC,GAEAJ,GAAAvrG,KAAAmD,KAAAqoG,EAAAC,EAAAC,EAAAC,GAuCA,SAAAI,GAAA3rG,EAAA+qG,EAAAr3D,EAAAs3D,GAEAC,GAAArrG,KAAAmD,KAAA/C,EAAA+qG,EAAAr3D,EAAAs3D,GAkCA,SAAAY,GAAA5rG,EAAA+qG,EAAAr3D,EAAAs3D,GAEAC,GAAArrG,KAAAmD,KAAA/C,EAAA+qG,EAAAr3D,EAAAs3D,GA4BA,SAAAa,GAAA7rG,EAAA+qG,EAAAr3D,EAAAs3D,GAEAC,GAAArrG,KAAAmD,KAAA/C,EAAA+qG,EAAAr3D,EAAAs3D,GA0BA,SAAAc,GAAAV,EAAAC,EAAAC,EAAAC,GAEAJ,GAAAvrG,KAAAmD,KAAAqoG,EAAAC,EAAAC,EAAAC,GAEAxoG,KAAAgpG,aAAA,EACAhpG,KAAAipG,aAAA,EACAjpG,KAAAkpG,aAAA,EACAlpG,KAAAmpG,aAAA,EAyIA,SAAAC,GAAAf,EAAAC,EAAAC,EAAAC,GAEAJ,GAAAvrG,KAAAmD,KAAAqoG,EAAAC,EAAAC,EAAAC,GA0CA,SAAAa,GAAAhB,EAAAC,EAAAC,EAAAC,GAEAJ,GAAAvrG,KAAAmD,KAAAqoG,EAAAC,EAAAC,EAAAC,GAnkDA1B,GAAA9oG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs2E,GAAAphG,YAEAsT,YAAAw1F,GAEAr1F,IAAA,SAAA63F,GAEAtpG,KAAA+mG,OAAA/hG,KAAAskG,IAIAC,UAAA,WAGA,IAAAC,EAAAxpG,KAAA+mG,OAAA,GAAAtD,SAAA,GACAgG,EAAAzpG,KAAA+mG,OAAA/mG,KAAA+mG,OAAAzkG,OAAA,GAAAmhG,SAAA,GAEA+F,EAAA11F,OAAA21F,IAEAzpG,KAAA+mG,OAAA/hG,KAAA,IAAA8gG,GAAA2D,EAAAD,KAeA/F,SAAA,SAAArlG,GAQA,IANA,IAAApB,EAAAoB,EAAA4B,KAAA8jG,YACA4F,EAAA1pG,KAAA2pG,kBACAjtG,EAAA,EAIAA,EAAAgtG,EAAApnG,QAAA,CAEA,GAAAonG,EAAAhtG,IAAAM,EAAA,CAEA,IAAAi7C,EAAAyxD,EAAAhtG,GAAAM,EACAssG,EAAAtpG,KAAA+mG,OAAArqG,GAEAktG,EAAAN,EAAAxF,YACA3qE,EAAA,IAAAywE,EAAA,IAAA3xD,EAAA2xD,EAEA,OAAAN,EAAAzd,WAAA1yD,GAIAz8B,IAIA,aAUAonG,UAAA,WAEA,IAAA+F,EAAA7pG,KAAA2pG,kBACA,OAAAE,IAAAvnG,OAAA,IAKA6hG,iBAAA,WAEAnkG,KAAA+9C,eACA/9C,KAAA8pG,aAAA,KACA9pG,KAAA2pG,mBAOAA,gBAAA,WAIA,GAAA3pG,KAAA8pG,cAAA9pG,KAAA8pG,aAAAxnG,SAAAtC,KAAA+mG,OAAAzkG,OAEA,OAAAtC,KAAA8pG,aASA,IAFA,IAAA/F,KAAAgG,EAAA,EAEArtG,EAAA,EAAAC,EAAAqD,KAAA+mG,OAAAzkG,OAA0C5F,EAAAC,EAAOD,IAEjDqtG,GAAA/pG,KAAA+mG,OAAArqG,GAAAonG,YACAC,EAAA/+F,KAAA+kG,GAMA,OAFA/pG,KAAA8pG,aAAA/F,EAEAA,GAIAvO,gBAAA,SAAAqO,YAEAA,MAAA,IAIA,IAFA,IAAAr+E,KAEA9oB,EAAA,EAAkBA,GAAAmnG,EAAgBnnG,IAElC8oB,EAAAxgB,KAAAhF,KAAAyjG,SAAA/mG,EAAAmnG,IAUA,OANA7jG,KAAAgnG,WAEAxhF,EAAAxgB,KAAAwgB,EAAA,IAIAA,GAIAo+E,UAAA,SAAAC,GAEAA,KAAA,GAIA,IAFA,IAAA/T,EAAAtqE,KAEA9oB,EAAA,EAAAqqG,EAAA/mG,KAAA+mG,OAAwCrqG,EAAAqqG,EAAAzkG,OAAmB5F,IAU3D,IARA,IAAA4sG,EAAAvC,EAAArqG,GACAstG,EAAAV,KAAAtE,eAAA,EAAAnB,EACAyF,KAAA9C,YAAA,EACA8C,KAAA1C,cAAA/C,EAAAyF,EAAA9jF,OAAAljB,OACAuhG,EAEAvQ,EAAAgW,EAAA1F,UAAAoG,GAEA77E,EAAA,EAAmBA,EAAAmlE,EAAAhxF,OAAgB6rB,IAAA,CAEnC,IAAA9B,EAAAinE,EAAAnlE,GAEA2hE,KAAAh8E,OAAAuY,KAEA7G,EAAAxgB,KAAAqnB,GACAyjE,EAAAzjE,GAYA,OANArsB,KAAAgnG,WAAAxhF,EAAAljB,OAAA,IAAAkjB,IAAAljB,OAAA,GAAAwR,OAAA0R,EAAA,KAEAA,EAAAxgB,KAAAwgB,EAAA,IAIAA,GAIAjU,KAAA,SAAAxP,GAEAq9F,GAAAphG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA+mG,UAEA,QAAArqG,EAAA,EAAAC,EAAAoF,EAAAglG,OAAAzkG,OAA4C5F,EAAAC,EAAOD,IAAA,CAEnD,IAAA4sG,EAAAvnG,EAAAglG,OAAArqG,GAEAsD,KAAA+mG,OAAA/hG,KAAAskG,EAAAj4F,SAMA,OAFArR,KAAAgnG,UAAAjlG,EAAAilG,UAEAhnG,MAIAipB,OAAA,WAEA,IAAAf,EAAAk3E,GAAAphG,UAAAirB,OAAApsB,KAAAmD,MAEAkoB,EAAA8+E,UAAAhnG,KAAAgnG,UACA9+E,EAAA6+E,UAEA,QAAArqG,EAAA,EAAAC,EAAAqD,KAAA+mG,OAAAzkG,OAA0C5F,EAAAC,EAAOD,IAAA,CAEjD,IAAA4sG,EAAAtpG,KAAA+mG,OAAArqG,GACAwrB,EAAA6+E,OAAA/hG,KAAAskG,EAAArgF,UAIA,OAAAf,GAIA48E,SAAA,SAAAC,GAEA3F,GAAAphG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAgnG,UAAAjC,EAAAiC,UACAhnG,KAAA+mG,UAEA,QAAArqG,EAAA,EAAAC,EAAAooG,EAAAgC,OAAAzkG,OAA0C5F,EAAAC,EAAOD,IAAA,CAEjD,IAAA4sG,EAAAvE,EAAAgC,OAAArqG,GACAsD,KAAA+mG,OAAA/hG,UAAA6hG,GAAAyC,EAAA3kG,OAAAmgG,SAAAwE,IAIA,OAAAtpG,QA2BAinG,GAAAjpG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAg+E,GAAA9oG,YAEAsT,YAAA21F,GAEAx7E,cAAA,SAAAjG,GAEAxlB,KAAAiqG,OAAAzkF,EAAA,GAAAphB,EAAAohB,EAAA,GAAA3f,GAEA,QAAAnJ,EAAA,EAAAC,EAAA6oB,EAAAljB,OAAqC5F,EAAAC,EAAOD,IAE5CsD,KAAAkqG,OAAA1kF,EAAA9oB,GAAA0H,EAAAohB,EAAA9oB,GAAAmJ,IAMAokG,OAAA,SAAA7lG,EAAAyB,GAEA7F,KAAAknG,aAAAt2F,IAAAxM,EAAAyB,IAIAqkG,OAAA,SAAA9lG,EAAAyB,GAEA,IAAAyjG,EAAA,IAAAxD,GAAA9lG,KAAAknG,aAAA71F,QAAA,IAAAtB,GAAA3L,EAAAyB,IACA7F,KAAA+mG,OAAA/hG,KAAAskG,GAEAtpG,KAAAknG,aAAAt2F,IAAAxM,EAAAyB,IAIAskG,iBAAA,SAAAC,EAAAC,EAAA9K,EAAAC,GAEA,IAAA8J,EAAA,IAAAtD,GACAhmG,KAAAknG,aAAA71F,QACA,IAAAtB,GAAAq6F,EAAAC,GACA,IAAAt6F,GAAAwvF,EAAAC,IAGAx/F,KAAA+mG,OAAA/hG,KAAAskG,GAEAtpG,KAAAknG,aAAAt2F,IAAA2uF,EAAAC,IAIA8K,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAnL,EAAAC,GAEA,IAAA8J,EAAA,IAAA3D,GACA3lG,KAAAknG,aAAA71F,QACA,IAAAtB,GAAAw6F,EAAAC,GACA,IAAAz6F,GAAA06F,EAAAC,GACA,IAAA36F,GAAAwvF,EAAAC,IAGAx/F,KAAA+mG,OAAA/hG,KAAAskG,GAEAtpG,KAAAknG,aAAAt2F,IAAA2uF,EAAAC,IAIAmL,WAAA,SAAArX,GAEA,IAEAgW,EAAA,IAAApD,IAFAlmG,KAAAknG,aAAA71F,SAAAukF,OAAAtC,IAGAtzF,KAAA+mG,OAAA/hG,KAAAskG,GAEAtpG,KAAAknG,aAAA31F,KAAA+hF,IAAAhxF,OAAA,KAIAuqF,IAAA,SAAA0S,EAAAC,EAAAQ,EAAAL,EAAAC,EAAAC,GAEA,IAAAjhF,EAAA5e,KAAAknG,aAAA9iG,EACAya,EAAA7e,KAAAknG,aAAArhG,EAEA7F,KAAA4qG,OAAArL,EAAA3gF,EAAA4gF,EAAA3gF,EAAAmhF,EACAL,EAAAC,EAAAC,IAIA+K,OAAA,SAAArL,EAAAC,EAAAQ,EAAAL,EAAAC,EAAAC,GAEA7/F,KAAA6qG,WAAAtL,EAAAC,EAAAQ,IAAAL,EAAAC,EAAAC,IAIAiL,QAAA,SAAAvL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAlhF,EAAA5e,KAAAknG,aAAA9iG,EACAya,EAAA7e,KAAAknG,aAAArhG,EAEA7F,KAAA6qG,WAAAtL,EAAA3gF,EAAA4gF,EAAA3gF,EAAA4gF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAIA+K,WAAA,SAAAtL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAwJ,EAAA,IAAAhK,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAA9/F,KAAA+mG,OAAAzkG,OAAA,GAGA,IAAAyoG,EAAAzB,EAAA7F,SAAA,GAEAsH,EAAAj3F,OAAA9T,KAAAknG,eAEAlnG,KAAAkqG,OAAAa,EAAA3mG,EAAA2mG,EAAAllG,GAMA7F,KAAA+mG,OAAA/hG,KAAAskG,GAEA,IAAA0B,EAAA1B,EAAA7F,SAAA,GACAzjG,KAAAknG,aAAA31F,KAAAy5F,IAIAz5F,KAAA,SAAAxP,GAMA,OAJA+kG,GAAA9oG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAknG,aAAA31F,KAAAxP,EAAAmlG,cAEAlnG,MAIAipB,OAAA,WAEA,IAAAf,EAAA4+E,GAAA9oG,UAAAirB,OAAApsB,KAAAmD,MAIA,OAFAkoB,EAAAg/E,aAAAlnG,KAAAknG,aAAAlzF,UAEAkU,GAIA48E,SAAA,SAAAC,GAMA,OAJA+B,GAAA9oG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAAknG,aAAAnzF,UAAAgxF,EAAAmC,cAEAlnG,QA6BAmnG,GAAAnpG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAm+E,GAAAjpG,YAEAsT,YAAA61F,GAEA8D,eAAA,SAAApH,GAIA,IAFA,IAAAqH,KAEAxuG,EAAA,EAAAC,EAAAqD,KAAAwzF,MAAAlxF,OAAyC5F,EAAAC,EAAOD,IAEhDwuG,EAAAxuG,GAAAsD,KAAAwzF,MAAA92F,GAAAknG,UAAAC,GAIA,OAAAqH,GAMAxV,cAAA,SAAAmO,GAEA,OAEAvzD,MAAAtwC,KAAA4jG,UAAAC,GACArQ,MAAAxzF,KAAAirG,eAAApH,KAMAtyF,KAAA,SAAAxP,GAEAklG,GAAAjpG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAwzF,SAEA,QAAA92F,EAAA,EAAAC,EAAAoF,EAAAyxF,MAAAlxF,OAA2C5F,EAAAC,EAAOD,IAAA,CAElD,IAAAw1F,EAAAnwF,EAAAyxF,MAAA92F,GAEAsD,KAAAwzF,MAAAxuF,KAAAktF,EAAA7gF,SAIA,OAAArR,MAIAipB,OAAA,WAEA,IAAAf,EAAA++E,GAAAjpG,UAAAirB,OAAApsB,KAAAmD,MAEAkoB,EAAAxlB,KAAA1C,KAAA0C,KACAwlB,EAAAsrE,SAEA,QAAA92F,EAAA,EAAAC,EAAAqD,KAAAwzF,MAAAlxF,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAAw1F,EAAAlyF,KAAAwzF,MAAA92F,GACAwrB,EAAAsrE,MAAAxuF,KAAAktF,EAAAjpE,UAIA,OAAAf,GAIA48E,SAAA,SAAAC,GAEAkC,GAAAjpG,UAAA8mG,SAAAjoG,KAAAmD,KAAA+kG,GAEA/kG,KAAA0C,KAAAqiG,EAAAriG,KACA1C,KAAAwzF,SAEA,QAAA92F,EAAA,EAAAC,EAAAooG,EAAAvR,MAAAlxF,OAAyC5F,EAAAC,EAAOD,IAAA,CAEhD,IAAAw1F,EAAA6S,EAAAvR,MAAA92F,GACAsD,KAAAwzF,MAAAxuF,UAAAiiG,IAAAnC,SAAA5S,IAIA,OAAAlyF,QAwBAonG,GAAAppG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAA81F,GAEA1kB,WAEAnxE,KAAA,SAAAxP,GAOA,OALAsqC,GAAAruC,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA0jC,MAAAnyB,KAAAxP,EAAA2hC,OACA1jC,KAAAm6D,UAAAp4D,EAAAo4D,UAEAn6D,MAIAipB,OAAA,SAAAC,GAEA,IAAAhB,EAAAmkB,GAAAruC,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAcA,OAZAhB,EAAApqB,OAAA4lC,MAAA1jC,KAAA0jC,MAAAU,SACAlc,EAAApqB,OAAAq8D,UAAAn6D,KAAAm6D,mBAEAn6D,KAAAipC,cAAA/gB,EAAApqB,OAAAmrC,YAAAjpC,KAAAipC,YAAA7E,mBAEApkC,KAAAooC,WAAAlgB,EAAApqB,OAAAsqC,SAAApoC,KAAAooC,mBACApoC,KAAAmT,QAAA+U,EAAApqB,OAAAqV,MAAAnT,KAAAmT,gBACAnT,KAAAuoC,QAAArgB,EAAApqB,OAAAyqC,MAAAvoC,KAAAuoC,gBACAvoC,KAAAy6D,WAAAvyC,EAAApqB,OAAA28D,SAAAz6D,KAAAy6D,mBAEAz6D,KAAA6nC,SAAA3f,EAAApqB,OAAA+pC,OAAA7nC,KAAA6nC,OAAA5e,UAEAf,KAyBAm/E,GAAArpG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs+E,GAAAppG,YAEAsT,YAAA+1F,GAEAzsC,qBAEArpD,KAAA,SAAAxP,GAMA,OAJAqlG,GAAAppG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAipC,YAAA13B,KAAAxP,EAAAknC,aAEAjpC,QAwBA5C,OAAA4D,OAAAsmG,GAAAtpG,WAEAuT,KAAA,SAAAxP,GASA,OAPA/B,KAAAijB,OAAAlhB,EAAAkhB,OAAA5R,QAEArR,KAAAs6D,KAAAv4D,EAAAu4D,KACAt6D,KAAAwkB,OAAAziB,EAAAyiB,OAEAxkB,KAAAu6D,QAAAhpD,KAAAxP,EAAAw4D,SAEAv6D,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAipB,OAAA,WAEA,IAAAnrB,KASA,OAPA,IAAAkC,KAAAs6D,OAAAx8D,EAAAw8D,KAAAt6D,KAAAs6D,MACA,IAAAt6D,KAAAwkB,SAAA1mB,EAAA0mB,OAAAxkB,KAAAwkB,QACA,MAAAxkB,KAAAu6D,QAAAn2D,GAAA,MAAApE,KAAAu6D,QAAA10D,IAAA/H,EAAAy8D,QAAAv6D,KAAAu6D,QAAAvmD,WAEAlW,EAAAmlB,OAAAjjB,KAAAijB,OAAAgG,WAAAnrB,cACAA,EAAAmlB,OAAArd,OAEA9H,KAgBAypG,GAAAvpG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAw+E,GAAAtpG,YAEAsT,YAAAi2F,GAEAxoC,qBAEAr/C,OAAA,SAAA25C,GAEA,IAAAp2C,EAAAjjB,KAAAijB,OAEAklD,EAAA,EAAAz6D,GAAAG,QAAAwrD,EAAAlmD,MACAi1D,EAAApoE,KAAAu6D,QAAA5pD,MAAA3Q,KAAAu6D,QAAA1pD,OACAiN,EAAAu7C,EAAAjxB,UAAAnlB,EAAAnF,IAEAqqD,IAAAllD,EAAAklD,KAAAC,IAAAnlD,EAAAmlD,QAAAtqD,IAAAmF,EAAAnF,MAEAmF,EAAAklD,MACAllD,EAAAmlD,SACAnlD,EAAAnF,MACAmF,EAAAsqB,6BAiDAi6D,GAAAxpG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs+E,GAAAppG,YAEAsT,YAAAk2F,GAEAhtC,eAEAjpD,KAAA,SAAAxP,GAaA,OAXAqlG,GAAAppG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAooC,SAAArmC,EAAAqmC,SACApoC,KAAAmT,MAAApR,EAAAoR,MACAnT,KAAAy6D,SAAA14D,EAAA04D,SACAz6D,KAAAuoC,MAAAxmC,EAAAwmC,MAEAvoC,KAAA8B,OAAAC,EAAAD,OAAAuP,QAEArR,KAAA6nC,OAAA9lC,EAAA8lC,OAAAx2B,QAEArR,QAyCA0nG,GAAA1pG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs+E,GAAAppG,YAEAsT,YAAAo2F,GAEA/sC,gBAEAppD,KAAA,SAAAxP,GASA,OAPAqlG,GAAAppG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAooC,SAAArmC,EAAAqmC,SACApoC,KAAAuoC,MAAAxmC,EAAAwmC,MAEAvoC,KAAA6nC,OAAA9lC,EAAA8lC,OAAAx2B,QAEArR,QAgBA2nG,GAAA3pG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAw+E,GAAAtpG,YAEAsT,YAAAq2F,KAwBAC,GAAA5pG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs+E,GAAAppG,YAEAsT,YAAAs2F,GAEAvtC,sBAEA9oD,KAAA,SAAAxP,GAQA,OANAqlG,GAAAppG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA8B,OAAAC,EAAAD,OAAAuP,QAEArR,KAAA6nC,OAAA9lC,EAAA8lC,OAAAx2B,QAEArR,QAoBA6nG,GAAA7pG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs+E,GAAAppG,YAEAsT,YAAAu2F,GAEAztC,oBAmBA0tC,GAAA9pG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs+E,GAAAppG,YAEAsT,YAAAw2F,GAEAptC,mBAEAnpD,KAAA,SAAAxP,GAOA,OALAqlG,GAAAppG,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAA2Q,MAAA5O,EAAA4O,MACA3Q,KAAA6Q,OAAA9O,EAAA8O,OAEA7Q,MAIAipB,OAAA,SAAAC,GAEA,IAAAhB,EAAAk/E,GAAAppG,UAAAirB,OAAApsB,KAAAmD,KAAAkpB,GAKA,OAHAhB,EAAApqB,OAAA6S,MAAA3Q,KAAA2Q,MACAuX,EAAApqB,OAAA+S,OAAA7Q,KAAA6Q,OAEAqX,KAsBA6/E,GAAA/pG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/E,GAAAlqG,YAEAsT,YAAAy2F,GAEAoD,cAAA,SACAC,gBAAA/rG,MAEAgsG,qBA5shCA,KA8shCAC,sCAEAC,wCAoBApD,GAAAnqG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/E,GAAAlqG,YAEAsT,YAAA62F,GAEAgD,cAAA,OACAC,gBAAA/rG,MAEAgsG,qBA3uhCA,KA6uhCAC,sCACAC,wCA0CAnuG,OAAA4D,OAAAonG,GAAApqG,WAEAwtG,SAAA,SAAAptG,GAEA,IAAAqtG,EAAAzrG,KAAAqoG,mBACA/gD,EAAAtnD,KAAAyoG,aAEAzjD,EAAAymD,EAAAnkD,GACAvC,EAAA0mD,EAAAnkD,EAAA,GAEAokD,EAAA,CAEAC,EAAA,CAEA,IAAAjuF,EAEAkuF,EAAA,CAMAC,EAAA,KAAAztG,EAAA4mD,GAAA,CAEA,QAAA8mD,EAAAxkD,EAAA,IAAoC,CAEpC,YAAAtC,EAAA,CAEA,GAAA5mD,EAAA2mD,EAAA,MAAA8mD,EAMA,OAFAvkD,EAAAmkD,EAAAnpG,OACAtC,KAAAyoG,aAAAnhD,EACAtnD,KAAA+rG,UAAAzkD,EAAA,EAAAlpD,EAAA2mD,GAIA,GAAAuC,IAAAwkD,EAAA,MAKA,GAHA/mD,EAAAC,EAGA5mD,GAFA4mD,EAAAymD,IAAAnkD,IAKA,MAAAqkD,EAOAjuF,EAAA+tF,EAAAnpG,OACA,MAAAspG,EAMA,GAAAxtG,GAAA2mD,EAiDA,MAAA2mD,EA7CA,IAAAM,EAAAP,EAAA,GAWA,IATArtG,EAAA4tG,IAEA1kD,EAAA,EACAvC,EAAAinD,GAMAF,EAAAxkD,EAAA,IAAoC,CAEpC,YAAAvC,EAKA,OADA/kD,KAAAyoG,aAAA,EACAzoG,KAAAisG,aAAA,EAAA7tG,EAAA4mD,GAIA,GAAAsC,IAAAwkD,EAAA,MAKA,GAHA9mD,EAAAD,EAGA3mD,IAFA2mD,EAAA0mD,IAAAnkD,EAAA,IAKA,MAAAqkD,EAOAjuF,EAAA4pC,EACAA,EAAA,EAaA,KAAAA,EAAA5pC,GAAA,CAEA,IAAAwuF,EAAA5kD,EAAA5pC,IAAA,EAEAtf,EAAAqtG,EAAAS,GAEAxuF,EAAAwuF,EAIA5kD,EAAA4kD,EAAA,EAWA,GALAlnD,EAAAymD,EAAAnkD,aACAvC,EAAA0mD,EAAAnkD,EAAA,IAOA,OADAtnD,KAAAyoG,aAAA,EACAzoG,KAAAisG,aAAA,EAAA7tG,EAAA4mD,GAIA,YAAAA,EAIA,OAFAsC,EAAAmkD,EAAAnpG,OACAtC,KAAAyoG,aAAAnhD,EACAtnD,KAAA+rG,UAAAzkD,EAAA,EAAAvC,EAAA3mD,GAMA4B,KAAAyoG,aAAAnhD,EAEAtnD,KAAAmsG,iBAAA7kD,EAAAvC,EAAAC,GAIA,OAAAhlD,KAAAosG,aAAA9kD,EAAAvC,EAAA3mD,EAAA4mD,IAIAqnD,SAAA,KAKAC,oBAEAC,aAAA,WAEA,OAAAvsG,KAAAqsG,UAAArsG,KAAAssG,kBAIAE,iBAAA,SAAAhoG,GASA,IALA,IAAA04D,EAAAl9D,KAAAwoG,aACA73D,EAAA3wC,KAAAsoG,aACA5mB,EAAA1hF,KAAA0oG,UACA9pG,EAAA4F,EAAAk9E,EAEAhlF,EAAA,EAAkBA,IAAAglF,IAAchlF,EAEhCwgE,EAAAxgE,GAAAi0C,EAAA/xC,EAAAlC,GAIA,OAAAwgE,GAMAkvC,aAAA,WAEA,UAAA5rG,MAAA,4BAKA2rG,iBAAA;;AASA/uG,OAAA4D,OAAAonG,GAAApqG,WAGAiuG,aAAA7D,GAAApqG,UAAAwuG,iBAGAT,UAAA3D,GAAApqG,UAAAwuG,mBAgBA7D,GAAA3qG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs/E,GAAApqG,YAEAsT,YAAAq3F,GAEAyD,aAAA,SAAA9kD,EAAAvC,EAAA3mD,EAAA4mD,GAUA,IARA,IAAAkY,EAAAl9D,KAAAwoG,aACA73D,EAAA3wC,KAAAsoG,aACA5mB,EAAA1hF,KAAA0oG,UAEA9pG,EAAA0oD,EAAAo6B,EAEA/tE,GAAAvV,EAAA2mD,IAAAC,EAAAD,GAEAj1B,EAAAlxB,EAAA8iF,EAAkC9iF,IAAAkxB,EAAgBlxB,GAAA,EAElDsR,GAAAmO,UAAA6+C,EAAA,EAAAvsB,EAAA/xC,EAAA8iF,EAAA/wC,EAAA/xC,EAAA+U,GAIA,OAAAupD,KAqBA0rC,GAAA5qG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/E,GAAAlqG,YAEAsT,YAAAs3F,GAEAuC,cAAA,aAIAE,qBAnjiCA,KAqjiCAC,+BAAA,SAAApuC,GAEA,WAAAyrC,GAAA3oG,KAAAgoG,MAAAhoG,KAAA2wC,OAAA3wC,KAAAysG,eAAAvvC,IAIAquC,wCAoBA1C,GAAA7qG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/E,GAAAlqG,YAEAsT,YAAAu3F,GAEAsC,cAAA,UA0BArC,GAAA9qG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/E,GAAAlqG,YAEAsT,YAAAw3F,GAEAqC,cAAA,WA6BApC,GAAA/qG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs/E,GAAApqG,YAEAsT,YAAAy3F,GAEAuD,kBAEAI,YAAA7/F,GACA8/F,UAAA9/F,IAIAs/F,iBAAA,SAAA7kD,EAAAvC,EAAAC,GAEA,IAAAymD,EAAAzrG,KAAAqoG,mBACAuE,EAAAtlD,EAAA,EACAulD,EAAAvlD,EAAA,EAEAwlD,EAAArB,EAAAmB,GACAG,EAAAtB,EAAAoB,GAEA,YAAAC,EAEA,OAAA9sG,KAAAusG,eAAAG,aAEA,KAnqiCA,KAsqiCAE,EAAAtlD,EACAwlD,EAAA,EAAA/nD,EAAAC,EAEA,MAEA,KA1qiCA,KA8qiCA8nD,EAAA/nD,EAAA0mD,EADAmB,EAAAnB,EAAAnpG,OAAA,GACAmpG,EAAAmB,EAAA,GAEA,MAEA,QAGAA,EAAAtlD,EACAwlD,EAAA9nD,EAMA,YAAA+nD,EAEA,OAAA/sG,KAAAusG,eAAAI,WAEA,KAjsiCA,KAosiCAE,EAAAvlD,EACAylD,EAAA,EAAA/nD,EAAAD,EAEA,MAEA,KAxsiCA,KA2siCA8nD,EAAA,EACAE,EAAA/nD,EAAAymD,EAAA,GAAAA,EAAA,GAEA,MAEA,QAGAoB,EAAAvlD,EAAA,EACAylD,EAAAhoD,EAMA,IAAAioD,EAAA,IAAAhoD,EAAAD,GACA28B,EAAA1hF,KAAA0oG,UAEA1oG,KAAAgpG,YAAAgE,GAAAjoD,EAAA+nD,GACA9sG,KAAAkpG,YAAA8D,GAAAD,EAAA/nD,GACAhlD,KAAAipG,YAAA2D,EAAAlrB,EACA1hF,KAAAmpG,YAAA0D,EAAAnrB,GAIA0qB,aAAA,SAAA9kD,EAAAvC,EAAA3mD,EAAA4mD,GAuBA,IArBA,IAAAkY,EAAAl9D,KAAAwoG,aACA73D,EAAA3wC,KAAAsoG,aACA5mB,EAAA1hF,KAAA0oG,UAEAuE,EAAA3lD,EAAAo6B,EAAAwrB,EAAAD,EAAAvrB,EACAyrB,EAAAntG,KAAAipG,YAAAmE,EAAAptG,KAAAmpG,YACAkE,EAAArtG,KAAAgpG,YAAAsE,EAAAttG,KAAAkpG,YAEAhrG,GAAAE,EAAA2mD,IAAAC,EAAAD,GACA0mD,EAAAvtG,IACAqvG,EAAA9B,EAAAvtG,EAIAsvG,GAAAH,EAAAE,EAAA,EAAAF,EAAA5B,EAAA4B,EAAAnvG,EACAkmD,GAAA,EAAAipD,GAAAE,IAAA,MAAAF,GAAA5B,IAAA,GAAA4B,GAAAnvG,EAAA,EACA4hB,IAAA,EAAAwtF,GAAAC,GAAA,IAAAD,GAAA7B,EAAA,GAAAvtG,EACAuvG,EAAAH,EAAAC,EAAAD,EAAA7B,EAIA/uG,EAAA,EAAkBA,IAAAglF,IAAchlF,EAEhCwgE,EAAAxgE,GACA8wG,EAAA78D,EAAAw8D,EAAAzwG,GACA0nD,EAAAzT,EAAAu8D,EAAAxwG,GACAojB,EAAA6wB,EAAAs8D,EAAAvwG,GACA+wG,EAAA98D,EAAAy8D,EAAA1wG,GAIA,OAAAwgE,KAgBAksC,GAAAprG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs/E,GAAApqG,YAEAsT,YAAA83F,GAEAgD,aAAA,SAAA9kD,EAAAvC,EAAA3mD,EAAA4mD,GAYA,IAVA,IAAAkY,EAAAl9D,KAAAwoG,aACA73D,EAAA3wC,KAAAsoG,aACA5mB,EAAA1hF,KAAA0oG,UAEAgF,EAAApmD,EAAAo6B,EACAisB,EAAAD,EAAAhsB,EAEAksB,GAAAxvG,EAAA2mD,IAAAC,EAAAD,GACA8oD,EAAA,EAAAD,EAEAlxG,EAAA,EAAkBA,IAAAglF,IAAchlF,EAEhCwgE,EAAAxgE,GACAi0C,EAAAg9D,EAAAjxG,GAAAmxG,EACAl9D,EAAA+8D,EAAAhxG,GAAAkxG,EAIA,OAAA1wC,KAoBAmsC,GAAArrG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAs/E,GAAApqG,YAEAsT,YAAA+3F,GAEA+C,aAAA,SAAA9kD,GAEA,OAAAtnD,KAAAwsG,iBAAAllD,EAAA,MAYA,IAAAwmD,IAGAC,WAAA,SAAAxoG,EAAAvD,EAAAE,GAEA,OAAA4rG,GAAAE,aAAAzoG,GAIA,IAAAA,EAAA+L,YAAA/L,EAAAk3E,SAAAz6E,WAAAE,IAAAqD,EAAAjD,SAIAiD,EAAAC,MAAAxD,EAAAE,IAKA+rG,aAAA,SAAA1oG,EAAAZ,EAAAupG,GAEA,OAAA3oG,IACA2oG,GAAA3oG,EAAA+L,cAAA3M,EAAAY,EAEA,iBAAAZ,EAAA43E,kBAEA,IAAA53E,EAAAY,GAIAlG,MAAArB,UAAAwH,MAAA3I,KAAA0I,IAIAyoG,aAAA,SAAAlwG,GAEA,OAAAqwG,YAAAC,OAAAtwG,MACAA,aAAAuwG,WAKAC,iBAAA,SAAAtG,GAUA,IAFA,IAAArqG,EAAAqqG,EAAA1lG,OACA46D,EAAA,IAAA79D,MAAA1B,GACAjB,EAAA,EAAkBA,IAAAiB,IAASjB,EAAAwgE,EAAAxgE,KAI3B,OAFAwgE,EAAA9kB,KAVA,SAAA17C,EAAAyxB,GAEA,OAAA65E,EAAAtrG,GAAAsrG,EAAA75E,KAUA+uC,GAKAqxC,YAAA,SAAA59D,EAAA+wC,EAAA/qE,GAKA,IAHA,IAAA63F,EAAA79D,EAAAruC,OACA46D,EAAA,IAAAvsB,EAAAr/B,YAAAk9F,GAEA9xG,EAAA,EAAA6hB,EAAA,EAAiCA,IAAAiwF,IAAuB9xG,EAIxD,IAFA,IAAA+xG,EAAA93F,EAAAja,GAAAglF,EAEAvzD,EAAA,EAAmBA,IAAAuzD,IAAcvzD,EAEjC+uC,EAAA3+C,KAAAoyB,EAAA89D,EAAAtgF,GAMA,OAAA+uC,GAKAwxC,YAAA,SAAAC,EAAA3G,EAAAr3D,EAAAi+D,GAIA,IAFA,IAAAlyG,EAAA,EAAA6F,EAAAosG,EAAA,YAEApsG,cAAAqsG,IAEArsG,EAAAosG,EAAAjyG,KAIA,YAAA6F,EAAA,CAEA,IAAA7E,EAAA6E,EAAAqsG,GACA,YAAAlxG,EAEA,GAAA2B,MAAAm6B,QAAA97B,GAEA,aAEAA,EAAA6E,EAAAqsG,MAIA5G,EAAAhjG,KAAAzC,EAAA2gF,MACAvyC,EAAA3rC,KAAAm2E,MAAAxqC,EAAAjzC,IAIA6E,EAAAosG,EAAAjyG,oBAEI6F,QAED,YAAA7E,EAAAsW,QAIH,aAEAtW,EAAA6E,EAAAqsG,MAIA5G,EAAAhjG,KAAAzC,EAAA2gF,MACAxlF,EAAAsW,QAAA28B,IAAAruC,SAIAC,EAAAosG,EAAAjyG,oBAEI6F,QAMJ,aAEA7E,EAAA6E,EAAAqsG,MAIA5G,EAAAhjG,KAAAzC,EAAA2gF,MACAvyC,EAAA3rC,KAAAtH,IAIA6E,EAAAosG,EAAAjyG,oBAEI6F,MAkBJ,SAAA2lG,GAAAjrG,EAAA+qG,EAAAr3D,EAAAs3D,GAEA,YAAAhrG,EAAA,UAAAuD,MAAA,gDACA,YAAAwnG,GAAA,IAAAA,EAAA1lG,OAAA,UAAA9B,MAAA,oDAAAvD,GAEA+C,KAAA/C,OAEA+C,KAAAgoG,MAAA8F,GAAAG,aAAAjG,EAAAhoG,KAAA6uG,gBACA7uG,KAAA2wC,OAAAm9D,GAAAG,aAAAt9D,EAAA3wC,KAAAorG,iBAEAprG,KAAA8uG,iBAAA7G,GAAAjoG,KAAAqrG,sBAEArrG,KAAA+uG,WACA/uG,KAAAgvG,WA4fA,SAAAC,GAAAhyG,EAAA+qG,EAAAr3D,EAAAs3D,GAEAC,GAAArrG,KAAAmD,KAAA/C,EAAA+qG,EAAAr3D,EAAAs3D,GAwBA,SAAAiH,GAAAjyG,EAAAkyG,EAAAC,GAEApvG,KAAA/C,OACA+C,KAAAovG,SACApvG,KAAAmvG,uBAAA,EAEAnvG,KAAA0C,KAAAgL,GAAAI,eAGA9N,KAAAmvG,SAAA,GAEAnvG,KAAAqvG,gBAIArvG,KAAAgvG,WA0UA,SAAAM,GAAArQ,GAEAj/F,KAAAi/F,qBAAAH,GACA9+F,KAAAopB,YAoKA,SAAAmmF,GAAAtQ,GAEAj/F,KAAAi/F,qBAAAH,GAlhCA1hG,OAAA4D,OAAAknG,IAKAr3D,MAAA,SAAAk0D,GAEA,YAAAA,EAAApgG,KAEA,UAAAnE,MAAA,4DAIA,IAAAgvG,EAAAtH,GAAAuH,8BAAA1K,EAAApgG,MAEA,YAAAogG,EAAAiD,MAAA,CAEA,IAAAA,KAAAr3D,KAEAm9D,GAAAY,YAAA3J,EAAAnjG,KAAAomG,EAAAr3D,EAAA,SAEAo0D,EAAAiD,QACAjD,EAAAp0D,SAKA,gBAAA6+D,EAAA3+D,MAEA2+D,EAAA3+D,MAAAk0D,GAKA,IAAAyK,EAAAzK,EAAA9nG,KAAA8nG,EAAAiD,MAAAjD,EAAAp0D,OAAAo0D,EAAAkD,gBAMAh/E,OAAA,SAAAymF,GAEA,IAEA3K,EAFAyK,EAAAE,EAAAp+F,YAKA,YAAAk+F,EAAAvmF,OAEA87E,EAAAyK,EAAAvmF,OAAAymF,OAEG,CAGH3K,GAEA9nG,KAAAyyG,EAAAzyG,KACA+qG,MAAA8F,GAAAG,aAAAyB,EAAA1H,MAAA3oG,OACAsxC,OAAAm9D,GAAAG,aAAAyB,EAAA/+D,OAAAtxC,QAIA,IAAA4oG,EAAAyH,EAAAC,mBAEA1H,IAAAyH,EAAArE,uBAEAtG,EAAAkD,iBAQA,OAFAlD,EAAApgG,KAAA+qG,EAAAvE,cAEApG,GAIA0K,8BAAA,SAAAG,GAEA,OAAAA,EAAAtO,eAEA,aACA,aACA,YACA,aACA,cAEA,OAAAwH,GAEA,aACA,cACA,cACA,cAEA,OAAAmG,GAEA,YAEA,OAAApG,GAEA,iBAEA,OAAAD,GAEA,WACA,cAEA,OAAAT,GAEA,aAEA,OAAAJ,GAIA,UAAAvnG,MAAA,8CAAAovG,MAMAxyG,OAAA4D,OAAAknG,GAAAlqG,WAEAsT,YAAA42F,GAEA2G,eAAA56D,aAEAm3D,gBAAAn3D,aAEAo3D,qBAppjCA,KAspjCAwE,iCAAA,SAAA3yC,GAEA,WAAAmsC,GAAArpG,KAAAgoG,MAAAhoG,KAAA2wC,OAAA3wC,KAAAysG,eAAAvvC,IAIAouC,+BAAA,SAAApuC,GAEA,WAAAksC,GAAAppG,KAAAgoG,MAAAhoG,KAAA2wC,OAAA3wC,KAAAysG,eAAAvvC,IAIAquC,+BAAA,SAAAruC,GAEA,WAAA6rC,GAAA/oG,KAAAgoG,MAAAhoG,KAAA2wC,OAAA3wC,KAAAysG,eAAAvvC,IAIA4xC,iBAAA,SAAA7G,GAEA,IAAA6H,EAEA,OAAA7H,GAEA,KA/qjCA,KAirjCA6H,EAAA9vG,KAAA6vG,iCAEA,MAEA,KAprjCA,KAsrjCAC,EAAA9vG,KAAAsrG,+BAEA,MAEA,KAzrjCA,KA2rjCAwE,EAAA9vG,KAAAurG,+BAMA,YAAAuE,EAyBA9vG,KAAA+vG,kBAAAD,MAzBA,CAEA,IAAAn/B,EAAA,iCACA3wE,KAAAmrG,cAAA,yBAAAnrG,KAAA/C,KAEA,YAAA+C,KAAA+vG,kBAAA,CAGA,GAAA9H,IAAAjoG,KAAAqrG,qBAMA,UAAA7qG,MAAAmwE,GAJA3wE,KAAA8uG,iBAAA9uG,KAAAqrG,sBAUAxoG,QAAA6O,KAAA,uBAAAi/D,KASAg/B,iBAAA,WAEA,OAAA3vG,KAAA+vG,mBAEA,KAAA/vG,KAAA6vG,iCAEA,OAtujCA,KAwujCA,KAAA7vG,KAAAsrG,+BAEA,OAzujCA,KA2ujCA,KAAAtrG,KAAAurG,+BAEA,OA5ujCA,OAkvjCAkB,aAAA,WAEA,OAAAzsG,KAAA2wC,OAAAruC,OAAAtC,KAAAgoG,MAAA1lG,QAKA0tG,MAAA,SAAAC,GAEA,OAAAA,EAIA,IAFA,IAAAjI,EAAAhoG,KAAAgoG,MAEAtrG,EAAA,EAAAiB,EAAAqqG,EAAA1lG,OAAqC5F,IAAAiB,IAASjB,EAE9CsrG,EAAAtrG,IAAAuzG,EAMA,OAAAjwG,MAKA8b,MAAA,SAAAo0F,GAEA,OAAAA,EAIA,IAFA,IAAAlI,EAAAhoG,KAAAgoG,MAEAtrG,EAAA,EAAAiB,EAAAqqG,EAAA1lG,OAAqC5F,IAAAiB,IAASjB,EAE9CsrG,EAAAtrG,IAAAwzG,EAMA,OAAAlwG,MAMAq3D,KAAA,SAAA84C,EAAAC,GAOA,IALA,IAAApI,EAAAhoG,KAAAgoG,MACAqI,EAAArI,EAAA1lG,OACAN,EAAA,EACAE,EAAAmuG,EAAA,EAEAruG,IAAAquG,GAAArI,EAAAhmG,GAAAmuG,KAEAnuG,EAIA,UAAAE,GAAA8lG,EAAA9lG,GAAAkuG,KAEAluG,EAMA,KAFAA,EAEA,IAAAF,GAAAE,IAAAmuG,EAAA,CAGAruG,GAAAE,IAAAF,GAAAE,EAAA5C,KAAAoG,IAAAxD,EAAA,OAEA,IAAAw/E,EAAA1hF,KAAAysG,eACAzsG,KAAAgoG,MAAA8F,GAAAC,WAAA/F,EAAAhmG,EAAAE,GACAlC,KAAA2wC,OAAAm9D,GAAAC,WAAA/tG,KAAA2wC,OAAA3uC,EAAA0/E,EAAAx/E,EAAAw/E,GAIA,OAAA1hF,MAKA+uG,SAAA,WAEA,IAAAuB,KAEA5H,EAAA1oG,KAAAysG,eACA/D,EAAAppG,KAAA4E,MAAAwkG,IAAA,IAEA7lG,QAAAtC,MAAA,oDAAAP,MACAswG,MAIA,IAAAtI,EAAAhoG,KAAAgoG,MACAr3D,EAAA3wC,KAAA2wC,OAEA0/D,EAAArI,EAAA1lG,OAEA,IAAA+tG,IAEAxtG,QAAAtC,MAAA,uCAAAP,MACAswG,MAMA,IAFA,IAAAC,EAAA,KAEA7zG,EAAA,EAAkBA,IAAA2zG,EAAa3zG,IAAA,CAE/B,IAAA8zG,EAAAxI,EAAAtrG,GAEA,oBAAA8zG,GAAAjyD,MAAAiyD,GAAA,CAEA3tG,QAAAtC,MAAA,mDAAAP,KAAAtD,EAAA8zG,GACAF,KACA,MAIA,UAAAC,KAAAC,EAAA,CAEA3tG,QAAAtC,MAAA,0CAAAP,KAAAtD,EAAA8zG,EAAAD,GACAD,KACA,MAIAC,EAAAC,EAIA,YAAA7/D,GAEAm9D,GAAAE,aAAAr9D,GAEA,CAAAj0C,EAAA,UAAAiB,EAAAgzC,EAAAruC,OAAuC5F,IAAAiB,IAASjB,EAAA,CAEhD,IAAAgB,EAAAizC,EAAAj0C,GAEA,GAAA6hD,MAAA7gD,GAAA,CAEAmF,QAAAtC,MAAA,oDAAAP,KAAAtD,EAAAgB,GACA4yG,KACA,QAUA,OAAAA,GAMAtB,SAAA,WAWA,IATA,IAAAhH,EAAAhoG,KAAAgoG,MACAr3D,EAAA3wC,KAAA2wC,OACA+wC,EAAA1hF,KAAAysG,eAEAgE,EAz5jCA,OAy5jCAzwG,KAAA2vG,mBAEAe,EAAA,EACAliD,EAAAw5C,EAAA1lG,OAAA,EAEA5F,EAAA,EAAkBA,EAAA8xD,IAAe9xD,EAAA,CAEjC,IAAAi0G,KAEAztB,EAAA8kB,EAAAtrG,GAKA,GAAAwmF,IAJA8kB,EAAAtrG,EAAA,KAIA,IAAAA,GAAAwmF,MAAA,IAEA,GAAAutB,EAwBAE,UAhBA,IAJA,IAAA/xG,EAAAlC,EAAAglF,EACAkvB,EAAAhyG,EAAA8iF,EACAmvB,EAAAjyG,EAAA8iF,EAEAvzD,EAAA,EAAqBA,IAAAuzD,IAAcvzD,EAAA,CAEnC,IAAAzwB,EAAAizC,EAAA/xC,EAAAuvB,GAEA,GAAAzwB,IAAAizC,EAAAigE,EAAAziF,IACAzwB,IAAAizC,EAAAkgE,EAAA1iF,GAAA,CAEAwiF,KACA,OAgBA,GAAAA,EAAA,CAEA,GAAAj0G,IAAAg0G,EAAA,CAEA1I,EAAA0I,GAAA1I,EAAAtrG,GAEA,IAAAo0G,EAAAp0G,EAAAglF,EACAqvB,EAAAL,EAAAhvB,EAEA,IAAAvzD,EAAA,EAAqBA,IAAAuzD,IAAcvzD,EAEnCwiB,EAAAogE,EAAA5iF,GAAAwiB,EAAAmgE,EAAA3iF,KAMAuiF,GAQA,GAAAliD,EAAA,GAIA,IAFAw5C,EAAA0I,GAAA1I,EAAAx5C,GAEAsiD,EAAAtiD,EAAAkzB,EAAAqvB,EAAAL,EAAAhvB,EAAAvzD,EAAA,EAAuFA,IAAAuzD,IAAcvzD,EAErGwiB,EAAAogE,EAAA5iF,GAAAwiB,EAAAmgE,EAAA3iF,KAIAuiF,EAWA,OAPAA,IAAA1I,EAAA1lG,SAEAtC,KAAAgoG,MAAA8F,GAAAC,WAAA/F,EAAA,EAAA0I,GACA1wG,KAAA2wC,OAAAm9D,GAAAC,WAAAp9D,EAAA,EAAA+/D,EAAAhvB,IAIA1hF,QAsBAivG,GAAAjxG,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAo/E,GAAAlqG,YAEAsT,YAAA29F,GAEA9D,cAAA,WAmCA/tG,OAAA4D,OAAAkuG,IAEAr+D,MAAA,SAAAk0D,GAMA,IAJA,IAAAqK,KACA4B,EAAAjM,EAAAqK,OACA6B,EAAA,GAAAlM,EAAAmM,KAAA,GAEAx0G,EAAA,EAAAiB,EAAAqzG,EAAA1uG,OAAyC5F,IAAAiB,IAASjB,EAElD0yG,EAAApqG,KAAAkjG,GAAAr3D,MAAAmgE,EAAAt0G,IAAAof,MAAAm1F,IAIA,WAAA/B,GAAAnK,EAAA9nG,KAAA8nG,EAAAoK,SAAAC,IAIAnmF,OAAA,SAAAkoF,GAaA,IAXA,IAAA/B,KACAgC,EAAAD,EAAA/B,OAEArK,GAEA9nG,KAAAk0G,EAAAl0G,KACAkyG,SAAAgC,EAAAhC,SACAC,UAIA1yG,EAAA,EAAAiB,EAAAyzG,EAAA9uG,OAAyC5F,IAAAiB,IAASjB,EAElD0yG,EAAApqG,KAAAkjG,GAAAj/E,OAAAmoF,EAAA10G,KAIA,OAAAqoG,GAIAsM,8BAAA,SAAAp0G,EAAAq0G,EAAAJ,EAAAK,GAKA,IAHA,IAAAC,EAAAF,EAAAhvG,OACA8sG,KAEA1yG,EAAA,EAAkBA,EAAA80G,EAAqB90G,IAAA,CAEvC,IAAAsrG,KACAr3D,KAEAq3D,EAAAhjG,MACAtI,EAAA80G,EAAA,GAAAA,EACA90G,GACAA,EAAA,GAAA80G,GAEA7gE,EAAA3rC,KAAA,OAEA,IAAA2R,EAAAm3F,GAAAQ,iBAAAtG,GACAA,EAAA8F,GAAAS,YAAAvG,EAAA,EAAArxF,GACAg6B,EAAAm9D,GAAAS,YAAA59D,EAAA,EAAAh6B,GAIA46F,GAAA,IAAAvJ,EAAA,KAEAA,EAAAhjG,KAAAwsG,GACA7gE,EAAA3rC,KAAA2rC,EAAA,KAIAy+D,EAAApqG,KACA,IAAA8jG,GACA,0BAAAwI,EAAA50G,GAAAO,KAAA,IACA+qG,EAAAr3D,GACA70B,MAAA,EAAAo1F,IAIA,WAAAhC,GAAAjyG,GAAA,EAAAmyG,IAIAqC,WAAA,SAAAC,EAAAz0G,GAEA,IAAA00G,EAAAD,EAEA,IAAAryG,MAAAm6B,QAAAk4E,GAAA,CAEA,IAAAv0G,EAAAu0G,EACAC,EAAAx0G,EAAAwvB,UAAAxvB,EAAAwvB,SAAAilF,YAAAz0G,EAAAy0G,WAIA,QAAAl1G,EAAA,EAAkBA,EAAAi1G,EAAArvG,OAAsB5F,IAExC,GAAAi1G,EAAAj1G,GAAAO,SAEA,OAAA00G,EAAAj1G,GAMA,aAIAm1G,oCAAA,SAAA5/D,EAAAi/D,EAAAK,GAUA,IARA,IAAAO,KAIAC,EAAA,qBAIAr1G,EAAA,EAAAivB,EAAAsmB,EAAA3vC,OAA4C5F,EAAAivB,EAAQjvB,IAAA,CAEpD,IAAA+8C,EAAAxH,EAAAv1C,GACAs1G,EAAAv4D,EAAAx8C,KAAAqH,MAAAytG,GAEA,GAAAC,KAAA1vG,OAAA,GAEA,IAEA2vG,EAAAH,EAFA70G,EAAA+0G,EAAA,IAGAC,IAEAH,EAAA70G,GAAAg1G,MAIAA,EAAAjtG,KAAAy0C,IAMA,IAAAy4D,KAEA,QAAAj1G,KAAA60G,EAEAI,EAAAltG,KAAAkqG,GAAAmC,8BAAAp0G,EAAA60G,EAAA70G,GAAAi0G,EAAAK,IAIA,OAAAW,GAKAC,eAAA,SAAAC,EAAAt/C,GAEA,IAAAs/C,EAGA,OADAvvG,QAAAtC,MAAA,yDACA,KAkCA,IA9BA,IAAA8xG,EAAA,SAAA7C,EAAA8C,EAAAC,EAAAC,EAAAC,GAGA,OAAAF,EAAAjwG,OAAA,CAEA,IAAA0lG,KACAr3D,KAEAm9D,GAAAY,YAAA6D,EAAAvK,EAAAr3D,EAAA6hE,GAGA,IAAAxK,EAAA1lG,QAEAmwG,EAAAztG,KAAA,IAAAwqG,EAAA8C,EAAAtK,EAAAr3D,MAQAy+D,KAEAsD,EAAAN,EAAAn1G,MAAA,UAEAkyG,EAAAiD,EAAA9vG,SAAA,EACA4uG,EAAAkB,EAAAlB,KAAA,GAEAyB,EAAAP,EAAAQ,cAEA50F,EAAA,EAAkBA,EAAA20F,EAAArwG,OAA4B0b,IAAA,CAE9C,IAAAu0F,EAAAI,EAAA30F,GAAApc,KAGA,GAAA2wG,GAAA,IAAAA,EAAAjwG,OAGA,GAAAiwG,EAAA,GAAAtgE,aAAA,CAKA,IAFA,IAAA4gE,KAEAv5D,EAAA,EAAoBA,EAAAi5D,EAAAjwG,OAA0Bg3C,IAE9C,GAAAi5D,EAAAj5D,GAAArH,aAEA,QAAAn1C,EAAA,EAAsBA,EAAAy1G,EAAAj5D,GAAArH,aAAA3vC,OAA4CxF,IAElE+1G,EAAAN,EAAAj5D,GAAArH,aAAAn1C,KAAA,EAWA,QAAAg2G,KAAAD,EAAA,CAEA,IAAA7K,KACAr3D,KAEA,IAAA7zC,EAAA,EAAqBA,IAAAy1G,EAAAj5D,GAAArH,aAAA3vC,SAA8CxF,EAAA,CAEnE,IAAAi2G,EAAAR,EAAAj5D,GAEA0uD,EAAAhjG,KAAA+tG,EAAA7vB,MACAvyC,EAAA3rC,KAAA+tG,EAAAt5D,cAAAq5D,EAAA,KAIA1D,EAAApqG,KAAA,IAAA8jG,GAAA,yBAAAgK,EAAA,IAAA9K,EAAAr3D,IAIAw+D,EAAA0D,EAAAvwG,QAAA4uG,GAAA,OAEI,CAIJ,IAAA8B,EAAA,UAAAlgD,EAAA90C,GAAA/gB,KAAA,IAEAo1G,EACApD,GAAA+D,EAAA,YACAT,EAAA,MAAAnD,GAEAiD,EACAzJ,GAAAoK,EAAA,cACAT,EAAA,MAAAnD,GAEAiD,EACApD,GAAA+D,EAAA,SACAT,EAAA,MAAAnD,IAMA,WAAAA,EAAA9sG,OAEA,KAIA,IAAA4sG,GAAAwD,EAAAvD,EAAAC,MAQAhyG,OAAA4D,OAAAkuG,GAAAlxG,WAEAqxG,cAAA,WAIA,IAFA,IAAAF,EAAA,EAEAzyG,EAAA,EAAAiB,EAFAqC,KAAAovG,OAEA9sG,OAAqC5F,IAAAiB,IAASjB,EAAA,CAE9C,IAAAgzG,EAAA1vG,KAAAovG,OAAA1yG,GAEAyyG,EAAA7vG,KAAAoG,IAAAypG,EAAAO,EAAA1H,MAAA0H,EAAA1H,MAAA1lG,OAAA,IAIAtC,KAAAmvG,YAIA93C,KAAA,WAEA,QAAA36D,EAAA,EAAkBA,EAAAsD,KAAAovG,OAAA9sG,OAAwB5F,IAE1CsD,KAAAovG,OAAA1yG,GAAA26D,KAAA,EAAAr3D,KAAAmvG,UAIA,OAAAnvG,MAIAgvG,SAAA,WAEA,QAAAtyG,EAAA,EAAkBA,EAAAsD,KAAAovG,OAAA9sG,OAAwB5F,IAE1CsD,KAAAovG,OAAA1yG,GAAAsyG,WAIA,OAAAhvG,QAiBA5C,OAAA4D,OAAAsuG,GAAAtxG,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEA,IAAAg/F,GAAAxyE,EAAAyyE,SACA2B,KAAAn3E,EAAA,SAAAgwE,GAEAuE,EAAAxxE,EAAAqkB,MAAAV,KAAAU,MAAA4oD,MAEGwE,EAAAC,IAIH+U,YAAA,SAAAv1G,GAEAsC,KAAAopB,SAAA1rB,GAIAmzC,MAAA,SAAAk0D,GAEA,IAAA37E,EAAAppB,KAAAopB,SAEA,SAAA8pF,EAAAj2G,GAQA,gBANAmsB,EAAAnsB,IAEA4F,QAAA6O,KAAA,0CAAAzU,GAIAmsB,EAAAnsB,GAIA,IAAAszC,EAAA,IAAAotD,GAAAoH,EAAApgG,MAyEA,YAvEAogG,EAAAriG,OAAA6tC,EAAA7tC,KAAAqiG,EAAAriG,eACAqiG,EAAA9nG,OAAAszC,EAAAtzC,KAAA8nG,EAAA9nG,eACA8nG,EAAArhE,OAAA6M,EAAA7M,MAAAV,OAAA+hE,EAAArhE,gBACAqhE,EAAAl7D,YAAA0G,EAAA1G,UAAAk7D,EAAAl7D,oBACAk7D,EAAAj7D,YAAAyG,EAAAzG,UAAAi7D,EAAAj7D,oBACAi7D,EAAAv7D,UAAA+G,EAAA/G,SAAAxG,OAAA+hE,EAAAv7D,mBACAu7D,EAAAr7D,UAAA6G,EAAA7G,SAAA1G,OAAA+hE,EAAAr7D,mBACAq7D,EAAAp7D,YAAA4G,EAAA5G,UAAAo7D,EAAAp7D,oBACAo7D,EAAA55D,YAAAoF,EAAApF,UAAA45D,EAAA55D,oBACA45D,EAAA35D,qBAAAmF,EAAAnF,mBAAA25D,EAAA35D,6BACA25D,EAAA9rE,WAAAsX,EAAAtX,SAAA8rE,EAAA9rE,mBACA8rE,EAAA17D,eAAAkH,EAAAlH,aAAA07D,EAAA17D,uBACA07D,EAAAz7D,iBAAAiH,EAAAjH,eAAAy7D,EAAAz7D,yBACAy7D,EAAAp3D,eAAA4C,EAAA5C,aAAAo3D,EAAAp3D,uBACAo3D,EAAA39D,MAAAmJ,EAAAnJ,IAAA29D,EAAA39D,cACA29D,EAAAplD,cAAApP,EAAAoP,YAAAolD,EAAAplD,sBACAolD,EAAAtlD,WAAAlP,EAAAkP,SAAAslD,EAAAtlD,mBACAslD,EAAArlD,OAAAnP,EAAAmP,KAAAqlD,EAAArlD,eACAqlD,EAAA9/D,UAAAsL,EAAAtL,QAAA8/D,EAAA9/D,kBACA8/D,EAAAnlD,cAAArP,EAAAqP,YAAAmlD,EAAAnlD,sBACAmlD,EAAAhkD,YAAAxQ,EAAAwQ,UAAAgkD,EAAAhkD,oBACAgkD,EAAA3kD,YAAA7P,EAAA6P,UAAA2kD,EAAA3kD,oBACA2kD,EAAA1kD,aAAA9P,EAAA8P,WAAA0kD,EAAA1kD,qBACA0kD,EAAArkD,aAAAnQ,EAAAmQ,WAAAqkD,EAAArkD,qBACAqkD,EAAA3jD,YAAA7Q,EAAA6Q,UAAA2jD,EAAA3jD,oBACA2jD,EAAA1jD,qBAAA9Q,EAAA8Q,mBAAA0jD,EAAA1jD,6BACA0jD,EAAAzjD,mBAAA/Q,EAAA+Q,iBAAAyjD,EAAAzjD,2BACAyjD,EAAAxjD,oBAAAhR,EAAAgR,kBAAAwjD,EAAAxjD,4BAEAwjD,EAAA5/E,WAAAorB,EAAAprB,SAAA4/E,EAAA5/E,UAEA,IAAA4/E,EAAAnjD,YAAArR,EAAAqR,UAAAmjD,EAAAnjD,oBACAmjD,EAAA96D,WAAAsG,EAAAtG,SAAA86D,EAAA96D,mBACA86D,EAAAzhD,UAAA/S,EAAA+S,QAAAyhD,EAAAzhD,kBACAyhD,EAAAjpF,QAAAy0B,EAAAz0B,MAAAipF,EAAAjpF,gBAEAipF,EAAApkD,gBAAApQ,EAAAoQ,cAAAokD,EAAApkD,wBACAokD,EAAAnkD,sBAAArQ,EAAAqQ,oBAAAmkD,EAAAnkD,8BACAmkD,EAAAlkD,qBAAAtQ,EAAAsQ,mBAAAkkD,EAAAlkD,6BAEAkkD,EAAAvjD,WAAAjR,EAAAiR,SAAAujD,EAAAvjD,mBACAujD,EAAA9yD,eAAA1B,EAAA0B,aAAA8yD,EAAA9yD,uBACA8yD,EAAAjkD,YAAAvQ,EAAAuQ,UAAAikD,EAAAjkD,oBAEAikD,EAAAn4D,UAAA2D,EAAA3D,QAAAm4D,EAAAn4D,kBACAm4D,EAAA93D,WAAAsD,EAAAtD,SAAA83D,EAAA93D,mBAIA83D,EAAAoO,UAAA5iE,EAAAoP,YAAA,IAAAolD,EAAAoO,kBAIApO,EAAAj5E,OAAAykB,EAAAzkB,KAAAi5E,EAAAj5E,eACAi5E,EAAA1hD,kBAAA9S,EAAA8S,gBAAA0hD,EAAA1hD,0BAIA0hD,EAAAzjG,MAAAivC,EAAAjvC,IAAA4xG,EAAAnO,EAAAzjG,eAEAyjG,EAAA5/D,WAEAoL,EAAApL,SAAA+tE,EAAAnO,EAAA5/D,UACAoL,EAAAqP,qBAAA,IAIAmlD,EAAA1+D,UAAAkK,EAAAlK,QAAA6sE,EAAAnO,EAAA1+D,mBACA0+D,EAAAz+D,YAAAiK,EAAAjK,UAAAy+D,EAAAz+D,oBAEAy+D,EAAAv+D,YAAA+J,EAAA/J,UAAA0sE,EAAAnO,EAAAv+D,qBACAu+D,EAAAt+D,YAAA,CAEA,IAAAA,EAAAs+D,EAAAt+D,iBAEApnC,MAAAm6B,QAAAiN,KAIAA,SAIA8J,EAAA9J,iBAAA12B,IAAAgE,UAAA0yB,GA4BA,gBAxBAs+D,EAAAp+D,kBAAA4J,EAAA5J,gBAAAusE,EAAAnO,EAAAp+D,2BACAo+D,EAAAn+D,oBAAA2J,EAAA3J,kBAAAm+D,EAAAn+D,4BACAm+D,EAAAl+D,mBAAA0J,EAAA1J,iBAAAk+D,EAAAl+D,2BAEAk+D,EAAAh+D,eAAAwJ,EAAAxJ,aAAAmsE,EAAAnO,EAAAh+D,wBACAg+D,EAAA99D,eAAAsJ,EAAAtJ,aAAAisE,EAAAnO,EAAA99D,wBAEA89D,EAAA5+D,cAAAoK,EAAApK,YAAA+sE,EAAAnO,EAAA5+D,uBACA4+D,EAAA3hD,oBAAA7S,EAAA6S,kBAAA2hD,EAAA3hD,4BAEA2hD,EAAA1/D,cAAAkL,EAAAlL,YAAA6tE,EAAAnO,EAAA1/D,uBAEA0/D,EAAAx/D,SAAAgL,EAAAhL,OAAA2tE,EAAAnO,EAAAx/D,kBAEAw/D,EAAAt/D,eAAA8K,EAAA9K,aAAAs/D,EAAAt/D,uBAEAs/D,EAAA/+D,WAAAuK,EAAAvK,SAAAktE,EAAAnO,EAAA/+D,oBACA++D,EAAA9+D,oBAAAsK,EAAAtK,kBAAA8+D,EAAA9+D,4BAEA8+D,EAAAl/D,QAAA0K,EAAA1K,MAAAqtE,EAAAnO,EAAAl/D,iBACAk/D,EAAAj/D,iBAAAyK,EAAAzK,eAAAi/D,EAAAj/D,yBAEAi/D,EAAA59D,cAAAoJ,EAAApJ,YAAA+rE,EAAAnO,EAAA59D,cAEAoJ,KAgBAnzC,OAAA4D,OAAAuuG,GAAAvxG,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEA,IAAAg/F,GAAAxyE,EAAAyyE,SACA2B,KAAAn3E,EAAA,SAAAgwE,GAEAuE,EAAAxxE,EAAAqkB,MAAAV,KAAAU,MAAA4oD,MAEGwE,EAAAC,IAIHrtD,MAAA,SAAAk0D,GAEA,IAAAp4E,EAAA,IAAA6uB,GAEAh3C,EAAAugG,EAAA78E,KAAA1jB,MAEA,YAAAA,EAAA,CAEA,IAAA4uG,EAAA,IAAAC,GAAA7uG,EAAAG,MAAAH,EAAAe,OACAonB,EAAAswB,SAAA,IAAAnK,GAAAsgE,EAAA,IAIA,IAAArmF,EAAAg4E,EAAA78E,KAAA6E,WAEA,QAAAxqB,KAAAwqB,EAAA,CAEA,IAAA7Y,EAAA6Y,EAAAxqB,GACA6wG,EAAA,IAAAC,GAAAn/F,EAAAvP,MAAAuP,EAAA3O,OAEAonB,EAAAuwB,aAAA36C,EAAA,IAAAuwC,GAAAsgE,EAAAl/F,EAAA6+B,SAAA7+B,EAAA8+B,aAIA,IAAAwB,EAAAuwD,EAAA78E,KAAAssB,QAAAuwD,EAAA78E,KAAAorF,WAAAvO,EAAA78E,KAAAqrF,QAEA,YAAA/+D,EAEA,QAAA93C,EAAA,EAAAiB,EAAA62C,EAAAlyC,OAAsC5F,IAAAiB,IAASjB,EAAA,CAE/C,IAAA24C,EAAAb,EAAA93C,GAEAiwB,EAAAqwB,SAAA3H,EAAA3lB,MAAA2lB,EAAAx6B,MAAAw6B,EAAA5H,eAMA,IAAAlc,EAAAwzE,EAAA78E,KAAAqJ,eAEA,YAAAA,EAAA,CAEA,IAAAjd,EAAA,IAAA9D,YAEA+gB,EAAAjd,QAEAA,EAAAP,UAAAwd,EAAAjd,QAIAqY,EAAA4E,eAAA,IAAAlJ,GAAA/T,EAAAid,EAAA/M,QAIA,OAAAmI,KAMA,IA8EA6mF,GASA9vE,GACA+vE,GACAC,GAzFAL,IACAjgE,oBACAj0C,sBAEAo0C,kBAAA,oBAAAA,oCAAAp0C,WACAs0C,sBACAE,wBACAE,sBACAE,wBACAE,0BACAE,2BAOA,SAAAw/D,MAEAA,GAAAC,UAEAC,YAEApiG,IAAA,SAAAqiG,EAAAlR,GAEA5iG,KAAA6zG,SAAA7uG,KAAA8uG,EAAAlR,IAIAplG,IAAA,SAAAsgG,GAIA,IAFA,IAAA+V,EAAA7zG,KAAA6zG,SAEAn3G,EAAA,EAAAC,EAAAk3G,EAAAvxG,OAAuC5F,EAAAC,EAAOD,GAAA,GAE9C,IAAAo3G,EAAAD,EAAAn3G,GACAkmG,EAAAiR,EAAAn3G,EAAA,GAEA,GAAAo3G,EAAA7nE,KAAA6xD,GAEA,OAAA8E,EAMA,cAMAxlG,OAAA4D,OAAA2yG,GAAA31G,WAEAmlG,mBAEA4Q,YAAA,aAEAC,eAAA,aAEAC,eAAA,aAEAC,cAAA,SAAApkE,EAAAqkE,EAAAhR,GAIA,IAFA,IAAA59F,KAEA7I,EAAA,EAAkBA,EAAAozC,EAAAxtC,SAAsB5F,EAExC6I,EAAA7I,GAAAsD,KAAAo0G,eAAAtkE,EAAApzC,GAAAy3G,EAAAhR,GAIA,OAAA59F,GAIA6uG,gBAEAZ,IACA5sG,aACAC,iBACAC,mBACAC,sBACAC,mBACAC,kBAGAy8B,GAAA,IAAAZ,GACA2wE,GAAA,IAAAtU,GACAuU,GAAA,IAAApE,GAEA,SAAAxyG,EAAAq3G,EAAAhR,GAIA,IAAA/5E,KAEA,SAAAy5E,EAAAv0C,EAAA3nC,EAAA/nB,EAAA2qB,EAAAjD,GAEA,IAGAmB,EAHA4sF,EAAAF,EAAA7lD,EACAs0C,EAAA+Q,GAAAC,SAAAp2G,IAAA62G,GAIA,OAAAzR,EAEAn7E,EAAAm7E,EAAAhC,KAAAyT,IAIAZ,GAAApQ,eAAAF,GACA17E,EAAAgsF,GAAA7S,KAAAyT,aAIA1tF,IAEAc,EAAAd,OAAA5S,UAAA4S,GAEA,IAAAA,EAAA,KAAAc,EAAAvB,MAAAzc,IACA,IAAAkd,EAAA,KAAAc,EAAAtB,MAAA1c,cAIA7K,GAEA6oB,EAAA7oB,OAAAmV,UAAAnV,YAIA2qB,IAEA,WAAAA,EAAA,KAAA9B,EAAAvB,MAAAzc,IACA,WAAA8f,EAAA,KAAA9B,EAAAvB,MAAAvc,IAEA,WAAA4f,EAAA,KAAA9B,EAAAtB,MAAA1c,IACA,WAAA8f,EAAA,KAAA9B,EAAAtB,MAAAxc,cAIA2c,IAEAmB,EAAAnB,cAIA,IAAA5jB,EAAAgL,GAAAI,eAIA,OAFAsb,EAAA1mB,GAAA+kB,EAEA/kB,EAMA,IAAAqiG,GACAriG,KAAAgL,GAAAI,eACAnJ,KAAA,uBAGA,QAAA1H,KAAAH,EAAA,CAEA,IAAAY,EAAAZ,EAAAG,GAEA,OAAAA,GAEA,eACA,eACA,qBACA,mBACA,MACA,cACA8nG,EAAA9nG,KAAAS,EACA,MACA,eACAqnG,EAAAtlD,SAAA+zD,GAAA91G,GACA,MACA,mBACA,iBACAmF,QAAA6O,KAAA,+BAAAzU,EAAA,2BACA,MACA,mBACA8nG,EAAArhE,SAAA3vB,UAAArW,GAAA0mC,SACA,MACA,oBACA2gE,EAAAr7D,SAAAhG,GAAA3vB,UAAArW,GAAA0mC,SACA,MACA,oBACA2gE,EAAAv7D,SAAA9F,GAAA3vB,UAAArW,GAAA0mC,SACA,MACA,mBACA2gE,EAAAp7D,UAAAjsC,EACA,MACA,cACA,UAAAA,EAAA4jG,gBAAAyD,EAAApgG,KAAA,qBACA,UAAAjH,EAAA4jG,gBAAAyD,EAAApgG,KAAA,qBACA,aAAAjH,EAAA4jG,gBAAAyD,EAAApgG,KAAA,wBACA,MACA,iBACAogG,EAAAzjG,IAAAuhG,EAAAnlG,EAAAZ,EAAAw3G,iBAAAx3G,EAAAy3G,iBAAAz3G,EAAA03G,eAAA13G,EAAA23G,sBACA,MACA,uBACA,uBACA,qBACA,2BACA,MACA,kBACA1P,EAAA5+D,YAAA08D,EAAAnlG,EAAAZ,EAAA43G,kBAAA53G,EAAA63G,kBAAA73G,EAAA83G,gBAAA93G,EAAA+3G,uBACA,MACA,wBACA,wBACA,sBACA,4BACA,MACA,eACA9P,EAAA/+D,SAAA68D,EAAAnlG,EAAAZ,EAAAg4G,eAAAh4G,EAAAi4G,eAAAj4G,EAAAk4G,aAAAl4G,EAAAm4G,oBACA,MACA,qBACA,qBACA,mBACA,yBACA,MACA,YACAlQ,EAAAl/D,MAAAg9D,EAAAnlG,EAAAZ,EAAAo4G,YAAAp4G,EAAAq4G,YAAAr4G,EAAAs4G,UAAAt4G,EAAAu4G,iBACA,MACA,kBACA,kBACA,gBACA,sBACA,MACA,cACAtQ,EAAA1+D,QAAAw8D,EAAAnlG,EAAAZ,EAAAw4G,cAAAx4G,EAAAy4G,cAAAz4G,EAAA04G,YAAA14G,EAAA24G,mBACA,MACA,mBACA1Q,EAAAz+D,UAAA5oC,EACA,MACA,oBACA,oBACA,kBACA,wBACA,MACA,gBACAqnG,EAAAv+D,UAAAq8D,EAAAnlG,EAAAZ,EAAA44G,gBAAA54G,EAAA64G,gBAAA74G,EAAA84G,cAAA94G,EAAA+4G,qBACA,MACA,sBACA9Q,EAAAt+D,YAAA/oC,EACA,MACA,sBACA,sBACA,oBACA,0BACA,MACA,kBACAqnG,EAAA1/D,YAAAw9D,EAAAnlG,EAAAZ,EAAAg5G,kBAAAh5G,EAAAi5G,kBAAAj5G,EAAAk5G,gBAAAl5G,EAAAm5G,uBACA,MACA,wBACA,wBACA,sBACA,4BACA,MACA,mBACAlR,EAAA99D,aAAA47D,EAAAnlG,EAAAZ,EAAAo5G,mBAAAp5G,EAAAq5G,mBAAAr5G,EAAAs5G,iBAAAt5G,EAAAu5G,wBACA,MACA,yBACA,yBACA,uBACA,6BACA,MACA,mBACAtR,EAAAh+D,aAAA87D,EAAAnlG,EAAAZ,EAAAw5G,mBAAAx5G,EAAAy5G,mBAAAz5G,EAAA05G,iBAAA15G,EAAA25G,wBACA,MACA,yBACA,yBACA,uBACA,6BACA,MACA,eACA1R,EAAA5/D,SAAA09D,EAAAnlG,EAAAZ,EAAA45G,eAAA55G,EAAA65G,eAAA75G,EAAA85G,aAAA95G,EAAA+5G,oBACA,MACA,qBACA,qBACA,mBACA,yBACA,MACA,gBACA9R,EAAArlD,KAAAn5C,EACA,MACA,kBACAw+F,EAAArlD,KAAAl5C,EACA,MACA,mBACA3D,QAAA6O,KAAA,yEACAqzF,EAAA9/D,QAAAvnC,EACA,MACA,gBACA,iBACA,iBACA,cACA,mBACA,kBACA,cACA,gBACAqnG,EAAA9nG,GAAAS,EACA,MACA,wBACAA,IAAAqnG,EAAAp3D,aAAAhnC,GACA,SAAAjJ,IAAAqnG,EAAAp3D,aAAAjnC,GACA,MACA,QACA7D,QAAAtC,MAAA,2CAAAtD,EAAAS,IAcA,MAPA,sBAAAqnG,EAAApgG,aAAAogG,EAAAv7D,SACA,sBAAAu7D,EAAApgG,aAAAogG,EAAAr7D,SAEAq7D,EAAA9/D,QAAA,IAAA8/D,EAAAnlD,gBAEA8zD,GAAAT,YAAA7pF,GAEAsqF,GAAA7iE,MAAAk0D,OAYA,IAAA+R,GA2BA,SAAArtF,GAEA,IAAAjlB,EAAAilB,EAAAstF,YAAA,KAEA,WAAAvyG,EAAA,KAEAilB,EAAA/qB,OAAA,EAAA8F,EAAA,IAWA,SAAAwyG,GAAA/X,GAEA,kBAAAA,IAEAp8F,QAAA6O,KAAA,6EACAutF,UAIAj/F,KAAAi/F,qBAAAH,GAEA9+F,KAAAkiG,mBAIA9kG,OAAA4D,OAAAg2G,GAAAh5G,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEAm0G,EAAAn0G,KAAAm0G,aAAA,iBAAAn0G,KAAAm0G,YAAAn0G,KAAAm0G,YAAA2C,GAAArtF,GAEAm5E,EAAA,IAAA5D,GAAAh/F,KAAAi/F,SACA2D,EAAAH,mBAAAziG,KAAAkiG,iBACAU,EAAAhC,KAAAn3E,EAAA,SAAAgwE,GAEA,IAAAsL,EAAA50D,KAAAU,MAAA4oD,GACApwE,EAAA07E,EAAA17E,SAEA,YAAAA,EAAA,CAEA,IAAA1kB,EAAA0kB,EAAA1kB,KAEA,YAAAA,GAEA,WAAAA,EAAA28F,cAGA,YADAz+F,QAAAtC,MAAA,qBAAAkpB,EAAA,sDASA,IAAA3rB,EAAA0uB,EAAAqkB,MAAAk0D,EAAAoP,GACAnW,EAAAlgG,EAAA6uB,SAAA7uB,EAAAgyC,YAEGmuD,EAAAC,IAIH+Y,eAAA,SAAAv5G,GAEAsC,KAAAm0G,YAAAz2G,GAIAmzC,MA2bA,SAAAk0D,EAAAoP,YAEApP,EAAA78E,OAGA68E,IAAA78E,eAIA68E,EAAAjpF,MAEAipF,EAAAjpF,MAAA,EAAAipF,EAAAjpF,MAIAipF,EAAAjpF,MAAA,EAIA,IAAA6Q,EAAA,IAAAklB,GAUA,OAtdA,SAAAkzD,EAAAp4E,GAEA,SAAAuqF,EAAAx5G,EAAAqf,GAEA,OAAArf,EAAA,GAAAqf,EAIA,IAAArgB,EAAAyxB,EAAAgpF,EAEAv4G,EAAAw4G,EAEAC,EAAAC,EAAAC,EAAA9pE,EAEA9oC,EACA6yG,EACAC,EACA9+D,EACAC,EAAAC,EACAC,EAAAC,EAEAR,EAAA7D,EAAAgjE,EAAAC,EAAAz0E,EAAAjf,EAEA2zF,EAAAttF,EAEAynB,EAAAgzD,EAAAhzD,MACAllB,EAAAk4E,EAAAl4E,SACAwnB,EAAA0wD,EAAA1wD,QACAvC,EAAAizD,EAAAjzD,OAEAh2B,EAAAipF,EAAAjpF,MAEA+7F,EAAA,EAGA,YAAA9S,EAAAzwD,IAAA,CAIA,IAAA53C,EAAA,EAAgBA,EAAAqoG,EAAAzwD,IAAAhyC,OAAqB5F,IAErCqoG,EAAAzwD,IAAA53C,GAAA4F,QAAAu1G,IAIA,IAAAn7G,EAAA,EAAgBA,EAAAm7G,EAAen7G,IAE/BiwB,EAAAqlB,cAAAt1C,MASA,IAHAkC,EAAA,EACAw4G,EAAAvqF,EAAAvqB,OAEA1D,EAAAw4G,IAEA7+D,EAAA,IAAA/nC,IAEApM,EAAAyoB,EAAAjuB,KAAAkd,EACAy8B,EAAA1yC,EAAAgnB,EAAAjuB,KAAAkd,EACAy8B,EAAAzyC,EAAA+mB,EAAAjuB,KAAAkd,EAEA6Q,EAAAE,SAAA7nB,KAAAuzC,GAOA,IAHA35C,EAAA,EACAw4G,EAAArlE,EAAAzvC,OAEA1D,EAAAw4G,GAcA,GAVAI,EAAAN,EAFAvyG,EAAAotC,EAAAnzC,KAEA,GACA64G,EAAAP,EAAAvyG,EAAA,GACAg0C,EAAAu+D,EAAAvyG,EAAA,GACAi0C,EAAAs+D,EAAAvyG,EAAA,GACAk0C,EAAAq+D,EAAAvyG,EAAA,GACAm0C,EAAAo+D,EAAAvyG,EAAA,GACAo0C,EAAAm+D,EAAAvyG,EAAA,GAIA6yG,EAAA,CA0BA,IAxBAE,EAAA,IAAAlqE,IACAptC,EAAA2xC,EAAAnzC,GACA84G,EAAAr3G,EAAA0xC,EAAAnzC,EAAA,GACA84G,EAAA36G,EAAAg1C,EAAAnzC,EAAA,IAEA+4G,EAAA,IAAAnqE,IACAptC,EAAA2xC,EAAAnzC,EAAA,GACA+4G,EAAAt3G,EAAA0xC,EAAAnzC,EAAA,GACA+4G,EAAA56G,EAAAg1C,EAAAnzC,EAAA,GAEAA,GAAA,EAEA64G,IAEAhqE,EAAAsE,EAAAnzC,KACA84G,EAAAjqE,gBACAkqE,EAAAlqE,iBAMA0pE,EAAAxqF,EAAAolB,MAAAzvC,OAEAq2C,EAEA,IAAAj8C,EAAA,EAAkBA,EAAAm7G,EAAen7G,IAOjC,IALAk7G,EAAA7S,EAAAzwD,IAAA53C,GAEAiwB,EAAAqlB,cAAAt1C,GAAAy6G,MACAxqF,EAAAqlB,cAAAt1C,GAAAy6G,EAAA,MAEAhpF,EAAA,EAAmBA,EAAA,EAAOA,IAO1B7D,EAAA,IAAAva,GAHA6nG,EAAA,GAFAL,EAAAxlE,EAAAnzC,OAGAg5G,EAAA,EAAAL,EAAA,IAIA,IAAAppF,GAAAxB,EAAAqlB,cAAAt1C,GAAAy6G,GAAAnyG,KAAAslB,GACA,IAAA6D,GAAAxB,EAAAqlB,cAAAt1C,GAAAy6G,EAAA,GAAAnyG,KAAAslB,GAsBA,GAdAsuB,IAEA0+D,EAAA,EAAAvlE,EAAAnzC,KAEA84G,EAAAzzF,OAAArT,IACAyjC,EAAAijE,KACAjjE,EAAAijE,KACAjjE,EAAAijE,IAGAK,EAAA1zF,OAAA1S,KAAAmmG,EAAAzzF,SAIA40B,EAEA,IAAAn8C,EAAA,EAAkBA,EAAA,EAAOA,IAEzB46G,EAAA,EAAAvlE,EAAAnzC,KAEAqlB,EAAA,IAAAzT,GACA6jC,EAAAijE,KACAjjE,EAAAijE,KACAjjE,EAAAijE,IAIA,IAAA56G,GAAAg7G,EAAAhqE,cAAA1oC,KAAAif,GACA,IAAAvnB,GAAAi7G,EAAAjqE,cAAA1oC,KAAAif,GAkBA,GAXA60B,IAGA5V,EAAA4O,EADAulE,EAAAtlE,EAAAnzC,MAGA84G,EAAAh0E,MAAAV,OAAAE,GACAy0E,EAAAj0E,MAAAV,OAAAE,IAKA6V,EAEA,IAAAr8C,EAAA,EAAkBA,EAAA,EAAOA,IAGzBwmC,EAAA4O,EADAulE,EAAAtlE,EAAAnzC,MAGA,IAAAlC,GAAAg7G,EAAA/pE,aAAA3oC,KAAA,IAAA89B,GAAAI,IACA,IAAAxmC,GAAAi7G,EAAAhqE,aAAA3oC,KAAA,IAAA89B,GAAAI,IAMAvW,EAAAolB,MAAA/sC,KAAA0yG,GACA/qF,EAAAolB,MAAA/sC,KAAA2yG,OAEK,CAkBL,IAhBAjjE,EAAA,IAAAlH,IACAptC,EAAA2xC,EAAAnzC,KACA81C,EAAAr0C,EAAA0xC,EAAAnzC,KACA81C,EAAA33C,EAAAg1C,EAAAnzC,KAEA64G,IAEAhqE,EAAAsE,EAAAnzC,KACA81C,EAAAjH,iBAMA0pE,EAAAxqF,EAAAolB,MAAAzvC,OAEAq2C,EAEA,IAAAj8C,EAAA,EAAkBA,EAAAm7G,EAAen7G,IAMjC,IAJAk7G,EAAA7S,EAAAzwD,IAAA53C,GAEAiwB,EAAAqlB,cAAAt1C,GAAAy6G,MAEAhpF,EAAA,EAAmBA,EAAA,EAAOA,IAO1B7D,EAAA,IAAAva,GAHA6nG,EAAA,GAFAL,EAAAxlE,EAAAnzC,OAGAg5G,EAAA,EAAAL,EAAA,IAIA5qF,EAAAqlB,cAAAt1C,GAAAy6G,GAAAnyG,KAAAslB,GAoBA,GAZAsuB,IAEA0+D,EAAA,EAAAvlE,EAAAnzC,KAEA81C,EAAAzwB,OAAArT,IACAyjC,EAAAijE,KACAjjE,EAAAijE,KACAjjE,EAAAijE,KAKAz+D,EAEA,IAAAn8C,EAAA,EAAkBA,EAAA,EAAOA,IAEzB46G,EAAA,EAAAvlE,EAAAnzC,KAEAqlB,EAAA,IAAAzT,GACA6jC,EAAAijE,KACAjjE,EAAAijE,KACAjjE,EAAAijE,IAGA5iE,EAAAhH,cAAA1oC,KAAAif,GAeA,GARA60B,IAEAu+D,EAAAtlE,EAAAnzC,KACA81C,EAAAhR,MAAAV,OAAA8O,EAAAulE,KAKAt+D,EAEA,IAAAr8C,EAAA,EAAkBA,EAAA,EAAOA,IAEzB26G,EAAAtlE,EAAAnzC,KACA81C,EAAA/G,aAAA3oC,KAAA,IAAA89B,GAAAgP,EAAAulE,KAMA1qF,EAAAolB,MAAA/sC,KAAA0vC,IAtSA,CA8cAqwD,EAAAp4E,GAhKA,SAAAo4E,EAAAp4E,GAEA,IAAAmrF,WAAA/S,EAAA+S,oBAAA/S,EAAA+S,oBAAA,EAEA,GAAA/S,EAAA5yD,YAEA,QAAAz1C,EAAA,EAAAC,EAAAooG,EAAA5yD,YAAA7vC,OAAiD5F,EAAAC,EAAOD,GAAAo7G,EAAA,CAExD,IAAA1zG,EAAA2gG,EAAA5yD,YAAAz1C,GACAmJ,EAAAiyG,EAAA,EAAA/S,EAAA5yD,YAAAz1C,EAAA,KACAoJ,EAAAgyG,EAAA,EAAA/S,EAAA5yD,YAAAz1C,EAAA,KACAyT,EAAA2nG,EAAA,EAAA/S,EAAA5yD,YAAAz1C,EAAA,KAEAiwB,EAAAwlB,YAAAntC,KAAA,IAAAmiB,GAAA/iB,EAAAyB,EAAAC,EAAAqK,IAMA,GAAA40F,EAAA3yD,YAEA,IAAA11C,EAAA,EAAAC,EAAAooG,EAAA3yD,YAAA9vC,OAAiD5F,EAAAC,EAAOD,GAAAo7G,EAAA,CAExD,IAAA13G,EAAA2kG,EAAA3yD,YAAA11C,GACA2D,EAAAy3G,EAAA,EAAA/S,EAAA3yD,YAAA11C,EAAA,KACAK,EAAA+6G,EAAA,EAAA/S,EAAA3yD,YAAA11C,EAAA,KACAM,EAAA86G,EAAA,EAAA/S,EAAA3yD,YAAA11C,EAAA,KAEAiwB,EAAAylB,YAAAptC,KAAA,IAAAmiB,GAAA/mB,EAAAC,EAAAtD,EAAAC,IAMA2vB,EAAAmmC,MAAAiyC,EAAAjyC,MAEAnmC,EAAAmmC,OAAAnmC,EAAAmmC,MAAAxwD,OAAA,IAAAqqB,EAAAwlB,YAAA7vC,SAAAqqB,EAAAylB,YAAA9vC,QAAAqqB,EAAAylB,YAAA9vC,SAAAqqB,EAAAE,SAAAvqB,SAEAO,QAAA6O,KAAA,sCAAAib,EAAAE,SAAAvqB,OAAA,mBACAqqB,EAAAylB,YAAA9vC,OAAA,uBAAAqqB,EAAAwlB,YAAA7vC,OAAA,mBAvCA,CAiKAyiG,EAAAp4E,GApHA,SAAAo4E,EAAAp4E,GAEA,IAAA7Q,EAAAipF,EAAAjpF,MAEA,YAAAipF,EAAA9yD,aAEA,QAAAv1C,EAAA,EAAAC,EAAAooG,EAAA9yD,aAAA3vC,OAAkD5F,EAAAC,EAAOD,IAAA,CAEzDiwB,EAAAslB,aAAAv1C,MACAiwB,EAAAslB,aAAAv1C,GAAAO,KAAA8nG,EAAA9yD,aAAAv1C,GAAAO,KACA0vB,EAAAslB,aAAAv1C,GAAAmwB,YAKA,IAHA,IAAAkrF,EAAAprF,EAAAslB,aAAAv1C,GAAAmwB,SACAmrF,EAAAjT,EAAA9yD,aAAAv1C,GAAAmwB,SAEArb,EAAA,EAAAukC,EAAAiiE,EAAA11G,OAA8CkP,EAAAukC,EAAQvkC,GAAA,GAEtD,IAAA+mC,EAAA,IAAA/nC,GACA+nC,EAAAn0C,EAAA4zG,EAAAxmG,GAAAsK,EACAy8B,EAAA1yC,EAAAmyG,EAAAxmG,EAAA,GAAAsK,EACAy8B,EAAAzyC,EAAAkyG,EAAAxmG,EAAA,GAAAsK,EAEAi8F,EAAA/yG,KAAAuzC,IAQA,YAAAwsD,EAAAkT,aAAAlT,EAAAkT,YAAA31G,OAAA,GAEAO,QAAA6O,KAAA,mFAEA,IAAAqgC,EAAAplB,EAAAolB,MACAkmE,EAAAlT,EAAAkT,YAAA,GAAAnmE,OAEA,IAAAp1C,EAAA,EAAAC,EAAAo1C,EAAAzvC,OAAsC5F,EAAAC,EAAOD,IAE7Cq1C,EAAAr1C,GAAAgnC,MAAA3vB,UAAAkkG,EAAA,EAAAv7G,IAvCA,CAqHAqoG,EAAAp4E,GAtEA,SAAAo4E,EAAAp4E,GAEA,IAAAurF,KAGAtG,cAEA7M,EAAAqN,WAEAR,EAAA5sG,KAAA+/F,EAAAqN,oBAIArN,EAAA6M,aAEA7M,EAAA6M,WAAAtvG,OAEAsvG,IAAAhc,OAAAmP,EAAA6M,YAIAA,EAAA5sG,KAAA+/F,EAAA6M,aAMA,QAAAl1G,EAAA,EAAmBA,EAAAk1G,EAAAtvG,OAAuB5F,IAAA,CAE1C,IAAAy0G,EAAAjC,GAAAiD,eAAAP,EAAAl1G,GAAAiwB,EAAAmmC,OACAq+C,GAAA+G,EAAAlzG,KAAAmsG,GAKA,GAAAxkF,EAAAslB,aAAA,CAGA,IAAAkmE,EAAAjJ,GAAA2C,oCAAAllF,EAAAslB,aAAA,IACAimE,IAAAtiB,OAAAuiB,GAIAD,EAAA51G,OAAA,IAAAqqB,EAAAilF,WAAAsG,GA3CA,CAuEAnT,EAAAp4E,GAEAA,EAAA2oB,qBACA3oB,EAAA6E,iCAEAuzE,EAAAj1D,WAAA,IAAAi1D,EAAAj1D,UAAAxtC,QAEYqqB,aAMAA,WAAAmjB,UAFZ6jE,GAAA31G,UAAAk2G,cAAAnP,EAAAj1D,UAAAqkE,EAAAn0G,KAAAmjG,iBAuBA/lG,OAAA4D,OAPA,SAAAi+F,GAEAj/F,KAAAi/F,qBAAAH,GACA9+F,KAAAm0G,YAAA,IAIAn2G,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,KAAAl+F,KAAAm0G,cAEAn0G,KAAAm0G,YAAA1qF,EAAA2uF,UAAA,EAAA3uF,EAAAstF,YAAA,SAIA,IAAAvqF,EAAAxsB,KAEA,IAAAg/F,GAAAxyE,EAAAyyE,SACA2B,KAAAn3E,EAAA,SAAAgwE,GAEA,IAAAsL,EAAA,KAEA,IAEAA,EAAA50D,KAAAU,MAAA4oD,GAEI,MAAAl5F,GAMJ,gBAJA29F,KAAA39F,QAEAsC,QAAAtC,MAAA,mCAAAkpB,EAAA,IAAAlpB,EAAAowE,SAMA,IAAAtnD,EAAA07E,EAAA17E,kBAEAA,cAAA1kB,MAAA,aAAA0kB,EAAA1kB,KAAA28F,cAOA90E,EAAAqkB,MAAAk0D,EAAA/G,GALAn7F,QAAAtC,MAAA,kCAAAkpB,EAAA,oCAOGw0E,EAAAC,IAIH+Y,eAAA,SAAAv5G,GAEAsC,KAAAm0G,YAAAz2G,GAIA2lG,eAAA,SAAA3lG,GAEAsC,KAAAmjG,YAAAzlG,GAIAmzC,MAAA,SAAAk0D,EAAA/G,GAEA,IAAAjuD,EAAA/vC,KAAAq4G,WAAAtT,EAAAh1D,QACAF,EAAA7vC,KAAAs4G,gBAAAvT,EAAAl1D,WAAAE,GAEAvmB,EAAAxpB,KAAAu4G,YAAAxT,EAAAv7E,OAAA,oBAEAw0E,KAAAlgG,KAIAsrB,EAAAppB,KAAAw4G,cAAAzT,EAAA37E,SAAAI,GACAsmB,EAAA9vC,KAAAy4G,eAAA1T,EAAAj1D,UAAA1mB,GAEAtrB,EAAAkC,KAAA04G,YAAA3T,EAAAjnG,OAAA+xC,EAAAC,GAcA,OAZAi1D,EAAA6M,aAEA9zG,EAAA8zG,WAAA5xG,KAAA24G,gBAAA5T,EAAA6M,sBAIA7M,EAAAv7E,QAAA,IAAAu7E,EAAAv7E,OAAAlnB,iBAEA07F,KAAAlgG,GAIAA,GAIAu6G,WAAA,SAAAtT,GAEA,IAAAh1D,KAEA,YAAAg1D,EAEA,QAAAroG,EAAA,EAAAC,EAAAooG,EAAAziG,OAAoC5F,EAAAC,EAAOD,IAAA,CAE3C,IAAA4zC,OAAA62D,IAAArC,SAAAC,EAAAroG,IAEAqzC,EAAAO,EAAA5tC,MAAA4tC,EAMA,OAAAP,GAIAuoE,gBAAA,SAAAvT,EAAAh1D,GAEA,IAAAF,KAEA,YAAAk1D,EAKA,IAHA,IAAA6T,EAAA,IAAA5B,GACA6B,EAAA,IAAAtJ,GAEA7yG,EAAA,EAAAC,EAAAooG,EAAAziG,OAAoC5F,EAAAC,EAAOD,IAAA,CAE3C,IAAAiwB,EACAzE,EAAA68E,EAAAroG,GAEA,OAAAwrB,EAAAvjB,MAEA,oBACA,0BAEAgoB,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAAvX,MACAuX,EAAArX,OACAqX,EAAA0zB,cACA1zB,EAAA2zB,gBAGA,MAEA,kBACA,wBACA,mBAEAlvB,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAAvX,MACAuX,EAAArX,OACAqX,EAAAiiB,MACAjiB,EAAA0zB,cACA1zB,EAAA2zB,eACA3zB,EAAA4zB,eAGA,MAEA,qBACA,2BAEAnvB,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1D,OACA0D,EAAA+yE,SACA/yE,EAAA+xE,WACA/xE,EAAAgyE,aAGA,MAEA,uBACA,6BAEAvtE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAAk0E,UACAl0E,EAAAm0E,aACAn0E,EAAArX,OACAqX,EAAAgjE,eACAhjE,EAAA2zB,eACA3zB,EAAAo0E,UACAp0E,EAAA+xE,WACA/xE,EAAAgyE,aAGA,MAEA,mBACA,yBAEAvtE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1D,OACA0D,EAAArX,OACAqX,EAAAgjE,eACAhjE,EAAA2zB,eACA3zB,EAAAo0E,UACAp0E,EAAA+xE,WACA/xE,EAAAgyE,aAGA,MAEA,qBACA,2BAEAvtE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1D,OACA0D,EAAA0zB,cACA1zB,EAAA2zB,eACA3zB,EAAA6xE,SACA7xE,EAAA8xE,UACA9xE,EAAA+xE,WACA/xE,EAAAgyE,aAGA,MAEA,2BACA,iCACA,0BACA,gCACA,yBACA,+BACA,0BACA,gCAEAvtE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1D,OACA0D,EAAAwhE,QAGA,MAEA,mBACA,yBAEA/8D,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAAsyE,YACAtyE,EAAAuyE,YACAvyE,EAAAwyE,cACAxyE,EAAAyyE,YACAzyE,EAAA+xE,WACA/xE,EAAAgyE,aAGA,MAEA,oBACA,0BAEAvtE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1D,OACA0D,EAAA+jE,KACA/jE,EAAAgjE,eACAhjE,EAAA+iE,gBACA/iE,EAAA2kE,KAGA,MAEA,wBACA,8BAEAlgE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1D,OACA0D,EAAA+jE,KACA/jE,EAAA+iE,gBACA/iE,EAAAgjE,eACAhjE,EAAAhqB,EACAgqB,EAAAzQ,GAGA,MAEA,oBACA,0BAEAkV,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA1C,OACA0C,EAAA+yE,SACA/yE,EAAA6xE,SACA7xE,EAAA8xE,WAGA,MAEA,yBACA,+BAEArtE,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAujB,EAAA2E,SACA3E,EAAA4sB,QACA5sB,EAAA1D,OACA0D,EAAA4wF,SAGA,MAEA,oBACA,0BAIA,IAFA,IAAAC,KAEA5qF,EAAA,EAAAwmB,EAAAzsB,EAAA6nB,OAAAztC,OAA+C6rB,EAAAwmB,EAAQxmB,IAAA,CAEvD,IAAAmiB,EAAAP,EAAA7nB,EAAA6nB,OAAA5hB,IAEA4qF,EAAA/zG,KAAAsrC,GAIA3jB,EAAA,IAAA0wE,GAAAn1E,EAAAvjB,MACAo0G,EACA7wF,EAAA0sE,eAGA,MAEA,qBAEAjoE,EAAAksF,EAAAhoE,MAAA3oB,GAEA,MAEA,eAEAyE,EAAAisF,EAAA/nE,MAAA3oB,EAAAloB,KAAAm0G,aAAAxnF,SAEA,MAEA,QAEA9pB,QAAA6O,KAAA,kDAAAwW,EAAAvjB,KAAA,KAEA,SAIAgoB,EAAAjqB,KAAAwlB,EAAAxlB,cAEAwlB,EAAAjrB,OAAA0vB,EAAA1vB,KAAAirB,EAAAjrB,MAEA4yC,EAAA3nB,EAAAxlB,MAAAiqB,EAMA,OAAAkjB,GAIA4oE,eAAA,SAAA1T,EAAA37E,GAEA,IAAA0mB,KAEA,YAAAi1D,EAAA,CAEA,IAAAnC,EAAA,IAAA0M,GACA1M,EAAAqQ,YAAA7pF,GAEA,QAAA1sB,EAAA,EAAAC,EAAAooG,EAAAziG,OAAoC5F,EAAAC,EAAOD,IAAA,CAE3C,IAAAwrB,EAAA68E,EAAAroG,GAEA,qBAAAwrB,EAAAvjB,KAAA,CAMA,IAFA,IAAAY,KAEA4oB,EAAA,EAAqBA,EAAAjG,EAAA4nB,UAAAxtC,OAA2B6rB,IAEhD5oB,EAAAP,KAAA49F,EAAA/xD,MAAA3oB,EAAA4nB,UAAA3hB,KAIA2hB,EAAA5nB,EAAAxlB,MAAA6C,OAIAuqC,EAAA5nB,EAAAxlB,MAAAkgG,EAAA/xD,MAAA3oB,IAQA,OAAA4nB,GAIA6oE,gBAAA,SAAA5T,GAIA,IAFA,IAAA6M,KAEAl1G,EAAA,EAAkBA,EAAAqoG,EAAAziG,OAAiB5F,IAAA,CAEnC,IAAAy0G,EAAAjC,GAAAr+D,MAAAk0D,EAAAroG,IAEAk1G,EAAA5sG,KAAAmsG,GAIA,OAAAS,GAIA2G,YAAA,SAAAxT,EAAA/G,GAEA,IAAAxxE,EAAAxsB,KACAwpB,KAEA,SAAAwvF,EAAAvvF,GAIA,OAFA+C,EAAAyyE,QAAAT,UAAA/0E,GAEAm5E,EAAAhC,KAAAn3E,EAAA,WAEA+C,EAAAyyE,QAAAR,QAAAh1E,WAEI,WAEJ+C,EAAAyyE,QAAAR,QAAAh1E,GACA+C,EAAAyyE,QAAAP,UAAAj1E,KAMA,YAAAs7E,KAAAziG,OAAA,GAEA,IAEAsgG,EAAA,IAAA1D,GAFA,IAAAnB,GAAAC,IAGA4E,EAAAS,eAAArjG,KAAAmjG,aAEA,QAAAzmG,EAAA,EAAAC,EAAAooG,EAAAziG,OAAoC5F,EAAAC,EAAOD,IAAA,CAE3C,IAAAspB,EAAA++E,EAAAroG,GACA4xD,EAAA,4BAAAriB,KAAAjmB,EAAAyD,KAAAzD,EAAAyD,IAAA+C,EAAA2nF,YAAAnuF,EAAAyD,IAEAD,EAAAxD,EAAAtjB,MAAAs2G,EAAA1qD,IAMA,OAAA9kC,GAIAgvF,cAAA,SAAAzT,EAAAv7E,GAEA,SAAAyvF,EAAAv7G,EAAAiH,GAEA,uBAAAjH,KAEAmF,QAAA6O,KAAA,uEAAAhU,GAEAiH,EAAAjH,IAIA,IAAA0rB,KAEA,YAAA27E,EAEA,QAAAroG,EAAA,EAAAC,EAAAooG,EAAAziG,OAAoC5F,EAAAC,EAAOD,IAAA,CAE3C,IAAAwrB,EAAA68E,EAAAroG,YAEAwrB,EAAAlC,OAEAnjB,QAAA6O,KAAA,+CAAAwW,EAAAxlB,eAIA8mB,EAAAtB,EAAAlC,QAEAnjB,QAAA6O,KAAA,sCAAAwW,EAAAlC,OAIA,IAAAyB,EAAA,IAAA1B,GAAAyD,EAAAtB,EAAAlC,QACAyB,EAAAs2B,eAEAt2B,EAAA/kB,KAAAwlB,EAAAxlB,cAEAwlB,EAAAjrB,OAAAwqB,EAAAxqB,KAAAirB,EAAAjrB,eAEAirB,EAAAjC,UAAAwB,EAAAxB,QAAAgzF,EAAA/wF,EAAAjC,QAAAizF,cAEAhxF,EAAAtpB,QAAA6oB,EAAA7oB,OAAAmV,UAAAmU,EAAAtpB,iBACAspB,EAAAvB,QAAAc,EAAAd,OAAA5S,UAAAmU,EAAAvB,iBACAuB,EAAA5T,QAAAmT,EAAAnT,OAAAP,UAAAmU,EAAA5T,iBACA4T,EAAA/C,WAAAsC,EAAAtC,SAAA+C,EAAA/C,mBAEA+C,EAAAqB,OAEA9B,EAAAvB,MAAA+yF,EAAA/wF,EAAAqB,KAAA,GAAA4vF,IACA1xF,EAAAtB,MAAA8yF,EAAA/wF,EAAAqB,KAAA,GAAA4vF,cAIAjxF,EAAA/nB,SAAAsnB,EAAAtnB,OAAA+nB,EAAA/nB,iBAEA+nB,EAAA7B,YAAAoB,EAAApB,UAAA4yF,EAAA/wF,EAAA7B,UAAA+yF,cACAlxF,EAAA9B,YAAAqB,EAAArB,UAAA6yF,EAAA/wF,EAAA9B,UAAAgzF,cACAlxF,EAAA5B,aAAAmB,EAAAnB,WAAA4B,EAAA5B,qBAEA4B,EAAAnB,QAAAU,EAAAV,MAAAmB,EAAAnB,OAEAqC,EAAAlB,EAAAxlB,MAAA+kB,EAMA,OAAA2B,GAIAsvF,YAAA,SAAAxwF,EAAA2nB,EAAAC,GAEA,IAAAhyC,EAEA,SAAAu7G,EAAAp8G,GAQA,gBANA4yC,EAAA5yC,IAEA4F,QAAA6O,KAAA,yCAAAzU,GAIA4yC,EAAA5yC,GAIA,SAAAq8G,EAAAr8G,GAEA,YAAAA,EAAA,CAEA,GAAAoC,MAAAm6B,QAAAv8B,GAAA,CAIA,IAFA,IAAAsI,KAEA7I,EAAA,EAAAC,EAAAM,EAAAqF,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAAgG,EAAAzF,EAAAP,YAEAozC,EAAAptC,IAEAG,QAAA6O,KAAA,yCAAAhP,GAIA6C,EAAAP,KAAA8qC,EAAAptC,IAIA,OAAA6C,EAUA,gBANAuqC,EAAA7yC,IAEA4F,QAAA6O,KAAA,yCAAAzU,GAIA6yC,EAAA7yC,IAIA,OAAAirB,EAAAvjB,MAEA,YAEA7G,EAAA,IAAAqpF,YAEAj/D,EAAAilD,YAEAtpE,OAAAG,UAAAkkB,EAAAilD,cAEArvE,EAAAqvE,WAAA,IAAArqC,GAAA5a,EAAAilD,sBAMAjlD,EAAAkf,MAEA,QAAAlf,EAAAkf,IAAAziC,KAEA7G,EAAAspC,IAAA,IAAA8/C,GAAAh/D,EAAAkf,IAAA1D,MAAAxb,EAAAkf,IAAAvpB,KAAAqK,EAAAkf,IAAAtpB,KAEM,YAAAoK,EAAAkf,IAAAziC,OAEN7G,EAAAspC,IAAA,IAAA6/C,GAAA/+D,EAAAkf,IAAA1D,MAAAxb,EAAAkf,IAAAg6B,WAMA,MAEA,wBAEAtjE,EAAA,IAAAoqE,GAAAhgD,EAAAigD,IAAAjgD,EAAAkgD,OAAAlgD,EAAArK,KAAAqK,EAAApK,cAEAoK,EAAAmgD,QAAAvqE,EAAAuqE,MAAAngD,EAAAmgD,gBACAngD,EAAAmlB,OAAAvvC,EAAAuvC,KAAAnlB,EAAAmlB,eACAnlB,EAAAogD,YAAAxqE,EAAAwqE,UAAApgD,EAAAogD,oBACApgD,EAAAqgD,aAAAzqE,EAAAyqE,WAAArgD,EAAAqgD,qBACArgD,EAAAolB,OAAAxvC,EAAAwvC,KAAAlwC,OAAA4D,UAAkEknB,EAAAolB,OAElE,MAEA,yBAEAxvC,EAAA,IAAAsvC,GAAAllB,EAAAzK,KAAAyK,EAAAxK,MAAAwK,EAAAvK,IAAAuK,EAAAtK,OAAAsK,EAAArK,KAAAqK,EAAApK,cAEAoK,EAAAmlB,OAAAvvC,EAAAuvC,KAAAnlB,EAAAmlB,eACAnlB,EAAAolB,OAAAxvC,EAAAwvC,KAAAlwC,OAAA4D,UAAkEknB,EAAAolB,OAElE,MAEA,mBAEAxvC,EAAA,IAAA+pG,GAAA3/E,EAAAwb,MAAAxb,EAAAiyC,WAEA,MAEA,uBAEAr8D,EAAA,IAAA8pG,GAAA1/E,EAAAwb,MAAAxb,EAAAiyC,WAEA,MAEA,iBAEAr8D,EAAA,IAAA4pG,GAAAx/E,EAAAwb,MAAAxb,EAAAiyC,UAAAjyC,EAAAkgB,SAAAlgB,EAAAqgB,OAEA,MAEA,oBAEAzqC,EAAA,IAAAgqG,GAAA5/E,EAAAwb,MAAAxb,EAAAiyC,UAAAjyC,EAAAvX,MAAAuX,EAAArX,QAEA,MAEA,gBAEA/S,EAAA,IAAA0pG,GAAAt/E,EAAAwb,MAAAxb,EAAAiyC,UAAAjyC,EAAAkgB,SAAAlgB,EAAA/U,MAAA+U,EAAAuyC,SAAAvyC,EAAAqgB,OAEA,MAEA,sBAEAzqC,EAAA,IAAAupG,GAAAn/E,EAAAwb,MAAAxb,EAAA+gB,YAAA/gB,EAAAiyC,WAEA,MAEA,kBAEAt3D,QAAA6O,KAAA,sEAEA,WAEA,IAAAib,EAAA0sF,EAAAnxF,EAAAyE,UACA4jB,EAAA+oE,EAAApxF,EAAAqoB,UAIAzyC,EAFA6uB,EAAAmmC,OAAAnmC,EAAAmmC,MAAAxwD,OAAA,EAEA,IAAAslF,GAAAj7D,EAAA4jB,GAIA,IAAAmS,GAAA/1B,EAAA4jB,GAIA,MAEA,UAEAzyC,EAAA,IAAAwpF,GAEA,MAEA,WAEAxpF,EAAA,IAAAsqF,GAAAixB,EAAAnxF,EAAAyE,UAAA2sF,EAAApxF,EAAAqoB,UAAAroB,EAAAqzD,MAEA,MAEA,eAEAz9E,EAAA,IAAAwqF,GAAA+wB,EAAAnxF,EAAAyE,UAAA2sF,EAAApxF,EAAAqoB,WAEA,MAEA,mBAEAzyC,EAAA,IAAAuqF,GAAAgxB,EAAAnxF,EAAAyE,UAAA2sF,EAAApxF,EAAAqoB,WAEA,MAEA,iBACA,aAEAzyC,EAAA,IAAAyqF,GAAA8wB,EAAAnxF,EAAAyE,UAAA2sF,EAAApxF,EAAAqoB,WAEA,MAEA,aAEAzyC,EAAA,IAAAupF,GAAAiyB,EAAApxF,EAAAqoB,WAEA,MAEA,YAEAzyC,EAAA,IAAA0qF,GAEA,MAEA,QAEA1qF,EAAA,IAAAuuC,GAyCA,GArCAvuC,EAAA4E,KAAAwlB,EAAAxlB,cAEAwlB,EAAAjrB,OAAAa,EAAAb,KAAAirB,EAAAjrB,eAEAirB,EAAAtiB,QAEA9H,EAAA8H,OAAAmO,UAAAmU,EAAAtiB,iBAEAsiB,EAAAtB,mBAAA9oB,EAAA8oB,iBAAAsB,EAAAtB,kBACA9oB,EAAA8oB,kBAAA9oB,EAAA8H,OAAAoX,UAAAlf,EAAAif,SAAAjf,EAAAiI,WAAAjI,EAAAge,kBAIAoM,EAAAnL,UAAAjf,EAAAif,SAAAhJ,UAAAmU,EAAAnL,mBACAmL,EAAA/C,UAAArnB,EAAAqnB,SAAApR,UAAAmU,EAAA/C,mBACA+C,EAAAniB,YAAAjI,EAAAiI,WAAAgO,UAAAmU,EAAAniB,qBACAmiB,EAAApM,OAAAhe,EAAAge,MAAA/H,UAAAmU,EAAApM,iBAIAoM,EAAA2kB,aAAA/uC,EAAA+uC,WAAA3kB,EAAA2kB,qBACA3kB,EAAA4kB,gBAAAhvC,EAAAgvC,cAAA5kB,EAAA4kB,eAEA5kB,EAAA2f,kBAEA3f,EAAA2f,OAAAyyB,OAAAx8D,EAAA+pC,OAAAyyB,KAAApyC,EAAA2f,OAAAyyB,eACApyC,EAAA2f,OAAArjB,SAAA1mB,EAAA+pC,OAAArjB,OAAA0D,EAAA2f,OAAArjB,iBACA0D,EAAA2f,OAAA0yB,SAAAz8D,EAAA+pC,OAAA0yB,QAAAxmD,UAAAmU,EAAA2f,OAAA0yB,kBACAryC,EAAA2f,OAAA5kB,SAAAnlB,EAAA+pC,OAAA5kB,OAAAjjB,KAAA04G,YAAAxwF,EAAA2f,OAAA5kB,mBAIAiF,EAAA0kB,UAAA9uC,EAAA8uC,QAAA1kB,EAAA0kB,kBACA1kB,EAAA6kB,gBAAAjvC,EAAAivC,cAAA7kB,EAAA6kB,wBACA7kB,EAAA8kB,cAAAlvC,EAAAkvC,YAAA9kB,EAAA8kB,sBACA9kB,EAAA+kB,WAAAnvC,EAAAmvC,SAAA/kB,EAAA+kB,mBAEA/kB,EAAAqkB,SAIA,IAFA,IAAAA,EAAArkB,EAAAqkB,SAEA7vC,EAAA,EAAmBA,EAAA6vC,EAAAjqC,OAAqB5F,IAExCoB,EAAA2T,IAAAzR,KAAA04G,YAAAnsE,EAAA7vC,GAAAmzC,EAAAC,IAMA,WAAA5nB,EAAAvjB,KAIA,IAFA,IAAA4iF,EAAAr/D,EAAAq/D,OAEA5qF,EAAA,EAAmBA,EAAA4qF,EAAAjlF,OAAmB3F,IAAA,CAEtC,IAAA+pF,EAAAa,EAAA5qF,GACAm0C,EAAAhzC,EAAAqxC,oBAAA,OAAAu3C,EAAA5oF,iBAEAgzC,GAEAhzC,EAAA6vF,SAAA78C,EAAA41C,EAAAt+C,UAQA,OAAAtqC,KAMA,IAkmBAgsB,GAlmBAovF,IACAK,UAp4oCA,IAq4oCArwG,yBACAC,yBACAC,oCACAC,oCACAC,8BACAC,2BACAC,4BAGA2vG,IACA1vG,kBACAC,uBACAC,2BAGAyvG,IACAxvG,iBACAC,8BACAC,6BACAC,gBACAC,6BACAC,6BAOA,SAAAuvG,GAAAva,GAEA,oBAAAwa,mBAEA52G,QAAA6O,KAAA,+DAIA,oBAAAgoG,OAEA72G,QAAA6O,KAAA,mDAIA1R,KAAAi/F,qBAAAH,GACA9+F,KAAAqnB,eAyFA,SAAAsyF,KAEA35G,KAAA2E,KAAA,YAEA3E,KAAA0jC,MAAA,IAAAZ,GAEA9iC,KAAA45G,YACA55G,KAAA65G,YAAA,KAgRA,SAAAC,GAAA5xF,GAEAloB,KAAA2E,KAAA,OAEA3E,KAAAkoB,OA6DA,SAAA6xF,GAAAC,EAAAnW,EAAA/nF,EAAAs1B,EAAAC,EAAAnpB,GAEA,IAAA+xF,EAAA/xF,EAAAgyF,OAAAF,IAAA9xF,EAAAgyF,OAAA,KAEA,GAAAD,EAAA,CAEA,IAEA71G,EAAAyB,EAAAs0G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAFAlsD,EAAA,IAAAqrD,GAIA,GAAAM,EAAA98G,EAIA,IAFA,IAAAs9G,EAAAR,EAAAS,iBAAAT,EAAAS,eAAAT,EAAA98G,EAAAsE,MAAA,MAEA/E,EAAA,EAAAC,EAAA89G,EAAAn4G,OAAsC5F,EAAAC,GAItC,OAFA89G,EAAA/9G,MAIA,QAEA0H,EAAAq2G,EAAA/9G,KAAAof,EAAAs1B,EACAvrC,EAAA40G,EAAA/9G,KAAAof,EAAAu1B,EAEAid,EAAA27C,OAAA7lG,EAAAyB,GAEA,MAEA,QAEAzB,EAAAq2G,EAAA/9G,KAAAof,EAAAs1B,EACAvrC,EAAA40G,EAAA/9G,KAAAof,EAAAu1B,EAEAid,EAAA47C,OAAA9lG,EAAAyB,GAEA,MAEA,QAEAs0G,EAAAM,EAAA/9G,KAAAof,EAAAs1B,EACAgpE,EAAAK,EAAA/9G,KAAAof,EAAAu1B,EACAgpE,EAAAI,EAAA/9G,KAAAof,EAAAs1B,EACAkpE,EAAAG,EAAA/9G,KAAAof,EAAAu1B,EAEAid,EAAA67C,iBAAAkQ,EAAAC,EAAAH,EAAAC,GAEA,MAEA,QAEAD,EAAAM,EAAA/9G,KAAAof,EAAAs1B,EACAgpE,EAAAK,EAAA/9G,KAAAof,EAAAu1B,EACAgpE,EAAAI,EAAA/9G,KAAAof,EAAAs1B,EACAkpE,EAAAG,EAAA/9G,KAAAof,EAAAu1B,EACAkpE,EAAAE,EAAA/9G,KAAAof,EAAAs1B,EACAopE,EAAAC,EAAA/9G,KAAAof,EAAAu1B,EAEAid,EAAAg8C,cAAA+P,EAAAC,EAAAC,EAAAC,EAAAL,EAAAC,GAUA,OAAShpE,QAAA6oE,EAAAU,GAAA7+F,EAAAwyC,SAjfTkrD,GAAAx7G,WAEAsT,YAAAkoG,GAEAoB,WAAA,SAAAvzF,GAIA,OAFArnB,KAAAqnB,UAEArnB,MAIA4gG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,YAEAz0E,MAAA,aAEAzpB,KAAAsuD,OAAA7kC,EAAAzpB,KAAAsuD,KAAA7kC,GAEA,IAAA+C,EAAAxsB,KAEA6gG,EAAAjD,GAAApgG,IAAAisB,GAEA,YAAAo3E,EAYA,OAVAr0E,EAAAyyE,QAAAT,UAAA/0E,GAEAq3E,WAAA,WAEA9C,KAAA6C,GAEAr0E,EAAAyyE,QAAAR,QAAAh1E,IAEI,GAEJo3E,EAIA6Y,MAAAjwF,GAAAoxF,KAAA,SAAAC,GAEA,OAAAA,EAAAC,SAEGF,KAAA,SAAAE,GAEH,OAAAtB,kBAAAsB,EAAAvuF,EAAAnF,WAEGwzF,KAAA,SAAAG,GAEHpd,GAAAnsF,IAAAgY,EAAAuxF,GAEAhd,KAAAgd,GAEAxuF,EAAAyyE,QAAAR,QAAAh1E,KAEGwxF,MAAA,SAAA58G,GAEH6/F,KAAA7/F,GAEAmuB,EAAAyyE,QAAAR,QAAAh1E,GACA+C,EAAAyyE,QAAAP,UAAAj1E,MAMA45E,eAAA,WAEA,OAAArjG,MAIAuiG,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,OAsBA5C,OAAA4D,OAAA24G,GAAA37G,WAEAisG,OAAA,SAAA7lG,EAAAyB,GAEA7F,KAAA65G,YAAA,IAAA5S,GACAjnG,KAAA45G,SAAA50G,KAAAhF,KAAA65G,aACA75G,KAAA65G,YAAA5P,OAAA7lG,EAAAyB,IAIAqkG,OAAA,SAAA9lG,EAAAyB,GAEA7F,KAAA65G,YAAA3P,OAAA9lG,EAAAyB,IAIAskG,iBAAA,SAAAC,EAAAC,EAAA9K,EAAAC,GAEAx/F,KAAA65G,YAAA1P,iBAAAC,EAAAC,EAAA9K,EAAAC,IAIA8K,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAnL,EAAAC,GAEAx/F,KAAA65G,YAAAvP,cAAAC,EAAAC,EAAAC,EAAAC,EAAAnL,EAAAC,IAIAmL,WAAA,SAAArX,GAEAtzF,KAAA65G,YAAAlP,WAAArX,IAIA4nB,SAAA,SAAAC,EAAAC,GAEA,SAAAC,EAAAC,GAIA,IAFA,IAAAvrE,KAEArzC,EAAA,EAAAC,EAAA2+G,EAAAh5G,OAA0C5F,EAAAC,EAAOD,IAAA,CAEjD,IAAA6+G,EAAAD,EAAA5+G,GAEA8+G,EAAA,IAAArU,GACAqU,EAAAzU,OAAAwU,EAAAxU,OAEAh3D,EAAA/qC,KAAAw2G,GAIA,OAAAzrE,EAIA,SAAA0rE,EAAArlB,EAAAslB,GASA,IAPA,IAAAC,EAAAD,EAAAp5G,OAMAuwF,KACA30F,EAAAy9G,EAAA,EAAAlkG,EAAA,EAAoCA,EAAAkkG,EAAaz9G,EAAAuZ,IAAA,CAEjD,IAAAmkG,EAAAF,EAAAx9G,GACA29G,EAAAH,EAAAjkG,GAEAqkG,EAAAD,EAAAz3G,EAAAw3G,EAAAx3G,EACA23G,EAAAF,EAAAh2G,EAAA+1G,EAAA/1G,EAEA,GAAAvG,KAAA2T,IAAA8oG,GAAAl4G,OAAAC,QAAA,CASA,GANAi4G,EAAA,IAEAH,EAAAF,EAAAjkG,GAAiCqkG,KACjCD,EAAAH,EAAAx9G,GAAkC69G,MAGlC3lB,EAAAvwF,EAAA+1G,EAAA/1G,GAAAuwF,EAAAvwF,EAAAg2G,EAAAh2G,EAAA,SAEA,GAAAuwF,EAAAvwF,IAAA+1G,EAAA/1G,GAEA,GAAAuwF,EAAAhyF,IAAAw3G,EAAAx3G,EAAA,aAGM,CAEN,IAAA43G,EAAAD,GAAA3lB,EAAAhyF,EAAAw3G,EAAAx3G,GAAA03G,GAAA1lB,EAAAvwF,EAAA+1G,EAAA/1G,GACA,OAAAm2G,EAAA,SACA,GAAAA,EAAA,WACAnpB,UAIK,CAGL,GAAAuD,EAAAvwF,IAAA+1G,EAAA/1G,EAAA,SAEA,GAAAg2G,EAAAz3G,GAAAgyF,EAAAhyF,GAAAgyF,EAAAhyF,GAAAw3G,EAAAx3G,GACAw3G,EAAAx3G,GAAAgyF,EAAAhyF,GAAAgyF,EAAAhyF,GAAAy3G,EAAAz3G,EAAA,UAOA,OAAAyuF,EAIA,IAAAQ,EAAAH,GAAAG,YAEAumB,EAAA55G,KAAA45G,SACA,OAAAA,EAAAt3G,OAAA,SAEA,QAAA84G,EAAA,OAAAC,EAAAzB,GAGA,IAAAqC,EAAAV,EAAAC,EAAAzrE,KAEA,OAAA6pE,EAAAt3G,OAMA,OAJAi5G,EAAA3B,EAAA,IACA4B,EAAA,IAAArU,IACAJ,OAAAwU,EAAAxU,OACAh3D,EAAA/qC,KAAAw2G,GACAzrE,EAIA,IAAAmsE,GAAA7oB,EAAAumB,EAAA,GAAAhW,aACAsY,EAAAf,GAAAe,IAIA,IAIAC,EAgGAC,EApGAC,KACAC,KACAC,KACAC,EAAA,EAGAF,EAAAE,UACAD,EAAAC,MAEA,QAAA9/G,EAAA,EAAAC,EAAAi9G,EAAAt3G,OAAuC5F,EAAAC,EAAOD,IAI9Cu/G,EAAA5oB,EADA8oB,GADAZ,EAAA3B,EAAAl9G,IACAknG,cAEAqY,EAAAd,GAAAc,OAIAC,GAAAI,EAAAE,QAEAF,EAAAE,IAA4Br+G,EAAA,IAAAgpG,GAAAjpG,EAAAi+G,GAC5BG,EAAAE,GAAAr+G,EAAA4oG,OAAAwU,EAAAxU,OAEAmV,GAAAM,IACAD,EAAAC,OAMAD,EAAAC,GAAAx3G,MAAoCgZ,EAAAu9F,EAAAr9G,EAAAi+G,EAAA,KASpC,IAAAG,EAAA,UAAAjB,EAAAzB,GAGA,GAAA0C,EAAAh6G,OAAA,GAKA,IAHA,IAAAm6G,KACAC,KAEAC,EAAA,EAAAC,EAAAN,EAAAh6G,OAA+Cq6G,EAAAC,EAAaD,IAE5DN,EAAAM,MAIA,IAAAA,EAAA,EAAAC,EAAAN,EAAAh6G,OAA+Cq6G,EAAAC,EAAaD,IAI5D,IAFA,IAAAE,EAAAN,EAAAI,GAEAG,EAAA,EAAuBA,EAAAD,EAAAv6G,OAAmBw6G,IAAA,CAK1C,IAHA,IAAAC,EAAAF,EAAAC,GACAE,KAEAC,EAAA,EAAyBA,EAAAX,EAAAh6G,OAA0B26G,IAEnDxB,EAAAsB,EAAA7+G,EAAAo+G,EAAAW,GAAA/+G,KAEAy+G,IAAAM,GAAAP,EAAA13G,MAA6Ck4G,MAAAP,EAAAQ,IAAAF,EAAA/qB,KAAA4qB,IAC7CE,GAEAA,KACAX,EAAAY,GAAAj4G,KAAA+3G,IAIAN,MAOAO,GAEAX,EAAAM,GAAA33G,KAAA+3G,GAQAL,EAAAp6G,OAAA,IAGAm6G,IAAAF,EAAAF,IAQA3/G,EAAA,UAAAivB,EAAA2wF,EAAAh6G,OAAyC5F,EAAAivB,EAAQjvB,IAAA,CAEjD8+G,EAAAc,EAAA5/G,GAAAyB,EACA4xC,EAAA/qC,KAAAw2G,GAGA,QAAArtF,EAAA,EAAAwmB,GAFAynE,EAAAG,EAAA7/G,IAEA4F,OAAyC6rB,EAAAwmB,EAAQxmB,IAEjDqtF,EAAAhoB,MAAAxuF,KAAAo3G,EAAAjuF,GAAAnQ,GAQA,OAAA+xB,KAmBA3yC,OAAA4D,OAAA84G,GAAA97G,WAEA47F,UAEAC,eAAA,SAAAJ,EAAA3tE,EAAA+3E,YAEA/3E,MAAA,cACA+3E,MAAA,GAKA,IAHA,IAAA9zD,KACAqtE,EAcA,SAAA3jB,EAAA3tE,EAAA+3E,EAAA37E,GAUA,IARA,IAAAm1F,EAAAn8G,OAAAu4F,GAAAh4F,MAAA,IACAqa,EAAAgQ,EAAA5D,EAAA8hF,WACAsT,GAAAp1F,EAAAoqB,YAAAirE,KAAAr1F,EAAAoqB,YAAAkrE,KAAAt1F,EAAAu1F,oBAAA3hG,EAEAshG,KAEAhsE,EAAA,EAAAC,EAAA,EAEA30C,EAAA,EAAiBA,EAAA2gH,EAAA/6G,OAAkB5F,IAAA,CAEnC,IAAAs9G,EAAAqD,EAAA3gH,GAEA,UAAAs9G,EAEA5oE,EAAA,EACAC,GAAAisE,MAEG,CAEH,IAAAI,EAAA3D,GAAAC,EAAAnW,EAAA/nF,EAAAs1B,EAAAC,EAAAnpB,GACAkpB,GAAAssE,EAAAtsE,QACAgsE,EAAAp4G,KAAA04G,EAAApvD,OAMA,OAAA8uD,EA7BA,CAdA3jB,EAAA3tE,EAAA+3E,EAAA7jG,KAAAkoB,MAEAhqB,EAAA,EAAAq3D,EAAA6nD,EAAA96G,OAAqCpE,EAAAq3D,EAAQr3D,IAE7CmB,MAAArB,UAAAgH,KAAAm2E,MAAAprC,EAAAqtE,EAAAl/G,GAAAg9G,YAIA,OAAAnrE,KAyHA3yC,OAAA4D,OANA,SAAAi+F,GAEAj/F,KAAAi/F,qBAAAH,IAIA9gG,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA1xE,EAAAxsB,KAEA4iG,EAAA,IAAA5D,GAAAh/F,KAAAi/F,SACA2D,EAAAL,QAAAviG,KAAAsuD,MACAs0C,EAAAhC,KAAAn3E,EAAA,SAAAgwE,GAEA,IAAAsL,EAEA,IAEAA,EAAA50D,KAAAU,MAAA4oD,GAEI,MAAAp7F,GAEJwE,QAAA6O,KAAA,yFACAqzF,EAAA50D,KAAAU,MAAA4oD,EAAA2e,UAAA,GAAA3e,EAAAn3F,OAAA,IAIA,IAAAq3F,EAAAntE,EAAAqkB,MAAAk0D,GAEA/G,KAAArE,IAEGsE,EAAAC,IAIHrtD,MAAA,SAAAk0D,GAEA,WAAA+U,GAAA/U,IAIAxC,QAAA,SAAA7kG,GAGA,OADAsC,KAAAsuD,KAAA5wD,EACAsC,QAYA,IAgFA29G,GAAAt1C,GAAAF,GAAAC,GAAAvqD,GAAAC,GAAAuvB,GAAAuwE,GAEAC,GACAC,GAqiCAC,GACAC,GAIAC,GAGAC,GAIAC,GAIAC,GAEAC,GASAC,GA1CAC,GA4lJAC,GACAC,GA4CAjvG,GADAiN,GAjvLAiiG,IAEA30F,WAAA,WAQA,gBANAD,KAEAA,GAAA,IAAAk/C,OAAA01C,cAAA11C,OAAA21C,qBAIA70F,IAIA80F,WAAA,SAAAlhH,GAEAosB,GAAApsB,IAUA,SAAAmhH,GAAA5f,GAEAj/F,KAAAi/F,qBAAAH,GA6HA,SAAAggB,GAAAjhG,EAAAC,EAAAihG,GAEA1yE,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,aAEA,IAEAq6G,EAAA,IAAA92C,GAFA,KAEArqD,EAAAC,GACAkhG,EAAAxmG,GAAA5H,IAAA,QACAouG,EAAA1mG,OAAA,IAAA9H,GAAA,QACAxQ,KAAAyR,IAAAutG,GAEA,IAAAC,EAAA,IAAA/2C,GAPA,KAOArqD,EAAAC,GACAmhG,EAAAzmG,GAAA5H,IAAA,QACAquG,EAAA3mG,OAAA,IAAA9H,IAAA,QACAxQ,KAAAyR,IAAAwtG,GAEA,IAAAC,EAAA,IAAAh3C,GAZA,KAYArqD,EAAAC,GACAohG,EAAA1mG,GAAA5H,IAAA,OACAsuG,EAAA5mG,OAAA,IAAA9H,GAAA,QACAxQ,KAAAyR,IAAAytG,GAEA,IAAAC,EAAA,IAAAj3C,GAjBA,KAiBArqD,EAAAC,GACAqhG,EAAA3mG,GAAA5H,IAAA,QACAuuG,EAAA7mG,OAAA,IAAA9H,GAAA,SACAxQ,KAAAyR,IAAA0tG,GAEA,IAAAC,EAAA,IAAAl3C,GAtBA,KAsBArqD,EAAAC,GACAshG,EAAA5mG,GAAA5H,IAAA,QACAwuG,EAAA9mG,OAAA,IAAA9H,GAAA,QACAxQ,KAAAyR,IAAA2tG,GAEA,IAAAC,EAAA,IAAAn3C,GA3BA,KA2BArqD,EAAAC,GACAuhG,EAAA7mG,GAAA5H,IAAA,QACAyuG,EAAA/mG,OAAA,IAAA9H,GAAA,SACAxQ,KAAAyR,IAAA4tG,GAEA,IAAAh4F,GAAgBlnB,OAAA4K,GAAAqb,UAAArc,GAAAsc,UAAAtc,IAEhB/J,KAAAmjE,aAAA,IAAAr7C,GAAAi3F,IAAA13F,GACArnB,KAAAmjE,aAAA17C,QAAAxqB,KAAA,aAEA+C,KAAA0f,OAAA,SAAAmrC,EAAAsO,GAEA,OAAAn5D,KAAAssC,QAAAtsC,KAAAgtB,oBAEA,IAAAm2C,EAAAnjE,KAAAmjE,aACAt8C,EAAAs8C,EAAA17C,QAAAZ,gBAEAs8C,EAAA17C,QAAAZ,mBAEAs8C,EAAAp7C,eAAA,EACA8iC,EAAAsT,OAAAhF,EAAA6lD,EAAA77C,GAEAA,EAAAp7C,eAAA,EACA8iC,EAAAsT,OAAAhF,EAAA8lD,EAAA97C,GAEAA,EAAAp7C,eAAA,EACA8iC,EAAAsT,OAAAhF,EAAA+lD,EAAA/7C,GAEAA,EAAAp7C,eAAA,EACA8iC,EAAAsT,OAAAhF,EAAAgmD,EAAAh8C,GAEAA,EAAAp7C,eAAA,EACA8iC,EAAAsT,OAAAhF,EAAAimD,EAAAj8C,GAEAA,EAAA17C,QAAAZ,kBAEAs8C,EAAAp7C,eAAA,EACA8iC,EAAAsT,OAAAhF,EAAAkmD,EAAAl8C,GAEAtY,EAAAoU,gBAAA,OAIAj/D,KAAAk/D,MAAA,SAAArU,EAAAnnB,EAAAyG,EAAA2hC,GAIA,IAFA,IAAA3I,EAAAnjE,KAAAmjE,aAEAzmE,EAAA,EAAkBA,EAAA,EAAOA,IAEzBymE,EAAAp7C,eAAArrB,EACAmuD,EAAAoU,gBAAAkE,GAEAtY,EAAAqU,MAAAx7B,EAAAyG,EAAA2hC,GAIAjhB,EAAAoU,gBAAA,OAaA,SAAAqgD,KAEAjzE,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,gBAEA3E,KAAA8pB,QAAA40F,GAAA30F,aAEA/pB,KAAAu/G,KAAAv/G,KAAA8pB,QAAA01F,aACAx/G,KAAAu/G,KAAAE,QAAAz/G,KAAA8pB,QAAA41F,aAEA1/G,KAAAm2D,OAAA,KAiHA,SAAAwpD,GAAA/6G,GAEAynC,GAAAxvC,KAAAmD,MAEAA,KAAA2E,KAAA,QAEA3E,KAAA8pB,QAAAllB,EAAAklB,QAEA9pB,KAAAu/G,KAAAv/G,KAAA8pB,QAAA01F,aACAx/G,KAAAu/G,KAAAE,QAAA76G,EAAAg7G,YAEA5/G,KAAA6/G,YAEA7/G,KAAAk8E,OAAA,KACAl8E,KAAA8/G,QACA9/G,KAAAmwG,UAAA,EACAnwG,KAAApB,OAAA,EACAoB,KAAA+/G,aAAA,EACA//G,KAAAggH,aACAhgH,KAAAigH,sBACAjgH,KAAAkgH,WAAA,QAEAlgH,KAAAmgH,WAwRA,SAAAC,GAAAx7G,GAEA+6G,GAAA9iH,KAAAmD,KAAA4E,GAEA5E,KAAAqgH,OAAArgH,KAAA8pB,QAAAw2F,eACAtgH,KAAAqgH,OAAAZ,QAAAz/G,KAAAu/G,MAqFA,SAAAgB,GAAAC,EAAAC,GAEAzgH,KAAA0gH,SAAAF,EAAA12F,QAAA62F,iBACA3gH,KAAA0gH,SAAAD,qBAAA,KAEAzgH,KAAAkoB,KAAA,IAAA/oB,WAAAa,KAAA0gH,SAAAE,mBAEAJ,EAAAK,YAAApB,QAAAz/G,KAAA0gH,UAwCA,SAAAI,GAAAC,EAAAnR,EAAAlH,GAEA1oG,KAAA+gH,UACA/gH,KAAA0oG,YAEA,IACAsY,EADA7kC,EAAAhoC,aAGA,OAAAy7D,GAEA,iBACAoR,EAAAhhH,KAAAihH,OACA,MAEA,aACA,WACA9kC,EAAA98E,MACA2hH,EAAAhhH,KAAAkhH,QACA,MAEA,QACAF,EAAAhhH,KAAAmhH,MAIAnhH,KAAAk8E,OAAA,IAAAC,EAAA,EAAAusB,GAYA1oG,KAAAohH,iBAAAJ,EAEAhhH,KAAAqhH,iBAAA,EAEArhH,KAAAshH,SAAA,EACAthH,KAAAuhH,eAAA,EAsKA,SAAAC,GAAAC,EAAAnzD,EAAAozD,GAEA,IAAAC,EAAAD,GAAAE,GAAAC,eAAAvzD,GAEAtuD,KAAA8hH,aAAAL,EACAzhH,KAAA+hH,UAAAN,EAAAO,WAAA1zD,EAAAqzD,GA4DA,SAAAC,GAAAK,EAAA3zD,EAAAqzD,GAEA3hH,KAAAsuD,OACAtuD,KAAA2hH,cAAAC,GAAAC,eAAAvzD,GAEAtuD,KAAA0sB,KAAAk1F,GAAAM,SAAAD,EAAAjiH,KAAA2hH,WAAAQ,WAAAF,EAEAjiH,KAAAiiH,WAmgCA,SAAAG,GAAAC,EAAAlR,EAAAmR,GAEAtiH,KAAAuiH,OAAAF,EACAriH,KAAAwiH,MAAArR,EACAnxG,KAAAyiH,WAAAH,GAAA,KAWA,IATA,IAAAlT,EAAA+B,EAAA/B,OACAsT,EAAAtT,EAAA9sG,OACAqgH,EAAA,IAAAtjH,MAAAqjH,GAEAE,GACAlW,YAAA7/F,GACA8/F,UAAA9/F,IAGAnQ,EAAA,EAAiBA,IAAAgmH,IAAehmH,EAAA,CAEhC,IAAAmmH,EAAAzT,EAAA1yG,GAAAqzG,kBAAA,MACA4S,EAAAjmH,GAAAmmH,EACAA,EAAAxW,SAAAuW,EAIA5iH,KAAA8iH,qBAAAF,EAEA5iH,KAAA+iH,cAAAJ,EAGA3iH,KAAAgjH,kBAAA,IAAA3jH,MAAAqjH,GAEA1iH,KAAAijH,YAAA,KACAjjH,KAAAkjH,kBAAA,KAEAljH,KAAAmjH,sBAAA,KACAnjH,KAAAojH,mBAAA,KAEApjH,KAAA8/G,KAAAlzG,GACA5M,KAAAqjH,YAAA,EAIArjH,KAAAsjH,WAAA,KAIAtjH,KAAAkjF,KAAA,EAEAljF,KAAAkwG,UAAA,EACAlwG,KAAAujH,oBAAA,EAEAvjH,KAAAqmG,OAAA,EACArmG,KAAAwjH,iBAAA,EAEAxjH,KAAAyjH,YAAAr7F,IAEApoB,KAAA0jH,UACA1jH,KAAAmxC,WAEAnxC,KAAA2jH,qBAEA3jH,KAAA4jH,oBACA5jH,KAAA6jH,kBA0lBA,SAAAC,GAAAC,GAEA/jH,KAAAgkH,MAAAD,EACA/jH,KAAAikH,qBACAjkH,KAAAkkH,WAAA,EAEAlkH,KAAAkjF,KAAA,EAEAljF,KAAAkwG,UAAA,EAkuBA,SAAAiU,GAAAzmH,GAEA,iBAAAA,IAEAmF,QAAA6O,KAAA,sDACAhU,EAAA2E,UAAA,IAIArC,KAAAtC,QAcA,SAAA0mH,KAEA5oE,GAAA3+C,KAAAmD,MAEAA,KAAA2E,KAAA,0BACA3E,KAAAy+E,yBAgCA,SAAA4lC,GAAAC,EAAAvxE,EAAAn0C,EAAAo0C,GAEAhzC,KAAAkoB,KAAAo8F,EACAtkH,KAAA+yC,WACA/yC,KAAApB,SAEAoB,KAAAgzC,kBAkIA,SAAAuxE,GAAAh/G,EAAAm8E,GAEA1hF,KAAAuF,QACAvF,KAAA0hF,SACA1hF,KAAA6a,eAAAtV,IAAAjD,OAAAo/E,EAAA,EAEA1hF,KAAAizC,WACAjzC,KAAAkzC,aAAqBt0C,OAAA,EAAAic,OAAA,GAErB7a,KAAAinB,QAAA,EAmGA,SAAAu9F,GAAAj/G,EAAAm8E,EAAAlH,GAEA+pC,GAAA1nH,KAAAmD,KAAAuF,EAAAm8E,GAEA1hF,KAAAw6E,oBAAA,EA0BA,SAAAiqC,GAAAl/G,EAAAwtC,EAAAynC,GAEA1nC,GAAAj2C,KAAAmD,KAAAuF,EAAAwtC,GAEA/yC,KAAAw6E,oBAAA,EAyDA,SAAAkqC,GAAAtkH,EAAAC,GAEA,OAAAD,EAAAgoC,SAAA/nC,EAAA+nC,SAIA,SAAAu8E,GAAA7mH,EAAAkrD,EAAAI,EAAAxY,GAEA,QAAA9yC,EAAA8uC,UAEA9uC,EAAA2xC,QAAAuZ,EAAAI,QAEAxY,GAIA,IAFA,IAAArE,EAAAzuC,EAAAyuC,SAEA7vC,EAAA,EAAAC,EAAA4vC,EAAAjqC,OAAuC5F,EAAAC,EAAOD,IAE9CioH,GAAAp4E,EAAA7vC,GAAAssD,EAAAI,MAiSA,SAAAw7D,GAAAn/G,EAAAC,GAEA1F,KAAAyF,iBAAA,IAAAsK,GAAAqY,SACApoB,KAAA0F,iBAAA,IAAAqK,SAAAqY,KA6OA,SAAAy8F,GAAAt0E,GAEAlE,GAAAxvC,KAAAmD,MAEAA,KAAAuwC,WACAvwC,KAAAm+D,OAAA,aAcA,SAAA2mD,GAAAhnH,EAAAguB,EAAAoX,EAAA0e,GAEA5hD,KAAAlC,SAEAkC,KAAA8rB,kBAAA,EAEA,IAAA4X,WAAAR,IAAA,SAEAvyB,WAAAixC,IAAA,EAIAmjE,EAAA,EAEAC,EAAAhlH,KAAAlC,OAAA6uB,SAEAq4F,KAAAp4F,WAEAm4F,EAAA,EAAAC,EAAAjzE,MAAAzvC,OAEE0iH,KAAAl4F,mBAEFi4F,EAAAC,EAAAj4F,WAAA9I,OAAApJ,OAMA,IAAA8R,EAAA,IAAA6uB,GAEAzG,EAAA,IAAAf,GAAA,EAAA+wE,EAAA,KAEAp4F,EAAAuwB,aAAA,WAAAnI,GAEAszC,GAAAxrF,KAAAmD,KAAA2sB,EAAA,IAAAqlC,IAA4DtuB,QAAAke,UAAAjxC,KAI5D3Q,KAAA4mB,oBAEA5mB,KAAA0f,SAyGA,SAAAulG,GAAA5rD,EAAA31B,GAEA2I,GAAAxvC,KAAAmD,MAEAA,KAAAq5D,QACAr5D,KAAAq5D,MAAArsC,oBAEAhtB,KAAA4F,OAAAyzD,EAAAl2C,YACAnjB,KAAA4mB,oBAEA5mB,KAAA0jC,QAYA,IAVA,IAAA/W,EAAA,IAAA6uB,GAEAzG,GACA,YACA,YACA,aACA,YACA,cAGAr4C,EAAA,EAAAyxB,EAAA,EAAgCzxB,EAAhC,GAAuCA,IAAAyxB,IAAA,CAEvC,IAAAxI,EAAAjpB,EAFA,GAEA4C,KAAAsO,GAAA,EACAgY,EAAAuI,EAHA,GAGA7uB,KAAAsO,GAAA,EAEAmnC,EAAA/vC,KACA1F,KAAAiV,IAAAoR,GAAArmB,KAAAkV,IAAAmR,GAAA,EACArmB,KAAAiV,IAAAqR,GAAAtmB,KAAAkV,IAAAoR,GAAA,GAKA+G,EAAAuwB,aAAA,eAAAlJ,GAAAe,EAAA,IAEA,IAAAxE,EAAA,IAAAyhB,IAAwC5qB,SAExCpnC,KAAAklH,KAAA,IAAA78B,GAAA17D,EAAA4jB,GACAvwC,KAAAyR,IAAAzR,KAAAklH,MAEAllH,KAAA0f,SA2EA,SAAAylG,GAAArnH,GAYA,IAVA,IAAAg1D,EAtBA,SAAAsyD,EAAAtnH,GAEA,IAAAunH,KAEAvnH,KAAAgwF,QAEAu3B,EAAArgH,KAAAlH,GAIA,QAAApB,EAAA,EAAiBA,EAAAoB,EAAAyuC,SAAAjqC,OAA4B5F,IAE7C2oH,EAAArgH,KAAAm2E,MAAAkqC,EAAAD,EAAAtnH,EAAAyuC,SAAA7vC,KAIA,OAAA2oH,EAhBA,CAsBAvnH,GAEA6uB,EAAA,IAAA6uB,GAEA3uB,KACAilB,KAEAjN,EAAA,IAAA/B,GAAA,OACAgC,EAAA,IAAAhC,GAAA,OAEApmC,EAAA,EAAiBA,EAAAo2D,EAAAxwD,OAAkB5F,IAAA,CAEnC,IAAAmxF,EAAA/6B,EAAAp2D,GAEAmxF,EAAAvhD,QAAAuhD,EAAAvhD,OAAAwhD,SAEAjhE,EAAA7nB,KAAA,OACA6nB,EAAA7nB,KAAA,OACA8sC,EAAA9sC,KAAA6/B,EAAApnC,EAAAonC,EAAA/f,EAAA+f,EAAAxkC,GACAyxC,EAAA9sC,KAAA8/B,EAAArnC,EAAAqnC,EAAAhgB,EAAAggB,EAAAzkC,IAMAssB,EAAAuwB,aAAA,eAAAlJ,GAAAnnB,EAAA,IACAF,EAAAuwB,aAAA,YAAAlJ,GAAAlC,EAAA,IAEA,IAAAvB,EAAA,IAAAyhB,IAAwCrkB,aAAAhnC,EAAAy5C,aAAAC,cAAAT,iBAExCyoC,GAAAxrF,KAAAmD,KAAA2sB,EAAA4jB,GAEAvwC,KAAA+jH,KAAAjmH,EACAkC,KAAA8yD,QAEA9yD,KAAA4F,OAAA9H,EAAAqlB,YACAnjB,KAAA4mB,oBAwDA,SAAA0+F,GAAAjsD,EAAAksD,EAAA7hF,GAEA1jC,KAAAq5D,QACAr5D,KAAAq5D,MAAArsC,oBAEAhtB,KAAA0jC,QAEA,IAAA/W,EAAA,IAAAwtE,GAAAorB,EAAA,KACAh1E,EAAA,IAAA2Q,IAAwCE,aAAAha,SAExCsb,GAAA7lD,KAAAmD,KAAA2sB,EAAA4jB,GAEAvwC,KAAA4F,OAAA5F,KAAAq5D,MAAAl2C,YACAnjB,KAAA4mB,oBAEA5mB,KAAA0f,SAwEA,SAAA8lG,GAAAnsD,EAAA31B,GAEA2I,GAAAxvC,KAAAmD,MAEAA,KAAAq5D,QACAr5D,KAAAq5D,MAAArsC,oBAEAhtB,KAAA4F,OAAAyzD,EAAAl2C,YACAnjB,KAAA4mB,oBAEA5mB,KAAA0jC,QAEA,IAAA6M,EAAA,IAAAyhB,IAAwC5qB,SAExCza,EAAA,IAAA6uB,GAEA7uB,EAAAuwB,aAAA,eAAApK,GAAA,IAAAmB,aAAA,QAEAj0C,KAAAsvB,KAAA,IAAA84D,GAAAz7D,EAAA4jB,GACAvwC,KAAAyR,IAAAzR,KAAAsvB,MAGAtvB,KAAA0f,SAoDA,SAAA+lG,GAAApsD,EAAAvtC,EAAA4X,GAEA2I,GAAAxvC,KAAAmD,MAEAA,KAAAq5D,QACAr5D,KAAAq5D,MAAArsC,oBAEAhtB,KAAA4F,OAAAyzD,EAAAl2C,YACAnjB,KAAA4mB,oBAEA5mB,KAAA0jC,QAEA,IAAA/W,EAAA,IAAAg+D,GAAA7+D,GACAa,EAAA4hB,QAAA,GAAAjvC,KAAAsO,IAEA5N,KAAAuwC,SAAA,IAAA2Q,IAAyCE,aAAAha,cAAA,IACzCpnC,KAAA0jC,QAAA1jC,KAAAuwC,SAAA5C,aAAAhnC,GAEA,IAAAoW,EAAA4P,EAAAgxB,aAAA,YACA7L,EAAA,IAAAmC,aAAA,EAAAl3B,EAAAlC,OAEA8R,EAAAuwB,aAAA,YAAApK,GAAAhB,EAAA,IAEA9xC,KAAAyR,IAAA,IAAAixC,GAAA/1B,EAAA3sB,KAAAuwC,WAEAvwC,KAAA0f,SA0DA,SAAAgmG,GAAA55F,EAAA+3E,EAAAh/D,EAAAC,GAEAhZ,KAAA,GACA+3E,KAAA,GACAh/D,EAAA,IAAA/B,YAAA+B,IAAA,SACAC,EAAA,IAAAhC,YAAAgC,IAAA,SAQA,IANA,IAAAxwB,EAAAuvF,EAAA,EACA9U,EAAAjjE,EAAA+3E,EACA93E,EAAAD,EAAA,EAEAe,KAAAilB,KAEAp1C,EAAA,EAAAyxB,EAAA,EAAAmrB,GAAAvtB,EAAwCrvB,GAAAmnG,EAAgBnnG,IAAA48C,GAAAy1C,EAAA,CAExDliE,EAAA7nB,MAAA+mB,EAAA,EAAAutB,EAAAvtB,EAAA,EAAAutB,GACAzsB,EAAA7nB,KAAAs0C,EAAA,GAAAvtB,EAAAutB,EAAA,EAAAvtB,GAEA,IAAA2X,EAAAhnC,IAAA4X,EAAAuwB,EAAAC,EAEApB,EAAA1vB,QAAA89B,EAAA3jB,GAA6BA,GAAA,EAC7BuV,EAAA1vB,QAAA89B,EAAA3jB,GAA6BA,GAAA,EAC7BuV,EAAA1vB,QAAA89B,EAAA3jB,GAA6BA,GAAA,EAC7BuV,EAAA1vB,QAAA89B,EAAA3jB,GAA6BA,GAAA,EAI7B,IAAAxB,EAAA,IAAA6uB,GACA7uB,EAAAuwB,aAAA,eAAAlJ,GAAAnnB,EAAA,IACAF,EAAAuwB,aAAA,YAAAlJ,GAAAlC,EAAA,IAEA,IAAAvB,EAAA,IAAAyhB,IAAwCrkB,aAAAhnC,IAExC0hF,GAAAxrF,KAAAmD,KAAA2sB,EAAA4jB,GAaA,SAAAo1E,GAAAnhG,EAAAohG,EAAAC,EAAAhiB,EAAAh/D,EAAAC,GAEAtgB,KAAA,GACAohG,KAAA,GACAC,KAAA,EACAhiB,KAAA,GACAh/D,EAAA,IAAA/B,YAAA+B,IAAA,SACAC,EAAA,IAAAhC,YAAAgC,IAAA,SAEA,IAGA1gC,EAAA0B,EACA0L,EAAA9U,EAAAyxB,EAAA1wB,EAAAimC,EAJA7W,KACAilB,KAOA,IAAAp1C,EAAA,EAAaA,GAAAkpH,EAAclpH,IAE3B8U,EAAA9U,EAAAkpH,GAAA,EAAAtmH,KAAAsO,IAEAxJ,EAAA9E,KAAAkV,IAAAhD,GAAAgT,EACA1e,EAAAxG,KAAAiV,IAAA/C,GAAAgT,EAEAqI,EAAA7nB,KAAA,OACA6nB,EAAA7nB,KAAAZ,EAAA,EAAA0B,GAEA49B,EAAA,EAAAhnC,EAAAmoC,EAAAC,EAEAgN,EAAA9sC,KAAA0+B,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,GACAyxC,EAAA9sC,KAAA0+B,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,GAMA,IAAA3D,EAAA,EAAaA,GAAAmpH,EAAcnpH,IAM3B,IAJAgnC,EAAA,EAAAhnC,EAAAmoC,EAAAC,EAEArnC,EAAA+mB,IAAAqhG,EAAAnpH,EAEAyxB,EAAA,EAAcA,EAAA01E,EAAe11E,IAI7B3c,EAAA2c,EAAA01E,GAAA,EAAAvkG,KAAAsO,IAEAxJ,EAAA9E,KAAAkV,IAAAhD,GAAA/T,EACAqI,EAAAxG,KAAAiV,IAAA/C,GAAA/T,EAEAovB,EAAA7nB,KAAAZ,EAAA,EAAA0B,GACAgsC,EAAA9sC,KAAA0+B,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,GAIAmR,GAAA2c,EAAA,GAAA01E,GAAA,EAAAvkG,KAAAsO,IAEAxJ,EAAA9E,KAAAkV,IAAAhD,GAAA/T,EACAqI,EAAAxG,KAAAiV,IAAA/C,GAAA/T,EAEAovB,EAAA7nB,KAAAZ,EAAA,EAAA0B,GACAgsC,EAAA9sC,KAAA0+B,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,GAMA,IAAAssB,EAAA,IAAA6uB,GACA7uB,EAAAuwB,aAAA,eAAAlJ,GAAAnnB,EAAA,IACAF,EAAAuwB,aAAA,YAAAlJ,GAAAlC,EAAA,IAEA,IAAAvB,EAAA,IAAAyhB,IAAwCrkB,aAAAhnC,IAExC0hF,GAAAxrF,KAAAmD,KAAA2sB,EAAA4jB,GAYA,SAAAu1E,GAAAhoH,EAAAguB,EAAAoX,EAAA0e,GAIA5hD,KAAAlC,SAEAkC,KAAA8rB,kBAAA,EAEA,IAAA4X,WAAAR,IAAA,SAEAvyB,WAAAixC,IAAA,EAIAmjE,EAAA,EAEAC,EAAAhlH,KAAAlC,OAAA6uB,SAEAq4F,KAAAp4F,WAEAm4F,EAAAC,EAAAjzE,MAAAzvC,OAIAO,QAAA6O,KAAA,sGAMA,IAAAib,EAAA,IAAA6uB,GAEAzG,EAAA,IAAAf,GAAA,EAAA+wE,EAAA,KAEAp4F,EAAAuwB,aAAA,WAAAnI,GAEAszC,GAAAxrF,KAAAmD,KAAA2sB,EAAA,IAAAqlC,IAA4DtuB,QAAAke,UAAAjxC,KAI5D3Q,KAAA4mB,oBACA5mB,KAAA0f,SAqEA,SAAAqmG,GAAA1sD,EAAAvtC,EAAA4X,GAEA2I,GAAAxvC,KAAAmD,MAEAA,KAAAq5D,QACAr5D,KAAAq5D,MAAArsC,oBAEAhtB,KAAA4F,OAAAyzD,EAAAl2C,YACAnjB,KAAA4mB,oBAEA5mB,KAAA0jC,iBAEA5X,MAAA,GAEA,IAAAa,EAAA,IAAA6uB,GACA7uB,EAAAuwB,aAAA,eAAAlJ,KACAloB,IAAA,EACAA,IAAA,EACAA,KAAA,GACAA,KAAA,GACAA,IAAA,GACA,IAEA,IAAAykB,EAAA,IAAAyhB,IAAwC5qB,SAExCpnC,KAAAgmH,WAAA,IAAA59B,GAAAz7D,EAAA4jB,GACAvwC,KAAAyR,IAAAzR,KAAAgmH,aAEAr5F,EAAA,IAAA6uB,IACA0B,aAAA,eAAAlJ,IAAA,iBAEAh0C,KAAAimH,WAAA,IAAA79B,GAAAz7D,EAAA4jB,GACAvwC,KAAAyR,IAAAzR,KAAAimH,YAEAjmH,KAAA0f,SA2DA,SAAAwmG,GAAAjjG,GAEA,IAAA0J,EAAA,IAAA6uB,GACAjL,EAAA,IAAAyhB,IAAwCtuB,MAAA,SAAAiK,aAAAjnC,IAExCmmB,KACAilB,KAEAq0E,KAIAC,EAAA,IAAAtjF,GAAA,UACAujF,EAAA,IAAAvjF,GAAA,UACAwjF,EAAA,IAAAxjF,GAAA,OACAyjF,EAAA,IAAAzjF,GAAA,UACA0jF,EAAA,IAAA1jF,GAAA,SAiDA,SAAA2jF,EAAArmH,EAAAC,EAAAqjC,GAEAgjF,EAAAtmH,EAAAsjC,GACAgjF,EAAArmH,EAAAqjC,GAIA,SAAAgjF,EAAAx3E,EAAAxL,GAEA7W,EAAA7nB,KAAA,OACA8sC,EAAA9sC,KAAA0+B,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,YAEA8lH,EAAAj3E,KAEAi3E,EAAAj3E,OAIAi3E,EAAAj3E,GAAAlqC,KAAA6nB,EAAAvqB,OAAA,KA/DAmkH,EAAA,UAAAL,GACAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GAIAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GAIAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GACAK,EAAA,UAAAL,GAIAK,EAAA,SAAAJ,GACAI,EAAA,SAAAJ,GACAI,EAAA,SAAAJ,GACAI,EAAA,SAAAJ,GAIAI,EAAA,UAAAH,GACAG,EAAA,UAAAH,GACAG,EAAA,UAAAH,GAIAG,EAAA,QAAAF,GACAE,EAAA,QAAAD,GAIAC,EAAA,YAAAD,GACAC,EAAA,YAAAD,GAEAC,EAAA,YAAAD,GACAC,EAAA,YAAAD,GAwBA75F,EAAAuwB,aAAA,eAAAlJ,GAAAnnB,EAAA,IACAF,EAAAuwB,aAAA,YAAAlJ,GAAAlC,EAAA,IAEAu2C,GAAAxrF,KAAAmD,KAAA2sB,EAAA4jB,GAEAvwC,KAAAijB,SACAjjB,KAAAijB,OAAAsqB,wBAAAvtC,KAAAijB,OAAAsqB,yBAEAvtC,KAAA4F,OAAAqd,EAAAE,YACAnjB,KAAA4mB,oBAEA5mB,KAAAmmH,WAEAnmH,KAAA0f,SA8FA,SAAAinG,GAAA7oH,EAAA4lC,GAEA1jC,KAAAlC,kBAEA4lC,MAAA,UAEA,IAAAoR,EAAA,IAAAnB,aAAA,kDACAoB,EAAA,IAAAd,aAAA,IAEAtnB,EAAA,IAAA6uB,GACA7uB,EAAAswB,SAAA,IAAAnK,GAAAgC,EAAA,IACAnoB,EAAAuwB,aAAA,eAAApK,GAAAiC,EAAA,IAEAszC,GAAAxrF,KAAAmD,KAAA2sB,EAAA,IAAAqlC,IAA4DtuB,WAE5D1jC,KAAA4mB,oBAEA5mB,KAAA0f,SA+EA,SAAAknG,GAAAlhG,EAAAwd,GAEAljC,KAAA2E,KAAA,aAEA3E,KAAA0lB,MAEA,IAAAge,WAAAR,IAAA,SAEA4R,EAAA,IAAAnB,aAAA,kDAIAhnB,EAAA,IAAA6uB,GAEA7uB,EAAAswB,SAAA,IAAAnK,GAAAgC,EAAA,IAEAnoB,EAAAuwB,aAAA,eAAAlJ,IANA,6DAMA,IAEAq0C,GAAAxrF,KAAAmD,KAAA2sB,EAAA,IAAAqlC,IAA4DtuB,WAE5D1jC,KAAA2sB,SAAA6E,wBA2BA,SAAAq1F,GAAAr5F,EAAA1B,EAAAoX,GAEAljC,KAAA2E,KAAA,cAEA3E,KAAAwtB,QAEAxtB,KAAA8rB,gBAAA,EAAAA,EAEA,IAAA4X,WAAAR,IAAA,SAIAvW,EAAA,IAAA6uB,GACA7uB,EAAAuwB,aAAA,eAAAlJ,IAHA,qEAGA,IACArnB,EAAA6E,wBAEA42D,GAAAvrF,KAAAmD,KAAA2sB,EAAA,IAAAqlC,IAAoDtuB,WAIpD,IAEAsb,EAAA,IAAAxD,GACAwD,EAAA9B,aAAA,eAAAlJ,IAHA,2CAGA,IACAgL,EAAAxtB,wBAEAxxB,KAAAyR,IAAA,IAAAixC,GAAA1D,EAAA,IAAAkC,IAAwDxd,QAAAuB,QAAA,GAAA2a,eAAAS,kBAwCxD,SAAAymE,GAAA1nG,EAAAmjC,EAAAjgD,EAAAohC,EAAAqjF,EAAAC,GAIA36E,GAAAxvC,KAAAmD,eAEA0jC,MAAA,mBACAphC,MAAA,YACAykH,MAAA,GAAAzkH,YACA0kH,MAAA,GAAAD,YAEAvI,MAEAA,GAAA,IAAAhjE,IACA0B,aAAA,eAAAlJ,IAAA,kBAEAyqE,GAAA,IAAAliB,GAAA,aACAh3E,UAAA,UAIAvlB,KAAA+c,SAAAxL,KAAAgxC,GAEAviD,KAAAsvB,KAAA,IAAA84D,GAAAo2B,GAAA,IAAAxsD,IAA6DtuB,WAC7D1jC,KAAAsvB,KAAA1I,oBACA5mB,KAAAyR,IAAAzR,KAAAsvB,MAEAtvB,KAAAklH,KAAA,IAAAxiE,GAAA+7D,GAAA,IAAAv9D,IAA6Dxd,WAC7D1jC,KAAAklH,KAAAt+F,oBACA5mB,KAAAyR,IAAAzR,KAAAklH,MAEAllH,KAAAinH,aAAA7nG,GACApf,KAAA0T,UAAApR,EAAAykH,EAAAC,GAgEA,SAAAE,GAAAp7F,GAIA,IAAAe,GACA,MAHAf,KAAA,EAGA,IACA,QAAAA,EAAA,EACA,UAAAA,GASAa,EAAA,IAAA6uB,GACA7uB,EAAAuwB,aAAA,eAAAlJ,GAAAnnB,EAAA,IACAF,EAAAuwB,aAAA,YAAAlJ,IAPA,aACA,aACA,cAKA,IAEA,IAAAzD,EAAA,IAAAyhB,IAAwCrkB,aAAAhnC,IAExC0hF,GAAAxrF,KAAAmD,KAAA2sB,EAAA4jB,GA2QA,SAAA42E,GAAA3hG,GAEA3iB,QAAA6O,KAAA,sEAEA4zF,GAAAzoG,KAAAmD,KAAAwlB,GACAxlB,KAAA2E,KAAA,aA9iMAvH,OAAA4D,OAAA69G,GAAA7gH,WAEA4iG,KAAA,SAAAn3E,EAAAu0E,EAAAC,EAAAC,GAEA,IAAA0E,EAAA,IAAA5D,GAAAh/F,KAAAi/F,SACA2D,EAAAJ,gBAAA,eACAI,EAAAhC,KAAAn3E,EAAA,SAAAyyD,GAEAwiC,GAAA30F,aAEAq9F,gBAAAlrC,EAAA,SAAAmrC,GAEArpB,EAAAqpB,MAIGppB,EAAAC,MA4BH9gG,OAAA4D,OAlBA,WAEAhB,KAAA2E,KAAA,eAEA3E,KAAAooE,OAAA,EAEApoE,KAAA49G,OAAA,KAEA59G,KAAAqpE,QAAA,IAAAnB,GACAloE,KAAAqpE,QAAAn9B,OAAAJ,OAAA,GACA9rC,KAAAqpE,QAAAziD,oBAEA5mB,KAAAupE,QAAA,IAAArB,GACAloE,KAAAupE,QAAAr9B,OAAAJ,OAAA,GACA9rC,KAAAupE,QAAA3iD,qBAIA5oB,WAEA0hB,QAIAm+F,GAAA,IAAA7tG,GACA8tG,GAAA,IAAA9tG,GAEA,SAAAiT,GAMA,GAJA06F,KAAA39G,MAAAqoE,KAAAplD,EAAAolD,OAAAF,KAAAllD,EAAAklD,KACAC,KAAAnlD,EAAAmlD,OAAApoE,KAAAooE,QAAAvqD,KAAAoF,EAAApF,MACAC,KAAAmF,EAAAnF,KAAAuvB,KAAApqB,EAAAoqB,MAAAuwE,KAAA59G,KAAA49G,OAEA,CAEAD,GAAA39G,KACAqoE,GAAAplD,EAAAolD,MACAF,GAAAllD,EAAAklD,IACAC,GAAAnlD,EAAAmlD,OAAApoE,KAAAooE,OACAvqD,GAAAoF,EAAApF,KACAC,GAAAmF,EAAAnF,IACAuvB,GAAApqB,EAAAoqB,KAKA,IAIAi6E,EAAAC,EAJArkG,EAAAD,EAAAC,iBAAA7R,QAEAm2G,GADA5J,GAAA59G,KAAA49G,OAAA,GACA//F,GAAAwqD,GACAo/C,EAAA5pG,GAAAve,KAAA6iC,IAAAz0B,GAAAC,QAAAw6D,GAAA,IAAA96B,GAKAywE,GAAA7tG,SAAA,KAAA2tG,GACAC,GAAA5tG,SAAA,IAAA2tG,GAIA0J,GAAAG,EAAAr/C,GAAAo/C,EACAD,EAAAE,EAAAr/C,GAAAo/C,EAEAtkG,EAAAjT,SAAA,KAAA4N,IAAA0pG,EAAAD,GACApkG,EAAAjT,SAAA,IAAAs3G,EAAAD,IAAAC,EAAAD,GAEAtnH,KAAAqpE,QAAAnmD,iBAAA3R,KAAA2R,GAIAokG,GAAAG,EAAAr/C,GAAAo/C,EACAD,EAAAE,EAAAr/C,GAAAo/C,EAEAtkG,EAAAjT,SAAA,KAAA4N,IAAA0pG,EAAAD,GACApkG,EAAAjT,SAAA,IAAAs3G,EAAAD,IAAAC,EAAAD,GAEAtnH,KAAAupE,QAAArmD,iBAAA3R,KAAA2R,GAIAljB,KAAAqpE,QAAAlmD,YAAA5R,KAAA0R,EAAAE,aAAAlR,SAAA6rG,IACA99G,KAAAupE,QAAApmD,YAAA5R,KAAA0R,EAAAE,aAAAlR,SAAA4rG,QA8GAiB,GAAA9gH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACA8gH,GAAA9gH,UAAAsT,YAAAwtG,GAqBAQ,GAAAthH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAguG,GAEAM,SAAA,WAEA,OAAA5/G,KAAAu/G,MAIAmI,aAAA,WAEA,OAAA1nH,KAAAm2D,SAEAn2D,KAAAu/G,KAAAoI,WAAA3nH,KAAAm2D,QACAn2D,KAAAm2D,OAAAwxD,WAAA3nH,KAAA8pB,QAAA41F,aACA1/G,KAAAu/G,KAAAE,QAAAz/G,KAAA8pB,QAAA41F,aACA1/G,KAAAm2D,OAAA,OAMAyxD,UAAA,WAEA,OAAA5nH,KAAAm2D,QAIA0xD,UAAA,SAAAnqH,GAEA,OAAAsC,KAAAm2D,QAEAn2D,KAAAu/G,KAAAoI,WAAA3nH,KAAAm2D,QACAn2D,KAAAm2D,OAAAwxD,WAAA3nH,KAAA8pB,QAAA41F,cAIA1/G,KAAAu/G,KAAAoI,WAAA3nH,KAAA8pB,QAAA41F,aAIA1/G,KAAAm2D,OAAAz4D,EACAsC,KAAAu/G,KAAAE,QAAAz/G,KAAAm2D,QACAn2D,KAAAm2D,OAAAspD,QAAAz/G,KAAA8pB,QAAA41F,cAIAoI,gBAAA,WAEA,OAAA9nH,KAAAu/G,UAAA7hH,OAIAqqH,gBAAA,SAAArqH,GAEAsC,KAAAu/G,UAAAyI,gBAAAtqH,EAAAsC,KAAA8pB,QAAAm+F,YAAA,MAIAj7F,kBAAA,WAEA,IAAAjQ,EAAA,IAAAvM,GACAzK,EAAA,IAAAmK,GACA4L,EAAA,IAAAtL,GAEAs6D,EAAA,IAAAt6D,GAEA,gBAAAo/B,GAEAvD,GAAAruC,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,GAEA,IAAAhrC,EAAA5E,KAAA8pB,QAAAllB,SACA4T,EAAAxY,KAAAwY,GAEAxY,KAAAmjB,YAAAnG,UAAAD,EAAAhX,EAAA+V,GAEAgvD,EAAAl6D,IAAA,QAAA0R,gBAAAvc,GAEAnB,EAAAsjH,WAEAtjH,EAAAsjH,UAAAC,eAAAprG,EAAA3Y,EAAApE,KAAA8pB,QAAAm+F,aACArjH,EAAAwjH,UAAAD,eAAAprG,EAAAlX,EAAA7F,KAAA8pB,QAAAm+F,aACArjH,EAAAyjH,UAAAF,eAAAprG,EAAAjX,EAAA9F,KAAA8pB,QAAAm+F,aACArjH,EAAA0jH,SAAAH,eAAAr9C,EAAA1mE,EAAApE,KAAA8pB,QAAAm+F,aACArjH,EAAA2jH,SAAAJ,eAAAr9C,EAAAjlE,EAAA7F,KAAA8pB,QAAAm+F,aACArjH,EAAA4jH,SAAAL,eAAAr9C,EAAAhlE,EAAA9F,KAAA8pB,QAAAm+F,aACArjH,EAAA6jH,IAAAN,eAAA3vG,EAAApU,EAAApE,KAAA8pB,QAAAm+F,aACArjH,EAAA8jH,IAAAP,eAAA3vG,EAAA3S,EAAA7F,KAAA8pB,QAAAm+F,aACArjH,EAAA+jH,IAAAR,eAAA3vG,EAAA1S,EAAA9F,KAAA8pB,QAAAm+F,eAIArjH,EAAAwW,YAAA2B,EAAA3Y,EAAA2Y,EAAAlX,EAAAkX,EAAAjX,GACAlB,EAAAgkH,eAAA99C,EAAA1mE,EAAA0mE,EAAAjlE,EAAAilE,EAAAhlE,EAAA0S,EAAApU,EAAAoU,EAAA3S,EAAA2S,EAAA1S,KAlCA,KA2EA65G,GAAA3hH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAujB,GAAAruC,YAEAsT,YAAAquG,GAEAkB,UAAA,WAEA,OAAA7gH,KAAAu/G,MAIAsJ,cAAA,SAAAC,GAOA,OALA9oH,KAAAigH,sBACAjgH,KAAAkgH,WAAA,YACAlgH,KAAA+B,OAAA+mH,EACA9oH,KAAAy/G,UAEAz/G,MAIA+oH,UAAA,SAAA1B,GAOA,OALArnH,KAAAk8E,OAAAmrC,EACArnH,KAAAkgH,WAAA,SAEAlgH,KAAA6/G,UAAA7/G,KAAAgpH,OAEAhpH,MAIAgpH,KAAA,WAEA,QAAAhpH,KAAAggH,UAAA,CAOA,QAAAhgH,KAAAigH,mBAAA,CAOA,IAAAl+G,EAAA/B,KAAA8pB,QAAAm/F,qBAaA,OAXAlnH,EAAAm6E,OAAAl8E,KAAAk8E,OACAn6E,EAAA+9G,KAAA9/G,KAAA8/G,KACA/9G,EAAAmnH,QAAAlpH,KAAAmpH,QAAAnqH,KAAAgB,MACA+B,EAAAg+G,aAAAoI,eAAAnoH,KAAA+/G,aAAA//G,KAAAmwG,WACAnwG,KAAAmwG,UAAAnwG,KAAA8pB,QAAAm+F,YACAlmH,EAAA2tB,MAAA1vB,KAAAmwG,UAAAnwG,KAAApB,QAEAoB,KAAAggH,aAEAhgH,KAAA+B,SAEA/B,KAAAy/G,UAlBA58G,QAAA6O,KAAA,yDAPA7O,QAAA6O,KAAA,2CA6BA03G,MAAA,WAEA,QAAAppH,KAAAigH,mBAeA,WARAjgH,KAAAggH,YAEAhgH,KAAA+B,OAAAovF,OACAnxF,KAAApB,SAAAoB,KAAA8pB,QAAAm+F,YAAAjoH,KAAAmwG,WAAAnwG,KAAA+/G,aACA//G,KAAAggH,cAIAhgH,KAbA6C,QAAA6O,KAAA,qDAiBAy/E,KAAA,WAEA,QAAAnxF,KAAAigH,mBAWA,OAJAjgH,KAAA+B,OAAAovF,OACAnxF,KAAApB,OAAA,EACAoB,KAAAggH,aAEAhgH,KATA6C,QAAA6O,KAAA,qDAaA+tG,QAAA,WAEA,GAAAz/G,KAAAmgH,QAAA79G,OAAA,GAEAtC,KAAA+B,OAAA09G,QAAAz/G,KAAAmgH,QAAA,IAEA,QAAAzjH,EAAA,EAAAC,EAAAqD,KAAAmgH,QAAA79G,OAA4C5F,EAAAC,EAAOD,IAEnDsD,KAAAmgH,QAAAzjH,EAAA,GAAA+iH,QAAAz/G,KAAAmgH,QAAAzjH,IAIAsD,KAAAmgH,QAAAngH,KAAAmgH,QAAA79G,OAAA,GAAAm9G,QAAAz/G,KAAA6gH,kBAIA7gH,KAAA+B,OAAA09G,QAAAz/G,KAAA6gH,aAIA,OAAA7gH,MAIA2nH,WAAA,WAEA,GAAA3nH,KAAAmgH,QAAA79G,OAAA,GAEAtC,KAAA+B,OAAA4lH,WAAA3nH,KAAAmgH,QAAA,IAEA,QAAAzjH,EAAA,EAAAC,EAAAqD,KAAAmgH,QAAA79G,OAA4C5F,EAAAC,EAAOD,IAEnDsD,KAAAmgH,QAAAzjH,EAAA,GAAAirH,WAAA3nH,KAAAmgH,QAAAzjH,IAIAsD,KAAAmgH,QAAAngH,KAAAmgH,QAAA79G,OAAA,GAAAqlH,WAAA3nH,KAAA6gH,kBAIA7gH,KAAA+B,OAAA4lH,WAAA3nH,KAAA6gH,aAIA,OAAA7gH,MAIAqpH,WAAA,WAEA,OAAArpH,KAAAmgH,SAIAmJ,WAAA,SAAA5rH,GAgBA,OAdAA,eAEAsC,KAAAggH,WAEAhgH,KAAA2nH,aACA3nH,KAAAmgH,QAAAziH,EACAsC,KAAAy/G,WAIAz/G,KAAAmgH,QAAAziH,EAIAsC,MAIA4nH,UAAA,WAEA,OAAA5nH,KAAAqpH,aAAA,IAIAxB,UAAA,SAAA1xD,GAEA,OAAAn2D,KAAAspH,WAAAnzD,WAIAozD,gBAAA,SAAA7rH,GAEA,QAAAsC,KAAAigH,mBAeA,OARAjgH,KAAA+/G,aAAAriH,OAEAsC,KAAAggH,WAEAhgH,KAAA+B,OAAAg+G,aAAAoI,eAAAnoH,KAAA+/G,aAAA//G,KAAA8pB,QAAAm+F,aAIAjoH,KAbA6C,QAAA6O,KAAA,qDAiBA83G,gBAAA,WAEA,OAAAxpH,KAAA+/G,cAIAoJ,QAAA,WAEAnpH,KAAAggH,cAIAyJ,QAAA,WAEA,WAAAzpH,KAAAigH,oBAEAp9G,QAAA6O,KAAA,wDAKA1R,KAAA8/G,MAIA4J,QAAA,SAAAhsH,GAEA,QAAAsC,KAAAigH,mBAeA,OARAjgH,KAAA8/G,KAAApiH,OAEAsC,KAAAggH,YAEAhgH,KAAA+B,OAAA+9G,KAAA9/G,KAAA8/G,MAIA9/G,KAbA6C,QAAA6O,KAAA,qDAiBAi4G,UAAA,WAEA,OAAA3pH,KAAAu/G,UAAA7hH,OAIAksH,UAAA,SAAAlsH,GAIA,OAFAsC,KAAAu/G,UAAAyI,gBAAAtqH,EAAAsC,KAAA8pB,QAAAm+F,YAAA,KAEAjoH,QAmBAogH,GAAApiH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAA62F,GAAA3hH,YAEAsT,YAAA8uG,GAEAS,UAAA,WAEA,OAAA7gH,KAAAqgH,QAIAwJ,eAAA,WAEA,OAAA7pH,KAAAqgH,OAAAyJ,aAIAC,eAAA,SAAArsH,GAEAsC,KAAAqgH,OAAAyJ,YAAApsH,GAIAssH,iBAAA,WAEA,OAAAhqH,KAAAqgH,OAAA4J,eAIAC,iBAAA,SAAAxsH,GAEAsC,KAAAqgH,OAAA4J,cAAAvsH,GAIAysH,iBAAA,WAEA,OAAAnqH,KAAAqgH,OAAA+J,eAIAC,iBAAA,SAAA3sH,GAEAsC,KAAAqgH,OAAA+J,cAAA1sH,GAIA4sH,eAAA,WAEA,OAAAtqH,KAAAqgH,OAAAkK,aAIAC,eAAA,SAAA9sH,GAEAsC,KAAAqgH,OAAAkK,YAAA7sH,GAIAsvB,kBAAA,WAEA,IAAAjQ,EAAA,IAAAvM,GAEA,gBAAAo/B,GAEAvD,GAAAruC,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,GAEA7yB,EAAA2H,sBAAA1kB,KAAAmjB,aAEAnjB,KAAAqgH,OAAAjlG,YAAA2B,EAAA3Y,EAAA2Y,EAAAlX,EAAAkX,EAAAjX,IAVA,KAkCA1I,OAAA4D,OAAAu/G,GAAAviH,WAEAysH,iBAAA,WAIA,OAFAzqH,KAAA0gH,SAAAgK,qBAAA1qH,KAAAkoB,MAEAloB,KAAAkoB,MAIAyiG,oBAAA,WAIA,IAFA,IAAAjtH,EAAA,EAAAwqB,EAAAloB,KAAAyqH,mBAEA/tH,EAAA,EAAkBA,EAAAwrB,EAAA5lB,OAAiB5F,IAEnCgB,GAAAwqB,EAAAxrB,GAIA,OAAAgB,EAAAwqB,EAAA5lB,UA8DAlF,OAAA4D,OAAA8/G,GAAA9iH,WAGA4sH,WAAA,SAAAC,EAAAxkB,GAKA,IAAAnqB,EAAAl8E,KAAAk8E,OACAwF,EAAA1hF,KAAA0oG,UACA9pG,EAAAisH,EAAAnpC,IAEAopC,EAAA9qH,KAAAqhH,iBAEA,OAAAyJ,EAAA,CAIA,QAAApuH,EAAA,EAAmBA,IAAAglF,IAAchlF,EAEjCw/E,EAAAt9E,EAAAlC,GAAAw/E,EAAAx/E,GAIAouH,EAAAzkB,MAEG,CAKH,IAAA0kB,EAAA1kB,GADAykB,GAAAzkB,GAEArmG,KAAAohH,iBAAAllC,EAAAt9E,EAAA,EAAAmsH,EAAArpC,GAIA1hF,KAAAqhH,iBAAAyJ,GAKA3vC,MAAA,SAAA0vC,GAEA,IAAAnpC,EAAA1hF,KAAA0oG,UACAxsB,EAAAl8E,KAAAk8E,OACAt9E,EAAAisH,EAAAnpC,IAEA2kB,EAAArmG,KAAAqhH,iBAEAN,EAAA/gH,KAAA+gH,QAIA,GAFA/gH,KAAAqhH,iBAAA,EAEAhb,EAAA,GAIA,IAAA2kB,EAAA,EAAAtpC,EAEA1hF,KAAAohH,iBACAllC,EAAAt9E,EAAAosH,EAAA,EAAA3kB,EAAA3kB,GAIA,QAAAhlF,EAAAglF,EAAArjF,EAAAqjF,IAA4ChlF,IAAA2B,IAAS3B,EAErD,GAAAw/E,EAAAx/E,KAAAw/E,EAAAx/E,EAAAglF,GAAA,CAIAq/B,EAAAjzD,SAAAouB,EAAAt9E,GACA,QASAqsH,kBAAA,WAEA,IAAAlK,EAAA/gH,KAAA+gH,QAEA7kC,EAAAl8E,KAAAk8E,OACAwF,EAAA1hF,KAAA0oG,UAEAsiB,EAAA,EAAAtpC,EAEAq/B,EAAAmK,SAAAhvC,EAAA8uC,GAGA,QAAAtuH,EAAAglF,EAAArjF,EAAA2sH,EAAgDtuH,IAAA2B,IAAS3B,EAEzDw/E,EAAAx/E,GAAAw/E,EAAA8uC,EAAAtuH,EAAAglF,GAIA1hF,KAAAqhH,iBAAA,GAKA8J,qBAAA,WAEA,IAAAH,EAAA,EAAAhrH,KAAA0oG,UACA1oG,KAAA+gH,QAAAjzD,SAAA9tD,KAAAk8E,OAAA8uC,IAOA9J,QAAA,SAAAhlC,EAAA39D,EAAAkwF,EAAArwG,EAAAsjF,GAEA,GAAAtjF,GAAA,GAEA,QAAA1B,EAAA,EAAmBA,IAAAglF,IAAchlF,EAEjCw/E,EAAA39D,EAAA7hB,GAAAw/E,EAAAuyB,EAAA/xG,IAQAukH,OAAA,SAAA/kC,EAAA39D,EAAAkwF,EAAArwG,GAEA8R,GAAAmO,UAAA69D,EAAA39D,EAAA29D,EAAA39D,EAAA29D,EAAAuyB,EAAArwG,IAIA+iH,MAAA,SAAAjlC,EAAA39D,EAAAkwF,EAAArwG,EAAAsjF,GAIA,IAFA,IAAAvjF,EAAA,EAAAC,EAEA1B,EAAA,EAAkBA,IAAAglF,IAAchlF,EAAA,CAEhC,IAAAyxB,EAAA5P,EAAA7hB,EAEAw/E,EAAA/tD,GAAA+tD,EAAA/tD,GAAAhwB,EAAA+9E,EAAAuyB,EAAA/xG,GAAA0B,MA8BAhB,OAAA4D,OAAAwgH,GAAAxjH,WAEAktH,SAAA,SAAA3lH,EAAA3G,GAEAoB,KAAAhB,OAEA,IAAAosH,EAAAprH,KAAA8hH,aAAAuJ,gBACAtK,EAAA/gH,KAAA+hH,UAAAqJ,YAGArK,KAAAmK,SAAA3lH,EAAA3G,IAIAkvD,SAAA,SAAAvoD,EAAA3G,GAIA,IAFA,IAAA0sH,EAAAtrH,KAAA+hH,UAEArlH,EAAAsD,KAAA8hH,aAAAuJ,gBACA1tH,EAAA2tH,EAAAhpH,OAA0B5F,IAAAiB,IAASjB,EAEnC4uH,EAAA5uH,GAAAoxD,SAAAvoD,EAAA3G,IAMAI,KAAA,WAIA,IAFA,IAAAssH,EAAAtrH,KAAA+hH,UAEArlH,EAAAsD,KAAA8hH,aAAAuJ,gBACA1tH,EAAA2tH,EAAAhpH,OAA0B5F,IAAAiB,IAASjB,EAEnC4uH,EAAA5uH,GAAAsC,QAMAusH,OAAA,WAIA,IAFA,IAAAD,EAAAtrH,KAAA+hH,UAEArlH,EAAAsD,KAAA8hH,aAAAuJ,gBACA1tH,EAAA2tH,EAAAhpH,OAA0B5F,IAAAiB,IAASjB,EAEnC4uH,EAAA5uH,GAAA6uH,YAoBAnuH,OAAA4D,OAAA4gH,IAEAJ,aAEA14F,OAAA,SAAAi7F,EAAAz1D,EAAAqzD,GAEA,OAAAoC,KAAAyH,uBAMA,IAAA5J,GAAAJ,UAAAuC,EAAAz1D,EAAAqzD,GAJA,IAAAC,GAAAmC,EAAAz1D,EAAAqzD,IAiBA8J,kBAEAlN,GAAA,IAAAmN,OAAA,uBAEA,SAAAzuH,GAEA,OAAAA,EAAA0D,QAAA,WAAAA,QAAA49G,GAAA,MAMAsD,gBAKA9D,GAAA,mBACAC,GAAA,KAzHA,gBAyHAr9G,QAAA,cAIAs9G,GAAA,kBAAAl8G,OAAApB,QAAA,KAAAo9G,IAGAG,GAAA,WAAAn8G,OAAApB,QAAA,OAAAq9G,IAIAG,GAAA,4BAAAp8G,OAAApB,QAAA,KAAAo9G,IAIAK,GAAA,uBAAAr8G,OAAApB,QAAA,KAAAo9G,IAEAM,GAAA,IAAAqN,OACA,IACAzN,GACAC,GACAC,GACAC,GACA,KAGAE,IAAA,gCAEA,SAAAhM,GAEA,IAAAqZ,EAAAtN,GAAA56E,KAAA6uE,GAEA,IAAAqZ,EAEA,UAAAnrH,MAAA,4CAAA8xG,GAIA,IAAAsZ,GAEAzJ,SAAAwJ,EAAA,GACAE,WAAAF,EAAA,GACAG,YAAAH,EAAA,GACAnZ,aAAAmZ,EAAA,GACAI,cAAAJ,EAAA,IAGAK,EAAAJ,EAAAzJ,UAAAyJ,EAAAzJ,SAAApL,YAAA,KAEA,YAAAiV,IAAA,IAAAA,EAAA,CAEA,IAAAH,EAAAD,EAAAzJ,SAAA/J,UAAA4T,EAAA,IAMA,IAAA1N,GAAAv5G,QAAA8mH,KAEAD,EAAAzJ,SAAAyJ,EAAAzJ,SAAA/J,UAAA,EAAA4T,GACAJ,EAAAC,cAMA,UAAAD,EAAApZ,cAAA,IAAAoZ,EAAApZ,aAAAlwG,OAEA,UAAA9B,MAAA,+DAAA8xG,GAIA,OAAAsZ,IAMA1J,SAAA,SAAA6B,EAAA5B,GAEA,IAAAA,GAAA,KAAAA,GAAA,SAAAA,GAAA,MAAAA,IAAA,IAAAA,OAAA4B,EAAA9mH,MAAAklH,IAAA4B,EAAArhH,KAEA,OAAAqhH,EAKA,GAAAA,EAAAhxD,SAAA,CAEA,IAAA86B,EAAAk2B,EAAAhxD,SAAAg7B,cAAAo0B,GAEA,YAAAt0B,EAEA,OAAAA,EAOA,GAAAk2B,EAAAx3E,SAAA,CAEA,IAAA0/E,EAAA,SAAA1/E,GAEA,QAAA7vC,EAAA,EAAoBA,EAAA6vC,EAAAjqC,OAAqB5F,IAAA,CAEzC,IAAAwvH,EAAA3/E,EAAA7vC,GAEA,GAAAwvH,EAAAjvH,OAAAklH,GAAA+J,EAAAxpH,OAAAy/G,EAEA,OAAA+J,EAIA,IAAAhvD,EAAA+uD,EAAAC,EAAA3/E,UAEA,GAAA2wB,EAAA,OAAAA,EAIA,aAIAivD,EAAAF,EAAAlI,EAAAx3E,UAEA,GAAA4/E,EAEA,OAAAA,EAMA,eAMA/uH,OAAA4D,OAAA4gH,GAAA5jH,WAGAouH,sBAAA,aACAC,sBAAA,aAEAC,aACAC,OAAA,EACAC,YAAA,EACAC,aAAA,EACAC,eAAA,GAGAC,YACAC,KAAA,EACAC,YAAA,EACAC,uBAAA,GAGAC,qBAEA,SAAA7wC,EAAAt9E,GAEAs9E,EAAAt9E,GAAAoB,KAAA0sB,KAAA1sB,KAAAwyG,eAIA,SAAAt2B,EAAAt9E,GAIA,IAFA,IAAAmD,EAAA/B,KAAAgtH,iBAEAtwH,EAAA,EAAAiB,EAAAoE,EAAAO,OAAsC5F,IAAAiB,IAASjB,EAE/Cw/E,EAAAt9E,KAAAmD,EAAArF,IAMA,SAAAw/E,EAAAt9E,GAEAs9E,EAAAt9E,GAAAoB,KAAAgtH,iBAAAhtH,KAAA+rH,gBAIA,SAAA7vC,EAAAt9E,GAEAoB,KAAAgtH,iBAAAh5G,QAAAkoE,EAAAt9E,KAMAquH,mCAKA,SAAA/wC,EAAAt9E,GAEAoB,KAAAktH,aAAAltH,KAAAwyG,cAAAt2B,EAAAt9E,IAIA,SAAAs9E,EAAAt9E,GAEAoB,KAAAktH,aAAAltH,KAAAwyG,cAAAt2B,EAAAt9E,GACAoB,KAAAktH,aAAAnvE,gBAIA,SAAAm+B,EAAAt9E,GAEAoB,KAAAktH,aAAAltH,KAAAwyG,cAAAt2B,EAAAt9E,GACAoB,KAAAktH,aAAAvgF,6BAQA,SAAAuvC,EAAAt9E,GAIA,IAFA,IAAAuuH,EAAAntH,KAAAgtH,iBAEAtwH,EAAA,EAAAiB,EAAAwvH,EAAA7qH,OAAqC5F,IAAAiB,IAASjB,EAE9CywH,EAAAzwH,GAAAw/E,EAAAt9E,MAMA,SAAAs9E,EAAAt9E,GAIA,IAFA,IAAAuuH,EAAAntH,KAAAgtH,iBAEAtwH,EAAA,EAAAiB,EAAAwvH,EAAA7qH,OAAqC5F,IAAAiB,IAASjB,EAE9CywH,EAAAzwH,GAAAw/E,EAAAt9E,KAIAoB,KAAAktH,aAAAnvE,gBAIA,SAAAm+B,EAAAt9E,GAIA,IAFA,IAAAuuH,EAAAntH,KAAAgtH,iBAEAtwH,EAAA,EAAAiB,EAAAwvH,EAAA7qH,OAAqC5F,IAAAiB,IAASjB,EAE9CywH,EAAAzwH,GAAAw/E,EAAAt9E,KAIAoB,KAAAktH,aAAAvgF,6BAQA,SAAAuvC,EAAAt9E,GAEAoB,KAAAgtH,iBAAAhtH,KAAA+rH,eAAA7vC,EAAAt9E,IAIA,SAAAs9E,EAAAt9E,GAEAoB,KAAAgtH,iBAAAhtH,KAAA+rH,eAAA7vC,EAAAt9E,GACAoB,KAAAktH,aAAAnvE,gBAIA,SAAAm+B,EAAAt9E,GAEAoB,KAAAgtH,iBAAAhtH,KAAA+rH,eAAA7vC,EAAAt9E,GACAoB,KAAAktH,aAAAvgF,6BAQA,SAAAuvC,EAAAt9E,GAEAoB,KAAAgtH,iBAAAj5G,UAAAmoE,EAAAt9E,IAIA,SAAAs9E,EAAAt9E,GAEAoB,KAAAgtH,iBAAAj5G,UAAAmoE,EAAAt9E,GACAoB,KAAAktH,aAAAnvE,gBAIA,SAAAm+B,EAAAt9E,GAEAoB,KAAAgtH,iBAAAj5G,UAAAmoE,EAAAt9E,GACAoB,KAAAktH,aAAAvgF,6BAQAu+E,SAAA,SAAAkC,EAAAxuH,GAEAoB,KAAAhB,OACAgB,KAAAkrH,SAAAkC,EAAAxuH,IAUAkvD,SAAA,SAAAu/D,EAAAzuH,GAEAoB,KAAAhB,OACAgB,KAAA8tD,SAAAu/D,EAAAzuH,IAKAI,KAAA,WAEA,IAAAkuH,EAAAltH,KAAA0sB,KACAi1F,EAAA3hH,KAAA2hH,WAEAkK,EAAAlK,EAAAkK,WACArZ,EAAAmP,EAAAnP,aACAuZ,EAAApK,EAAAoK,cAeA,GAbAmB,IAEAA,EAAAtL,GAAAM,SAAAliH,KAAAiiH,SAAAN,EAAAQ,WAAAniH,KAAAiiH,SAEAjiH,KAAA0sB,KAAAwgG,GAKAltH,KAAAkrH,SAAAlrH,KAAAosH,sBACApsH,KAAA8tD,SAAA9tD,KAAAqsH,sBAGAa,EAAA,CAOA,GAAArB,EAAA,CAEA,IAAAC,EAAAnK,EAAAmK,YAGA,OAAAD,GAEA,gBAEA,IAAAqB,EAAA38E,SAGA,YADA1tC,QAAAtC,MAAA,oFAAAP,MAKA,IAAAktH,EAAA38E,SAAAT,UAGA,YADAjtC,QAAAtC,MAAA,8GAAAP,MAKAktH,IAAA38E,SAAAT,UAEA,MAEA,YAEA,IAAAo9E,EAAAn6D,SAGA,YADAlwD,QAAAtC,MAAA,iFAAAP,MAQAktH,IAAAn6D,SAAAD,MAGA,QAAAp2D,EAAA,EAAqBA,EAAAwwH,EAAA5qH,OAAyB5F,IAE9C,GAAAwwH,EAAAxwH,GAAAO,OAAA6uH,EAAA,CAEAA,EAAApvH,EACA,MAMA,MAEA,QAEA,YAAAwwH,EAAArB,GAGA,YADAhpH,QAAAtC,MAAA,uEAAAP,MAKAktH,IAAArB,GAKA,YAAAC,EAAA,CAEA,YAAAoB,EAAApB,GAGA,YADAjpH,QAAAtC,MAAA,wFAAAP,KAAAktH,GAKAA,IAAApB,IAOA,IAAAwB,EAAAJ,EAAA1a,GAEA,YAAA8a,EAAA,CAWA,IAAAC,EAAAvtH,KAAA2sH,WAAAC,cAEAM,EAAAnvE,aAEAwvE,EAAAvtH,KAAA2sH,WAAAE,YACA7sH,KAAAktH,yBAEGA,EAAAvgF,yBAEH4gF,EAAAvtH,KAAA2sH,WAAAG,uBACA9sH,KAAAktH,gBAKA,IAAAM,EAAAxtH,KAAAssH,YAAAC,OAEA,YAAAR,EAAA,CAIA,6BAAAvZ,EAAA,CAKA,IAAA0a,EAAAvgG,SAGA,YADA9pB,QAAAtC,MAAA,sGAAAP,MAKA,GAAAktH,EAAAvgG,SAAAG,iBAAA,CAEA,IAAAogG,EAAAvgG,SAAA8uB,gBAGA,YADA54C,QAAAtC,MAAA,sHAAAP,MAKA,IAAAtD,EAAA,EAAqBA,EAAAsD,KAAA0sB,KAAAC,SAAA8uB,gBAAA1+B,SAAAza,OAAwD5F,IAE7E,GAAAwwH,EAAAvgG,SAAA8uB,gBAAA1+B,SAAArgB,GAAAO,OAAA8uH,EAAA,CAEAA,EAAArvH,EACA,WAOK,CAEL,IAAAwwH,EAAAvgG,SAAAslB,aAGA,YADApvC,QAAAtC,MAAA,mHAAAP,MAKA,IAAAtD,EAAA,EAAqBA,EAAAsD,KAAA0sB,KAAAC,SAAAslB,aAAA3vC,OAA4C5F,IAEjE,GAAAwwH,EAAAvgG,SAAAslB,aAAAv1C,GAAAO,OAAA8uH,EAAA,CAEAA,EAAArvH,EACA,QAUA8wH,EAAAxtH,KAAAssH,YAAAG,aAEAzsH,KAAAgtH,iBAAAM,EACAttH,KAAA+rH,8BAEGuB,EAAAv5G,oBAAAu5G,EAAAt5G,SAIHw5G,EAAAxtH,KAAAssH,YAAAI,eAEA1sH,KAAAgtH,iBAAAM,GAEGjuH,MAAAm6B,QAAA8zF,IAEHE,EAAAxtH,KAAAssH,YAAAE,YAEAxsH,KAAAgtH,iBAAAM,GAIAttH,KAAAwyG,eAKAxyG,KAAAkrH,SAAAlrH,KAAA+sH,oBAAAS,GACAxtH,KAAA8tD,SAAA9tD,KAAAitH,iCAAAO,GAAAD,OApHA,CAEA,IAAApL,EAAAR,EAAAQ,SAEAt/G,QAAAtC,MAAA,+DAAA4hH,EACA,IAAA3P,EAAA,wBAAA0a,SAjGArqH,QAAAtC,MAAA,2DAAAP,KAAAsuD,KAAA,0BAoNAi9D,OAAA,WAEAvrH,KAAA0sB,KAAA,KAIA1sB,KAAAkrH,SAAAlrH,KAAAytH,kBACAztH,KAAA8tD,SAAA9tD,KAAA0tH;;AAOAtwH,OAAA4D,OAAA4gH,GAAA5jH,WAGAyvH,kBAAA7L,GAAA5jH,UAAAktH,SACAwC,kBAAA9L,GAAA5jH,UAAA8vD,WAqFA1wD,OAAA4D,OAlDA,WAEAhB,KAAA0C,KAAAgL,GAAAI,eAGA9N,KAAAw7D,SAAAn8D,MAAArB,UAAAwH,MAAA3I,KAAAwF,WAEArC,KAAAqrH,gBAAA,EAGA,IAAAv2E,KACA90C,KAAA2tH,eAAA74E,EAEA,QAAAp4C,EAAA,EAAAiB,EAAA0E,UAAAC,OAAuC5F,IAAAiB,IAASjB,EAEhDo4C,EAAAzyC,UAAA3F,GAAAgG,MAAAhG,EAIAsD,KAAA4tH,UACA5tH,KAAA6tH,gBACA7tH,KAAA+hH,aACA/hH,KAAA8tH,0BAEA,IAAAthG,EAAAxsB,KAEAA,KAAA+tH,OAEA/gD,SACAghD,YAEA,OAAAxhG,EAAAgvC,SAAAl5D,QAGA2rH,YAEA,OAAAjuH,KAAAguH,MAAAxhG,EAAA6+F,kBAIA6C,wBAEA,OAAA1hG,EAAAu1F,UAAAz/G,UAQAtE,WAEAwtH,0BAEA/5G,IAAA,WAYA,IAVA,IAAAu7D,EAAAhtE,KAAAw7D,SACA2yD,EAAAnhD,EAAA1qE,OACA8rH,EAAApuH,KAAAqrH,gBACAgD,EAAAruH,KAAA2tH,eACAvQ,EAAAp9G,KAAA4tH,OACAU,EAAAtuH,KAAA6tH,aACAvC,EAAAtrH,KAAA+hH,UACAwM,EAAAjD,EAAAhpH,OACAksH,SAEA9xH,EAAA,EAAAiB,EAAA0E,UAAAC,OAAwC5F,IAAAiB,IAASjB,EAAA,CAEjD,IAAAoB,EAAAuE,UAAA3F,GACAgG,EAAA5E,EAAA4E,KACA8B,EAAA6pH,EAAA3rH,GAEA,YAAA8B,EAAA,CAIAA,EAAA2pH,IACAE,EAAA3rH,GAAA8B,EACAwoE,EAAAhoE,KAAAlH,GAIA,QAAAqwB,EAAA,EAAArxB,EAAAyxH,EAAmCpgG,IAAArxB,IAASqxB,EAE5Cm9F,EAAAn9F,GAAAnpB,KAAA,IAAA48G,GAAA9jH,EAAAs/G,EAAAjvF,GAAAmgG,EAAAngG,UAII,GAAA3pB,EAAA4pH,EAAA,CAEJI,EAAAxhD,EAAAxoE,GAIA,IAAAiqH,IAAAL,EACAM,EAAA1hD,EAAAyhD,GAUA,IARAJ,EAAAK,EAAAhsH,MAAA8B,EACAwoE,EAAAxoE,GAAAkqH,EAEAL,EAAA3rH,GAAA+rH,EACAzhD,EAAAyhD,GAAA3wH,EAIAqwB,EAAA,EAAArxB,EAAAyxH,EAAmCpgG,IAAArxB,IAASqxB,EAAA,CAE5C,IAAAwgG,EAAArD,EAAAn9F,GACAygG,EAAAD,EAAAF,GACA1N,EAAA4N,EAAAnqH,GAEAmqH,EAAAnqH,GAAAoqH,WAEA7N,IAMAA,EAAA,IAAAa,GAAA9jH,EAAAs/G,EAAAjvF,GAAAmgG,EAAAngG,KAIAwgG,EAAAF,GAAA1N,QAII/zC,EAAAxoE,KAAAgqH,GAEJ3rH,QAAAtC,MAAA,sJAOAP,KAAAqrH,gBAAA+C,GAIAp/E,OAAA,WAQA,IANA,IAAAg+B,EAAAhtE,KAAAw7D,SACA4yD,EAAApuH,KAAAqrH,gBACAgD,EAAAruH,KAAA2tH,eACArC,EAAAtrH,KAAA+hH,UACAwM,EAAAjD,EAAAhpH,OAEA5F,EAAA,EAAAiB,EAAA0E,UAAAC,OAAwC5F,IAAAiB,IAASjB,EAAA,CAEjD,IAAAoB,EAAAuE,UAAA3F,GACAgG,EAAA5E,EAAA4E,KACA8B,EAAA6pH,EAAA3rH,GAEA,YAAA8B,MAAA4pH,EAAA,CAIA,IAAAS,EAAAT,IACAU,EAAA9hD,EAAA6hD,GAEAR,EAAAS,EAAApsH,MAAA8B,EACAwoE,EAAAxoE,GAAAsqH,EAEAT,EAAA3rH,GAAAmsH,EACA7hD,EAAA6hD,GAAA/wH,EAIA,QAAAqwB,EAAA,EAAArxB,EAAAyxH,EAAmCpgG,IAAArxB,IAASqxB,EAAA,CAE5C,IAAAwgG,EAAArD,EAAAn9F,GACA4gG,EAAAJ,EAAAE,GACA9N,EAAA4N,EAAAnqH,GAEAmqH,EAAAnqH,GAAAuqH,EACAJ,EAAAE,GAAA9N,IAQA/gH,KAAAqrH,gBAAA+C,GAKAY,QAAA,WASA,IAPA,IAAAhiD,EAAAhtE,KAAAw7D,SACA2yD,EAAAnhD,EAAA1qE,OACA8rH,EAAApuH,KAAAqrH,gBACAgD,EAAAruH,KAAA2tH,eACArC,EAAAtrH,KAAA+hH,UACAwM,EAAAjD,EAAAhpH,OAEA5F,EAAA,EAAAiB,EAAA0E,UAAAC,OAAwC5F,IAAAiB,IAASjB,EAAA,CAEjD,IACAgG,EADAL,UAAA3F,GACAgG,KACA8B,EAAA6pH,EAAA3rH,GAEA,YAAA8B,EAIA,UAFA6pH,EAAA3rH,GAEA8B,EAAA4pH,EAAA,CAIA,IAAAK,IAAAL,EACAM,EAAA1hD,EAAAyhD,GAEAQ,EAAAjiD,EADAxe,IAAA2/D,GAIAE,EAAAK,EAAAhsH,MAAA8B,EACAwoE,EAAAxoE,GAAAkqH,EAGAL,EAAAY,EAAAvsH,MAAA+rH,EACAzhD,EAAAyhD,GAAAQ,EACAjiD,EAAAxU,MAIA,QAAArqC,EAAA,EAAArxB,EAAAyxH,EAAoCpgG,IAAArxB,IAASqxB,EAAA,CAE7C,IACAygG,GADAD,EAAArD,EAAAn9F,IACAsgG,GACA3+B,EAAA6+B,EAAAngE,GAEAmgE,EAAAnqH,GAAAoqH,EACAD,EAAAF,GAAA3+B,EACA6+B,EAAAn2D,WAIK,CAIL,IAAAhK,EASA,IANA6/D,GAFAY,EAAAjiD,EADAxe,IAAA2/D,IAGAzrH,MAAA8B,EACAwoE,EAAAxoE,GAAAyqH,EACAjiD,EAAAxU,MAIArqC,EAAA,EAAArxB,EAAAyxH,EAAoCpgG,IAAArxB,IAASqxB,EAAA,CAE7C,IAAAwgG,KAAArD,EAAAn9F,IAEA3pB,GAAAmqH,EAAAngE,GACAmgE,EAAAn2D,QAUAx4D,KAAAqrH,gBAAA+C,GAMApM,WAAA,SAAA1zD,EAAAqzD,GAKA,IAAAuN,EAAAlvH,KAAA8tH,uBACAtpH,EAAA0qH,EAAA5gE,GACAg9D,EAAAtrH,KAAA+hH,UAEA,YAAAv9G,EAAA,OAAA8mH,EAAA9mH,GAEA,IAAA44G,EAAAp9G,KAAA4tH,OACAU,EAAAtuH,KAAA6tH,aACA7gD,EAAAhtE,KAAAw7D,SACA2yD,EAAAnhD,EAAA1qE,OACA8rH,EAAApuH,KAAAqrH,gBACAsD,EAAA,IAAAtvH,MAAA8uH,GAEA3pH,EAAA8mH,EAAAhpH,OAEA4sH,EAAA5gE,GAAA9pD,EAEA44G,EAAAp4G,KAAAspD,GACAggE,EAAAtpH,KAAA28G,GACA2J,EAAAtmH,KAAA2pH,GAEA,QAAAjyH,EAAA0xH,EAAAzwH,EAAAqvE,EAAA1qE,OAAmD5F,IAAAiB,IAASjB,EAAA,CAE5D,IAAAoB,EAAAkvE,EAAAtwE,GACAiyH,EAAAjyH,GAAA,IAAAklH,GAAA9jH,EAAAwwD,EAAAqzD,GAIA,OAAAgN,GAIAQ,aAAA,SAAA7gE,GAKA,IAAA4gE,EAAAlvH,KAAA8tH,uBACAtpH,EAAA0qH,EAAA5gE,GAEA,YAAA9pD,EAAA,CAEA,IAAA44G,EAAAp9G,KAAA4tH,OACAU,EAAAtuH,KAAA6tH,aACAvC,EAAAtrH,KAAA+hH,UACAqN,EAAA9D,EAAAhpH,OAAA,EACA+sH,EAAA/D,EAAA8D,GAGAF,EAFA5gE,EAAA8gE,IAEA5qH,EAEA8mH,EAAA9mH,GAAA6qH,EACA/D,EAAA9yD,MAEA81D,EAAA9pH,GAAA8pH,EAAAc,GACAd,EAAA91D,MAEA4kD,EAAA54G,GAAA44G,EAAAgS,GACAhS,EAAA5kD,UAoFAp7D,OAAA4D,OAAAohH,GAAApkH,WAIAgrH,KAAA,WAIA,OAFAhpH,KAAAuiH,OAAA+M,gBAAAtvH,MAEAA,MAIAmxF,KAAA,WAIA,OAFAnxF,KAAAuiH,OAAAgN,kBAAAvvH,MAEAA,KAAA0hE,SAIAA,MAAA,WASA,OAPA1hE,KAAA0jH,UACA1jH,KAAAmxC,WAEAnxC,KAAAkjF,KAAA,EACAljF,KAAAqjH,YAAA,EACArjH,KAAAsjH,WAAA,KAEAtjH,KAAAwvH,aAAAC,eAIAC,UAAA,WAEA,OAAA1vH,KAAAmxC,UAAAnxC,KAAA0jH,QAAA,IAAA1jH,KAAAkwG,WACA,OAAAlwG,KAAAsjH,YAAAtjH,KAAAuiH,OAAAoN,gBAAA3vH,OAKA4vH,YAAA,WAEA,OAAA5vH,KAAAuiH,OAAAoN,gBAAA3vH,OAIA6vH,QAAA,SAAA3sC,GAIA,OAFAljF,KAAAsjH,WAAApgC,EAEAljF,MAIA0pH,QAAA,SAAAnuC,EAAAkoC,GAKA,OAHAzjH,KAAA8/G,KAAAvkC,EACAv7E,KAAAyjH,cAEAzjH,MASA8vH,mBAAA,SAAAzpB,GAOA,OALArmG,KAAAqmG,SAGArmG,KAAAwjH,iBAAAxjH,KAAAmxC,QAAAk1D,EAAA,EAEArmG,KAAAwvH,cAKAO,mBAAA,WAEA,OAAA/vH,KAAAwjH,kBAIAwM,OAAA,SAAA7gB,GAEA,OAAAnvG,KAAAiwH,gBAAA9gB,EAAA,MAIA+gB,QAAA,SAAA/gB,GAEA,OAAAnvG,KAAAiwH,gBAAA9gB,EAAA,MAIAghB,cAAA,SAAAC,EAAAjhB,EAAAkhB,GAKA,GAHAD,EAAAF,QAAA/gB,GACAnvG,KAAAgwH,OAAA7gB,GAEAkhB,EAAA,CAEA,IAAAC,EAAAtwH,KAAAwiH,MAAArT,SACAohB,EAAAH,EAAA5N,MAAArT,SAEAqhB,EAAAD,EAAAD,EACAG,EAAAH,EAAAC,EAEAH,EAAAC,KAAA,EAAAG,EAAArhB,GACAnvG,KAAAqwH,KAAAI,EAAA,EAAAthB,GAIA,OAAAnvG,MAIA0wH,YAAA,SAAAC,EAAAxhB,EAAAkhB,GAEA,OAAAM,EAAAR,cAAAnwH,KAAAmvG,EAAAkhB,IAIAb,WAAA,WAEA,IAAAoB,EAAA5wH,KAAAojH,mBASA,OAPA,OAAAwN,IAEA5wH,KAAAojH,mBAAA,KACApjH,KAAAuiH,OAAAsO,4BAAAD,IAIA5wH,MASA8wH,sBAAA,SAAA5gB,GAKA,OAHAlwG,KAAAkwG,YACAlwG,KAAAujH,oBAAAvjH,KAAA0jH,OAAA,EAAAxT,EAEAlwG,KAAAyvH,eAKAsB,sBAAA,WAEA,OAAA/wH,KAAAujH,qBAIAyN,YAAA,SAAA7hB,GAIA,OAFAnvG,KAAAkwG,UAAAlwG,KAAAwiH,MAAArT,WAEAnvG,KAAAyvH,eAIAwB,SAAA,SAAAC,GAKA,OAHAlxH,KAAAkjF,KAAAguC,EAAAhuC,KACAljF,KAAAkwG,UAAAghB,EAAAhhB,UAEAlwG,KAAAyvH,eAIA0B,KAAA,SAAAhiB,GAEA,OAAAnvG,KAAAqwH,KAAArwH,KAAAujH,oBAAA,EAAApU,IAIAkhB,KAAA,SAAAe,EAAAC,EAAAliB,GAEA,IAAAkT,EAAAriH,KAAAuiH,OAAA+O,EAAAjP,EAAAn/B,KACA2/B,EAAA7iH,KAAAmjH,sBAEAjT,EAAAlwG,KAAAkwG,UAEA,OAAA2S,IAEAA,EAAAR,EAAAkP,0BACAvxH,KAAAmjH,sBAAAN,GAIA,IAAA7a,EAAA6a,EAAAxa,mBACA13D,EAAAkyE,EAAAva,aAQA,OANAN,EAAA,GAAAspB,EACAtpB,EAAA,GAAAspB,EAAAniB,EAEAx+D,EAAA,GAAAygF,EAAAlhB,EACAv/D,EAAA,GAAA0gF,EAAAnhB,EAEAlwG,MAIAyvH,YAAA,WAEA,IAAA+B,EAAAxxH,KAAAmjH,sBASA,OAPA,OAAAqO,IAEAxxH,KAAAmjH,sBAAA,KACAnjH,KAAAuiH,OAAAsO,4BAAAW,IAIAxxH,MAMAyxH,SAAA,WAEA,OAAAzxH,KAAAuiH,QAIAmP,QAAA,WAEA,OAAA1xH,KAAAwiH,OAIAmP,QAAA,WAEA,OAAA3xH,KAAAyiH,YAAAziH,KAAAuiH,OAAAyB,OAMA4N,QAAA,SAAA1uC,EAAA2uC,EAAAC,EAAAjH,GAIA,GAAA7qH,KAAAmxC,QAAA,CASA,IAAAg/D,EAAAnwG,KAAAsjH,WAEA,UAAAnT,EAAA,CAIA,IAAA4hB,GAAA7uC,EAAAitB,GAAA2hB,EACA,GAAAC,EAAA,OAAAD,EAEA,OAMA9xH,KAAAsjH,WAAA,KACAuO,EAAAC,EAAAC,EAMAF,GAAA7xH,KAAAgyH,iBAAA9uC,GACA,IAAA+uC,EAAAjyH,KAAAkyH,YAAAL,GAKAxrB,EAAArmG,KAAAmyH,cAAAjvC,GAEA,GAAAmjB,EAAA,EAKA,IAHA,IAAAsc,EAAA3iH,KAAA+iH,cACAqP,EAAApyH,KAAAgjH,kBAEA70F,EAAA,EAAArxB,EAAA6lH,EAAArgH,OAA4C6rB,IAAArxB,IAASqxB,EAErDw0F,EAAAx0F,GAAAq9E,SAAAymB,GACAG,EAAAjkG,GAAAy8F,WAAAC,EAAAxkB,QA3CArmG,KAAAmyH,cAAAjvC,IAmDAivC,cAAA,SAAAjvC,GAEA,IAAAmjB,EAAA,EAEA,GAAArmG,KAAAmxC,QAAA,CAEAk1D,EAAArmG,KAAAqmG,OACA,IAAAwc,EAAA7iH,KAAAojH,mBAEA,UAAAP,EAAA,CAEA,IAAAwP,EAAAxP,EAAArX,SAAAtoB,GAAA,GAEAmjB,GAAAgsB,EAEAnvC,EAAA2/B,EAAAxa,mBAAA,KAEAroG,KAAAwvH,aAEA,IAAA6C,IAGAryH,KAAAmxC,cAWA,OADAnxC,KAAAwjH,iBAAAnd,EACAA,GAIA2rB,iBAAA,SAAA9uC,GAEA,IAAAgtB,EAAA,EAEA,IAAAlwG,KAAA0jH,OAAA,CAEAxT,EAAAlwG,KAAAkwG,UAEA,IAAA2S,EAAA7iH,KAAAmjH,sBAEA,OAAAN,IAIA3S,GAFA2S,EAAArX,SAAAtoB,GAAA,GAIAA,EAAA2/B,EAAAxa,mBAAA,KAEAroG,KAAAyvH,cAEA,IAAAvf,EAGAlwG,KAAA0jH,UAKA1jH,KAAAkwG,cAWA,OADAlwG,KAAAujH,oBAAArT,EACAA,GAIAgiB,YAAA,SAAAL,GAEA,IAAA3uC,EAAAljF,KAAAkjF,KAAA2uC,EAEA,OAAAA,EAAA,OAAA3uC,EAEA,IAAAisB,EAAAnvG,KAAAwiH,MAAArT,SAEA2Q,EAAA9/G,KAAA8/G,KACAwS,EAAAtyH,KAAAqjH,WAEA,GAz8uCA,OAy8uCAvD,EAAA,EAEA,IAAAwS,IAIAtyH,KAAAqjH,WAAA,EACArjH,KAAAuyH,gBAAA,OAIAC,EAAA,CAEA,GAAAtvC,GAAAisB,EAEAjsB,EAAAisB,MAEK,MAAAjsB,EAAA,GAIA,MAAAsvC,EAFLtvC,EAAA,EAIAljF,KAAA2jH,kBAAA3jH,KAAA0jH,UACA1jH,KAAAmxC,WAEAnxC,KAAAuiH,OAAAl9G,eACAV,KAAA,WAAAusH,OAAAlxH,KACAuvB,UAAAsiG,EAAA,cAKG,CAEH,IAAAY,EA1+uCA,OA0+uCA3S,EAwBA,IAtBA,IAAAwS,IAIAT,GAAA,GAEAS,EAAA,EAEAtyH,KAAAuyH,eAAA,IAAAvyH,KAAAyjH,YAAAgP,IAQAzyH,KAAAuyH,YAAA,IAAAvyH,KAAAyjH,eAAAgP,IAMAvvC,GAAAisB,GAAAjsB,EAAA,GAIA,IAAAwvC,EAAApzH,KAAA4E,MAAAg/E,EAAAisB,GACAjsB,GAAAisB,EAAAujB,EAEAJ,GAAAhzH,KAAA2T,IAAAy/G,GAEA,IAAAC,EAAA3yH,KAAAyjH,YAAA6O,EAEA,GAAAK,GAAA,EAIA3yH,KAAA2jH,kBAAA3jH,KAAA0jH,UACA1jH,KAAAmxC,WAEA+xC,EAAA2uC,EAAA,EAAA1iB,EAAA,EAEAnvG,KAAAuiH,OAAAl9G,eACAV,KAAA,WAAAusH,OAAAlxH,KACAuvB,UAAAsiG,EAAA,aAGK,CAIL,OAAAc,EAAA,CAIA,IAAAC,EAAAf,EAAA,EACA7xH,KAAAuyH,YAAAK,KAAAH,QAIAzyH,KAAAuyH,gBAAA,EAAAE,GAIAzyH,KAAAqjH,WAAAiP,EAEAtyH,KAAAuiH,OAAAl9G,eACAV,KAAA,OAAAusH,OAAAlxH,KAAA0yH,eAOA,GAAAD,GAAA,MAAAH,GAKA,OADAtyH,KAAAkjF,OACAisB,EAAAjsB,EAOA,OADAljF,KAAAkjF,OACAA,GAIAqvC,YAAA,SAAAK,EAAAC,EAAAJ,GAEA,IAAApmB,EAAArsG,KAAA8iH,qBAEA2P,GAEApmB,EAAAK,YAvkvCA,KAwkvCAL,EAAAM,UAxkvCA,OAglvCAN,EAAAK,YAFAkmB,EAEA5yH,KAAA4jH,iBAhlvCA,KAglvCA/2G,GA/kvCA,KAylvCAw/F,EAAAM,UAFAkmB,EAEA7yH,KAAA6jH,eA1lvCA,KA0lvCAh3G,GAzlvCA,OAqmvCAojH,gBAAA,SAAA9gB,EAAA2jB,EAAAC,GAEA,IAAA1Q,EAAAriH,KAAAuiH,OAAA+O,EAAAjP,EAAAn/B,KACA2/B,EAAA7iH,KAAAojH,mBAEA,OAAAP,IAEAA,EAAAR,EAAAkP,0BACAvxH,KAAAojH,mBAAAP,GAIA,IAAA7a,EAAA6a,EAAAxa,mBACA13D,EAAAkyE,EAAAva,aAKA,OAHAN,EAAA,GAAAspB,EAAmB3gF,EAAA,GAAAmiF,EACnB9qB,EAAA,GAAAspB,EAAAniB,EAA8Bx+D,EAAA,GAAAoiF,EAE9B/yH,QA4BA8jH,GAAA9lH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAllB,EAAA5F,YAEAsT,YAAAwyG,GAEAkP,YAAA,SAAA9B,EAAA+B,GAEA,IAAAlP,EAAAmN,EAAAzO,YAAAziH,KAAAgkH,MACA5U,EAAA8hB,EAAA1O,MAAApT,OACAsT,EAAAtT,EAAA9sG,OACAgpH,EAAA4F,EAAAlO,kBACAL,EAAAuO,EAAAnO,cACAmQ,EAAAnP,EAAArhH,KACAywH,EAAAnzH,KAAAozH,uBACAC,EAAAF,EAAAD,YAEAG,IAEAA,KACAF,EAAAD,GAAAG,GAIA,QAAA32H,EAAA,EAAkBA,IAAAgmH,IAAehmH,EAAA,CAEjC,IAAAgzG,EAAAN,EAAA1yG,GACA41G,EAAA5C,EAAAzyG,KACA8jH,EAAAsS,EAAA/gB,GAEA,YAAAyO,EAEAuK,EAAA5uH,GAAAqkH,MAEI,CAIJ,aAFAA,EAAAuK,EAAA5uH,IAEA,CAIA,OAAAqkH,EAAAkC,gBAEAlC,EAAAQ,eACAvhH,KAAAszH,oBAAAvS,EAAAmS,EAAA5gB,IAIA,SAIA,IAAAhkD,EAAA2kE,KACAjQ,kBAAAtmH,GAAAqkH,QAAAY,cAEAZ,EAAA,IAAAD,GACAc,GAAA94F,OAAAi7F,EAAAzR,EAAAhkD,GACAohD,EAAAvE,cAAAuE,EAAAjD,iBAEA8U,eACAvhH,KAAAszH,oBAAAvS,EAAAmS,EAAA5gB,GAEAgZ,EAAA5uH,GAAAqkH,EAIA4B,EAAAjmH,GAAA8rG,aAAAuY,EAAA7kC,SAMAozC,gBAAA,SAAA4B,GAEA,IAAAlxH,KAAA2vH,gBAAAuB,GAAA,CAEA,UAAAA,EAAAjO,YAAA,CAKA,IAAAiQ,GAAAhC,EAAAzO,YAAAziH,KAAAgkH,OAAAthH,KACA6wH,EAAArC,EAAA1O,MAAA9/G,KACA8wH,EAAAxzH,KAAAyzH,eAAAF,GAEAvzH,KAAAgzH,YAAA9B,EACAsC,KAAAE,aAAA,IAEA1zH,KAAA2zH,mBAAAzC,EAAAqC,EAAAL,GAOA,IAHA,IAAA5H,EAAA4F,EAAAlO,kBAGAtmH,EAAA,EAAAiB,EAAA2tH,EAAAhpH,OAAwC5F,IAAAiB,IAASjB,EAAA,CAEjD,IAAAqkH,EAAAuK,EAAA5uH,GAEA,GAAAqkH,EAAAO,aAEAthH,KAAA4zH,aAAA7S,GACAA,EAAAkK,qBAMAjrH,KAAA6zH,YAAA3C,KAMA3B,kBAAA,SAAA2B,GAEA,GAAAlxH,KAAA2vH,gBAAAuB,GAAA,CAKA,IAHA,IAAA5F,EAAA4F,EAAAlO,kBAGAtmH,EAAA,EAAAiB,EAAA2tH,EAAAhpH,OAAwC5F,IAAAiB,IAASjB,EAAA,CAEjD,IAAAqkH,EAAAuK,EAAA5uH,GAEA,KAAAqkH,EAAAO,WAEAP,EAAAoK,uBACAnrH,KAAA8zH,iBAAA/S,IAMA/gH,KAAA+zH,gBAAA7C,KAQAjN,mBAAA,WAEAjkH,KAAAg0H,YACAh0H,KAAAi0H,gBAAA,EAEAj0H,KAAAyzH,kBAQAzzH,KAAA+hH,aACA/hH,KAAAk0H,iBAAA,EAEAl0H,KAAAozH,0BAGApzH,KAAAm0H,wBACAn0H,KAAAo0H,4BAAA,EAEA,IAAA5nG,EAAAxsB,KAEAA,KAAA+tH,OAEAsG,SACArG,YAEA,OAAAxhG,EAAAwnG,SAAA1xH,QAGA2rH,YAEA,OAAAzhG,EAAAynG,kBAIA3I,UACA0C,YAEA,OAAAxhG,EAAAu1F,UAAAz/G,QAGA2rH,YAEA,OAAAzhG,EAAA0nG,mBAIAI,qBACAtG,YAEA,OAAAxhG,EAAA2nG,qBAAA7xH,QAGA2rH,YAEA,OAAAzhG,EAAA4nG,gCAWAzE,gBAAA,SAAAuB,GAEA,IAAA1sH,EAAA0sH,EAAAjO,YACA,cAAAz+G,KAAAxE,KAAAi0H,iBAIAN,mBAAA,SAAAzC,EAAAqC,EAAAL,GAEA,IAAAmB,EAAAr0H,KAAAg0H,SACAO,EAAAv0H,KAAAyzH,eACAD,EAAAe,EAAAhB,GAEA,YAAAC,EAEAA,GAEAE,cAAAxC,GACAsD,iBAIAtD,EAAAhO,kBAAA,EAEAqR,EAAAhB,GAAAC,MAEG,CAEH,IAAAE,EAAAF,EAAAE,aAEAxC,EAAAhO,kBAAAwQ,EAAApxH,OACAoxH,EAAA1uH,KAAAksH,GAIAA,EAAAjO,YAAAoR,EAAA/xH,OACA+xH,EAAArvH,KAAAksH,GAEAsC,EAAAgB,aAAAtB,GAAAhC,GAIAuD,sBAAA,SAAAvD,GAEA,IAAAmD,EAAAr0H,KAAAg0H,SACAU,EAAAL,IAAA/xH,OAAA,GACAqyH,EAAAzD,EAAAjO,YAEAyR,EAAAzR,YAAA0R,EACAN,EAAAM,GAAAD,EACAL,EAAA77D,MAEA04D,EAAAjO,YAAA,KAGA,IAAAsQ,EAAArC,EAAA1O,MAAA9/G,KACA6xH,EAAAv0H,KAAAyzH,eACAD,EAAAe,EAAAhB,GACAqB,EAAApB,EAAAE,aAEAmB,EACAD,IAAAtyH,OAAA,GAEAwyH,EAAA5D,EAAAhO,kBAEA2R,EAAA3R,kBAAA4R,EACAF,EAAAE,GAAAD,EACAD,EAAAp8D,MAEA04D,EAAAhO,kBAAA,YAGAsQ,EAAAgB,cACAtD,EAAAzO,YAAAziH,KAAAgkH,OAAAthH,MAIA,IAAAkyH,EAAAtyH,eAEAiyH,EAAAhB,GAIAvzH,KAAA+0H,iCAAA7D,IAIA6D,iCAAA,SAAA7D,GAGA,IADA,IAAA5F,EAAA4F,EAAAlO,kBACAtmH,EAAA,EAAAiB,EAAA2tH,EAAAhpH,OAAuC5F,IAAAiB,IAASjB,EAAA,CAEhD,IAAAqkH,EAAAuK,EAAA5uH,GAEA,KAAAqkH,EAAAQ,gBAEAvhH,KAAAg1H,uBAAAjU,KAQA8S,YAAA,SAAA3C,GAQA,IAAAmD,EAAAr0H,KAAAg0H,SACAiB,EAAA/D,EAAAjO,YAEAiS,EAAAl1H,KAAAi0H,kBAEAkB,EAAAd,EAAAa,GAEAhE,EAAAjO,YAAAiS,EACAb,EAAAa,GAAAhE,EAEAiE,EAAAlS,YAAAgS,EACAZ,EAAAY,GAAAE,GAIApB,gBAAA,SAAA7C,GAQA,IAAAmD,EAAAr0H,KAAAg0H,SACAiB,EAAA/D,EAAAjO,YAEAmS,IAAAp1H,KAAAi0H,gBAEAoB,EAAAhB,EAAAe,GAEAlE,EAAAjO,YAAAmS,EACAf,EAAAe,GAAAlE,EAEAmE,EAAApS,YAAAgS,EACAZ,EAAAY,GAAAI,GAMA/B,oBAAA,SAAAvS,EAAAmS,EAAA5gB,GAEA,IAAA6gB,EAAAnzH,KAAAozH,uBACAkC,EAAAnC,EAAAD,GAEA5H,EAAAtrH,KAAA+hH,mBAEAuT,IAEAA,KACAnC,EAAAD,GAAAoC,GAIAA,EAAAhjB,GAAAyO,EAEAA,EAAAkC,YAAAqI,EAAAhpH,OACAgpH,EAAAtmH,KAAA+7G,IAIAiU,uBAAA,SAAAjU,GAEA,IAAAuK,EAAAtrH,KAAA+hH,UACAwT,EAAAxU,UACAmS,EAAAqC,EAAAtT,SAAAv/G,KACA4vG,EAAAijB,EAAAjnE,KACA6kE,EAAAnzH,KAAAozH,uBACAkC,EAAAnC,EAAAD,GAEAsC,EAAAlK,IAAAhpH,OAAA,GACAqyH,EAAA5T,EAAAkC,YAEAuS,EAAAvS,YAAA0R,EACArJ,EAAAqJ,GAAAa,EACAlK,EAAA9yD,aAEA88D,EAAAhjB,GAEAmjB,EAAA,CAEA,QAAAn3H,KAAAg3H,EAAA,MAAAG,SAEAtC,EAAAD,KAMAU,aAAA,SAAA7S,GAEA,IAAAuK,EAAAtrH,KAAA+hH,UACAkT,EAAAlU,EAAAkC,YAEAiS,EAAAl1H,KAAAk0H,mBAEAwB,EAAApK,EAAA4J,GAEAnU,EAAAkC,YAAAiS,EACA5J,EAAA4J,GAAAnU,EAEA2U,EAAAzS,YAAAgS,EACA3J,EAAA2J,GAAAS,GAIA5B,iBAAA,SAAA/S,GAEA,IAAAuK,EAAAtrH,KAAA+hH,UACAkT,EAAAlU,EAAAkC,YAEAmS,IAAAp1H,KAAAk0H,iBAEAyB,EAAArK,EAAA8J,GAEArU,EAAAkC,YAAAmS,EACA9J,EAAA8J,GAAArU,EAEA4U,EAAA1S,YAAAgS,EACA3J,EAAA2J,GAAAU,GAOApE,wBAAA,WAEA,IAAA5O,EAAA3iH,KAAAm0H,qBACAe,EAAAl1H,KAAAo0H,8BACAvR,EAAAF,EAAAuS,GAaA,gBAXArS,KAEAA,EAAA,IAAAzZ,GACA,IAAAn1D,aAAA,OAAAA,aAAA,GACA,EAAAj0C,KAAA41H,mCAEAC,aAAAX,EACAvS,EAAAuS,GAAArS,GAIAA,GAIAgO,4BAAA,SAAAhO,GAEA,IAAAF,EAAA3iH,KAAAm0H,qBACAc,EAAApS,EAAAgT,aAEAT,IAAAp1H,KAAAo0H,4BAEA0B,EAAAnT,EAAAyS,GAEAvS,EAAAgT,aAAAT,EACAzS,EAAAyS,GAAAvS,EAEAiT,EAAAD,aAAAZ,EACAtS,EAAAsS,GAAAa,GAIAF,iCAAA,IAAA3hF,aAAA,GAKA8hF,WAAA,SAAA5kB,EAAA6kB,GAEA,IAAAjS,EAAAiS,GAAAh2H,KAAAgkH,MACAkP,EAAAnP,EAAArhH,KAEAuzH,EAAA,iBAAA9kB,EACAjC,GAAAuC,WAAAsS,EAAA5S,KAEAoiB,EAAA,OAAA0C,IAAAvzH,KAAAyuG,EAEAqiB,EAAAxzH,KAAAyzH,eAAAF,GACAN,EAAA,KAEA,YAAAO,EAAA,CAEA,IAAA0C,EACA1C,EAAAgB,aAAAtB,GAEA,YAAAgD,EAEA,OAAAA,EAMAjD,EAAAO,EAAAE,aAAA,GAGA,OAAAuC,IACAA,EAAAhD,EAAAzQ,OAKA,UAAAyT,EAAA,YAGA,IAAAE,EAAA,IAAA/T,GAAApiH,KAAAi2H,EAAAD,GAOA,OALAh2H,KAAAgzH,YAAAmD,EAAAlD,GAGAjzH,KAAA2zH,mBAAAwC,EAAA5C,EAAAL,GAEAiD,GAKAD,eAAA,SAAA/kB,EAAA6kB,GAEA,IAAAjS,EAAAiS,GAAAh2H,KAAAgkH,MACAkP,EAAAnP,EAAArhH,KAEAuzH,EAAA,iBAAA9kB,EACAjC,GAAAuC,WAAAsS,EAAA5S,KAEAoiB,EAAA0C,IAAAvzH,KAAAyuG,EAEAqiB,EAAAxzH,KAAAyzH,eAAAF,GAEA,gBAAAC,GAEAA,EAAAgB,aAAAtB,IAIA,MAKAkD,cAAA,WAEA,IAAA/B,EAAAr0H,KAAAg0H,SACAqC,EAAAr2H,KAAAi0H,gBACA3I,EAAAtrH,KAAA+hH,UACAwM,EAAAvuH,KAAAk0H,iBAEAl0H,KAAAi0H,gBAAA,EACAj0H,KAAAk0H,iBAAA,EAEA,QAAAx3H,EAAA,EAAkBA,IAAA25H,IAAgB35H,EAElC23H,EAAA33H,GAAAglE,QAIA,IAAAhlE,EAAA,EAAkBA,IAAA6xH,IAAiB7xH,EAEnC4uH,EAAA5uH,GAAA4kH,SAAA,EAIA,OAAAthH,MAKA0f,OAAA,SAAAmyG,GAEAA,GAAA7xH,KAAAkwG,UAYA,IAVA,IAAAmkB,EAAAr0H,KAAAg0H,SACAqC,EAAAr2H,KAAAi0H,gBAEA/wC,EAAAljF,KAAAkjF,MAAA2uC,EACAC,EAAAxyH,KAAA6E,KAAA0tH,GAEAhH,EAAA7qH,KAAAkkH,YAAA,EAIAxnH,EAAA,EAAkBA,IAAA25H,IAAgB35H,EAElC23H,EAAA33H,GAEAk1H,QAAA1uC,EAAA2uC,EAAAC,EAAAjH,GAMA,IAAAS,EAAAtrH,KAAA+hH,UACAwM,EAAAvuH,KAAAk0H,iBAEA,IAAAx3H,EAAA,EAAkBA,IAAA6xH,IAAiB7xH,EAEnC4uH,EAAA5uH,GAAAy+E,MAAA0vC,GAIA,OAAA7qH,MAKA2xH,QAAA,WAEA,OAAA3xH,KAAAgkH,OAKAsS,YAAA,SAAAnlB,GAEA,IAAAkjB,EAAAr0H,KAAAg0H,SACAT,EAAApiB,EAAAzuG,KACA6xH,EAAAv0H,KAAAyzH,eACAD,EAAAe,EAAAhB,GAEA,YAAAC,EAAA,CAQA,IAFA,IAAA+C,EAAA/C,EAAAE,aAEAh3H,EAAA,EAAAiB,EAAA44H,EAAAj0H,OAA+C5F,IAAAiB,IAASjB,EAAA,CAExD,IAAAw0H,EAAAqF,EAAA75H,GAEAsD,KAAAuvH,kBAAA2B,GAEA,IAAAyD,EAAAzD,EAAAjO,YACAyR,EAAAL,IAAA/xH,OAAA,GAEA4uH,EAAAjO,YAAA,KACAiO,EAAAhO,kBAAA,KAEAwR,EAAAzR,YAAA0R,EACAN,EAAAM,GAAAD,EACAL,EAAA77D,MAEAx4D,KAAA+0H,iCAAA7D,UAIAqD,EAAAhB,KAOAiD,YAAA,SAAAzS,GAEA,IAAAmP,EAAAnP,EAAArhH,KACA6xH,EAAAv0H,KAAAyzH,eAEA,QAAAF,KAAAgB,EAAA,CAEA,IACArD,EADAqD,EAAAhB,GAAAiB,aACAtB,YAEAhC,IAEAlxH,KAAAuvH,kBAAA2B,GACAlxH,KAAAy0H,sBAAAvD,IAMA,IACAoE,EADAt1H,KAAAozH,uBACAF,GAEA,YAAAoC,EAEA,QAAAhjB,KAAAgjB,EAAA,CAEA,IAAAvU,EAAAuU,EAAAhjB,GACAyO,EAAAoK,uBACAnrH,KAAAg1H,uBAAAjU,KASA0V,cAAA,SAAAtlB,EAAA6kB,GAEA,IAAA9E,EAAAlxH,KAAAk2H,eAAA/kB,EAAA6kB,GAEA,OAAA9E,IAEAlxH,KAAAuvH,kBAAA2B,GACAlxH,KAAAy0H,sBAAAvD,OAyBA/M,GAAAnmH,UAAAqT,MAAA,WAEA,WAAA8yG,YAAAnkH,KAAAtC,MAAA2T,MAAArR,KAAAtC,MAAAsC,KAAAtC,MAAA2T,UAiBA+yG,GAAApmH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAA0yB,GAAAx9C,YAEAsT,YAAA8yG,GAEA9iC,6BAEA/vE,KAAA,SAAAxP,GAMA,OAJAy5C,GAAAx9C,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAy+E,kBAAA18E,EAAA08E,kBAEAz+E,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,SAoBA5C,OAAAsT,iBAAA2zG,GAAArmH,WAEA6c,OAEArd,IAAA,WAEA,OAAAwC,KAAAkoB,KAAArN,QAMAtV,OAEA/H,IAAA,WAEA,OAAAwC,KAAAkoB,KAAA3iB,UAQAnI,OAAA4D,OAAAqjH,GAAArmH,WAEA0/C,gCAEAzsC,KAAA,SAAAzM,EAAAJ,GAIA,OAFApE,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,QAAAwF,EAEApE,MAIAkR,KAAA,SAAA1M,EAAAqB,GAIA,OAFA7F,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAAA,GAAAiH,EAEA7F,MAIAmiB,KAAA,SAAA3d,EAAAsB,GAIA,OAFA9F,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAAA,GAAAkH,EAEA9F,MAIAwqB,KAAA,SAAAhmB,EAAA2L,GAIA,OAFAnQ,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAAA,GAAAuR,EAEAnQ,MAIAmU,KAAA,SAAA3P,GAEA,OAAAxE,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,SAIAwV,KAAA,SAAA5P,GAEA,OAAAxE,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAAA,IAIAkc,KAAA,SAAAtW,GAEA,OAAAxE,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAAA,IAIA+rB,KAAA,SAAAnmB,GAEA,OAAAxE,KAAAkoB,KAAA3iB,MAAAf,EAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAAA,IAIA87C,MAAA,SAAAl2C,EAAAJ,EAAAyB,GAOA,OALArB,IAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAEAoB,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAJ,EACApE,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAqB,EAEA7F,MAIAgb,OAAA,SAAAxW,EAAAJ,EAAAyB,EAAAC,GAQA,OANAtB,IAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAEAoB,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAJ,EACApE,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAqB,EACA7F,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAsB,EAEA9F,MAIA26C,QAAA,SAAAn2C,EAAAJ,EAAAyB,EAAAC,EAAAqK,GASA,OAPA3L,IAAAxE,KAAAkoB,KAAAw5D,OAAA1hF,KAAApB,OAEAoB,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAJ,EACApE,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAqB,EACA7F,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAAsB,EACA9F,KAAAkoB,KAAA3iB,MAAAf,EAAA,GAAA2L,EAEAnQ,QAuBA5C,OAAAC,eAAAknH,GAAAvmH,UAAA,eAEA4S,IAAA,SAAAlT,QAEAA,GAAAsC,KAAAinB,aAMA7pB,OAAA4D,OAAAujH,GAAAvmH,WAEA04H,uBAEA58E,iBAAA,aAEAC,SAAA,SAAAx0C,GAEA,GAAAlG,MAAAm6B,QAAAj0B,GAEA,UAAAnD,UAAA,yDAOA,OAHApC,KAAA6a,eAAAtV,IAAAjD,OAAAtC,KAAA0hF,OAAA,EACA1hF,KAAAuF,QAEAvF,MAIAg6C,WAAA,SAAAt8C,GAIA,OAFAsC,KAAAizC,QAAAv1C,EAEAsC,MAIAuR,KAAA,SAAAxP,GAOA,OALA/B,KAAAuF,MAAA,IAAAxD,EAAAwD,MAAA+L,YAAAvP,EAAAwD,OACAvF,KAAA6a,MAAA9Y,EAAA8Y,MACA7a,KAAA0hF,OAAA3/E,EAAA2/E,OACA1hF,KAAAizC,QAAAlxC,EAAAkxC,QAEAjzC,MAIAi6C,OAAA,SAAAC,EAAAhmC,EAAAimC,GAEAD,GAAAl6C,KAAA0hF,OACAvnC,GAAAjmC,EAAAwtE,OAEA,QAAAhlF,EAAA,EAAAC,EAAAqD,KAAA0hF,OAAmChlF,EAAAC,EAAOD,IAE1CsD,KAAAuF,MAAA20C,EAAAx9C,GAAAwX,EAAA3O,MAAA40C,EAAAz9C,GAIA,OAAAsD,MAIA4Q,IAAA,SAAAlT,EAAAkB,GAMA,gBAJAA,MAAA,GAEAoB,KAAAuF,MAAAqL,IAAAlT,EAAAkB,GAEAoB,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIA46C,SAAA,SAAA34B,GAIA,OAFAjiB,KAAA85C,iBAAA73B,EAEAjiB,QAkBAwkH,GAAAxmH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAy7F,GAAAvmH,YAEAsT,YAAAkzG,GAEA7iC,gCAEApwE,KAAA,SAAAxP,GAMA,OAJAwiH,GAAAvmH,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAw6E,iBAAAz4E,EAAAy4E,iBAEAx6E,QAkBAykH,GAAAzmH,UAAAZ,OAAA4D,OAAA5D,OAAA0rB,OAAAgqB,GAAA90C,YAEAsT,YAAAmzG,GAEA7iC,8BAEArwE,KAAA,SAAAxP,GAMA,OAJA+wC,GAAA90C,UAAAuT,KAAA1U,KAAAmD,KAAA+B,GAEA/B,KAAAw6E,iBAAAz4E,EAAAy4E,iBAEAx6E,QAmEA5C,OAAA4D,OAvDA,SAAAuhD,EAAAhzB,EAAA1R,EAAAC,GAEA9d,KAAA2jD,IAAA,IAAArB,GAAAC,EAAAhzB,GAGAvvB,KAAA6d,QAAA,EACA7d,KAAA8d,OAAAsK,IAEApoB,KAAAkvF,QACAxsC,QACA0lC,QACAd,OACAiB,QAAW0G,UAAA,GACX5H,WAGAjqF,OAAAsT,iBAAA1Q,KAAAkvF,QACAynC,YACAn5H,IAAA,WAGA,OADAqF,QAAA6O,KAAA,yEACA1R,KAAAuoF,YAkCAvqF,WAEAywF,cAAA,EAEA79E,IAAA,SAAA2xC,EAAAhzB,GAIAvvB,KAAA2jD,IAAA/yC,IAAA2xC,EAAAhzB,IAIAqnG,cAAA,SAAAC,EAAA5zG,GAEAA,KAAA8pE,qBAEA/sF,KAAA2jD,IAAApB,OAAA79B,sBAAAzB,EAAAE,aACAnjB,KAAA2jD,IAAAp0B,UAAA3e,IAAAimH,EAAAzyH,EAAAyyH,EAAAhxH,EAAA,IAAAud,UAAAH,GAAAnR,IAAA9R,KAAA2jD,IAAApB,QAAArvC,aAEG+P,KAAA8tB,sBAEH/wC,KAAA2jD,IAAApB,OAAA3xC,IAAAimH,EAAAzyH,EAAAyyH,EAAAhxH,GAAAod,EAAApF,KAAAoF,EAAAnF,MAAAmF,EAAApF,KAAAoF,EAAAnF,MAAAsF,UAAAH,GACAjjB,KAAA2jD,IAAAp0B,UAAA3e,IAAA,QAAAyS,mBAAAJ,EAAAE,cAIAtgB,QAAAtC,MAAA,8CAMAokH,gBAAA,SAAA7mH,EAAA8yC,EAAA8yD,GAEA,IAAAt6C,EAAAs6C,MAMA,OAJAihB,GAAA7mH,EAAAkC,KAAAopD,EAAAxY,GAEAwY,EAAAhR,KAAAssE,IAEAt7D,GAIA0tE,iBAAA,SAAA9pD,EAAAp8B,EAAA8yD,GAEA,IAAAt6C,EAAAs6C,MAEA,QAAArkG,MAAAm6B,QAAAwzC,GAGA,OADAnqE,QAAA6O,KAAA,8DACA03C,EAIA,QAAA1sD,EAAA,EAAAC,EAAAqwE,EAAA1qE,OAAsC5F,EAAAC,EAAOD,IAE7CioH,GAAA33C,EAAAtwE,GAAAsD,KAAAopD,EAAAxY,GAMA,OAFAwY,EAAAhR,KAAAssE,IAEAt7D,KAsBAhsD,OAAA4D,OAZA,SAAA+1H,GAEA/2H,KAAA+2H,wBAEA/2H,KAAAmwG,UAAA,EACAnwG,KAAAg3H,QAAA,EACAh3H,KAAAi3H,YAAA,EAEAj3H,KAAAk3H,YAIAl5H,WAEA0xB,MAAA,WAEA1vB,KAAAmwG,WAAA,oBAAAgnB,YAAAC,KAAAD,aAAA7F,MAEAtxH,KAAAg3H,QAAAh3H,KAAAmwG,UACAnwG,KAAAi3H,YAAA,EACAj3H,KAAAk3H,YAIA/lC,KAAA,WAEAnxF,KAAAq3H,iBACAr3H,KAAAk3H,WACAl3H,KAAA+2H,cAIAM,eAAA,WAGA,OADAr3H,KAAAs3H,WACAt3H,KAAAi3H,aAIAK,SAAA,WAEA,IAAAr/E,EAAA,EAEA,GAAAj4C,KAAA+2H,YAAA/2H,KAAAk3H,QAGA,OADAl3H,KAAA0vB,QACA,EAIA,GAAA1vB,KAAAk3H,QAAA,CAEA,IAAAK,GAAA,oBAAAJ,YAAAC,KAAAD,aAAA7F,MAEAr5E,GAAAs/E,EAAAv3H,KAAAg3H,SAAA,IACAh3H,KAAAg3H,QAAAO,EAEAv3H,KAAAi3H,aAAAh/E,EAIA,OAAAA,KA0BA76C,OAAA4D,OAVA,SAAAwjB,EAAAD,EAAAlI,GAMA,OAJArc,KAAAwkB,oBAAA,EACAxkB,KAAAukB,iBAAA,EACAvkB,KAAAqc,mBAAA,EAEArc,MAIAhC,WAEA4S,IAAA,SAAA4T,EAAAD,EAAAlI,GAMA,OAJArc,KAAAwkB,SACAxkB,KAAAukB,MACAvkB,KAAAqc,QAEArc,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAimH,GAMA,OAJAx3H,KAAAwkB,OAAAgzG,EAAAhzG,OACAxkB,KAAAukB,IAAAizG,EAAAjzG,IACAvkB,KAAAqc,MAAAm7G,EAAAn7G,MAEArc,MAKAy3H,SAAA,WAKA,OAFAz3H,KAAAukB,IAAAjlB,KAAAoG,IADA,KACApG,KAAAmG,IAAAnG,KAAAsO,GADA,KACA5N,KAAAukB,MAEAvkB,MAIAwrC,eAAA,SAAAksF,GAgBA,OAdA13H,KAAAwkB,OAAAkzG,EAAAp1H,SAEA,IAAAtC,KAAAwkB,QAEAxkB,KAAAqc,MAAA,EACArc,KAAAukB,IAAA,IAIAvkB,KAAAqc,MAAA/c,KAAA8T,MAAAskH,EAAAtzH,EAAAszH,EAAA5xH,GACA9F,KAAAukB,IAAAjlB,KAAA6kB,KAAAzW,GAAAW,MAAAqpH,EAAA7xH,EAAA7F,KAAAwkB,QAAA,OAIAxkB,QAuBA5C,OAAA4D,OAVA,SAAAwjB,EAAAnI,EAAAxW,GAMA,OAJA7F,KAAAwkB,oBAAA,EACAxkB,KAAAqc,mBAAA,EACArc,KAAA6F,eAAA,EAEA7F,MAIAhC,WAEA4S,IAAA,SAAA4T,EAAAnI,EAAAxW,GAMA,OAJA7F,KAAAwkB,SACAxkB,KAAAqc,QACArc,KAAA6F,IAEA7F,MAIAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAimH,GAMA,OAJAx3H,KAAAwkB,OAAAgzG,EAAAhzG,OACAxkB,KAAAqc,MAAAm7G,EAAAn7G,MACArc,KAAA6F,EAAA2xH,EAAA3xH,EAEA7F,MAIAwrC,eAAA,SAAAksF,GAMA,OAJA13H,KAAAwkB,OAAAllB,KAAAyT,KAAA2kH,EAAAtzH,EAAAszH,EAAAtzH,EAAAszH,EAAA5xH,EAAA4xH,EAAA5xH,GACA9F,KAAAqc,MAAA/c,KAAA8T,MAAAskH,EAAAtzH,EAAAszH,EAAA5xH,GACA9F,KAAA6F,EAAA6xH,EAAA7xH,EAEA7F,QAiBA5C,OAAA4D,OAAA4jH,GAAA5mH,WAEA4S,IAAA,SAAAnL,EAAAC,GAKA,OAHA1F,KAAAyF,IAAA8L,KAAA9L,GACAzF,KAAA0F,IAAA6L,KAAA7L,GAEA1F,MAIAyrB,cAAA,SAAAjG,GAEAxlB,KAAA0rB,YAEA,QAAAhvB,EAAA,EAAAivB,EAAAnG,EAAAljB,OAAsC5F,EAAAivB,EAAQjvB,IAE9CsD,KAAA4rB,cAAApG,EAAA9oB,IAIA,OAAAsD,MAIA6rB,qBAAA,WAEA,IAAArpB,EAAA,IAAAuN,GAEA,gBAAAuE,EAAAwX,GAEA,IAAAC,EAAAvpB,EAAA+O,KAAAua,GAAA5Z,eAAA,IAIA,OAHAlS,KAAAyF,IAAA8L,KAAA+C,GAAAxC,IAAAia,GACA/rB,KAAA0F,IAAA6L,KAAA+C,GAAA7C,IAAAsa,GAEA/rB,MAVA,GAgBAqR,MAAA,WAEA,WAAArR,KAAAsR,aAAAC,KAAAvR,OAIAuR,KAAA,SAAAmU,GAKA,OAHA1lB,KAAAyF,IAAA8L,KAAAmU,EAAAjgB,KACAzF,KAAA0F,IAAA6L,KAAAmU,EAAAhgB,KAEA1F,MAIA0rB,UAAA,WAKA,OAHA1rB,KAAAyF,IAAArB,EAAApE,KAAAyF,IAAAI,EAAAuiB,IACApoB,KAAA0F,IAAAtB,EAAApE,KAAA0F,IAAAG,OAEA7F,MAIAksB,QAAA,WAIA,OAAAlsB,KAAA0F,IAAAtB,EAAApE,KAAAyF,IAAArB,GAAApE,KAAA0F,IAAAG,EAAA7F,KAAAyF,IAAAI,GAIAsmB,UAAA,SAAArqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,mDACA5P,EAAA,IAAAiO,IAIA/P,KAAAksB,UAAApqB,EAAA8O,IAAA,KAAA9O,EAAA6P,WAAA3R,KAAAyF,IAAAzF,KAAA0F,KAAAwM,eAAA,KAIAka,QAAA,SAAAtqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,iDACA5P,EAAA,IAAAiO,IAIA/P,KAAAksB,UAAApqB,EAAA8O,IAAA,KAAA9O,EAAAiQ,WAAA/R,KAAA0F,IAAA1F,KAAAyF,MAIAmmB,cAAA,SAAAS,GAKA,OAHArsB,KAAAyF,QAAA4mB,GACArsB,KAAA0F,QAAA2mB,GAEArsB,MAIAssB,eAAA,SAAA3mB,GAKA,OAHA3F,KAAAyF,IAAAqM,IAAAnM,GACA3F,KAAA0F,IAAA+L,IAAA9L,GAEA3F,MAIAusB,eAAA,SAAAvb,GAKA,OAHAhR,KAAAyF,IAAAmM,WAAAZ,GACAhR,KAAA0F,IAAAkM,UAAAZ,GAEAhR,MAIAitB,cAAA,SAAAZ,GAEA,QAAAA,EAAAjoB,EAAApE,KAAAyF,IAAArB,GAAAioB,EAAAjoB,EAAApE,KAAA0F,IAAAtB,GACAioB,EAAAxmB,EAAA7F,KAAAyF,IAAAI,GAAAwmB,EAAAxmB,EAAA7F,KAAA0F,IAAAG,IAIAqnB,YAAA,SAAAxH,GAEA,OAAA1lB,KAAAyF,IAAArB,GAAAshB,EAAAjgB,IAAArB,GAAAshB,EAAAhgB,IAAAtB,GAAApE,KAAA0F,IAAAtB,GACApE,KAAAyF,IAAAI,GAAA6f,EAAAjgB,IAAAI,GAAA6f,EAAAhgB,IAAAG,GAAA7F,KAAA0F,IAAAG,GAIAsnB,aAAA,SAAAd,EAAAvqB,GAYA,gBAPAA,IAEAe,QAAA6O,KAAA,sDACA5P,EAAA,IAAAiO,IAIAjO,EAAA8O,KACAyb,EAAAjoB,EAAApE,KAAAyF,IAAArB,IAAApE,KAAA0F,IAAAtB,EAAApE,KAAAyF,IAAArB,IACAioB,EAAAxmB,EAAA7F,KAAAyF,IAAAI,IAAA7F,KAAA0F,IAAAG,EAAA7F,KAAAyF,IAAAI,KAKAunB,cAAA,SAAA1H,GAIA,QAAAA,EAAAhgB,IAAAtB,EAAApE,KAAAyF,IAAArB,GAAAshB,EAAAjgB,IAAArB,EAAApE,KAAA0F,IAAAtB,GACAshB,EAAAhgB,IAAAG,EAAA7F,KAAAyF,IAAAI,GAAA6f,EAAAjgB,IAAAI,EAAA7F,KAAA0F,IAAAG,IAIAynB,WAAA,SAAAjB,EAAAvqB,GASA,gBAPAA,IAEAe,QAAA6O,KAAA,oDACA5P,EAAA,IAAAiO,IAIAjO,EAAAyP,KAAA8a,GAAAhe,MAAArO,KAAAyF,IAAAzF,KAAA0F,MAIA2oB,gBAAA,WAEA,IAAA7rB,EAAA,IAAAuN,GAEA,gBAAAsc,GAGA,OADA7pB,EAAA+O,KAAA8a,GAAAhe,MAAArO,KAAAyF,IAAAzF,KAAA0F,KACAoM,IAAAua,GAAA/pB,UAPA,GAaAisB,UAAA,SAAA7I,GAKA,OAHA1lB,KAAAyF,IAAAC,IAAAggB,EAAAjgB,KACAzF,KAAA0F,IAAAD,IAAAigB,EAAAhgB,KAEA1F,MAIAwuB,MAAA,SAAA9I,GAKA,OAHA1lB,KAAAyF,QAAAigB,EAAAjgB,KACAzF,KAAA0F,QAAAggB,EAAAhgB,KAEA1F,MAIAulB,UAAA,SAAA3mB,GAKA,OAHAoB,KAAAyF,IAAAgM,IAAA7S,GACAoB,KAAA0F,IAAA+L,IAAA7S,GAEAoB,MAIA8T,OAAA,SAAA4R,GAEA,OAAAA,EAAAjgB,IAAAqO,OAAA9T,KAAAyF,MAAAigB,EAAAhgB,IAAAoO,OAAA9T,KAAA0F,QAmBAm/G,GAAA7mH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACA6mH,GAAA7mH,UAAAsT,YAAAuzG,GAEAA,GAAA7mH,UAAAulF,2BAmDAuhC,GAAA9mH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACA8mH,GAAA9mH,UAAAsT,YAAAwzG,GAEAA,GAAA9mH,UAAA0hB,OAAA,WAEA,IAAAld,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GACA0f,EAAA,IAAAzf,GAEA,kBAEA,IAAA7O,GAAA,aAEA5B,KAAAlC,OAAAkvB,sBAEAkD,EAAAnL,gBAAA/kB,KAAAlC,OAAAqlB,aAEA,IAAAA,EAAAnjB,KAAAlC,OAAAqlB,YAEApG,EAAA/c,KAAA2sB,SAAAI,WAAAhQ,SAIAioG,EAAAhlH,KAAAlC,OAAA6uB,SAEA,GAAAq4F,KAAAp4F,WAQA,IANA,IAAAC,EAAAm4F,EAAAn4F,SAEAklB,EAAAizE,EAAAjzE,MAEAiG,EAAA,EAEAt7C,EAAA,EAAAC,EAAAo1C,EAAAzvC,OAAqC5F,EAAAC,EAAOD,IAI5C,IAFA,IAAAg4C,EAAA3C,EAAAr1C,GAEAyxB,EAAA,EAAAwmB,EAAAD,EAAAhH,cAAAprC,OAAoD6rB,EAAAwmB,EAAQxmB,IAAA,CAE5D,IAAAoqB,EAAA1rB,EAAA6nB,EAAA9yC,EAAAusB,KAEAlK,EAAAywB,EAAAhH,cAAAvf,GAEA3rB,EAAA+O,KAAAgnC,GAAAx9B,aAAAoI,GAEAtP,EAAAtC,KAAA0S,GAAA5R,aAAA6d,GAAAhd,YAAAhB,eAAAlS,KAAA8rB,MAAAra,IAAAjP,GAEAua,EAAA/B,OAAAg9B,EAAAx1C,EAAA4B,EAAA5B,EAAAqD,EAAArD,EAAAsD,GAEAkyC,GAAA,EAEAj7B,EAAA/B,OAAAg9B,EAAAnkC,EAAAzP,EAAAyP,EAAAhO,EAAAgO,EAAA/N,GAEAkyC,GAAA,OAMG,GAAAgtE,KAAAl4F,iBAEH,KAAA6qG,EAAA3S,EAAAj4F,WAAAhQ,SAEA66G,EAAA5S,EAAAj4F,WAAA9I,OAMA,IAJA+zB,EAAA,EAIA7pB,EAAA,EAAAwmB,EAAAgjF,EAAA98G,MAAsCsT,EAAAwmB,EAAQxmB,IAE9C3rB,EAAAoO,IAAA+mH,EAAAxjH,KAAAga,GAAAwpG,EAAAvjH,KAAA+Z,GAAAwpG,EAAA78G,KAAAqT,IAAApT,aAAAoI,GAEAtP,EAAAjD,IAAAgnH,EAAAzjH,KAAAga,GAAAypG,EAAAxjH,KAAA+Z,GAAAypG,EAAA98G,KAAAqT,IAEAta,EAAAxB,aAAA6d,GAAAhd,YAAAhB,eAAAlS,KAAA8rB,MAAAra,IAAAjP,GAEAua,EAAA/B,OAAAg9B,EAAAx1C,EAAA4B,EAAA5B,EAAAqD,EAAArD,EAAAsD,GAEAkyC,GAAA,EAEAj7B,EAAA/B,OAAAg9B,EAAAnkC,EAAAzP,EAAAyP,EAAAhO,EAAAgO,EAAA/N,GAEAkyC,GAAA,EAMAj7B,EAAAghC,gBAtFA,GA+IAknE,GAAAjnH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACAinH,GAAAjnH,UAAAsT,YAAA2zG,GAEAA,GAAAjnH,UAAAosB,QAAA,WAEApqB,KAAAklH,KAAAv4F,SAAAvC,UACApqB,KAAAklH,KAAA30E,SAAAnmB,WAIA66F,GAAAjnH,UAAA0hB,OAAA,WAEA,IAAA/Z,EAAA,IAAA6K,GACA+nF,EAAA,IAAA/nF,GAEA,kBAEAxQ,KAAAq5D,MAAArsC,oBAEA,IAAA6qG,EAAA73H,KAAAq5D,MAAAjxB,SAAApoC,KAAAq5D,MAAAjxB,SAAA,IACA0vF,EAAAD,EAAAv4H,KAAA6iC,IAAAniC,KAAAq5D,MAAAlmD,OAEAnT,KAAAklH,KAAAppG,MAAAlL,IAAAknH,IAAAD,GAEAlyH,EAAA+e,sBAAA1kB,KAAAq5D,MAAAl2C,aACAo1E,EAAA7zE,sBAAA1kB,KAAAq5D,MAAAv3D,OAAAqhB,aAEAnjB,KAAAklH,KAAA5sG,OAAAigF,EAAAzmF,IAAAnM,aAEA3F,KAAA0jC,MAEA1jC,KAAAklH,KAAA30E,SAAA7M,MAAA9yB,IAAA5Q,KAAA0jC,OAIA1jC,KAAAklH,KAAA30E,SAAA7M,MAAAnyB,KAAAvR,KAAAq5D,MAAA31B,QAzBA,GAuGAyhF,GAAAnnH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACAmnH,GAAAnnH,UAAAsT,YAAA6zG,GAEAA,GAAAnnH,UAAAgvB,kBAAA,WAEA,IAAArnB,EAAA,IAAA6K,GAEAunH,EAAA,IAAA/nH,GACAgoH,EAAA,IAAAhoH,GAEA,gBAAA4/B,GAEA,IAAAkjB,EAAA9yD,KAAA8yD,MAEAnmC,EAAA3sB,KAAA2sB,SACA5P,EAAA4P,EAAAgxB,aAAA,YAEAq6E,EAAA38G,WAAArb,KAAA+jH,KAAA5gG,aAEA,QAAAzmB,EAAA,EAAAyxB,EAAA,EAAyBzxB,EAAAo2D,EAAAxwD,OAAkB5F,IAAA,CAE3C,IAAAmxF,EAAA/6B,EAAAp2D,GAEAmxF,EAAAvhD,QAAAuhD,EAAAvhD,OAAAwhD,SAEAiqC,EAAAr/G,iBAAAs/G,EAAAnqC,EAAA1qE,aACAxd,EAAA+e,sBAAAqzG,GACAh7G,EAAA/B,OAAAmT,EAAAxoB,EAAAvB,EAAAuB,EAAAE,EAAAF,EAAAG,GAEAiyH,EAAAr/G,iBAAAs/G,EAAAnqC,EAAAvhD,OAAAnpB,aACAxd,EAAA+e,sBAAAqzG,GACAh7G,EAAA/B,OAAAmT,EAAA,EAAAxoB,EAAAvB,EAAAuB,EAAAE,EAAAF,EAAAG,GAEAqoB,GAAA,GAMAxB,EAAAgxB,aAAA,YAAAI,eAEA1R,GAAAruC,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,IAtCA,GA2FA01E,GAAAtnH,UAAAZ,OAAA0rB,OAAA45B,GAAA1kD,WACAsnH,GAAAtnH,UAAAsT,YAAAg0G,GAEAA,GAAAtnH,UAAAosB,QAAA,WAEApqB,KAAA2sB,SAAAvC,UACApqB,KAAAuwC,SAAAnmB,WAIAk7F,GAAAtnH,UAAA0hB,OAAA,oBAEA1f,KAAA0jC,MAEA1jC,KAAAuwC,SAAA7M,MAAA9yB,IAAA5Q,KAAA0jC,OAIA1jC,KAAAuwC,SAAA7M,MAAAnyB,KAAAvR,KAAAq5D,MAAA31B,QAqDA8hF,GAAAxnH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACAwnH,GAAAxnH,UAAAsT,YAAAk0G,GAEAA,GAAAxnH,UAAAosB,QAAA,WAEApqB,KAAAusC,SAAA,GAAA5f,SAAAvC,UACApqB,KAAAusC,SAAA,GAAAgE,SAAAnmB,WAIAo7F,GAAAxnH,UAAA0hB,OAAA,WAIA,IAAA0yE,EAAA,GAAApyF,KAAAq5D,MAAA1oD,MACA0hF,EAAA,GAAAryF,KAAAq5D,MAAAxoD,OAEAkM,EAAA/c,KAAAsvB,KAAA3C,SAAAI,WAAAhQ,SACAxX,EAAAwX,EAAAxX,MAIAA,EAAA,GAAA6sF,EAAiB7sF,EAAA,IAAA8sF,EAAmB9sF,EAAA,KACpCA,EAAA,GAAA6sF,EAAiB7sF,EAAA,GAAA8sF,EAAiB9sF,EAAA,KAClCA,EAAA,IAAA6sF,EAAmB7sF,EAAA,GAAA8sF,EAAiB9sF,EAAA,KACpCA,EAAA,IAAA6sF,EAAmB7sF,EAAA,KAAA8sF,EAAoB9sF,EAAA,MACvCA,EAAA,IAAA6sF,EAAkB7sF,EAAA,KAAA8sF,EAAoB9sF,EAAA,MAEtCwX,EAAAghC,oBAAA,IAEA/9C,KAAA0jC,MAEA1jC,KAAAsvB,KAAAihB,SAAA7M,MAAA9yB,IAAA5Q,KAAA0jC,OAIA1jC,KAAAsvB,KAAAihB,SAAA7M,MAAAnyB,KAAAvR,KAAAq5D,MAAA31B,QAyCA+hF,GAAAznH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACAynH,GAAAznH,UAAAsT,YAAAm0G,GAEAA,GAAAznH,UAAAosB,QAAA,WAEApqB,KAAAusC,SAAA,GAAA5f,SAAAvC,UACApqB,KAAAusC,SAAA,GAAAgE,SAAAnmB,WAIAq7F,GAAAznH,UAAA0hB,OAAA,WAEA,IAAA/Z,EAAA,IAAA6K,GAEAq0B,EAAA,IAAA/B,GACAgC,EAAA,IAAAhC,GAEA,kBAEA,IAAA0U,EAAAx3C,KAAAusC,SAAA,GAEA,YAAAvsC,KAAA0jC,MAEA1jC,KAAAuwC,SAAA7M,MAAA9yB,IAAA5Q,KAAA0jC,WAEG,CAEH,IAAAoO,EAAA0F,EAAA7qB,SAAAgxB,aAAA,SAEA9Y,EAAAtzB,KAAAvR,KAAAq5D,MAAA31B,OACAoB,EAAAvzB,KAAAvR,KAAAq5D,MAAApwB,aAEA,QAAAvsC,EAAA,EAAAC,EAAAm1C,EAAAj3B,MAAqCne,EAAAC,EAAOD,IAAA,CAE5C,IAAAgnC,EAAAhnC,EAAAC,EAAA,EAAAkoC,EAAAC,EAEAgN,EAAA92B,OAAAte,EAAAgnC,EAAAjmC,EAAAimC,EAAA5e,EAAA4e,EAAArjC,GAIAyxC,EAAAiM,eAIAvG,EAAAl/B,OAAA3S,EAAA+e,sBAAA1kB,KAAAq5D,MAAAl2C,aAAAvQ,WAlCA,GAiFA8yG,GAAA1nH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACA0nH,GAAA1nH,UAAAsT,YAAAo0G,GAsFAC,GAAA3nH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACA2nH,GAAA3nH,UAAAsT,YAAAq0G,GAoDAG,GAAA9nH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACA8nH,GAAA9nH,UAAAsT,YAAAw0G,GAEAA,GAAA9nH,UAAA0hB,OAAA,WAEA,IAAAld,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GACA0f,EAAA,IAAAzf,GAEA,kBAEAzQ,KAAAlC,OAAAkvB,sBAEAkD,EAAAnL,gBAAA/kB,KAAAlC,OAAAqlB,aAgBA,IAdA,IAAAA,EAAAnjB,KAAAlC,OAAAqlB,YAEApG,EAAA/c,KAAA2sB,SAAAI,WAAAhQ,SAIAioG,EAAAhlH,KAAAlC,OAAA6uB,SAEAE,EAAAm4F,EAAAn4F,SAEAklB,EAAAizE,EAAAjzE,MAEAiG,EAAA,EAEAt7C,EAAA,EAAAC,EAAAo1C,EAAAzvC,OAAoC5F,EAAAC,EAAOD,IAAA,CAE3C,IAAAg4C,EAAA3C,EAAAr1C,GAEAunB,EAAAywB,EAAAzwB,OAEAzhB,EAAA+O,KAAAsb,EAAA6nB,EAAAt0C,IACAqR,IAAAob,EAAA6nB,EAAAr0C,IACAoR,IAAAob,EAAA6nB,EAAA33C,IACAqV,aAAA,GACA2I,aAAAoI,GAEAtP,EAAAtC,KAAA0S,GAAA5R,aAAA6d,GAAAhd,YAAAhB,eAAAlS,KAAA8rB,MAAAra,IAAAjP,GAEAua,EAAA/B,OAAAg9B,EAAAx1C,EAAA4B,EAAA5B,EAAAqD,EAAArD,EAAAsD,GAEAkyC,GAAA,EAEAj7B,EAAA/B,OAAAg9B,EAAAnkC,EAAAzP,EAAAyP,EAAAhO,EAAAgO,EAAA/N,GAEAkyC,GAAA,EAIAj7B,EAAAghC,gBAlDA,GAoGAgoE,GAAA/nH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACA+nH,GAAA/nH,UAAAsT,YAAAy0G,GAEAA,GAAA/nH,UAAAosB,QAAA,WAEApqB,KAAAgmH,WAAAr5F,SAAAvC,UACApqB,KAAAgmH,WAAAz1E,SAAAnmB,UACApqB,KAAAimH,WAAAt5F,SAAAvC,UACApqB,KAAAimH,WAAA11E,SAAAnmB,WAIA27F,GAAA/nH,UAAA0hB,OAAA,WAEA,IAAAld,EAAA,IAAAgO,GACAqD,EAAA,IAAArD,GACAo1F,EAAA,IAAAp1F,GAEA,kBAEAhO,EAAAkiB,sBAAA1kB,KAAAq5D,MAAAl2C,aACAtP,EAAA6Q,sBAAA1kB,KAAAq5D,MAAAv3D,OAAAqhB,aACAyiF,EAAA7zF,WAAA8B,EAAArR,GAEAxC,KAAAgmH,WAAA1tG,OAAAstF,YAEA5lG,KAAA0jC,OAEA1jC,KAAAgmH,WAAAz1E,SAAA7M,MAAA9yB,IAAA5Q,KAAA0jC,OACA1jC,KAAAimH,WAAA11E,SAAA7M,MAAA9yB,IAAA5Q,KAAA0jC,SAIA1jC,KAAAgmH,WAAAz1E,SAAA7M,MAAAnyB,KAAAvR,KAAAq5D,MAAA31B,OACA1jC,KAAAimH,WAAA11E,SAAA7M,MAAAnyB,KAAAvR,KAAAq5D,MAAA31B,QAIA1jC,KAAAimH,WAAA3tG,OAAAstF,GACA5lG,KAAAimH,WAAAnqG,MAAAhW,EAAA8/F,EAAAtjG,UA3BA,GAmJA4jH,GAAAloH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACAkoH,GAAAloH,UAAAsT,YAAA40G,GAEAA,GAAAloH,UAAA0hB,OAAA,WAEA,IAAAiN,EAAAw5F,EAEAxgH,EAAA,IAAA6K,GACAyS,EAAA,IAAAiqB,GAEA,SAAA+qF,EAAA5rG,EAAAjoB,EAAAyB,EAAAC,GAEAH,EAAAiL,IAAAxM,EAAAyB,EAAAC,GAAAsd,UAAAH,GAEA,IAAAuC,EAAA2gG,EAAA95F,GAEA,YAAA7G,EAIA,IAFA,IAAAzI,EAAA4P,EAAAgxB,aAAA,YAEAjhD,EAAA,EAAAC,EAAA6oB,EAAAljB,OAAsC5F,EAAAC,EAAOD,IAE7CqgB,EAAA/B,OAAAwK,EAAA9oB,GAAAiJ,EAAAvB,EAAAuB,EAAAE,EAAAF,EAAAG,GAQA,kBAEA6mB,EAAA3sB,KAAA2sB,SACAw5F,EAAAnmH,KAAAmmH,SAOAljG,EAAAC,iBAAA3R,KAAAvR,KAAAijB,OAAAC,kBAIA+0G,EAAA,YACAA,EAAA,WAIAA,EAAA,MAdA,MAcA,GACAA,EAAA,KAfA,MAeA,GACAA,EAAA,MAhBA,KAgBA,GACAA,EAAA,KAjBA,KAiBA,GAIAA,EAAA,MArBA,KAqBA,GACAA,EAAA,KAtBA,KAsBA,GACAA,EAAA,MAvBA,IAuBA,GACAA,EAAA,KAxBA,IAwBA,GAIAA,EAAA,KAAA9nH,GAAA6N,KAAA,GACAi6G,EAAA,SAAAj6G,KAAA,GACAi6G,EAAA,OAAAj6G,GAAA,GAIAi6G,EAAA,OAlCA,EAkCA,KACAA,EAAA,MAnCA,EAmCA,KACAA,EAAA,SApCA,EAoCA,GACAA,EAAA,QArCA,EAqCA,GAEAA,EAAA,OAvCA,EAuCA,MACAA,EAAA,MAxCA,EAwCA,MACAA,EAAA,SAzCA,GAyCA,GACAA,EAAA,QA1CA,GA0CA,GAEAtrG,EAAAgxB,aAAA,YAAAI,gBA5EA,GA4GA4oE,GAAA3oH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACA2oH,GAAA3oH,UAAAsT,YAAAq1G,GAEAA,GAAA3oH,UAAA0hB,OAAA,WAEA,IAAAgG,EAAA,IAAAyC,GAEA,gBAAArqB,GAcA,YAZAA,GAEA+E,QAAA6O,KAAA,gEAIA1R,KAAAlC,QAEA4nB,EAAAsG,cAAAhsB,KAAAlC,SAIA4nB,EAAAwG,UAAA,CAEA,IAAAzmB,EAAAigB,EAAAjgB,IACAC,EAAAggB,EAAAhgB,IAkBAqX,EAAA/c,KAAA2sB,SAAAI,WAAAhQ,SACAxX,EAAAwX,EAAAxX,MAEAA,EAAA,GAAAG,EAAAtB,EAAqBmB,EAAA,GAAAG,EAAAG,EAAoBN,EAAA,GAAAG,EAAAI,EACzCP,EAAA,GAAAE,EAAArB,EAAqBmB,EAAA,GAAAG,EAAAG,EAAoBN,EAAA,GAAAG,EAAAI,EACzCP,EAAA,GAAAE,EAAArB,EAAqBmB,EAAA,GAAAE,EAAAI,EAAoBN,EAAA,GAAAG,EAAAI,EACzCP,EAAA,GAAAG,EAAAtB,EAAqBmB,EAAA,IAAAE,EAAAI,EAAqBN,EAAA,IAAAG,EAAAI,EAC1CP,EAAA,IAAAG,EAAAtB,EAAsBmB,EAAA,IAAAG,EAAAG,EAAqBN,EAAA,IAAAE,EAAAK,EAC3CP,EAAA,IAAAE,EAAArB,EAAsBmB,EAAA,IAAAG,EAAAG,EAAqBN,EAAA,IAAAE,EAAAK,EAC3CP,EAAA,IAAAE,EAAArB,EAAsBmB,EAAA,IAAAE,EAAAI,EAAqBN,EAAA,IAAAE,EAAAK,EAC3CP,EAAA,IAAAG,EAAAtB,EAAsBmB,EAAA,IAAAE,EAAAI,EAAqBN,EAAA,IAAAE,EAAAK,EAE3CiX,EAAAghC,eAEA/9C,KAAA2sB,SAAA6E,0BArDA,GA2DAm1F,GAAA3oH,UAAAguB,cAAA,SAAAluB,GAKA,OAHAkC,KAAAlC,SACAkC,KAAA0f,SAEA1f,MAgCA4mH,GAAA5oH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACA4oH,GAAA5oH,UAAAsT,YAAAs1G,GAEAA,GAAA5oH,UAAAgvB,kBAAA,SAAA4iB,GAEA,IAAAlqB,EAAA1lB,KAAA0lB,IAEAA,EAAAwG,YAEAxG,EAAAyG,UAAAnsB,KAAA+c,UAEA2I,EAAA0G,QAAApsB,KAAA8b,OAEA9b,KAAA8b,MAAA5J,eAAA,IAEAm6B,GAAAruC,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,KAsCAi3E,GAAA7oH,UAAAZ,OAAA0rB,OAAAs/D,GAAApqF,WACA6oH,GAAA7oH,UAAAsT,YAAAu1G,GAEAA,GAAA7oH,UAAAgvB,kBAAA,SAAA4iB,GAEA,IAAA9zB,GAAA9b,KAAAwtB,MAAAjF,SAEAjpB,KAAA2T,IAAA6I,GAAA,OAAAA,EAAA,MAEA9b,KAAA8b,MAAAlL,IAAA,GAAA5Q,KAAA8rB,KAAA,GAAA9rB,KAAA8rB,KAAAhQ,GAEA9b,KAAAsY,OAAAtY,KAAAwtB,MAAAvJ,QAEAooB,GAAAruC,UAAAgvB,kBAAAnwB,KAAAmD,KAAA4vC,IA2DAk3E,GAAA9oH,UAAAZ,OAAA0rB,OAAAujB,GAAAruC,WACA8oH,GAAA9oH,UAAAsT,YAAAw1G,GAEAA,GAAA9oH,UAAAipH,cAEAxqG,GAAA,IAAAjM,GAGA,SAAA4O,GAIAA,EAAAvZ,EAAA,OAEA7F,KAAA+F,WAAA6K,IAAA,SAEGwO,EAAAvZ,GAAA,OAEH7F,KAAA+F,WAAA6K,IAAA,UAIA6L,GAAA7L,IAAAwO,EAAAtZ,EAAA,GAAAsZ,EAAAhb,GAAA8O,YAEA1D,GAAAlQ,KAAA6kB,KAAA/E,EAAAvZ,GAEA7F,KAAA+F,WAAAka,iBAAAxD,GAAAjN,OAQAs3G,GAAA9oH,UAAA0V,UAAA,SAAApR,EAAAykH,EAAAC,YAEAD,MAAA,GAAAzkH,YACA0kH,MAAA,GAAAD,GAEA/mH,KAAAsvB,KAAAxT,MAAAlL,IAAA,EAAAtR,KAAAoG,IAAA,EAAApD,EAAAykH,GAAA,GACA/mH,KAAAsvB,KAAAtG,eAEAhpB,KAAAklH,KAAAppG,MAAAlL,IAAAo2G,EAAAD,EAAAC,GACAhnH,KAAAklH,KAAAnoG,SAAAlX,EAAAvD,EACAtC,KAAAklH,KAAAl8F,gBAIA89F,GAAA9oH,UAAAk6H,SAAA,SAAAx0F,GAEA1jC,KAAAsvB,KAAAihB,SAAA7M,MAAAnyB,KAAAmyB,GACA1jC,KAAAklH,KAAA30E,SAAA7M,MAAAnyB,KAAAmyB,IAmCAwjF,GAAAlpH,UAAAZ,OAAA0rB,OAAAu/D,GAAArqF,WACAkpH,GAAAlpH,UAAAsT,YAAA41G,GAmKA9nB,GAAAt2E,OAAA,SAAAqvG,EAAA10B,GAQA,OANA5gG,QAAA+M,IAAA,4CAEAuoH,EAAAn6H,UAAAZ,OAAA0rB,OAAAs2E,GAAAphG,WACAm6H,EAAAn6H,UAAAsT,YAAA6mH,EACAA,EAAAn6H,UAAAylG,WAEA00B,GAMA/6H,OAAA4D,OAAA8lG,GAAA9oG,WAEAo6H,qBAAA,SAAAv0B,GAEAhhG,QAAA6O,KAAA,wHAIA,IAAA4hF,EAAAtzF,KAAA4jG,UAAAC,GACA,OAAA7jG,KAAAq4H,eAAA/kC,IAIAglC,2BAAA,SAAAz0B,GAEAhhG,QAAA6O,KAAA,8HAIA,IAAA4hF,EAAAtzF,KAAAw1F,gBAAAqO,GACA,OAAA7jG,KAAAq4H,eAAA/kC,IAIA+kC,eAAA,SAAA7yG,GAEA3iB,QAAA6O,KAAA,kHAIA,IAFA,IAAAib,EAAA,IAAAklB,GAEAn1C,EAAA,EAAAC,EAAA6oB,EAAAljB,OAAqC5F,EAAAC,EAAOD,IAAA,CAE5C,IAAA2vB,EAAA7G,EAAA9oB,GACAiwB,EAAAE,SAAA7nB,KAAA,IAAAwL,GAAA6b,EAAAjoB,EAAAioB,EAAAxmB,EAAAwmB,EAAAvmB,GAAA,IAIA,OAAA6mB,KAQAvvB,OAAA4D,OAAAimG,GAAAjpG,WAEAu6H,WAAA,SAAA/yG,GAEA3iB,QAAA6O,KAAA,mEACA1R,KAAAyrB,cAAAjG,MAkBApoB,OAAA0rB,OAAAw8E,GAAAtnG,WAaAZ,OAAA0rB,OAAAw8E,GAAAtnG,WAaAmpH,GAAAnpH,UAAAZ,OAAA0rB,OAAAw8E,GAAAtnG,WAEAZ,OAAA4D,OAAAmmH,GAAAnpH,WAEAw6H,cAAA,WAEA31H,QAAAtC,MAAA,qDAGAk4H,sBAAA,WAEA51H,QAAAtC,MAAA,6DAGAm4H,yBAAA,WAEA71H,QAAAtC,MAAA,kEA6BAmlH,GAAA1nH,UAAA26H,UAAA,WAEA91H,QAAAtC,MAAA,6FAIA4kH,GAAAnnH,UAAA0hB,OAAA,WAEA7c,QAAAtC,MAAA,iEAaAnD,OAAA4D,OAAA2yG,GAAA31G,WAEA46H,eAAA,SAAAnvG,GAGA,OADA5mB,QAAA6O,KAAA,wGACAolG,GAAArtF,MAsBArsB,OAAA4D,OAAA4jH,GAAA5mH,WAEAsW,OAAA,SAAAovF,GAGA,OADA7gG,QAAA6O,KAAA,2DACA1R,KAAAmsB,UAAAu3E,IAGA/0E,MAAA,WAGA,OADA9rB,QAAA6O,KAAA,wDACA1R,KAAAksB,WAGA2sG,kBAAA,SAAAnzG,GAGA,OADA7iB,QAAA6O,KAAA,0EACA1R,KAAAotB,cAAA1H,IAGAoG,KAAA,SAAA43E,GAGA,OADA7gG,QAAA6O,KAAA,uDACA1R,KAAAosB,QAAAs3E,MAKAtmG,OAAA4D,OAAAmnB,GAAAnqB,WAEAsW,OAAA,SAAAovF,GAGA,OADA7gG,QAAA6O,KAAA,2DACA1R,KAAAmsB,UAAAu3E,IAGA/0E,MAAA,WAGA,OADA9rB,QAAA6O,KAAA,wDACA1R,KAAAksB,WAGA2sG,kBAAA,SAAAnzG,GAGA,OADA7iB,QAAA6O,KAAA,0EACA1R,KAAAotB,cAAA1H,IAGAozG,qBAAA,SAAAjzG,GAGA,OADAhjB,QAAA6O,KAAA,gFACA1R,KAAAqtB,iBAAAxH,IAGAiG,KAAA,SAAA43E,GAGA,OADA7gG,QAAA6O,KAAA,uDACA1R,KAAAosB,QAAAs3E,MAKAlhD,GAAAxkD,UAAAsW,OAAA,SAAAovF,GAGA,OADA7gG,QAAA6O,KAAA,4DACA1R,KAAAmsB,UAAAu3E,IAIAtmG,OAAA4D,OAAA0M,IAEAqrH,SAAA,WAGA,OADAl2H,QAAA6O,KAAA,2EACApS,KAAAC,UAIAy5H,kBAAA,SAAAt7H,GAGA,OADAmF,QAAA6O,KAAA,4EACAhE,GAAAoC,gBAAApS,IAIAu7H,eAAA,SAAAv7H,GAGA,OADAmF,QAAA6O,KAAA,wEACAhE,GAAAgC,eAAAhS,MAMAN,OAAA4D,OAAAyP,GAAAzS,WAEAk7H,qBAAA,SAAA3zH,EAAA3G,GAGA,OADAiE,QAAA6O,KAAA,uFACA1R,KAAAgU,QAAAzO,EAAA3G,IAGAu6H,gBAAA,SAAAxzH,GAGA,OADA9C,QAAA6O,KAAA,kGACA/L,EAAA0M,aAAArS,OAGAo5H,qBAAA,WAEAv2H,QAAAtC,MAAA,6DAGA84H,cAAA,SAAAn9C,GAGA,OADAr5E,QAAA6O,KAAA,6GACA1R,KAAA4a,uBAAAshE,IAGAo9C,oBAAA,WAEAz2H,QAAAtC,MAAA,8DAMAnD,OAAA4D,OAAAgP,GAAAhS,WAEAu7H,gBAAA,SAAAz8H,GAGA,OADA+F,QAAA6O,KAAA,0EACA1R,KAAA6V,aAAA/Y,IAGAo8H,qBAAA,SAAA3zH,EAAA3G,GAGA,OADAiE,QAAA6O,KAAA,uFACA1R,KAAAgU,QAAAzO,EAAA3G,IAGA46H,YAAA,WAEA,IAAAh3H,EAEA,kBAIA,gBAFAA,MAAA,IAAAgO,IACA3N,QAAA6O,KAAA,wGACAlP,EAAA0T,oBAAAlW,KAAA,IARA,GAaAmuC,0BAAA,SAAA12B,GAGA,OADA5U,QAAA6O,KAAA,kGACA1R,KAAAwX,2BAAAC,IAGAgiH,gBAAA,WAEA52H,QAAA6O,KAAA,wDAGAynH,gBAAA,SAAAxzH,GAGA,OADA9C,QAAA6O,KAAA,kGACA/L,EAAAoV,aAAA/a,OAGA05H,gBAAA,SAAA/zH,GAGA,OADA9C,QAAA6O,KAAA,kGACA/L,EAAAoV,aAAA/a,OAGAo5H,qBAAA,WAEAv2H,QAAAtC,MAAA,6DAGAo5H,WAAA,SAAAnoH,GAEA3O,QAAA6O,KAAA,oGACAF,EAAA6R,mBAAArjB,OAGA45H,YAAA,SAAAj0H,GAGA,OADA9C,QAAA6O,KAAA,8FACA/L,EAAAoV,aAAA/a,OAGAulB,UAAA,WAEA1iB,QAAAtC,MAAA,kDAGA+tC,QAAA,WAEAzrC,QAAAtC,MAAA,gDAGAguC,QAAA,WAEA1rC,QAAAtC,MAAA,gDAGAiuC,QAAA,WAEA3rC,QAAAtC,MAAA,gDAGAs5H,aAAA,WAEAh3H,QAAAtC,MAAA,qDAGA84H,cAAA,SAAAn9C,GAGA,OADAr5E,QAAA6O,KAAA,6GACA1R,KAAA4a,uBAAAshE,IAGAo9C,oBAAA,WAEAz2H,QAAAtC,MAAA,4DAGAu5H,YAAA,SAAAr8G,EAAAC,EAAAE,EAAAD,EAAAE,EAAAC,GAGA,OADAjb,QAAA6O,KAAA,wHACA1R,KAAAwd,gBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,MAMAwK,GAAAtqB,UAAA+7H,mBAAA,SAAAzqG,GAGA,OADAzsB,QAAA6O,KAAA,6EACA1R,KAAA2vB,eAAAL,IAIApf,GAAAlS,UAAAm7H,gBAAA,SAAAxzH,GAGA,OADA9C,QAAA6O,KAAA,mHACA/L,EAAA2c,gBAAAtiB,OAIA5C,OAAA4D,OAAAshD,GAAAtkD,WAEA66H,kBAAA,SAAAnzG,GAGA,OADA7iB,QAAA6O,KAAA,yEACA1R,KAAAotB,cAAA1H,IAGAs0G,oBAAA,SAAAxsG,GAGA,OADA3qB,QAAA6O,KAAA,6EACA1R,KAAAutB,gBAAAC,IAGAsrG,qBAAA,SAAAjzG,GAGA,OADAhjB,QAAA6O,KAAA,+EACA1R,KAAAqtB,iBAAAxH,MAMAzoB,OAAA4D,OAAAyhD,GAAAzkD,WAEAm1F,KAAA,WAGA,OADAtwF,QAAA6O,KAAA,2DACA1R,KAAAwnD,WAGAyyE,mBAAA,SAAA5tG,EAAAvqB,GAGA,OADAe,QAAA6O,KAAA,8EACA1R,KAAA4mD,aAAAv6B,EAAAvqB,IAGAo4H,SAAA,SAAAp4H,GAGA,OADAe,QAAA6O,KAAA,mEACA1R,KAAAynD,YAAA3lD,IAGAmiB,OAAA,SAAAniB,GAGA,OADAe,QAAA6O,KAAA,+DACA1R,KAAA0mD,UAAA5kD,IAGA0rB,MAAA,SAAA1rB,GAGA,OADAe,QAAA6O,KAAA,6DACA1R,KAAA0nD,SAAA5lD,MAMA1E,OAAA4D,OAAAyhD,IAEAw3E,mBAAA,SAAA5tG,EAAAjsB,EAAAC,EAAAtD,EAAA+E,GAGA,OADAe,QAAA6O,KAAA,8EACA+wC,GAAAmE,aAAAv6B,EAAAjsB,EAAAC,EAAAtD,EAAA+E,IAGAmiB,OAAA,SAAA7jB,EAAAC,EAAAtD,EAAA+E,GAGA,OADAe,QAAA6O,KAAA,+DACA+wC,GAAAiE,UAAAtmD,EAAAC,EAAAtD,EAAA+E,MAMA1E,OAAA4D,OAAAmmG,GAAAnpG,WAEAm8H,iBAAA,SAAAt2B,GAGA,OADAhhG,QAAA6O,KAAA,oFACA1R,KAAA01F,cAAAmO,IAGAu2B,QAAA,SAAA/yG,GAGA,OADAxkB,QAAA6O,KAAA,4EACA,IAAAuiF,GAAAj0F,KAAAqnB,IAGAgzG,aAAA,SAAAhzG,GAGA,OADAxkB,QAAA6O,KAAA,+EACA,IAAA6pF,GAAAv7F,KAAAqnB,MAMAjqB,OAAA4D,OAAA+O,GAAA/R,WAEAs8H,cAAA,SAAApmH,EAAA1P,EAAA5F,GAGA,OADAiE,QAAA6O,KAAA,+EACA1R,KAAAiU,oBAAAC,EAAA1P,EAAA5F,IAGA27H,oBAAA,SAAA/oH,GAGA,OADA3O,QAAA6O,KAAA,qFACA1R,KAAAyT,oBAAAjC,IAGAgpH,gBAAA,WAGA,OADA33H,QAAA6O,KAAA,6EACA1R,KAAAgT,qBAMA5V,OAAA4D,OAAAwP,GAAAxS,WAEAy8H,2BAAA,WAEA53H,QAAAtC,MAAA,8GAGAm6H,uBAAA,WAEA73H,QAAAtC,MAAA,sGAGAo6H,sBAAA,SAAA79H,GAGA,OADA+F,QAAA6O,KAAA,yFACA1R,KAAA0kB,sBAAA5nB,IAGA89H,mBAAA,SAAA99H,GAGA,OADA+F,QAAA6O,KAAA,mFACA1R,KAAA2kB,mBAAA7nB,IAGA+9H,oBAAA,SAAAr2H,EAAAoB,GAGA,OADA/C,QAAA6O,KAAA,qFACA1R,KAAAkW,oBAAAtQ,EAAApB,IAGAs2H,gBAAA,SAAAh+H,GAGA,OADA+F,QAAA6O,KAAA,uFACA1R,KAAA+a,aAAAje,IAGAw9H,cAAA,SAAApmH,EAAA1P,EAAA5F,GAGA,OADAiE,QAAA6O,KAAA,+EACA1R,KAAAiU,oBAAAC,EAAA1P,EAAA5F,IAGA27H,oBAAA,SAAA/oH,GAGA,OADA3O,QAAA6O,KAAA,qFACA1R,KAAAyT,oBAAAjC,IAGAgpH,gBAAA,WAGA,OADA33H,QAAA6O,KAAA,6EACA1R,KAAAgT,qBAMA5V,OAAA4D,OAAAmmB,GAAAnpB,WAEAs8H,cAAA,SAAApmH,EAAA1P,EAAA5F,GAGA,OADAiE,QAAA6O,KAAA,+EACA1R,KAAAiU,oBAAAC,EAAA1P,EAAA5F,IAGA47H,gBAAA,WAGA,OADA33H,QAAA6O,KAAA,6EACA1R,KAAAgT,qBAQA5V,OAAA4D,OAAA6wC,GAAA7zC,WAEA+8H,gBAAA,WAEAl4H,QAAAtC,MAAA,yDAGAguF,qBAAA,WAEA1rF,QAAAtC,MAAA,+GAMAnD,OAAA4D,OAAAqrC,GAAAruC,WAEAg9H,eAAA,SAAA/9H,GAGA,OADA4F,QAAA6O,KAAA,6EACA1R,KAAAovC,gBAAAnyC,IAGAg+H,YAAA,WAEAp4H,QAAA6O,KAAA,8EAGA6T,UAAA,SAAA6iB,EAAA3rB,GAGA,OADA5Z,QAAA6O,KAAA,kGACA1R,KAAAyuC,gBAAAhyB,EAAA2rB,IAGA8yF,iBAAA,WAEAr4H,QAAAtC,MAAA,qHAMAnD,OAAAsT,iBAAA27B,GAAAruC,WAEAm9H,YACA39H,IAAA,WAGA,OADAqF,QAAA6O,KAAA,uDACA1R,KAAAmlB,SAAAxO,OAGA/F,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,uDACA1R,KAAAmlB,SAAAxO,MAAAjZ,IAIA09H,eACA59H,IAAA,WAEAqF,QAAA6O,KAAA,kGAGAd,IAAA,WAEA/N,QAAA6O,KAAA,qGAOAtU,OAAAsT,iBAAA42E,GAAAtpF,WAEAgvE,SACAxvE,IAAA,WAGA,OADAqF,QAAA6O,KAAA,oDACA1R,KAAAunF,WAOAnqF,OAAAC,eAAAmqF,GAAAxpF,UAAA,oBAEAR,IAAA,WAEAqF,QAAA6O,KAAA,uDAGAd,IAAA,WAEA/N,QAAA6O,KAAA,yDAMAtU,OAAAC,eAAA+hG,GAAAphG,UAAA,wBAEAR,IAAA,WAGA,OADAqF,QAAA6O,KAAA,kEACA1R,KAAAq/F,oBAGAzuF,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,kEACA1R,KAAAq/F,mBAAA3hG,KAQAwqE,GAAAlqE,UAAAq9H,QAAA,SAAApuC,EAAA3kB,GAEAzlE,QAAA6O,KAAA,wHAGA42D,IAAAtoE,KAAAsoE,aACAtoE,KAAAgtF,eAAAC,IAMA7vF,OAAAsT,iBAAA02F,GAAAppG,WACAs9H,YACA1qH,IAAA,WAEA/N,QAAA6O,KAAA,gDAIA6pH,iBACA3qH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,4DACA1R,KAAA6nC,OAAA5kB,OAAAklD,IAAAzqE,IAIA89H,kBACA5qH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,8DACA1R,KAAA6nC,OAAA5kB,OAAAxF,KAAA/f,IAIA+9H,mBACA7qH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,gEACA1R,KAAA6nC,OAAA5kB,OAAAvF,MAAAhgB,IAIAg+H,iBACA9qH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,4DACA1R,KAAA6nC,OAAA5kB,OAAAtF,IAAAjgB,IAIAi+H,oBACA/qH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,kEACA1R,KAAA6nC,OAAA5kB,OAAArF,OAAAlgB,IAIAirC,kBACA/3B,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,8DACA1R,KAAA6nC,OAAA5kB,OAAApF,KAAAngB,IAIAkrC,iBACAh4B,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,4DACA1R,KAAA6nC,OAAA5kB,OAAAnF,IAAApgB,IAIAk+H,qBACAhrH,IAAA,WAEA/N,QAAA6O,KAAA,oHAIAo2B,YACAl3B,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,iDACA1R,KAAA6nC,OAAAyyB,KAAA58D,IAIAm+H,gBACAjrH,IAAA,WAEA/N,QAAA6O,KAAA,oDAIAoqH,gBACAlrH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,8DACA1R,KAAA6nC,OAAA0yB,QAAA5pD,MAAAjT,IAIAq+H,iBACAnrH,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,gEACA1R,KAAA6nC,OAAA0yB,QAAA1pD,OAAAnT,MAQAN,OAAAsT,iBAAAoiC,GAAA90C,WAEAsE,QACA9E,IAAA,WAGA,OADAqF,QAAA6O,KAAA,2EACA1R,KAAAuF,MAAAjD,SAIA05H,iBAAA,WAEAn5H,QAAAtC,MAAA,mEAMAnD,OAAA4D,OAAAw6C,GAAAx9C,WAEAi+H,SAAA,SAAAz3H,GAEA3B,QAAA6O,KAAA,sEACA1R,KAAAi9C,SAAAz4C,IAGA03H,YAAA,SAAAxsG,EAAA7U,EAAA6gF,YAEAA,GAEA74F,QAAA6O,KAAA,wEAGA7O,QAAA6O,KAAA,4DACA1R,KAAAg9C,SAAAttB,EAAA7U,IAGAshH,eAAA,WAEAt5H,QAAA6O,KAAA,kEACA1R,KAAA69C,eAGAk9E,gBAAA,WAEAl4H,QAAA6O,KAAA,+DAGA0qH,eAAA,WAEAv5H,QAAA6O,KAAA,gEAMAtU,OAAAsT,iBAAA8qC,GAAAx9C,WAEAs1G,WACA91G,IAAA,WAGA,OADAqF,QAAAtC,MAAA,iEACAP,KAAAw0C,SAIA++D,SACA/1G,IAAA,WAGA,OADAqF,QAAA6O,KAAA,+DACA1R,KAAAw0C,WASAp3C,OAAA4D,OAAAkzF,GAAAl2F,WAEAq+H,UAAA,WAEAx5H,QAAAtC,MAAA,gEAIA+7H,aAAA,WAEAz5H,QAAAtC,MAAA,mEAIA6zF,SAAA,WAEAvxF,QAAAtC,MAAA,iEAQAnD,OAAAsT,iBAAAyzG,GAAAnmH,WAEAi1C,SACAriC,IAAA,WAEA/N,QAAA6O,KAAA,oFAIAwV,UACAxpB,MAAA,WAGA,OADAmF,QAAA6O,KAAA,qFACA1R,SASA5C,OAAAsT,iBAAA8uC,GAAAxhD,WAEAu+H,YACA/+H,IAAA,WAEAqF,QAAA6O,KAAA,kDAGAd,IAAA,WAEA/N,QAAA6O,KAAA,mDAIA8qH,SACAh/H,IAAA,WAGA,OADAqF,QAAA6O,KAAA,8CACA,IAAAoxB,KAKAqwE,SACA31G,IAAA,WAEAqF,QAAAtC,MAAA,SAAAP,KAAA2E,KAAA,uEAGAiM,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,SAAA1R,KAAA2E,KAAA,sEACA3E,KAAA2/C,YA9g4CA,IA8g4CAjiD,MAOAN,OAAAsT,iBAAAkhD,GAAA5zD,WAEAy+H,OACAj/H,IAAA,WAGA,OADAqF,QAAA6O,KAAA,iGAIAd,IAAA,WAEA/N,QAAA6O,KAAA,gGAOAtU,OAAAsT,iBAAAgxC,GAAA1jD,WAEA+jD,aACAvkD,IAAA,WAGA,OADAqF,QAAA6O,KAAA,iFACA1R,KAAA8hD,WAAAC,aAGAnxC,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,kFACA1R,KAAA8hD,WAAAC,YAAArkD,MASAN,OAAA4D,OAAAyqE,GAAAztE,WAEA0+H,uBAAA,WAGA,OADA75H,QAAA6O,KAAA,6EACA1R,KAAAszD,mBAIA2S,iBAAA,WAGA,OADApjE,QAAA6O,KAAA,qFACA1R,KAAAqxD,aAAA4U,oBAIA02D,aAAA,WAGA,OADA95H,QAAA6O,KAAA,wEACA1R,KAAAqxD,aAAAvZ,WAIA8kF,aAAA,WAGA,OADA/5H,QAAA6O,KAAA,+DACA1R,KAAAw5D,MAAAkI,SAIAm7D,sBAAA,WAGA,OADAh6H,QAAA6O,KAAA,gGACA1R,KAAA8hD,WAAAtkD,IAAA,sBAGAs/H,0BAAA,WAGA,OADAj6H,QAAA6O,KAAA,yGACA1R,KAAA8hD,WAAAtkD,IAAA,2BAGAu/H,4BAAA,WAGA,OADAl6H,QAAA6O,KAAA,6GACA1R,KAAA8hD,WAAAtkD,IAAA,6BAGAw/H,8BAAA,WAGA,OADAn6H,QAAA6O,KAAA,oHACA1R,KAAA8hD,WAAAtkD,IAAA,kCAGAy/H,+BAAA,WAGA,OADAp6H,QAAA6O,KAAA,sHACA1R,KAAA8hD,WAAAtkD,IAAA,mCAGA0/H,oBAAA,WAGA,OADAr6H,QAAA6O,KAAA,6FACA1R,KAAA8hD,WAAAtkD,IAAA,qBAGA+1D,uBAAA,WAGA,OADA1wD,QAAA6O,KAAA,uFACA1R,KAAAqxD,aAAAmC,gBAGA2pE,wBAAA,WAGA,OADAt6H,QAAA6O,KAAA,uGACA1R,KAAA8hD,WAAAtkD,IAAA,2BAGA4/H,kBAAA,SAAAz9C,GAEA98E,QAAA6O,KAAA,uEACA1R,KAAA2+D,eAAAghB,IAGAgD,aAAA,WAEA9/E,QAAA6O,KAAA,2DAGA2rH,aAAA,WAEAx6H,QAAA6O,KAAA,2DAGA4rH,cAAA,WAEAz6H,QAAA6O,KAAA,4DAGA6rH,gBAAA,WAEA16H,QAAA6O,KAAA,8DAGA8rH,eAAA,WAEA36H,QAAA6O,KAAA,+DAMAtU,OAAAsT,iBAAA+6D,GAAAztE,WAEA42D,kBACAp3D,IAAA,WAEA,OAAAwC,KAAA60D,UAAA1jB,SAGAvgC,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,qEACA1R,KAAA60D,UAAA1jB,QAAAzzC,IAIAo3D,eACAt3D,IAAA,WAEA,OAAAwC,KAAA60D,UAAAlwD,MAGAiM,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,+DACA1R,KAAA60D,UAAAlwD,KAAAjH,IAIA+/H,mBACAjgI,IAAA,WAEAqF,QAAA6O,KAAA,+FAIAd,IAAA,WAEA/N,QAAA6O,KAAA,kGAMAtU,OAAAsT,iBAAA4qD,GAAAt9D,WAEA67E,UACAr8E,IAAA,WAEAqF,QAAA6O,KAAA,gGAIAd,IAAA,WAEA/N,QAAA6O,KAAA,iGAIAgsH,oBACAlgI,IAAA,WAEAqF,QAAA6O,KAAA,0GAIAd,IAAA,WAEA/N,QAAA6O,KAAA,2GAIAisH,mBACAngI,IAAA,WAEAqF,QAAA6O,KAAA,yGAIAd,IAAA,WAEA/N,QAAA6O,KAAA,4GASAtU,OAAAsT,iBAAA0W,GAAAppB,WAEAkoB,OACA1oB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,0DACA1R,KAAAynB,QAAAvB,OAGAtV,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,0DACA1R,KAAAynB,QAAAvB,MAAAxoB,IAIAyoB,OACA3oB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,0DACA1R,KAAAynB,QAAAtB,OAGAvV,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,0DACA1R,KAAAynB,QAAAtB,MAAAzoB,IAIA0oB,WACA5oB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,kEACA1R,KAAAynB,QAAArB,WAGAxV,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,kEACA1R,KAAAynB,QAAArB,UAAA1oB,IAIA2oB,WACA7oB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,kEACA1R,KAAAynB,QAAApB,WAGAzV,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,kEACA1R,KAAAynB,QAAApB,UAAA3oB,IAIA4oB,YACA9oB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,oEACA1R,KAAAynB,QAAAnB,YAGA1V,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,oEACA1R,KAAAynB,QAAAnB,WAAA5oB,IAIAkB,QACApB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,4DACA1R,KAAAynB,QAAA7oB,QAGAgS,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,4DACA1R,KAAAynB,QAAA7oB,OAAAlB,IAIAipB,QACAnpB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,4DACA1R,KAAAynB,QAAAd,QAGA/V,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,4DACA1R,KAAAynB,QAAAd,OAAAjpB,IAIAyC,QACA3C,IAAA,WAGA,OADAqF,QAAA6O,KAAA,4DACA1R,KAAAynB,QAAAtnB,QAGAyQ,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,4DACA1R,KAAAynB,QAAAtnB,OAAAzC,IAIAiH,MACAnH,IAAA,WAGA,OADAqF,QAAA6O,KAAA,wDACA1R,KAAAynB,QAAA9iB,MAGAiM,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,wDACA1R,KAAAynB,QAAA9iB,KAAAjH,IAIAmpB,iBACArpB,IAAA,WAGA,OADAqF,QAAA6O,KAAA,8EACA1R,KAAAynB,QAAAZ,iBAGAjW,IAAA,SAAAlT,GAEAmF,QAAA6O,KAAA,8EACA1R,KAAAynB,QAAAZ,gBAAAnpB,MASAN,OAAAsT,iBAAAg4D,GAAA1qE,WAEA4/H,UACAhtH,IAAA,WAEA/N,QAAA6O,KAAA,uDASAiuG,GAAA3hH,UAAA4iG,KAAA,SAAA9C,GAEAj7F,QAAA6O,KAAA,0EACA,IAAA8a,EAAAxsB,KAOA,WANA6+G,IACAje,KAAA9C,EAAA,SAAA5hB,GAEA1vD,EAAAu8F,UAAA7sC,KAGAl8E,MAIAugH,GAAAviH,UAAA6/H,QAAA,WAGA,OADAh7H,QAAA6O,KAAA,+DACA1R,KAAAyqH,oBAMA3L,GAAA9gH,UAAA8/H,cAAA,SAAAjzE,EAAAsO,GAGA,OADAt2D,QAAA6O,KAAA,wDACA1R,KAAA0f,OAAAmrC,EAAAsO,sBCzn5Cc4kE,GAAdC,cAEEh+H,KAAA+c,SAAoB,IAAIhN,GAAQ,EAAG,GACnC/P,KAAAi+H,WAEAD,KAAKE,EAAmBC,EAAY5uG,EAAoB6uG,EAAeC,MACrEr+H,KAAKk+H,UAAYA,EAEjB,MAAM1uG,EAAQD,EAAUle,QAAQ6B,YAAYhB,eAAeksH,EAAQD,GAGnE,GAFAn+H,KAAK+c,SAAStL,IAAI+d,GAEd6uG,EAAM,CACR,MAAMC,GACJJ,YACAnhH,SAAU/c,KAAK+c,SAAS1L,QACxBke,UAAWA,EAAUle,QACrB+sH,SAGFp+H,KAAKi+H,QAAQj5H,KAAKs5H,IAItBN,UAAUE,EAAmBnhH,GAC3B,MAAMwhH,EAAanhI,OAAAohI,GAAAroE,OAAA/4D,CAAOkhI,GAAQA,EAAKJ,UAAYA,EAAWl+H,KAAKi+H,SAEnE,IAAIQ,EAAe1hH,EACf2hH,EAAgBR,EACpB,IAAK,IAAIxhI,EAAI,EAAGA,EAAI6hI,EAAWj8H,OAAQ5F,IAAK,CAC1C,MAAM4hI,EAAOC,EAAW7hI,GAClByhI,EAAKG,EAAKJ,UAAYQ,EACtBlvG,EAAQ8uG,EAAK/uG,UAAUle,QAAQ6B,YAAYhB,eAAeosH,EAAKF,MAAQD,GAG7E,GAFeM,EAAaptH,QAAQI,IAAI+d,GAE7B1b,OAAOwqH,EAAKvhH,WAAauhH,EAAKJ,YAAcQ,EACrD,MAGFD,EAAeH,EAAKvhH,SACpB2hH,EAAgBJ,EAAKJ,UAGvBl+H,KAAK+c,SAAWwhH,EAAWA,EAAWj8H,OAAS,GAAGya,SAClD/c,KAAKi+H,QAAUM,SCpCLI,WAAsBZ,GAApCC,kCACEh+H,KAAA4+H,UAAuBpmH,MAAWqmH,QAAaphH,QAAaC,UAC5D1d,KAAAo+H,MAAQh7H,EAER46H,KAAKE,EAAmBC,EAAYE,MAClC,MAAM9uG,EAAY,IAAIxf,IACnB/P,KAAK4+H,SAASnhH,MAAQ,EAAI,IAC1Bzd,KAAK4+H,SAASlhH,MAAQ,EAAI,IAC1B1d,KAAK4+H,SAASpmH,IAAM,EAAI,IACxBxY,KAAK4+H,SAASC,KAAO,EAAI,IAG5B7+H,KAAKs+H,KAAKJ,EAAWC,EAAI5uG,EAAWvvB,KAAKo+H,MAAOC,GAEhDr+H,KAAK+c,SAAS1O,MACZ,IAAI0B,GAAQ/M,EAAe,EAAGC,EAAgB,GAC9C,IAAI8M,GAAQjN,EAAaE,EAAe,EAAGD,EAAcE,EAAgB,WCtBjE67H,WAA0Bf,GAKtCC,YAAY9uF,EAAYnyB,EAAmBwS,GACzCwvG,QAHF/+H,KAAAswG,SAKEtwG,KAAKkvC,GAAKA,EACVlvC,KAAK+c,SAAWA,EAAS1L,QACzBrR,KAAKuvB,UAAYA,EAAUle,QAG7B2sH,WACEh+H,KAAKswG,SAGP0tB,KAAKE,EAAmBC,EAAYE,MAClCr+H,KAAKs+H,KAAKJ,EAAWC,EAAIn+H,KAAKuvB,UAAWlsB,EAAkBg7H,gBC2B/Ct7H,MCjDhB,MAAMghH,GAAOn6F,SAASo1G,cAAc,OACpCp1G,SAASq1G,KAAKC,YAAYnb,IAE1Bob,EAAAhhE,OAAgBihE,EAAAJ,4BDOGI,EAAAC,UAIjBrB,YAAYsB,GACVP,MAAMO,GAENt2D,OAAOu2D,QACLC,UAAW,IACXC,UAAW,IACXC,eAIJ1B,oBACE,MAAMt0G,EAAS1pB,KAAK2/H,KAAKC,KAEzB5/H,KAAK6/H,OAAS,UEpBlB7B,cAEEh+H,KAAA8/H,WAGA9/H,KAAAw5D,OACEumE,OAAQ,IAAIpB,GACZqB,gBAGFhC,QACEh+H,KAAKw5D,MAAMumE,OAAOhjH,SAASnM,IACzB9N,EAAa,EACbC,EAAc,GAIlBi7H,QACEh+H,KAAKigI,SAAW9I,YAAY7F,MAC5BtxH,KAAK8/H,WACL92D,OAAOga,sBAAsBhjF,KAAKkgI,KAAKlhI,KAAKgB,OAG9Cg+H,QACE,MAAMmC,EAAsB/iI,OAAAohI,GAAA4B,OAAAhjI,CAAOijI,KAC/BA,EAAWtjH,SAAS3Y,GAAKlB,GACxBm9H,EAAWtjH,SAAS3Y,EAAItB,EAAaI,GACrCm9H,EAAWtjH,SAASlX,GAAK1C,GACzBk9H,EAAWtjH,SAASlX,EAAI9C,EAAcI,GACzCnD,KAAKw5D,MAAMwmE,aAEbhgI,KAAKw5D,MAAMwmE,YAAcG,EAG3BnC,QAAQsC,GACNtgI,KAAKsgI,OAASA,EAGhBtC,KAAKxkE,GACHx5D,KAAKw5D,MAAMumE,OAAOnB,SAAWplE,EAAMumE,OAAOnB,SAE1CxhI,OAAAohI,GAAA7tF,OAAAvzC,CAAOo8D,EAAMwmE,aAAat+H,QAAQ2+H,IAC5BA,EAAW/vB,OAASlzG,OAAAohI,GAAA+B,IAAAnjI,CAAIijI,EAAWnxF,GAAIlvC,KAAKw5D,MAAMwmE,eAGtDhgI,KAAKw5D,MAAMwmE,YAAYK,EAAWnxF,IAAMmxF,KAI5CrC,KAAKE,GACH,MAAMC,EAAKD,EAAYl+H,KAAKigI,SAC5BjgI,KAAKigI,SAAW/B,EAEhBl+H,KAAKw5D,MAAMumE,OAAOG,KAAKhC,EAAWC,GAClC/gI,OAAAohI,GAAA7tF,OAAAvzC,CAAO4C,KAAKw5D,MAAMwmE,aAAat+H,QAAQ2+H,IACrCA,EAAWG,WACXH,EAAWH,KAAKhC,EAAWC,KAG7B,MAAM3kE,EAAQp8D,OAAAohI,GAAAiC,UAAArjI,CAAU4C,KAAKw5D,OAC7BwP,OAAO83B,WAAW,KAChB9gG,KAAKsgI,OAAOh+B,KAAK9oC,IAChBwP,OAAOu2D,OAAOC,WAEjBx/H,KAAK0gI,QAED1gI,KAAK8/H,SACP92D,OAAOga,sBAAsBhjF,KAAKkgI,KAAKlhI,KAAKgB,SF9C9CA,KAAKsgI,OAAS,UGHhBtC,YAAYt0G,GAPZ1pB,KAAA8/H,WAEA9/H,KAAAw5D,OACEumE,OAAQ,IAAIpB,GACZqB,gBAIAhgI,KAAK0pB,OAASA,EACd1pB,KAAK2gI,IAAMj3G,EAAOK,WAAW,MAE7BH,SAASllB,iBAAiB,UAAW1E,KAAK4gI,QAAQ5hI,KAAKgB,OACvD4pB,SAASllB,iBAAiB,QAAS1E,KAAK6gI,MAAM7hI,KAAKgB,OACnD4pB,SAASllB,iBAAiB,QAAS1E,KAAK8gI,MAAM9hI,KAAKgB,OAGrDg+H,QACEh+H,KAAK2gI,IAAII,UAAU,EAAG,EAAGj+H,EAAYC,GAGvCi7H,QACEh+H,KAAKk/D,QAELl/D,KAAKw5D,MAAMumE,OAAOhjH,SAASnM,IACzB9N,EAAa,EACbC,EAAc,GAIlBi7H,QACEh+H,KAAKigI,SAAW9I,YAAY7F,MAC5BtxH,KAAK8/H,WACL92D,OAAOga,sBAAsBhjF,KAAKkgI,KAAKlhI,KAAKgB,OAG9Cg+H,OACEh+H,KAAK8/H,WAGP9B,SAAS14H,EAAsB07H,GAC7B,MAAMz+H,EAAM+C,EAAM27H,SAAW37H,EAAM47H,MAEnC,GAAI9jI,OAAAohI,GAAA2C,SAAA/jI,CAASmF,EAAKe,EAASC,MACzBvD,KAAKw5D,MAAMumE,OAAOnB,SAASnhH,KAAOujH,OAC7B,GAAI5jI,OAAAohI,GAAA2C,SAAA/jI,CAASmF,EAAKe,EAASG,OAChCzD,KAAKw5D,MAAMumE,OAAOnB,SAASlhH,MAAQsjH,OAC9B,GAAI5jI,OAAAohI,GAAA2C,SAAA/jI,CAASmF,EAAKe,EAASE,IAChCxD,KAAKw5D,MAAMumE,OAAOnB,SAASpmH,GAAKwoH,OAC3B,GAAI5jI,OAAAohI,GAAA2C,SAAA/jI,CAASmF,EAAKe,EAASI,MAChC1D,KAAKw5D,MAAMumE,OAAOnB,SAASC,KAAOmC,MAC7B,KAAI5jI,OAAAohI,GAAA2C,SAAA/jI,CAASmF,EAAKe,EAASK,GAQhC,OANI3D,KAAKw5D,MAAMumE,OAAO3B,QAAUh7H,EAC9BpD,KAAKw5D,MAAMumE,OAAO3B,MAAuB,EAAfh7H,EAE1BpD,KAAKw5D,MAAMumE,OAAO3B,MAAQh7H,EAM9BkC,EAAM87H,kBAGRpD,QAAQ14H,GACNtF,KAAKqhI,SAAS/7H,MAGhB04H,MAAM14H,GACJtF,KAAKqhI,SAAS/7H,MAGhB04H,MAAM14H,GACJ,MAAMg8H,EAAOthI,KAAK0pB,OAAO63G,wBAEnBhyG,EAAY,IAAIxf,GACpBzK,EAAMk8H,QAAUF,EAAK7jH,KACrBnY,EAAMm8H,QAAUH,EAAK3jH,KACrB7L,IAAI9R,KAAKw5D,MAAMumE,OAAOhjH,UAElBsjH,EAAa,IAAIvB,GAAW1hI,OAAAsF,GAAAD,GAAArF,GAAQ4C,KAAKw5D,MAAMumE,OAAOhjH,SAAUwS,GAEtEvvB,KAAKw5D,MAAMwmE,YAAYK,EAAWnxF,IAAMmxF,EAG1CrC,QAAQ6B,GACN7/H,KAAK6/H,OAASA,EAGhB7B,KAAKxkE,GACCwP,OAAOu2D,OAAOG,WAChB1/H,KAAKw5D,MAAMumE,OAAO2B,UAAUloE,EAAMumE,OAAO7B,UAAW1kE,EAAMumE,OAAOhjH,UAEjE/c,KAAKw5D,MAAMumE,OAAOhjH,SAAWy8C,EAAMumE,OAAOhjH,SAG5C3f,OAAAohI,GAAA7tF,OAAAvzC,CAAO4C,KAAKw5D,MAAMwmE,aAAat+H,QAAQ2+H,IAChCA,EAAW/vB,QAASlzG,OAAAohI,GAAA+B,IAAAnjI,CAAIijI,EAAWnxF,GAAIsqB,EAAMwmE,qBAG3ChgI,KAAKw5D,MAAMwmE,YAAYK,EAAWnxF,MAG3C9xC,OAAAohI,GAAA7tF,OAAAvzC,CAAOo8D,EAAMwmE,aAAat+H,QAAQ2+H,IAC5Br3D,OAAOu2D,OAAOG,YAActiI,OAAAohI,GAAA+B,IAAAnjI,CAAIijI,EAAWnxF,GAAIlvC,KAAKw5D,MAAMwmE,aAC5DhgI,KAAKw5D,MAAMwmE,YAAYK,EAAWnxF,IAAIwyF,UAAUrB,EAAWnC,UAAWmC,EAAWtjH,UAEjF/c,KAAKw5D,MAAMwmE,YAAYK,EAAWnxF,IAAMmxF,IAK9CrC,SACEh+H,KAAKk/D,QAEL,MAAM96D,EAAIpE,KAAKw5D,MAAMumE,OAAOhjH,SAAS3Y,EAAIpB,EAAe,EAClD6C,EAAI7F,KAAKw5D,MAAMumE,OAAOhjH,SAASlX,EAAI5C,EAAgB,EACzDjD,KAAK2gI,IAAIrgE,SAASl8D,EAAGyB,EAAG7C,EAAcC,GAEtC7F,OAAAohI,GAAA7tF,OAAAvzC,CAAO4C,KAAKw5D,MAAMwmE,aAAat+H,QAAQ2+H,IACrC,IAAKr3D,OAAOu2D,OAAOG,aAAeW,EAAW/vB,MAAO,OAEpD,MAAMlsG,EAAIi8H,EAAWtjH,SAAS3Y,EAAIlB,EAAmB,EAC/C2C,EAAIw6H,EAAWtjH,SAASlX,EAAI1C,EAAoB,EACtDnD,KAAK2gI,IAAIrgE,SAASl8D,EAAGyB,EAAG3C,EAAkBC,KAI9C66H,KAAKE,GACH,MAAMC,EAAKD,EAAYl+H,KAAKigI,SAC5BjgI,KAAKigI,SAAW/B,EAEhBl+H,KAAKm+D,SAED6K,OAAOu2D,OAAOG,aAChB1/H,KAAKw5D,MAAMumE,OAAOG,KAAKhC,EAAWC,EAAIn1D,OAAOu2D,OAAOG,YACpDtiI,OAAAohI,GAAA7tF,OAAAvzC,CAAO4C,KAAKw5D,MAAMwmE,aAAat+H,QAAQ2+H,IACrCA,EAAWH,KAAKhC,EAAWC,EAAIn1D,OAAOu2D,OAAOG,eAIjD,MAAMlmE,EAAQp8D,OAAAohI,GAAAiC,UAAArjI,CAAU4C,KAAKw5D,OAC7BwP,OAAO83B,WAAW,KAChB9gG,KAAK6/H,OAAOv9B,KAAK9oC,IAChBwP,OAAOu2D,OAAOE,WAEbz/H,KAAK8/H,SACP92D,OAAOga,sBAAsBhjF,KAAKkgI,KAAKlhI,KAAKgB,SHzIrB0pB,GAEzB1pB,KAAK6/H,OAAOpgB,QAAQz/G,KAAKsgI,QACzBtgI,KAAKsgI,OAAO7gB,QAAQz/G,KAAK6/H,QAEzB72D,OAAOs3D,OAAStgI,KAAKsgI,OACrBt3D,OAAO62D,OAAS7/H,KAAK6/H,OAErB7/H,KAAK6/H,OAAOn+D,QACZ1hE,KAAK6/H,OAAOnwG,QAEZ1vB,KAAKsgI,OAAO5+D,QACZ1hE,KAAKsgI,OAAO5wG,QAGdsuG,SACE,OACEoB,EAAAJ,cAAA,UACE2C,IAAI,OACJC,UAAU,OACVjxH,MAAO7N,EACP+N,OAAQ9N,MC9CK,MAAKghH,mBGI1BtnH,EAAAD,QAAA,SAAAqlI,GAEA,IAAAC,EAAA,oBAAA94D,eAAA84D,SAEA,IAAAA,EACA,UAAAthI,MAAA,oCAIA,IAAAqhI,GAAA,iBAAAA,EACA,OAAAA,EAGA,IAAAE,EAAAD,EAAAE,SAAA,KAAAF,EAAAG,KACAC,EAAAH,EAAAD,EAAAK,SAAAxhI,QAAA,iBA2DA,OA/BAkhI,EAAAlhI,QAAA,+DAAAyhI,EAAAC,GAEA,IAWAC,EAXAC,EAAAF,EACAhrE,OACA12D,QAAA,oBAAAxD,EAAAqlI,GAAwC,OAAAA,IACxC7hI,QAAA,oBAAAxD,EAAAqlI,GAAwC,OAAAA,IAGxC,0DAAAv2F,KAAAs2F,GACAH,GAQAE,EAFA,IAAAC,EAAAx9H,QAAA,MAEAw9H,EACG,IAAAA,EAAAx9H,QAAA,KAEHg9H,EAAAQ,EAGAL,EAAAK,EAAA5hI,QAAA,YAIA,OAAAwvC,KAAAC,UAAAkyF,GAAA,kBAAAlkI,EAAAC,EAAAV,GC9EA,IAEA8kI,EACAC,EAHAC,KAWAC,GATAH,EASA,WAMA,OAAAz5D,QAAAp/C,mBAAAi5G,MAAA75D,OAAAm4B,MAZA,WAEA,gBADAuhC,MAAAD,EAAAtnD,MAAAn7E,KAAAqC,YACAqgI,IAiBAI,EAAA,SAAAL,GACA,IAAAC,KAEA,gBAAA5gI,GAMA,sBAAAA,EACA,OAAAA,IAEA,YAAA4gI,EAAA5gI,GAAA,CACA,IAAAihI,EAjBA,SAAAjhI,GACA,OAAA8nB,SAAAo5G,cAAAlhI,IAgBAjF,KAAAmD,KAAA8B,GAEA,GAAAknE,OAAAi6D,mBAAAF,aAAA/5D,OAAAi6D,kBACA,IAGAF,IAAAG,gBAAAC,KACK,MAAA9kI,GACL0kI,EAAA,KAGAL,EAAA5gI,GAAAihI,EAEA,OAAAL,EAAA5gI,IA1BA,GA8BAshI,EAAA,KACAC,EAAA,EACAC,KAEAC,EAAAjnI,EAAA,IAqDA,SAAAknI,EAAAC,EAAAp8G,GACA,QAAA3qB,EAAA,EAAgBA,EAAA+mI,EAAAnhI,OAAmB5F,IAAA,CACnC,IAAAgnI,EAAAD,EAAA/mI,GACAinI,EAAAhB,EAAAe,EAAAx0F,IAEA,GAAAy0F,EAAA,CACAA,EAAAhE,OAEA,QAAAxxG,EAAA,EAAiBA,EAAAw1G,EAAA3xB,MAAA1vG,OAA2B6rB,IAC5Cw1G,EAAA3xB,MAAA7jF,GAAAu1G,EAAA1xB,MAAA7jF,IAGA,KAAQA,EAAAu1G,EAAA1xB,MAAA1vG,OAAuB6rB,IAC/Bw1G,EAAA3xB,MAAAhtG,KAAA4+H,EAAAF,EAAA1xB,MAAA7jF,GAAA9G,QAEG,CACH,IAAA2qF,KAEA,IAAA7jF,EAAA,EAAiBA,EAAAu1G,EAAA1xB,MAAA1vG,OAAuB6rB,IACxC6jF,EAAAhtG,KAAA4+H,EAAAF,EAAA1xB,MAAA7jF,GAAA9G,IAGAs7G,EAAAe,EAAAx0F,KAA2BA,GAAAw0F,EAAAx0F,GAAAywF,KAAA,EAAA3tB,WAK3B,SAAA6xB,EAAAvmD,EAAAj2D,GAIA,IAHA,IAAAo8G,KACAK,KAEApnI,EAAA,EAAgBA,EAAA4gF,EAAAh7E,OAAiB5F,IAAA,CACjC,IAAAgnI,EAAApmD,EAAA5gF,GACAwyC,EAAA7nB,EAAA8zE,KAAAuoC,EAAA,GAAAr8G,EAAA8zE,KAAAuoC,EAAA,GAIAK,GAAclC,IAHd6B,EAAA,GAGcM,MAFdN,EAAA,GAEcO,UADdP,EAAA,IAGAI,EAAA50F,GACA40F,EAAA50F,GAAA8iE,MAAAhtG,KAAA++H,GADAN,EAAAz+H,KAAA8+H,EAAA50F,IAAkDA,KAAA8iE,OAAA+xB,KAIlD,OAAAN,EAGA,SAAAS,EAAA78G,EAAAgc,GACA,IAAAvhC,EAAAghI,EAAAz7G,EAAA88G,YAEA,IAAAriI,EACA,UAAAtB,MAAA,+GAGA,IAAA4jI,EAAAd,IAAAhhI,OAAA,GAEA,WAAA+kB,EAAAg9G,SACAD,EAEGA,EAAAE,YACHxiI,EAAAyiI,aAAAlhG,EAAA+gG,EAAAE,aAEAxiI,EAAAo9H,YAAA77F,GAJAvhC,EAAAyiI,aAAAlhG,EAAAvhC,EAAA0iI,YAMAlB,EAAAt+H,KAAAq+B,QACE,cAAAhc,EAAAg9G,SACFviI,EAAAo9H,YAAA77F,OACE,qBAAAhc,EAAAg9G,WAAAh9G,EAAAg9G,SAAAI,OAIF,UAAAjkI,MAAA,8LAHA,IAAA8jI,EAAAxB,EAAAz7G,EAAA88G,WAAA,IAAA98G,EAAAg9G,SAAAI,QACA3iI,EAAAyiI,aAAAlhG,EAAAihG,IAMA,SAAAI,EAAArhG,GACA,UAAAA,EAAAshG,WAAA,SACAthG,EAAAshG,WAAAC,YAAAvhG,GAEA,IAAA2U,EAAAsrF,EAAAv+H,QAAAs+B,GACA2U,GAAA,GACAsrF,EAAAl+H,OAAA4yC,EAAA,GAIA,SAAA6sF,EAAAx9G,GACA,IAAAgc,EAAAzZ,SAAAo1G,cAAA,SASA,gBAPA33G,EAAAy9G,MAAAngI,OACA0iB,EAAAy9G,MAAAngI,KAAA,YAGAogI,EAAA1hG,EAAAhc,EAAAy9G,OACAZ,EAAA78G,EAAAgc,GAEAA,EAiBA,SAAA0hG,EAAAC,EAAAF,GACA1nI,OAAAwE,KAAAkjI,GAAApjI,QAAA,SAAAa,GACAyiI,EAAAC,aAAA1iI,EAAAuiI,EAAAviI,MAIA,SAAAqhI,EAAAjyF,EAAAtqB,GACA,IAAAgc,EAAA3jB,EAAAsvB,EAAAkuB,EAGA,GAAA71C,EAAAw3E,WAAAltD,EAAAkwF,IAAA,CAGA,KAFA3kE,EAAA71C,EAAAw3E,UAAAltD,EAAAkwF,MASA,oBAJAlwF,EAAAkwF,IAAA3kE,EAUA,GAAA71C,EAAA+7G,UAAA,CACA,IAAA8B,EAAA7B,IAEAhgG,EAAA+/F,MAAAyB,EAAAx9G,IAEA3H,EAAAylH,EAAAnmI,KAAA,KAAAqkC,EAAA6hG,MACAl2F,EAAAm2F,EAAAnmI,KAAA,KAAAqkC,EAAA6hG,WAGAvzF,EAAAsyF,WACA,mBAAAmB,KACA,mBAAAA,IAAAC,iBACA,mBAAAD,IAAAE,iBACA,mBAAA9jC,MACA,mBAAA+jC,MAEAliG,EAxDA,SAAAhc,GACA,IAAAm+G,EAAA57G,SAAAo1G,cAAA,QAUA,gBARA33G,EAAAy9G,MAAAngI,OACA0iB,EAAAy9G,MAAAngI,KAAA,YAEA0iB,EAAAy9G,MAAAW,IAAA,aAEAV,EAAAS,EAAAn+G,EAAAy9G,OACAZ,EAAA78G,EAAAm+G,GAEAA,EAXA,CAwDAn+G,GACA3H,EAiFA,SAAA8lH,EAAAn+G,EAAAsqB,GACA,IAAAkwF,EAAAlwF,EAAAkwF,IACAoC,EAAAtyF,EAAAsyF,UAQAyB,WAAAr+G,EAAAs+G,uBAAA1B,GAEA58G,EAAAs+G,uBAAAD,KACA7D,EAAA0B,EAAA1B,IAGAoC,IAEApC,GAAA,uDAAuD0D,KAAAK,SAAAC,mBAAA11F,KAAAC,UAAA6zF,MAAA,OAGvD,IAAAlpB,EAAA,IAAAvZ,MAAAqgC,IAA6Bl9H,KAAA,aAE7BmhI,EAAAN,EAAAO,KAEAP,EAAAO,KAAAX,IAAAC,gBAAAtqB,GAEA+qB,GAAAV,IAAAE,gBAAAQ,IA5GA9mI,KAAA,KAAAqkC,EAAAhc,GACA2nB,EAAA,WACA01F,EAAArhG,GAEAA,EAAA0iG,MAAAX,IAAAE,gBAAAjiG,EAAA0iG,SAGA1iG,EAAAwhG,EAAAx9G,GACA3H,EAsDA,SAAA2jB,EAAAsO,GACA,IAAAkwF,EAAAlwF,EAAAkwF,IACAmC,EAAAryF,EAAAqyF,MAMA,GAJAA,GACA3gG,EAAA4hG,aAAA,QAAAjB,GAGA3gG,EAAA2iG,WACA3iG,EAAA2iG,WAAAC,QAAApE,MACE,CACF,KAAAx+F,EAAAmhG,YACAnhG,EAAAuhG,YAAAvhG,EAAAmhG,YAGAnhG,EAAA67F,YAAAt1G,SAAAs8G,eAAArE,MArEA7iI,KAAA,KAAAqkC,GACA2L,EAAA,WACA01F,EAAArhG,KAMA,OAFA3jB,EAAAiyB,GAEA,SAAAw0F,GACA,GAAAA,EAAA,CACA,GACAA,EAAAtE,MAAAlwF,EAAAkwF,KACAsE,EAAAnC,QAAAryF,EAAAqyF,OACAmC,EAAAlC,YAAAtyF,EAAAsyF,UAEA,OAGAvkH,EAAAiyB,EAAAw0F,QAEAn3F,KAzOAvyC,EAAAD,QAAA,SAAA8gF,EAAAj2D,GACA,uBAAA++G,cACA,iBAAAx8G,SAAA,UAAAppB,MAAA,iEAGA6mB,SAEAy9G,MAAA,iBAAAz9G,EAAAy9G,MAAAz9G,EAAAy9G,SAIAz9G,EAAA+7G,WAAA,kBAAA/7G,EAAA+7G,YAAA/7G,EAAA+7G,UAAAR,KAGAv7G,EAAA88G,aAAA98G,EAAA88G,WAAA,QAGA98G,EAAAg9G,WAAAh9G,EAAAg9G,SAAA,UAEA,IAAAZ,EAAAI,EAAAvmD,EAAAj2D,GAIA,OAFAm8G,EAAAC,EAAAp8G,GAEA,SAAAg/G,GAGA,IAFA,IAAAC,KAEA5pI,EAAA,EAAiBA,EAAA+mI,EAAAnhI,OAAmB5F,IAAA,CACpC,IAAAgnI,EAAAD,EAAA/mI,IACAinI,EAAAhB,EAAAe,EAAAx0F,KAEAywF,OACA2G,EAAAthI,KAAA2+H,GAQA,IALA0C,GAEA7C,EADAK,EAAAwC,EAAAh/G,GACAA,GAGA3qB,EAAA,EAAiBA,EAAA4pI,EAAAhkI,OAAsB5F,IAAA,CACvC,IAAAinI,EAEA,QAFAA,EAAA2C,EAAA5pI,IAEAijI,KAAA,CACA,QAAAxxG,EAAA,EAAmBA,EAAAw1G,EAAA3xB,MAAA1vG,OAA2B6rB,IAAAw1G,EAAA3xB,MAAA7jF,YAE9Cw0G,EAAAgB,EAAAz0F,QAiMA,IACAq3F,EADAC,GACAD,KAEA,SAAA/hI,EAAAiiI,GAGA,OAFAF,EAAA/hI,GAAAiiI,EAEAF,EAAApwE,OAAAuwE,SAAAnlI,KAAA,QAIA,SAAA4jI,EAAA9hG,EAAA7+B,EAAAwqC,EAAA2C,GACA,IAAAkwF,EAAA7yF,EAAA,GAAA2C,EAAAkwF,IAEA,GAAAx+F,EAAA2iG,WACA3iG,EAAA2iG,WAAAC,QAAAO,EAAAhiI,EAAAq9H,OACE,CACF,IAAA8E,EAAA/8G,SAAAs8G,eAAArE,GACA+E,EAAAvjG,EAAAujG,WAEAA,EAAApiI,IAAA6+B,EAAAuhG,YAAAgC,EAAApiI,IAEAoiI,EAAAtkI,OACA+gC,EAAAkhG,aAAAoC,EAAAC,EAAApiI,IAEA6+B,EAAA67F,YAAAyH,oBClUAlqI,EAAAD,QAAA,SAAAqqI,GACA,IAAAvpD,KAwCA,OArCAA,EAAA7+E,SAAA,WACA,OAAAuB,KAAAsB,IAAA,SAAAoiI,GACA,IAAAoD,EAsCA,SAAApD,EAAAmD,GACA,IAmBA5C,EAnBA6C,EAAApD,EAAA,OACAqD,EAAArD,EAAA,GACA,IAAAqD,EACA,OAAAD,EAGA,GAAAD,GAAA,mBAAAtB,KAAA,CACA,IAAAyB,GAYA/C,EAZA8C,EAiBA,mEAHAxB,KAAAK,SAAAC,mBAAA11F,KAAAC,UAAA6zF,MAGA,OAhBAgD,EAAAF,EAAAG,QAAA5lI,IAAA,SAAAS,GACA,uBAAAglI,EAAAI,WAAAplI,EAAA,QAGA,OAAA+kI,GAAAlxC,OAAAqxC,GAAArxC,QAAAoxC,IAAAzlI,KAAA,MAGA,OAAAulI,GAAAvlI,KAAA,MAhBA,CAtCAmiI,EAAAmD,GACA,OAAAnD,EAAA,GACA,UAAAA,EAAA,OAAmCoD,EAAA,IAEnCA,IAEGvlI,KAAA,KAIH+7E,EAAA5gF,EAAA,SAAAE,EAAAwqI,GACA,iBAAAxqI,IACAA,IAAA,KAAAA,EAAA,MAEA,IADA,IAAAyqI,KACA3qI,EAAA,EAAgBA,EAAAsD,KAAAsC,OAAiB5F,IAAA,CACjC,IAAAwyC,EAAAlvC,KAAAtD,GAAA,GACA,iBAAAwyC,IACAm4F,EAAAn4F,OAEA,IAAAxyC,EAAA,EAAYA,EAAAE,EAAA0F,OAAoB5F,IAAA,CAChC,IAAAgnI,EAAA9mI,EAAAF,GAKA,iBAAAgnI,EAAA,IAAA2D,EAAA3D,EAAA,MACA0D,IAAA1D,EAAA,GACAA,EAAA,GAAA0D,EACKA,IACL1D,EAAA,OAAAA,EAAA,aAAA0D,EAAA,KAEA9pD,EAAAt4E,KAAA0+H,MAIApmD,qBC9CA7gF,EAAAD,QAAAF,EAAA,GAAAA,MAKA0I,MAAAvI,EAAAC,EAAA,4GAAiI,eAAA0B,EAAAC,EAAAV,GCJjI,IAAAmpI,EAAAxqI,EAAA,IAEA,iBAAAwqI,QAAArqI,EAAAC,EAAAoqI,EAAA,MAYAxqI,EAAA,GAAAA,CAAAwqI,GALeQ,OAEfzoC,iBACAslC,oBAIA2C,EAAAS,SAAA9qI,EAAAD,QAAAsqI,EAAAS,yBCjBA,IAAAC,EAAAlrI,EAAA,GACAmrI,EAAAnrI,EAAA,GA2BAG,EAAAD,QAzBA,SAAA6qB,EAAA1oB,EAAAC,GACA,IAAAlC,EAAAiC,GAAAC,GAAA,EAEA,iBAAAR,IACAO,EAAA,WAAA0oB,EAAA,IAAAhoB,MAAA,SACAgoB,EAAA,MAIA,IAAAjoB,GAFAioB,SAEA9nB,SAAA8nB,EAAAmgH,UAOA,GAJApoI,EAAA,MAAAA,EAAA,MACAA,EAAA,MAAAA,EAAA,OAGAT,EACA,QAAA+oI,EAAA,EAAoBA,EAAA,KAASA,EAC7B/oI,EAAAjC,EAAAgrI,GAAAtoI,EAAAsoI,GAIA,OAAA/oI,GAAA8oI,EAAAroI,qBCzBA,IAQAuoI,EACAC,EATAJ,EAAAlrI,EAAA,GACAmrI,EAAAnrI,EAAA,GAWAurI,EAAA,EACAC,EAAA,EA+FArrI,EAAAD,QA5FA,SAAA6qB,EAAA1oB,EAAAC,GACA,IAAAlC,EAAAiC,GAAAC,GAAA,EACAyB,EAAA1B,MAGA+tB,GADArF,SACAqF,MAAAi7G,EACAI,WAAA1gH,EAAA0gH,SAAA1gH,EAAA0gH,SAAAH,EAKA,SAAAl7G,GAAA,MAAAq7G,EAAA,CACA,IAAAC,EAAAR,IACA,MAAA96G,IAEAA,EAAAi7G,GACA,EAAAK,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAGA,MAAAD,IAEAA,EAAAH,EAAA,OAAAI,EAAA,MAAAA,EAAA,KAQA,IAAAC,WAAA5gH,EAAA4gH,MAAA5gH,EAAA4gH,WAAA7Q,MAAA8Q,UAIAC,WAAA9gH,EAAA8gH,MAAA9gH,EAAA8gH,MAAAL,EAAA,EAGA3J,EAAA8J,EAAAJ,GAAAM,EAAAL,GAAA,IAcA,GAXA3J,EAAA,YAAA92G,EAAA0gH,WACAA,IAAA,UAKA5J,EAAA,GAAA8J,EAAAJ,aAAAxgH,EAAA8gH,QACAA,EAAA,GAIAA,GAAA,IACA,UAAA3nI,MAAA,mDAGAqnI,EAAAI,EACAH,EAAAK,EACAP,EAAAG,EAMA,IAAAp+E,GAAA,gBAHAs+E,GAAA,cAGAE,GAAA,WACA9nI,EAAA3D,KAAAitD,IAAA,OACAtpD,EAAA3D,KAAAitD,IAAA,OACAtpD,EAAA3D,KAAAitD,IAAA,MACAtpD,EAAA3D,KAAA,IAAAitD,EAGA,IAAAy+E,EAAAH,EAAA,yBACA5nI,EAAA3D,KAAA0rI,IAAA,MACA/nI,EAAA3D,KAAA,IAAA0rI,EAGA/nI,EAAA3D,KAAA0rI,IAAA,SACA/nI,EAAA3D,KAAA0rI,IAAA,OAGA/nI,EAAA3D,KAAAqrI,IAAA,MAGA1nI,EAAA3D,KAAA,IAAAqrI,EAGA,QAAApqI,EAAA,EAAiBA,EAAA,IAAOA,EACxB0C,EAAA3D,EAAAiB,GAAA+uB,EAAA/uB,GAGA,OAAAgB,GAAA8oI,EAAApnI,mBCpGA5D,EAAAD,0BCJAA,EAAA6rI,aAGAC,KAAA,UACAC,UAAA,eACAC,QAAA,UACAC,UAAA,YACAC,OAAA,WACAC,UAAA,cACAC,cAAA,kBACAC,WAAA,eACAC,MAAA,OAGAC,SAAA,aACApd,QAAA,UACA5tH,SAAA,MAGAirI,GAAA,cACAC,EAAA,YACA38C,EAAA,WACAu2C,IAAA,QACAqG,QAAA,YACAC,OAAA,WACAC,IAAA,OACAC,QAAA,WACAluD,MAAA,SACAmuD,MAAA,MACAC,UAAA,MACAC,WAAA,SACA1sH,QAAA,YACA2sH,SAAA,WACAC,OAAA,QACAC,WAAA,QACAC,SAAA,YACAC,cAAA,iBACA/1H,OAAA,UACAg2H,UAAA,KACAC,QAAA,QACA/uE,KAAA,UACAgvE,UAAA,SACAC,KAAA,OACAC,QAAA,OACAC,KAAA,MACA77E,KAAA,MACA87E,OAAA,kBACAC,OAAA,QACAjtB,MAAA,KACAktB,QAAA,OACAC,KAAA,OACAC,MAAA,MACAC,KAAA,MACAC,OAAA,kBACAC,OAAA,QACArL,MAAA,KACAsL,oBAAA,MACAC,sBAAA,QACAC,wBAAA,UACAC,SAAA,YACAC,cAAA,iBACAC,QAAA,OACAC,OAAA,UACAC,QAAA,WACAC,MAAA,aACAC,QAAA,UACAC,OAAA,aAIA9uI,EAAA+uI,WACAhvE,GACA,gEACA,oEACA,0EACA,2EACA,wEACA,6BAEAC,GACA,0EACA,iEACA,mEACA,sEACA,yEACA,yEACA,+DACA,iEACA,uEACA,mEACA,uEACA,wEACA,mEACA,yEACA,iEACA,wEACA,qEACA,wEACA,yEACA,uEACA,6DACA,iBAEAgvE,GACA,oEACA,sEACA,2EACA,wEACA,iEACA,uEACA,+DACA,uEACA,qBAEAC,GACA,gCAKAjvI,EAAAkvI,UACAlvE,GAAA,KACAgvE,GAAA,OACAC,GAAA,UAIAjvI,EAAAmvI,aACAC,eAAA,EACAC,UAAA,EACAC,MAAA,EACA31E,OAAA,EACA41E,KAAA,EACAC,SAAA,EACAC,UAAA,EACAC,cAAA,EAC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AA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KACAC,IAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","export const GAME_WIDTH = 800\nexport const GAME_HEIGHT = 800\nexport const PLAYER_WIDTH = 50\nexport const PLAYER_HEIGHT = 50\nexport const PROJECTILE_WIDTH = 10\nexport const PROJECTILE_HEIGHT = 10\n\nexport const PLAYER_SPEED = 0.300\nexport const PROJECTILE_SPEED = 0.400\n\nexport const KEYCODES = {\n  LEFT: [37, 65],\n  UP: [38, 87],\n  RIGHT: [39, 68],\n  DOWN: [40, 83],\n  Q: [81],\n}\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '92';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\t\\tscale *= float( gl_FrontFacing ) * 2.0 - 1.0;\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_pars_maps: lights_pars_maps,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\ttarget.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\ttarget.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) intersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tgl.uniform1f( this.addr, v );\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tgl.uniform1i( this.addr, v );\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t} else {\n\n\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tif ( v.x !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t} else {\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t} else {\n\n\t\t gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat3array.set( v.elements );\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat4array.set( v.elements );\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\tfor ( ; ; ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( shadowLight ) {\n\n\t\tspritesArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext ); /* global WebGL2RenderingContext */\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tstopAnimation();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar isAnimating = false;\n\tvar onAnimationFrame = null;\n\n\tfunction startAnimation() {\n\n\t\tif ( isAnimating ) return;\n\n\t\trequestAnimationLoopFrame();\n\n\t\tisAnimating = true;\n\n\t}\n\n\tfunction stopAnimation() {\n\n\t\tisAnimating = false;\n\n\t}\n\n\tfunction requestAnimationLoopFrame() {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tdevice.requestAnimationFrame( animationLoop );\n\n\t\t} else {\n\n\t\t\twindow.requestAnimationFrame( animationLoop );\n\n\t\t}\n\n\t}\n\n\tfunction animationLoop( time ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tonAnimationFrame( time );\n\n\t\trequestAnimationLoopFrame();\n\n\t}\n\n\tthis.animate = function ( callback ) {\n\n\t\tonAnimationFrame = callback;\n\t\tonAnimationFrame !== null ? startAnimation() : stopAnimation();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = null;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\t\tvar pixels = srcTexture.isDataTexture ? srcTexture.image.data : srcTexture.image;\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, pixels );\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color.getHex(), this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape, options );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON( shapes, data );\n\n};\n\n//\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\timage.addEventListener( 'load', function () {\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\t/*\n\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t}, false );\n\t\t*/\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && curve.isLineCurve ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function load( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, divisions, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, divisions, data ) {\n\n\tvar chars = String( text ).split( '' );\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, divisions, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, divisions, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, ImageUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","import { Vector2 } from 'three'\nimport { filter } from 'lodash/fp'\n\ninterface Move {\n  timestamp: number\n  position: Vector2\n  direction: Vector2\n  speed: number\n}\n\nexport default class Movable {\n  timestamp: number\n  position: Vector2 = new Vector2(0, 0)\n  history: Move[] = []\n\n  move(timestamp: number, dt: number, direction: Vector2, speed: number, save: boolean = false) {\n    this.timestamp = timestamp\n\n    const delta = direction.clone().normalize().multiplyScalar(speed * dt)\n    this.position.add(delta)\n\n    if (save) {\n      const move = {\n        timestamp,\n        position: this.position.clone(),\n        direction: direction.clone(),\n        speed\n      }\n\n      this.history.push(move)\n    }\n  }\n\n  reconcile(timestamp: number, position: Vector2) {\n    const newHistory = filter(move => move.timestamp > timestamp, this.history)\n\n    let currPosition = position\n    let currTimestamp = timestamp\n    for (let i = 0; i < newHistory.length; i++) {\n      const move = newHistory[i]\n      const dt = move.timestamp - currTimestamp\n      const delta = move.direction.clone().normalize().multiplyScalar(move.speed * dt)\n      const newPos = currPosition.clone().add(delta)\n\n      if (newPos.equals(move.position) && move.timestamp === currTimestamp) {\n        break\n      }\n\n      currPosition = move.position\n      currTimestamp = move.timestamp\n    }\n\n    this.position = newHistory[newHistory.length - 1].position\n    this.history = newHistory\n  }\n}\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PLAYER_WIDTH,\n  PLAYER_HEIGHT,\n  PLAYER_SPEED,\n} from '../constants'\nimport Movable from './Movable'\nimport { Vector2 } from 'three'\n\ninterface Controls {\n  up: boolean\n  down: boolean\n  left: boolean\n  right: boolean\n}\n\nexport default class Player extends Movable {\n  controls: Controls = { up: false, down: false, left: false, right: false }\n  speed = PLAYER_SPEED\n\n  tick(timestamp: number, dt: number, save: boolean = false) {\n    const direction = new Vector2(\n      (this.controls.left ? -1 : 0) +\n      (this.controls.right ? 1 : 0),\n      (this.controls.up ? -1 : 0) +\n      (this.controls.down ? 1 : 0)\n    )\n\n    this.move(timestamp, dt, direction, this.speed, save)\n\n    this.position.clamp(\n      new Vector2(PLAYER_WIDTH / 2, PLAYER_HEIGHT / 2),\n      new Vector2(GAME_WIDTH - PLAYER_WIDTH / 2, GAME_HEIGHT - PLAYER_HEIGHT / 2)\n    )\n  }\n}\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PLAYER_WIDTH,\n  PLAYER_HEIGHT,\n  PLAYER_SPEED,\n  PROJECTILE_SPEED,\n} from '../constants'\nimport Movable from './Movable'\nimport { Vector2 } from 'three'\n\nexport default class Projectile extends Movable {\n  id: string\n  direction: Vector2\n  valid: boolean = false\n\n  constructor(id: string, position: Vector2, direction: Vector2) {\n    super()\n\n    this.id = id\n    this.position = position.clone()\n    this.direction = direction.clone()\n  }\n\n  setValid() {\n    this.valid = true\n  }\n\n  tick(timestamp: number, dt: number, save: boolean = false) {\n    this.move(timestamp, dt, this.direction, PROJECTILE_SPEED, save)\n  }\n}\n","import * as React from 'react'\nimport Client from '../game/client'\nimport Server from '../game/server'\nimport { GAME_WIDTH, GAME_HEIGHT } from '../constants'\n\ndeclare global {\n  interface Window {\n    client: Client\n    server: Server\n    config: {\n      serverOWD: number\n      clientOWD: number\n      prediction: boolean\n    }\n  }\n}\n\nclass Game extends React.Component {\n  client: Client\n  server: Server\n\n  constructor(props: any) {\n    super(props)\n\n    window.config = {\n      serverOWD: 100,\n      clientOWD: 100,\n      prediction: true,\n    }\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.game as HTMLCanvasElement\n\n    this.server = new Server()\n    this.client = new Client(canvas)\n\n    this.server.connect(this.client)\n    this.client.connect(this.server)\n\n    window.client = this.client\n    window.server = this.server\n\n    this.server.reset()\n    this.server.start()\n\n    this.client.reset()\n    this.client.start()\n  }\n\n  render() {\n    return (\n      <canvas\n        ref=\"game\"\n        className=\"game\"\n        width={GAME_WIDTH}\n        height={GAME_HEIGHT} />\n    )\n  }\n}\n\nexport default Game\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport Game from './components/Game'\nimport './style.css'\n\n\nconst root = document.createElement('div')\ndocument.body.appendChild(root)\n\nReactDOM.render(<Game />, root)\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PROJECTILE_WIDTH,\n  PROJECTILE_HEIGHT,\n} from '../constants'\nimport Client from './Client'\nimport Player from './Player'\nimport Projectile from './Projectile'\nimport { GameState } from './types'\nimport { Vector2 } from 'three'\nimport { pickBy, values, keys, has, cloneDeep } from 'lodash/fp'\n\n\nexport default class Server {\n  lastTick: number\n  playing: boolean = false\n  client: Client\n\n  state: GameState = {\n    player: new Player(),\n    projectiles: {}\n  }\n\n  reset() {\n    this.state.player.position.set(\n      GAME_WIDTH / 2,\n      GAME_HEIGHT / 2\n    )\n  }\n\n  start() {\n    this.lastTick = performance.now()\n    this.playing = true\n    window.requestAnimationFrame(this.tick.bind(this))\n  }\n\n  clean() {\n    const filteredProjectiles = pickBy(projectile =>\n      !(projectile.position.x < -PROJECTILE_WIDTH\n      || projectile.position.x > GAME_WIDTH + PROJECTILE_WIDTH\n      || projectile.position.y < -PROJECTILE_HEIGHT\n      || projectile.position.y > GAME_HEIGHT + PROJECTILE_HEIGHT)\n    , this.state.projectiles)\n\n    this.state.projectiles = filteredProjectiles\n  }\n\n  connect(client: Client) {\n    this.client = client\n  }\n\n  send(state: GameState) {\n    this.state.player.controls = state.player.controls\n\n    values(state.projectiles).forEach(projectile => {\n      if (projectile.valid || has(projectile.id, this.state.projectiles))\n        return\n\n      this.state.projectiles[projectile.id] = projectile\n    })\n  }\n\n  tick(timestamp: number) {\n    const dt = timestamp - this.lastTick\n    this.lastTick = timestamp\n\n    this.state.player.tick(timestamp, dt)\n    values(this.state.projectiles).forEach(projectile => {\n      projectile.setValid()\n      projectile.tick(timestamp, dt)\n    })\n\n    const state = cloneDeep(this.state)\n    window.setTimeout(() => {\n      this.client.send(state)\n    }, window.config.serverOWD)\n\n    this.clean()\n\n    if (this.playing) {\n      window.requestAnimationFrame(this.tick.bind(this))\n    }\n  }\n}\n","import {\n  GAME_WIDTH,\n  GAME_HEIGHT,\n  PLAYER_WIDTH,\n  PLAYER_HEIGHT,\n  PROJECTILE_WIDTH,\n  PROJECTILE_HEIGHT,\n  PLAYER_SPEED,\n  KEYCODES,\n} from '../constants'\nimport Server from './Server'\nimport Player from './Player'\nimport Projectile from './Projectile'\nimport { GameState } from './types'\nimport { Vector2 } from 'three'\nimport { has, values, includes, cloneDeep } from 'lodash/fp'\nimport { v4 as uuid } from 'uuid'\n\n\nexport default class Client {\n  canvas: HTMLCanvasElement\n  ctx: CanvasRenderingContext2D\n  server: Server\n  intervalId: number\n  lastTick: number\n  playing: boolean = false\n\n  state: GameState = {\n    player: new Player(),\n    projectiles: {}\n  }\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas\n    this.ctx = canvas.getContext('2d')\n\n    document.addEventListener('keydown', this.keydown.bind(this))\n    document.addEventListener('keyup', this.keyup.bind(this))\n    document.addEventListener('click', this.click.bind(this))\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT)\n  }\n\n  reset() {\n    this.clear()\n\n    this.state.player.position.set(\n      GAME_WIDTH / 2,\n      GAME_HEIGHT / 2\n    )\n  }\n\n  start() {\n    this.lastTick = performance.now()\n    this.playing = true\n    window.requestAnimationFrame(this.tick.bind(this))\n  }\n\n  stop() {\n    this.playing = false\n  }\n\n  keypress(event: KeyboardEvent, isPressed: boolean) {\n    const key = event.keyCode || event.which\n\n    if (includes(key, KEYCODES.LEFT)) {\n      this.state.player.controls.left = isPressed\n    } else if (includes(key, KEYCODES.RIGHT)) {\n      this.state.player.controls.right = isPressed\n    } else if (includes(key, KEYCODES.UP)) {\n      this.state.player.controls.up = isPressed\n    } else if (includes(key, KEYCODES.DOWN)) {\n      this.state.player.controls.down = isPressed\n    } else if (includes(key, KEYCODES.Q)) {\n      // TODO: what is going on here?\n      if (this.state.player.speed === PLAYER_SPEED) {\n        this.state.player.speed = PLAYER_SPEED * 2\n      } else {\n        this.state.player.speed = PLAYER_SPEED\n      }\n    } else {\n      return\n    }\n\n    event.stopPropagation()\n  }\n\n  keydown(event: KeyboardEvent) {\n    this.keypress(event, true)\n  }\n\n  keyup(event: KeyboardEvent) {\n    this.keypress(event, false)\n  }\n\n  click(event: MouseEvent) {\n    const rect = this.canvas.getBoundingClientRect()\n\n    const direction = new Vector2(\n      event.clientX - rect.left,\n      event.clientY - rect.top\n    ).sub(this.state.player.position)\n\n    const projectile = new Projectile(uuid(), this.state.player.position, direction)\n\n    this.state.projectiles[projectile.id] = projectile\n  }\n\n  connect(server: Server) {\n    this.server = server\n  }\n\n  send(state: GameState) {\n    if (window.config.prediction) {\n      this.state.player.reconcile(state.player.timestamp, state.player.position)\n    } else {\n      this.state.player.position = state.player.position\n    }\n\n    values(this.state.projectiles).forEach(projectile => {\n      if (!projectile.valid || has(projectile.id, state.projectiles))\n        return\n\n      delete this.state.projectiles[projectile.id]\n    })\n\n    values(state.projectiles).forEach(projectile => {\n      if (window.config.prediction && has(projectile.id, this.state.projectiles)) {\n        this.state.projectiles[projectile.id].reconcile(projectile.timestamp, projectile.position)\n      } else {\n        this.state.projectiles[projectile.id] = projectile\n      }\n    })\n  }\n\n  render() {\n    this.clear()\n\n    const x = this.state.player.position.x - PLAYER_WIDTH / 2\n    const y = this.state.player.position.y - PLAYER_HEIGHT / 2\n    this.ctx.fillRect(x, y, PLAYER_WIDTH, PLAYER_HEIGHT)\n\n    values(this.state.projectiles).forEach(projectile => {\n      if (!window.config.prediction && !projectile.valid) return\n\n      const x = projectile.position.x - PROJECTILE_WIDTH / 2\n      const y = projectile.position.y - PROJECTILE_HEIGHT / 2\n      this.ctx.fillRect(x, y, PROJECTILE_WIDTH, PROJECTILE_HEIGHT)\n    })\n  }\n\n  tick(timestamp: number) {\n    const dt = timestamp - this.lastTick\n    this.lastTick = timestamp\n\n    this.render()\n\n    if (window.config.prediction) {\n      this.state.player.tick(timestamp, dt, window.config.prediction)\n      values(this.state.projectiles).forEach(projectile => {\n        projectile.tick(timestamp, dt, window.config.prediction)\n      })\n    }\n\n    const state = cloneDeep(this.state)\n    window.setTimeout(() => {\n      this.server.send(state)\n    }, window.config.clientOWD)\n\n    if (this.playing) {\n      window.requestAnimationFrame(this.tick.bind(this))\n    }\n  }\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.game {\\n  border: black 5px solid;\\n  margin: 15px;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\n    'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1],\n  'reduceRight': [1, 0]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'rangeStep': [1, 2, 0],\n  'rangeStepRight': [1, 2, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'start': 0 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'start': 0 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'start': 0 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to track methods with placeholder support */\nexports.placeholder = {\n  'bind': true,\n  'bindKey': true,\n  'curry': true,\n  'curryRight': true,\n  'partial': true,\n  'partialRight': true\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'rangeStep': 'range',\n  'rangeStepRight': 'rangeRight',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n","var mapping = require('./_mapping'),\n    fallbackHolder = require('./placeholder');\n\n/** Built-in value reference. */\nvar push = Array.prototype.push;\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * A specialized version of `_.spread` which flattens the spread array into\n * the arguments of the invoked `func`.\n *\n * @private\n * @param {Function} func The function to spread arguments over.\n * @param {number} start The start position of the spread.\n * @returns {Function} Returns the new function.\n */\nfunction flatSpread(func, start) {\n  return function() {\n    var length = arguments.length,\n        lastIndex = length - 1,\n        args = Array(length);\n\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var array = args[start],\n        otherArgs = args.slice(0, start);\n\n    if (array) {\n      push.apply(otherArgs, array);\n    }\n    if (start != lastIndex) {\n      push.apply(otherArgs, args.slice(start + 1));\n    }\n    return func.apply(this, otherArgs);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var setPlaceholder,\n      isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      placeholder = isLib ? func : fallbackHolder,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isError': util.isError,\n    'isFunction': util.isFunction,\n    'isWeakMap': util.isWeakMap,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isError = helpers.isError,\n      isFunction = helpers.isFunction,\n      isWeakMap = helpers.isWeakMap,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null &&\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\n        nested[key] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var realName = mapping.aliasToReal[name] || name,\n        methodName = mapping.remap[realName] || realName,\n        oldOptions = options;\n\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[methodName] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, realName, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func) {\n    var result,\n        realName = mapping.aliasToReal[name] || name,\n        wrapped = func,\n        wrapper = wrappers[realName];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mapping.mutate.array[realName]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mapping.mutate.object[realName]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mapping.mutate.set[realName]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (realName == otherName) {\n          var data = mapping.methodSpread[realName],\n              afterRearg = data && data.afterRearg;\n\n          result = afterRearg\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\n\n          result = castCap(realName, result);\n          result = castCurry(realName, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(realName, func);\n    if (mapping.placeholder[realName]) {\n      setPlaceholder = true;\n      result.placeholder = func.placeholder = placeholder;\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  if (setPlaceholder) {\n    _.placeholder = placeholder;\n  }\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/**\n * @license\n * Lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE\n */\n;(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&false!==t(n[r],r,n););return n}function e(n,t){for(var r=null==n?0:n.length;r--&&false!==t(n[r],r,n););return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return false;\nreturn true}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!(null==n||!n.length)&&-1<v(n,t,0)}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return true;return false}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return true;return false}function p(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,false}),e}function _(n,t,r,e){var u=n.length;for(r+=e?1:-1;e?r--:++r<u;)if(t(n[r],r,n))return r;return-1}function v(n,t,r){if(t===t)n:{--r;for(var e=n.length;++r<e;)if(n[r]===t){n=r;break n}n=-1}else n=_(n,d,r);return n}function g(n,t,r,e){\n--r;for(var u=n.length;++r<u;)if(e(n[r],t))return r;return-1}function d(n){return n!==n}function y(n,t){var r=null==n?0:n.length;return r?m(n,t)/r:F}function b(n){return function(t){return null==t?T:t[n]}}function x(n){return function(t){return null==n?T:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=false,n):t(r,n,u,i)}),r}function w(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function m(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==T&&(r=r===T?i:r+i)}return r;\n}function A(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function E(n,t){return c(t,function(t){return[t,n[t]]})}function k(n){return function(t){return n(t)}}function S(n,t){return c(t,function(t){return n[t]})}function O(n,t){return n.has(t)}function I(n,t){for(var r=-1,e=n.length;++r<e&&-1<v(t,n[r],0););return r}function R(n,t){for(var r=n.length;r--&&-1<v(t,n[r],0););return r}function z(n){return\"\\\\\"+Un[n]}function W(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n];\n}),r}function B(n,t){return function(r){return n(t(r))}}function L(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&\"__lodash_placeholder__\"!==o||(n[r]=\"__lodash_placeholder__\",i[u++]=r)}return i}function U(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=n}),r}function C(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function D(n){if(Rn.test(n)){for(var t=On.lastIndex=0;On.test(n);)++t;n=t}else n=Qn(n);return n}function M(n){return Rn.test(n)?n.match(On)||[]:n.split(\"\");\n}var T,$=1/0,F=NaN,N=[[\"ary\",128],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",32],[\"partialRight\",64],[\"rearg\",256]],P=/\\b__p\\+='';/g,Z=/\\b(__p\\+=)''\\+/g,q=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,V=/&(?:amp|lt|gt|quot|#39);/g,K=/[&<>\"']/g,G=RegExp(V.source),H=RegExp(K.source),J=/<%-([\\s\\S]+?)%>/g,Y=/<%([\\s\\S]+?)%>/g,Q=/<%=([\\s\\S]+?)%>/g,X=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,nn=/^\\w*$/,tn=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,rn=/[\\\\^$.*+?()[\\]{}|]/g,en=RegExp(rn.source),un=/^\\s+|\\s+$/g,on=/^\\s+/,fn=/\\s+$/,cn=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,an=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,ln=/,? & /,sn=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,hn=/\\\\(\\\\)?/g,pn=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,_n=/\\w*$/,vn=/^[-+]0x[0-9a-f]+$/i,gn=/^0b[01]+$/i,dn=/^\\[object .+?Constructor\\]$/,yn=/^0o[0-7]+$/i,bn=/^(?:0|[1-9]\\d*)$/,xn=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,jn=/($^)/,wn=/['\\n\\r\\u2028\\u2029\\\\]/g,mn=\"[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?(?:\\\\u200d(?:[^\\\\ud800-\\\\udfff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|\\\\ud83c[\\\\udffb-\\\\udfff])?)*\",An=\"(?:[\\\\u2700-\\\\u27bf]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])\"+mn,En=\"(?:[^\\\\ud800-\\\\udfff][\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]?|[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\ud800-\\\\udfff])\",kn=RegExp(\"['\\u2019]\",\"g\"),Sn=RegExp(\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff]\",\"g\"),On=RegExp(\"\\\\ud83c[\\\\udffb-\\\\udfff](?=\\\\ud83c[\\\\udffb-\\\\udfff])|\"+En+mn,\"g\"),In=RegExp([\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|$)|(?:[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde](?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])|$)|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?(?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?|\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])|\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])|\\\\d+\",An].join(\"|\"),\"g\"),Rn=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\\\\ufe0e\\\\ufe0f]\"),zn=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Wn=\"Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout\".split(\" \"),Bn={};\nBn[\"[object Float32Array]\"]=Bn[\"[object Float64Array]\"]=Bn[\"[object Int8Array]\"]=Bn[\"[object Int16Array]\"]=Bn[\"[object Int32Array]\"]=Bn[\"[object Uint8Array]\"]=Bn[\"[object Uint8ClampedArray]\"]=Bn[\"[object Uint16Array]\"]=Bn[\"[object Uint32Array]\"]=true,Bn[\"[object Arguments]\"]=Bn[\"[object Array]\"]=Bn[\"[object ArrayBuffer]\"]=Bn[\"[object Boolean]\"]=Bn[\"[object DataView]\"]=Bn[\"[object Date]\"]=Bn[\"[object Error]\"]=Bn[\"[object Function]\"]=Bn[\"[object Map]\"]=Bn[\"[object Number]\"]=Bn[\"[object Object]\"]=Bn[\"[object RegExp]\"]=Bn[\"[object Set]\"]=Bn[\"[object String]\"]=Bn[\"[object WeakMap]\"]=false;\nvar Ln={};Ln[\"[object Arguments]\"]=Ln[\"[object Array]\"]=Ln[\"[object ArrayBuffer]\"]=Ln[\"[object DataView]\"]=Ln[\"[object Boolean]\"]=Ln[\"[object Date]\"]=Ln[\"[object Float32Array]\"]=Ln[\"[object Float64Array]\"]=Ln[\"[object Int8Array]\"]=Ln[\"[object Int16Array]\"]=Ln[\"[object Int32Array]\"]=Ln[\"[object Map]\"]=Ln[\"[object Number]\"]=Ln[\"[object Object]\"]=Ln[\"[object RegExp]\"]=Ln[\"[object Set]\"]=Ln[\"[object String]\"]=Ln[\"[object Symbol]\"]=Ln[\"[object Uint8Array]\"]=Ln[\"[object Uint8ClampedArray]\"]=Ln[\"[object Uint16Array]\"]=Ln[\"[object Uint32Array]\"]=true,\nLn[\"[object Error]\"]=Ln[\"[object Function]\"]=Ln[\"[object WeakMap]\"]=false;var Un={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Cn=parseFloat,Dn=parseInt,Mn=typeof global==\"object\"&&global&&global.Object===Object&&global,Tn=typeof self==\"object\"&&self&&self.Object===Object&&self,$n=Mn||Tn||Function(\"return this\")(),Fn=typeof exports==\"object\"&&exports&&!exports.nodeType&&exports,Nn=Fn&&typeof module==\"object\"&&module&&!module.nodeType&&module,Pn=Nn&&Nn.exports===Fn,Zn=Pn&&Mn.process,qn=function(){\ntry{var n=Nn&&Nn.f&&Nn.f(\"util\").types;return n?n:Zn&&Zn.binding&&Zn.binding(\"util\")}catch(n){}}(),Vn=qn&&qn.isArrayBuffer,Kn=qn&&qn.isDate,Gn=qn&&qn.isMap,Hn=qn&&qn.isRegExp,Jn=qn&&qn.isSet,Yn=qn&&qn.isTypedArray,Qn=b(\"length\"),Xn=x({\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\n\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\n\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\n\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\n\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\n\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"}),nt=x({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"}),tt=x({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"}),rt=function x(mn){function An(n){if(du(n)&&!of(n)&&!(n instanceof Un)){if(n instanceof On)return n;if(ii.call(n,\"__wrapped__\"))return $e(n)}return new On(n)}function En(){}function On(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=T}function Un(n){this.__wrapped__=n,\nthis.__actions__=[],this.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Mn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Tn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Fn(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function Nn(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new Fn;++t<r;)this.add(n[t]);\n}function Zn(n){this.size=(this.__data__=new Tn(n)).size}function qn(n,t){var r,e=of(n),u=!e&&uf(n),i=!e&&!u&&cf(n),o=!e&&!u&&!i&&pf(n),u=(e=e||u||i||o)?A(n.length,Xu):[],f=u.length;for(r in n)!t&&!ii.call(n,r)||e&&(\"length\"==r||i&&(\"offset\"==r||\"parent\"==r)||o&&(\"buffer\"==r||\"byteLength\"==r||\"byteOffset\"==r)||Se(r,f))||u.push(r);return u}function Qn(n){var t=n.length;return t?n[ir(0,t-1)]:T}function et(n,t){return Ce(Ur(n),pt(t,0,n.length))}function ut(n){return Ce(Ur(n))}function it(n,t,r){(r===T||au(n[t],r))&&(r!==T||t in n)||st(n,t,r);\n}function ot(n,t,r){var e=n[t];ii.call(n,t)&&au(e,r)&&(r!==T||t in n)||st(n,t,r)}function ft(n,t){for(var r=n.length;r--;)if(au(n[r][0],t))return r;return-1}function ct(n,t,r,e){return eo(n,function(n,u,i){t(e,n,r(n),i)}),e}function at(n,t){return n&&Cr(t,zu(t),n)}function lt(n,t){return n&&Cr(t,Wu(t),n)}function st(n,t,r){\"__proto__\"==t&&mi?mi(n,t,{configurable:true,enumerable:true,value:r,writable:true}):n[t]=r}function ht(n,t){for(var r=-1,e=t.length,u=Vu(e),i=null==n;++r<e;)u[r]=i?T:Iu(n,t[r]);return u;\n}function pt(n,t,r){return n===n&&(r!==T&&(n=n<=r?n:r),t!==T&&(n=n>=t?n:t)),n}function _t(n,t,e,u,i,o){var f,c=1&t,a=2&t,l=4&t;if(e&&(f=i?e(n,u,i,o):e(n)),f!==T)return f;if(!gu(n))return n;if(u=of(n)){if(f=me(n),!c)return Ur(n,f)}else{var s=_o(n),h=\"[object Function]\"==s||\"[object GeneratorFunction]\"==s;if(cf(n))return Ir(n,c);if(\"[object Object]\"==s||\"[object Arguments]\"==s||h&&!i){if(f=a||h?{}:Ae(n),!c)return a?Mr(n,lt(f,n)):Dr(n,at(f,n))}else{if(!Ln[s])return i?n:{};f=Ee(n,s,c)}}if(o||(o=new Zn),\ni=o.get(n))return i;if(o.set(n,f),hf(n))return n.forEach(function(r){f.add(_t(r,t,e,r,n,o))}),f;if(lf(n))return n.forEach(function(r,u){f.set(u,_t(r,t,e,u,n,o))}),f;var a=l?a?ve:_e:a?Wu:zu,p=u?T:a(n);return r(p||n,function(r,u){p&&(u=r,r=n[u]),ot(f,u,_t(r,t,e,u,n,o))}),f}function vt(n){var t=zu(n);return function(r){return gt(r,n,t)}}function gt(n,t,r){var e=r.length;if(null==n)return!e;for(n=Yu(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===T&&!(u in n)||!i(o))return false}return true}function dt(n,t,r){if(typeof n!=\"function\")throw new ni(\"Expected a function\");\nreturn yo(function(){n.apply(T,r)},t)}function yt(n,t,r,e){var u=-1,i=o,a=true,l=n.length,s=[],h=t.length;if(!l)return s;r&&(t=c(t,k(r))),e?(i=f,a=false):200<=t.length&&(i=O,a=false,t=new Nn(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p),p=e||0!==p?p:0;if(a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function bt(n,t){var r=true;return eo(n,function(n,e,u){return r=!!t(n,e,u)}),r}function xt(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===T?o===o&&!ju(o):r(o,f)))var f=o,c=i;\n}return c}function jt(n,t){var r=[];return eo(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function wt(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=ke),u||(u=[]);++i<o;){var f=n[i];0<t&&r(f)?1<t?wt(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function mt(n,t){return n&&io(n,t,zu)}function At(n,t){return n&&oo(n,t,zu)}function Et(n,t){return i(t,function(t){return pu(n[t])})}function kt(n,t){t=Sr(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[De(t[r++])];return r&&r==e?n:T}function St(n,t,r){return t=t(n),\nof(n)?t:a(t,r(n))}function Ot(n){if(null==n)n=n===T?\"[object Undefined]\":\"[object Null]\";else if(wi&&wi in Yu(n)){var t=ii.call(n,wi),r=n[wi];try{n[wi]=T;var e=true}catch(n){}var u=ci.call(n);e&&(t?n[wi]=r:delete n[wi]),n=u}else n=ci.call(n);return n}function It(n,t){return n>t}function Rt(n,t){return null!=n&&ii.call(n,t)}function zt(n,t){return null!=n&&t in Yu(n)}function Wt(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=Vu(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,k(t))),s=Ui(p.length,s),\nl[a]=!r&&(t||120<=u&&120<=p.length)?new Nn(a&&p):T}var p=n[0],_=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],d=t?t(g):g,g=r||0!==g?g:0;if(v?!O(v,d):!e(h,d,r)){for(a=i;--a;){var y=l[a];if(y?!O(y,d):!e(n[a],d,r))continue n}v&&v.push(d),h.push(g)}}return h}function Bt(n,t,r){var e={};return mt(n,function(n,u,i){t(e,r(n),u,i)}),e}function Lt(t,r,e){return r=Sr(r,t),t=2>r.length?t:kt(t,hr(r,0,-1)),r=null==t?t:t[De(qe(r))],null==r?T:n(r,t,e)}function Ut(n){return du(n)&&\"[object Arguments]\"==Ot(n)}function Ct(n){\nreturn du(n)&&\"[object ArrayBuffer]\"==Ot(n)}function Dt(n){return du(n)&&\"[object Date]\"==Ot(n)}function Mt(n,t,r,e,u){if(n===t)t=true;else if(null==n||null==t||!du(n)&&!du(t))t=n!==n&&t!==t;else n:{var i=of(n),o=of(t),f=i?\"[object Array]\":_o(n),c=o?\"[object Array]\":_o(t),f=\"[object Arguments]\"==f?\"[object Object]\":f,c=\"[object Arguments]\"==c?\"[object Object]\":c,a=\"[object Object]\"==f,o=\"[object Object]\"==c;if((c=f==c)&&cf(n)){if(!cf(t)){t=false;break n}i=true,a=false}if(c&&!a)u||(u=new Zn),t=i||pf(n)?se(n,t,r,e,Mt,u):he(n,t,f,r,e,Mt,u);else{\nif(!(1&r)&&(i=a&&ii.call(n,\"__wrapped__\"),f=o&&ii.call(t,\"__wrapped__\"),i||f)){n=i?n.value():n,t=f?t.value():t,u||(u=new Zn),t=Mt(n,t,r,e,u);break n}if(c)t:if(u||(u=new Zn),i=1&r,f=_e(n),o=f.length,c=_e(t).length,o==c||i){for(a=o;a--;){var l=f[a];if(!(i?l in t:ii.call(t,l))){t=false;break t}}if((c=u.get(n))&&u.get(t))t=c==t;else{c=true,u.set(n,t),u.set(t,n);for(var s=i;++a<o;){var l=f[a],h=n[l],p=t[l];if(e)var _=i?e(p,h,l,t,n,u):e(h,p,l,n,t,u);if(_===T?h!==p&&!Mt(h,p,r,e,u):!_){c=false;break}s||(s=\"constructor\"==l);\n}c&&!s&&(r=n.constructor,e=t.constructor,r!=e&&\"constructor\"in n&&\"constructor\"in t&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&&e instanceof e)&&(c=false)),u.delete(n),u.delete(t),t=c}}else t=false;else t=false}}return t}function Tt(n){return du(n)&&\"[object Map]\"==_o(n)}function $t(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=Yu(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return false}for(;++u<i;){var f=r[u],c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===T&&!(c in n))return false;\n}else{if(f=new Zn,e)var s=e(a,l,c,n,t,f);if(s===T?!Mt(l,a,3,e,f):!s)return false}}return true}function Ft(n){return!(!gu(n)||fi&&fi in n)&&(pu(n)?si:dn).test(Me(n))}function Nt(n){return du(n)&&\"[object RegExp]\"==Ot(n)}function Pt(n){return du(n)&&\"[object Set]\"==_o(n)}function Zt(n){return du(n)&&vu(n.length)&&!!Bn[Ot(n)]}function qt(n){return typeof n==\"function\"?n:null==n?Tu:typeof n==\"object\"?of(n)?Jt(n[0],n[1]):Ht(n):Pu(n)}function Vt(n){if(!ze(n))return Bi(n);var t,r=[];for(t in Yu(n))ii.call(n,t)&&\"constructor\"!=t&&r.push(t);\nreturn r}function Kt(n,t){return n<t}function Gt(n,t){var r=-1,e=lu(n)?Vu(n.length):[];return eo(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function Ht(n){var t=xe(n);return 1==t.length&&t[0][2]?We(t[0][0],t[0][1]):function(r){return r===n||$t(r,n,t)}}function Jt(n,t){return Ie(n)&&t===t&&!gu(t)?We(De(n),t):function(r){var e=Iu(r,n);return e===T&&e===t?Ru(r,n):Mt(t,e,3)}}function Yt(n,t,r,e,u){n!==t&&io(t,function(i,o){if(gu(i)){u||(u=new Zn);var f=u,c=\"__proto__\"==o?T:n[o],a=\"__proto__\"==o?T:t[o],l=f.get(a);\nif(l)it(n,o,l);else{var l=e?e(c,a,o+\"\",n,t,f):T,s=l===T;if(s){var h=of(a),p=!h&&cf(a),_=!h&&!p&&pf(a),l=a;h||p||_?of(c)?l=c:su(c)?l=Ur(c):p?(s=false,l=Ir(a,true)):_?(s=false,l=zr(a,true)):l=[]:bu(a)||uf(a)?(l=c,uf(c)?l=Su(c):(!gu(c)||r&&pu(c))&&(l=Ae(a))):s=false}s&&(f.set(a,l),Yt(l,a,r,e,f),f.delete(a)),it(n,o,l)}}else f=e?e(\"__proto__\"==o?T:n[o],i,o+\"\",n,t,u):T,f===T&&(f=i),it(n,o,f)},Wu)}function Qt(n,t){var r=n.length;if(r)return t+=0>t?r:0,Se(t,r)?n[t]:T}function Xt(n,t,r){var e=-1;return t=c(t.length?t:[Tu],k(ye())),\nn=Gt(n,function(n){return{a:c(t,function(t){return t(n)}),b:++e,c:n}}),w(n,function(n,t){var e;n:{e=-1;for(var u=n.a,i=t.a,o=u.length,f=r.length;++e<o;){var c=Wr(u[e],i[e]);if(c){e=e>=f?c:c*(\"desc\"==r[e]?-1:1);break n}}e=n.b-t.b}return e})}function nr(n,t){return tr(n,t,function(t,r){return Ru(n,r)})}function tr(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=kt(n,o);r(f,o)&&lr(i,Sr(o,n),f)}return i}function rr(n){return function(t){return kt(t,n)}}function er(n,t,r,e){var u=e?g:v,i=-1,o=t.length,f=n;\nfor(n===t&&(t=Ur(t)),r&&(f=c(n,k(r)));++i<o;)for(var a=0,l=t[i],l=r?r(l):l;-1<(a=u(f,l,a,e));)f!==n&&bi.call(f,a,1),bi.call(n,a,1);return n}function ur(n,t){for(var r=n?t.length:0,e=r-1;r--;){var u=t[r];if(r==e||u!==i){var i=u;Se(u)?bi.call(n,u,1):xr(n,u)}}}function ir(n,t){return n+Oi(Mi()*(t-n+1))}function or(n,t){var r=\"\";if(!n||1>t||9007199254740991<t)return r;do t%2&&(r+=n),(t=Oi(t/2))&&(n+=n);while(t);return r}function fr(n,t){return bo(Be(n,t,Tu),n+\"\")}function cr(n){return Qn(Lu(n))}function ar(n,t){\nvar r=Lu(n);return Ce(r,pt(t,0,r.length))}function lr(n,t,r,e){if(!gu(n))return n;t=Sr(t,n);for(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=De(t[u]),a=r;if(u!=o){var l=f[c],a=e?e(l,c,f):T;a===T&&(a=gu(l)?l:Se(t[u+1])?[]:{})}ot(f,c,a),f=f[c]}return n}function sr(n){return Ce(Lu(n))}function hr(n,t,r){var e=-1,u=n.length;for(0>t&&(t=-t>u?0:u+t),r=r>u?u:r,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Vu(u);++e<u;)r[e]=n[e+t];return r}function pr(n,t){var r;return eo(n,function(n,e,u){return r=t(n,e,u),\n!r}),!!r}function _r(n,t,r){var e=0,u=null==n?e:n.length;if(typeof t==\"number\"&&t===t&&2147483647>=u){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!ju(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return vr(n,t,Tu,r)}function vr(n,t,r,e){t=r(t);for(var u=0,i=null==n?0:n.length,o=t!==t,f=null===t,c=ju(t),a=t===T;u<i;){var l=Oi((u+i)/2),s=r(n[l]),h=s!==T,p=null===s,_=s===s,v=ju(s);(o?e||_:a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):p||v?0:e?s<=t:s<t)?u=l+1:i=l}return Ui(i,4294967294)}function gr(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){\nvar o=n[r],f=t?t(o):o;if(!r||!au(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function dr(n){return typeof n==\"number\"?n:ju(n)?F:+n}function yr(n){if(typeof n==\"string\")return n;if(of(n))return c(n,yr)+\"\";if(ju(n))return to?to.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-$?\"-0\":t}function br(n,t,r){var e=-1,u=o,i=n.length,c=true,a=[],l=a;if(r)c=false,u=f;else if(200<=i){if(u=t?null:lo(n))return U(u);c=false,u=O,l=new Nn}else l=t?[]:a;n:for(;++e<i;){var s=n[e],h=t?t(s):s,s=r||0!==s?s:0;if(c&&h===h){for(var p=l.length;p--;)if(l[p]===h)continue n;\nt&&l.push(h),a.push(s)}else u(l,h,r)||(l!==a&&l.push(h),a.push(s))}return a}function xr(n,t){return t=Sr(t,n),n=2>t.length?n:kt(n,hr(t,0,-1)),null==n||delete n[De(qe(t))]}function jr(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?hr(n,e?0:i,e?i+1:u):hr(n,e?i+1:0,e?u:i)}function wr(n,t){var r=n;return r instanceof Un&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mr(n,t,r){var e=n.length;if(2>e)return e?br(n[0]):[];for(var u=-1,i=Vu(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=yt(i[u]||o,n[f],t,r));\nreturn br(wt(i,1),t,r)}function Ar(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;)r(o,n[e],e<i?t[e]:T);return o}function Er(n){return su(n)?n:[]}function kr(n){return typeof n==\"function\"?n:Tu}function Sr(n,t){return of(n)?n:Ie(n,t)?[n]:xo(Ou(n))}function Or(n,t,r){var e=n.length;return r=r===T?e:r,!t&&r>=e?n:hr(n,t,r)}function Ir(n,t){if(t)return n.slice();var r=n.length,r=vi?vi(r):new n.constructor(r);return n.copy(r),r}function Rr(n){var t=new n.constructor(n.byteLength);return new _i(t).set(new _i(n)),\nt}function zr(n,t){return new n.constructor(t?Rr(n.buffer):n.buffer,n.byteOffset,n.length)}function Wr(n,t){if(n!==t){var r=n!==T,e=null===n,u=n===n,i=ju(n),o=t!==T,f=null===t,c=t===t,a=ju(t);if(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Br(n,t,r,e){var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Li(i-o,0),l=Vu(c+a);for(e=!e;++f<c;)l[f]=t[f];for(;++u<o;)(e||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];\nreturn l}function Lr(n,t,r,e){var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Li(i-f,0),s=Vu(l+a);for(e=!e;++u<l;)s[u]=n[u];for(l=u;++c<a;)s[l+c]=t[c];for(;++o<f;)(e||u<i)&&(s[l+r[o]]=n[u++]);return s}function Ur(n,t){var r=-1,e=n.length;for(t||(t=Vu(e));++r<e;)t[r]=n[r];return t}function Cr(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):T;c===T&&(c=n[f]),u?st(r,f,c):ot(r,f,c)}return r}function Dr(n,t){return Cr(n,ho(n),t)}function Mr(n,t){return Cr(n,po(n),t);\n}function Tr(n,r){return function(e,u){var i=of(e)?t:ct,o=r?r():{};return i(e,n,ye(u,2),o)}}function $r(n){return fr(function(t,r){var e=-1,u=r.length,i=1<u?r[u-1]:T,o=2<u?r[2]:T,i=3<n.length&&typeof i==\"function\"?(u--,i):T;for(o&&Oe(r[0],r[1],o)&&(i=3>u?T:i,u=1),t=Yu(t);++e<u;)(o=r[e])&&n(t,o,e,i);return t})}function Fr(n,t){return function(r,e){if(null==r)return r;if(!lu(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=Yu(r);(t?i--:++i<u)&&false!==e(o[i],i,o););return r}}function Nr(n){return function(t,r,e){\nvar u=-1,i=Yu(t);e=e(t);for(var o=e.length;o--;){var f=e[n?o:++u];if(false===r(i[f],f,i))break}return t}}function Pr(n,t,r){function e(){return(this&&this!==$n&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=1&t,i=Vr(n);return e}function Zr(n){return function(t){t=Ou(t);var r=Rn.test(t)?M(t):T,e=r?r[0]:t.charAt(0);return t=r?Or(r,1).join(\"\"):t.slice(1),e[n]()+t}}function qr(n){return function(t){return l(Du(Cu(t).replace(kn,\"\")),n,\"\")}}function Vr(n){return function(){var t=arguments;switch(t.length){\ncase 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=ro(n.prototype),t=n.apply(r,t);return gu(t)?t:r}}function Kr(t,r,e){function u(){for(var o=arguments.length,f=Vu(o),c=o,a=de(u);c--;)f[c]=arguments[c];return c=3>o&&f[0]!==a&&f[o-1]!==a?[]:L(f,a),\no-=c.length,o<e?ue(t,r,Jr,u.placeholder,T,f,c,T,T,e-o):n(this&&this!==$n&&this instanceof u?i:t,this,f)}var i=Vr(t);return u}function Gr(n){return function(t,r,e){var u=Yu(t);if(!lu(t)){var i=ye(r,3);t=zu(t),r=function(n){return i(u[n],n,u)}}return r=n(t,r,e),-1<r?u[i?t[r]:r]:T}}function Hr(n){return pe(function(t){var r=t.length,e=r,u=On.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(typeof i!=\"function\")throw new ni(\"Expected a function\");if(u&&!o&&\"wrapper\"==ge(i))var o=new On([],true)}for(e=o?e:r;++e<r;)var i=t[e],u=ge(i),f=\"wrapper\"==u?so(i):T,o=f&&Re(f[0])&&424==f[1]&&!f[4].length&&1==f[9]?o[ge(f[0])].apply(o,f[3]):1==i.length&&Re(i)?o[u]():o.thru(i);\nreturn function(){var n=arguments,e=n[0];if(o&&1==n.length&&of(e))return o.plant(e).value();for(var u=0,n=r?t[u].apply(this,n):e;++u<r;)n=t[u].call(this,n);return n}})}function Jr(n,t,r,e,u,i,o,f,c,a){function l(){for(var d=arguments.length,y=Vu(d),b=d;b--;)y[b]=arguments[b];if(_){var x,j=de(l),b=y.length;for(x=0;b--;)y[b]===j&&++x}if(e&&(y=Br(y,e,u,_)),i&&(y=Lr(y,i,o,_)),d-=x,_&&d<a)return j=L(y,j),ue(n,t,Jr,l.placeholder,r,y,j,f,c,a-d);if(j=h?r:this,b=p?j[n]:n,d=y.length,f){x=y.length;for(var w=Ui(f.length,x),m=Ur(y);w--;){\nvar A=f[w];y[w]=Se(A,x)?m[A]:T}}else v&&1<d&&y.reverse();return s&&c<d&&(y.length=c),this&&this!==$n&&this instanceof l&&(b=g||Vr(b)),b.apply(j,y)}var s=128&t,h=1&t,p=2&t,_=24&t,v=512&t,g=p?T:Vr(n);return l}function Yr(n,t){return function(r,e){return Bt(r,n,t(e))}}function Qr(n,t){return function(r,e){var u;if(r===T&&e===T)return t;if(r!==T&&(u=r),e!==T){if(u===T)return e;typeof r==\"string\"||typeof e==\"string\"?(r=yr(r),e=yr(e)):(r=dr(r),e=dr(e)),u=n(r,e)}return u}}function Xr(t){return pe(function(r){\nreturn r=c(r,k(ye())),fr(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ne(n,t){t=t===T?\" \":yr(t);var r=t.length;return 2>r?r?or(t,n):t:(r=or(t,Si(n/D(t))),Rn.test(t)?Or(M(r),0,n).join(\"\"):r.slice(0,n))}function te(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=Vu(l+c),h=this&&this!==$n&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];return n(h,o?e:this,s)}var o=1&r,f=Vr(t);return i}function re(n){return function(t,r,e){\ne&&typeof e!=\"number\"&&Oe(t,r,e)&&(r=e=T),t=mu(t),r===T?(r=t,t=0):r=mu(r),e=e===T?t<r?1:-1:mu(e);var u=-1;r=Li(Si((r-t)/(e||1)),0);for(var i=Vu(r);r--;)i[n?r:++u]=t,t+=e;return i}}function ee(n){return function(t,r){return typeof t==\"string\"&&typeof r==\"string\"||(t=ku(t),r=ku(r)),n(t,r)}}function ue(n,t,r,e,u,i,o,f,c,a){var l=8&t,s=l?o:T;o=l?T:o;var h=l?i:T;return i=l?T:i,t=(t|(l?32:64))&~(l?64:32),4&t||(t&=-4),u=[n,t,u,h,s,i,o,f,c,a],r=r.apply(T,u),Re(n)&&go(r,u),r.placeholder=e,Le(r,n,t)}function ie(n){\nvar t=Ju[n];return function(n,r){if(n=ku(n),r=null==r?0:Ui(Au(r),292)){var e=(Ou(n)+\"e\").split(\"e\"),e=t(e[0]+\"e\"+(+e[1]+r)),e=(Ou(e)+\"e\").split(\"e\");return+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function oe(n){return function(t){var r=_o(t);return\"[object Map]\"==r?W(t):\"[object Set]\"==r?C(t):E(t,n(t))}}function fe(n,t,r,e,u,i,o,f){var c=2&t;if(!c&&typeof n!=\"function\")throw new ni(\"Expected a function\");var a=e?e.length:0;if(a||(t&=-97,e=u=T),o=o===T?o:Li(Au(o),0),f=f===T?f:Au(f),a-=u?u.length:0,64&t){\nvar l=e,s=u;e=u=T}var h=c?T:so(n);return i=[n,t,r,e,u,l,s,i,o,f],h&&(r=i[1],n=h[1],t=r|n,e=128==n&&8==r||128==n&&256==r&&i[7].length<=h[8]||384==n&&h[7].length<=h[8]&&8==r,131>t||e)&&(1&n&&(i[2]=h[2],t|=1&r?0:4),(r=h[3])&&(e=i[3],i[3]=e?Br(e,r,h[4]):r,i[4]=e?L(i[3],\"__lodash_placeholder__\"):h[4]),(r=h[5])&&(e=i[5],i[5]=e?Lr(e,r,h[6]):r,i[6]=e?L(i[5],\"__lodash_placeholder__\"):h[6]),(r=h[7])&&(i[7]=r),128&n&&(i[8]=null==i[8]?h[8]:Ui(i[8],h[8])),null==i[9]&&(i[9]=h[9]),i[0]=h[0],i[1]=t),n=i[0],t=i[1],\nr=i[2],e=i[3],u=i[4],f=i[9]=i[9]===T?c?0:n.length:Li(i[9]-a,0),!f&&24&t&&(t&=-25),Le((h?fo:go)(t&&1!=t?8==t||16==t?Kr(n,t,f):32!=t&&33!=t||u.length?Jr.apply(T,i):te(n,t,r,e):Pr(n,t,r),i),n,t)}function ce(n,t,r,e){return n===T||au(n,ri[r])&&!ii.call(e,r)?t:n}function ae(n,t,r,e,u,i){return gu(n)&&gu(t)&&(i.set(t,n),Yt(n,t,T,ae,i),i.delete(t)),n}function le(n){return bu(n)?T:n}function se(n,t,r,e,u,i){var o=1&r,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return false;if((c=i.get(n))&&i.get(t))return c==t;var c=-1,a=true,l=2&r?new Nn:T;\nfor(i.set(n,t),i.set(t,n);++c<f;){var s=n[c],p=t[c];if(e)var _=o?e(p,s,c,t,n,i):e(s,p,c,n,t,i);if(_!==T){if(_)continue;a=false;break}if(l){if(!h(t,function(n,t){if(!O(l,t)&&(s===n||u(s,n,r,e,i)))return l.push(t)})){a=false;break}}else if(s!==p&&!u(s,p,r,e,i)){a=false;break}}return i.delete(n),i.delete(t),a}function he(n,t,r,e,u,i,o){switch(r){case\"[object DataView]\":if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)break;n=n.buffer,t=t.buffer;case\"[object ArrayBuffer]\":if(n.byteLength!=t.byteLength||!i(new _i(n),new _i(t)))break;\nreturn true;case\"[object Boolean]\":case\"[object Date]\":case\"[object Number]\":return au(+n,+t);case\"[object Error]\":return n.name==t.name&&n.message==t.message;case\"[object RegExp]\":case\"[object String]\":return n==t+\"\";case\"[object Map]\":var f=W;case\"[object Set]\":if(f||(f=U),n.size!=t.size&&!(1&e))break;return(r=o.get(n))?r==t:(e|=2,o.set(n,t),t=se(f(n),f(t),e,u,i,o),o.delete(n),t);case\"[object Symbol]\":if(no)return no.call(n)==no.call(t)}return false}function pe(n){return bo(Be(n,T,Pe),n+\"\")}function _e(n){\nreturn St(n,zu,ho)}function ve(n){return St(n,Wu,po)}function ge(n){for(var t=n.name+\"\",r=Ki[t],e=ii.call(Ki,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function de(n){return(ii.call(An,\"placeholder\")?An:n).placeholder}function ye(){var n=An.iteratee||$u,n=n===$u?qt:n;return arguments.length?n(arguments[0],arguments[1]):n}function be(n,t){var r=n.__data__,e=typeof t;return(\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==t:null===t)?r[typeof t==\"string\"?\"string\":\"hash\"]:r.map;\n}function xe(n){for(var t=zu(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,u===u&&!gu(u)]}return t}function je(n,t){var r=null==n?T:n[t];return Ft(r)?r:T}function we(n,t,r){t=Sr(t,n);for(var e=-1,u=t.length,i=false;++e<u;){var o=De(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&vu(u)&&Se(o,u)&&(of(n)||uf(n)))}function me(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&ii.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ae(n){\nreturn typeof n.constructor!=\"function\"||ze(n)?{}:ro(gi(n))}function Ee(n,t,r){var e=n.constructor;switch(t){case\"[object ArrayBuffer]\":return Rr(n);case\"[object Boolean]\":case\"[object Date]\":return new e(+n);case\"[object DataView]\":return t=r?Rr(n.buffer):n.buffer,new n.constructor(t,n.byteOffset,n.byteLength);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":\ncase\"[object Uint16Array]\":case\"[object Uint32Array]\":return zr(n,r);case\"[object Map]\":return new e;case\"[object Number]\":case\"[object String]\":return new e(n);case\"[object RegExp]\":return t=new n.constructor(n.source,_n.exec(n)),t.lastIndex=n.lastIndex,t;case\"[object Set]\":return new e;case\"[object Symbol]\":return no?Yu(no.call(n)):{}}}function ke(n){return of(n)||uf(n)||!!(xi&&n&&n[xi])}function Se(n,t){var r=typeof n;return t=null==t?9007199254740991:t,!!t&&(\"number\"==r||\"symbol\"!=r&&bn.test(n))&&-1<n&&0==n%1&&n<t;\n}function Oe(n,t,r){if(!gu(r))return false;var e=typeof t;return!!(\"number\"==e?lu(r)&&Se(t,r.length):\"string\"==e&&t in r)&&au(r[t],n)}function Ie(n,t){if(of(n))return false;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!ju(n))||(nn.test(n)||!X.test(n)||null!=t&&n in Yu(t))}function Re(n){var t=ge(n),r=An[t];return typeof r==\"function\"&&t in Un.prototype&&(n===r||(t=so(r),!!t&&n===t[0]))}function ze(n){var t=n&&n.constructor;return n===(typeof t==\"function\"&&t.prototype||ri)}function We(n,t){\nreturn function(r){return null!=r&&(r[n]===t&&(t!==T||n in Yu(r)))}}function Be(t,r,e){return r=Li(r===T?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Li(u.length-r,0),f=Vu(o);++i<o;)f[i]=u[r+i];for(i=-1,o=Vu(r+1);++i<r;)o[i]=u[i];return o[r]=e(f),n(t,this,o)}}function Le(n,t,r){var e=t+\"\";t=bo;var u,i=Te;return u=(u=e.match(an))?u[1].split(ln):[],r=i(u,r),(i=r.length)&&(u=i-1,r[u]=(1<i?\"& \":\"\")+r[u],r=r.join(2<i?\", \":\" \"),e=e.replace(cn,\"{\\n/* [wrapped with \"+r+\"] */\\n\")),t(n,e)}function Ue(n){\nvar t=0,r=0;return function(){var e=Ci(),u=16-(e-r);if(r=e,0<u){if(800<=++t)return arguments[0]}else t=0;return n.apply(T,arguments)}}function Ce(n,t){var r=-1,e=n.length,u=e-1;for(t=t===T?e:t;++r<t;){var e=ir(r,u),i=n[e];n[e]=n[r],n[r]=i}return n.length=t,n}function De(n){if(typeof n==\"string\"||ju(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-$?\"-0\":t}function Me(n){if(null!=n){try{return ui.call(n)}catch(n){}return n+\"\"}return\"\"}function Te(n,t){return r(N,function(r){var e=\"_.\"+r[0];t&r[1]&&!o(n,e)&&n.push(e);\n}),n.sort()}function $e(n){if(n instanceof Un)return n.clone();var t=new On(n.__wrapped__,n.__chain__);return t.__actions__=Ur(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function Fe(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:Au(r),0>r&&(r=Li(e+r,0)),_(n,ye(t,3),r)):-1}function Ne(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==T&&(u=Au(r),u=0>r?Li(e+u,0):Ui(u,e-1)),_(n,ye(t,3),u,true)}function Pe(n){return(null==n?0:n.length)?wt(n,1):[]}function Ze(n){\nreturn n&&n.length?n[0]:T}function qe(n){var t=null==n?0:n.length;return t?n[t-1]:T}function Ve(n,t){return n&&n.length&&t&&t.length?er(n,t):n}function Ke(n){return null==n?n:Ti.call(n)}function Ge(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){if(su(n))return t=Li(n.length,t),true}),A(t,function(t){return c(n,b(t))})}function He(t,r){if(!t||!t.length)return[];var e=Ge(t);return null==r?e:c(e,function(t){return n(r,T,t)})}function Je(n){return n=An(n),n.__chain__=true,n}function Ye(n,t){\nreturn t(n)}function Qe(){return this}function Xe(n,t){return(of(n)?r:eo)(n,ye(t,3))}function nu(n,t){return(of(n)?e:uo)(n,ye(t,3))}function tu(n,t){return(of(n)?c:Gt)(n,ye(t,3))}function ru(n,t,r){return t=r?T:t,t=n&&null==t?n.length:t,fe(n,128,T,T,T,T,t)}function eu(n,t){var r;if(typeof t!=\"function\")throw new ni(\"Expected a function\");return n=Au(n),function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=T),r}}function uu(n,t,r){return t=r?T:t,n=fe(n,8,T,T,T,T,T,t),n.placeholder=uu.placeholder,\nn}function iu(n,t,r){return t=r?T:t,n=fe(n,16,T,T,T,T,T,t),n.placeholder=iu.placeholder,n}function ou(n,t,r){function e(t){var r=c,e=a;return c=a=T,_=t,s=n.apply(e,r)}function u(n){var r=n-p;return n-=_,p===T||r>=t||0>r||g&&n>=l}function i(){var n=Ko();if(u(n))return o(n);var r,e=yo;r=n-_,n=t-(n-p),r=g?Ui(n,l-r):n,h=e(i,r)}function o(n){return h=T,d&&c?e(n):(c=a=T,s)}function f(){var n=Ko(),r=u(n);if(c=arguments,a=this,p=n,r){if(h===T)return _=n=p,h=yo(i,t),v?e(n):s;if(g)return h=yo(i,t),e(p)}return h===T&&(h=yo(i,t)),\ns}var c,a,l,s,h,p,_=0,v=false,g=false,d=true;if(typeof n!=\"function\")throw new ni(\"Expected a function\");return t=ku(t)||0,gu(r)&&(v=!!r.leading,l=(g=\"maxWait\"in r)?Li(ku(r.maxWait)||0,t):l,d=\"trailing\"in r?!!r.trailing:d),f.cancel=function(){h!==T&&ao(h),_=0,c=p=a=h=T},f.flush=function(){return h===T?s:o(Ko())},f}function fu(n,t){function r(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;return i.has(u)?i.get(u):(e=n.apply(this,e),r.cache=i.set(u,e)||i,e)}if(typeof n!=\"function\"||null!=t&&typeof t!=\"function\")throw new ni(\"Expected a function\");\nreturn r.cache=new(fu.Cache||Fn),r}function cu(n){if(typeof n!=\"function\")throw new ni(\"Expected a function\");return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:return!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function au(n,t){return n===t||n!==n&&t!==t}function lu(n){return null!=n&&vu(n.length)&&!pu(n)}function su(n){return du(n)&&lu(n)}function hu(n){if(!du(n))return false;var t=Ot(n);return\"[object Error]\"==t||\"[object DOMException]\"==t||typeof n.message==\"string\"&&typeof n.name==\"string\"&&!bu(n);\n}function pu(n){return!!gu(n)&&(n=Ot(n),\"[object Function]\"==n||\"[object GeneratorFunction]\"==n||\"[object AsyncFunction]\"==n||\"[object Proxy]\"==n)}function _u(n){return typeof n==\"number\"&&n==Au(n)}function vu(n){return typeof n==\"number\"&&-1<n&&0==n%1&&9007199254740991>=n}function gu(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function du(n){return null!=n&&typeof n==\"object\"}function yu(n){return typeof n==\"number\"||du(n)&&\"[object Number]\"==Ot(n)}function bu(n){return!(!du(n)||\"[object Object]\"!=Ot(n))&&(n=gi(n),\nnull===n||(n=ii.call(n,\"constructor\")&&n.constructor,typeof n==\"function\"&&n instanceof n&&ui.call(n)==ai))}function xu(n){return typeof n==\"string\"||!of(n)&&du(n)&&\"[object String]\"==Ot(n)}function ju(n){return typeof n==\"symbol\"||du(n)&&\"[object Symbol]\"==Ot(n)}function wu(n){if(!n)return[];if(lu(n))return xu(n)?M(n):Ur(n);if(ji&&n[ji]){n=n[ji]();for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}return t=_o(n),(\"[object Map]\"==t?W:\"[object Set]\"==t?U:Lu)(n)}function mu(n){return n?(n=ku(n),\nn===$||n===-$?1.7976931348623157e308*(0>n?-1:1):n===n?n:0):0===n?n:0}function Au(n){n=mu(n);var t=n%1;return n===n?t?n-t:n:0}function Eu(n){return n?pt(Au(n),0,4294967295):0}function ku(n){if(typeof n==\"number\")return n;if(ju(n))return F;if(gu(n)&&(n=typeof n.valueOf==\"function\"?n.valueOf():n,n=gu(n)?n+\"\":n),typeof n!=\"string\")return 0===n?n:+n;n=n.replace(un,\"\");var t=gn.test(n);return t||yn.test(n)?Dn(n.slice(2),t?2:8):vn.test(n)?F:+n}function Su(n){return Cr(n,Wu(n))}function Ou(n){return null==n?\"\":yr(n);\n}function Iu(n,t,r){return n=null==n?T:kt(n,t),n===T?r:n}function Ru(n,t){return null!=n&&we(n,t,zt)}function zu(n){return lu(n)?qn(n):Vt(n)}function Wu(n){if(lu(n))n=qn(n,true);else if(gu(n)){var t,r=ze(n),e=[];for(t in n)(\"constructor\"!=t||!r&&ii.call(n,t))&&e.push(t);n=e}else{if(t=[],null!=n)for(r in Yu(n))t.push(r);n=t}return n}function Bu(n,t){if(null==n)return{};var r=c(ve(n),function(n){return[n]});return t=ye(t),tr(n,r,function(n,r){return t(n,r[0])})}function Lu(n){return null==n?[]:S(n,zu(n));\n}function Uu(n){return Tf(Ou(n).toLowerCase())}function Cu(n){return(n=Ou(n))&&n.replace(xn,Xn).replace(Sn,\"\")}function Du(n,t,r){return n=Ou(n),t=r?T:t,t===T?zn.test(n)?n.match(In)||[]:n.match(sn)||[]:n.match(t)||[]}function Mu(n){return function(){return n}}function Tu(n){return n}function $u(n){return qt(typeof n==\"function\"?n:_t(n,1))}function Fu(n,t,e){var u=zu(t),i=Et(t,u);null!=e||gu(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=Et(t,zu(t)));var o=!(gu(e)&&\"chain\"in e&&!e.chain),f=pu(n);return r(i,function(r){\nvar e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;if(o||t){var r=n(this.__wrapped__);return(r.__actions__=Ur(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function Nu(){}function Pu(n){return Ie(n)?b(De(n)):rr(n)}function Zu(){return[]}function qu(){return false}mn=null==mn?$n:rt.defaults($n.Object(),mn,rt.pick($n,Wn));var Vu=mn.Array,Ku=mn.Date,Gu=mn.Error,Hu=mn.Function,Ju=mn.Math,Yu=mn.Object,Qu=mn.RegExp,Xu=mn.String,ni=mn.TypeError,ti=Vu.prototype,ri=Yu.prototype,ei=mn[\"__core-js_shared__\"],ui=Hu.prototype.toString,ii=ri.hasOwnProperty,oi=0,fi=function(){\nvar n=/[^.]+$/.exec(ei&&ei.keys&&ei.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),ci=ri.toString,ai=ui.call(Yu),li=$n._,si=Qu(\"^\"+ui.call(ii).replace(rn,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),hi=Pn?mn.Buffer:T,pi=mn.Symbol,_i=mn.Uint8Array,vi=hi?hi.g:T,gi=B(Yu.getPrototypeOf,Yu),di=Yu.create,yi=ri.propertyIsEnumerable,bi=ti.splice,xi=pi?pi.isConcatSpreadable:T,ji=pi?pi.iterator:T,wi=pi?pi.toStringTag:T,mi=function(){try{var n=je(Yu,\"defineProperty\");\nreturn n({},\"\",{}),n}catch(n){}}(),Ai=mn.clearTimeout!==$n.clearTimeout&&mn.clearTimeout,Ei=Ku&&Ku.now!==$n.Date.now&&Ku.now,ki=mn.setTimeout!==$n.setTimeout&&mn.setTimeout,Si=Ju.ceil,Oi=Ju.floor,Ii=Yu.getOwnPropertySymbols,Ri=hi?hi.isBuffer:T,zi=mn.isFinite,Wi=ti.join,Bi=B(Yu.keys,Yu),Li=Ju.max,Ui=Ju.min,Ci=Ku.now,Di=mn.parseInt,Mi=Ju.random,Ti=ti.reverse,$i=je(mn,\"DataView\"),Fi=je(mn,\"Map\"),Ni=je(mn,\"Promise\"),Pi=je(mn,\"Set\"),Zi=je(mn,\"WeakMap\"),qi=je(Yu,\"create\"),Vi=Zi&&new Zi,Ki={},Gi=Me($i),Hi=Me(Fi),Ji=Me(Ni),Yi=Me(Pi),Qi=Me(Zi),Xi=pi?pi.prototype:T,no=Xi?Xi.valueOf:T,to=Xi?Xi.toString:T,ro=function(){\nfunction n(){}return function(t){return gu(t)?di?di(t):(n.prototype=t,t=new n,n.prototype=T,t):{}}}();An.templateSettings={escape:J,evaluate:Y,interpolate:Q,variable:\"\",imports:{_:An}},An.prototype=En.prototype,An.prototype.constructor=An,On.prototype=ro(En.prototype),On.prototype.constructor=On,Un.prototype=ro(En.prototype),Un.prototype.constructor=Un,Mn.prototype.clear=function(){this.__data__=qi?qi(null):{},this.size=0},Mn.prototype.delete=function(n){return n=this.has(n)&&delete this.__data__[n],\nthis.size-=n?1:0,n},Mn.prototype.get=function(n){var t=this.__data__;return qi?(n=t[n],\"__lodash_hash_undefined__\"===n?T:n):ii.call(t,n)?t[n]:T},Mn.prototype.has=function(n){var t=this.__data__;return qi?t[n]!==T:ii.call(t,n)},Mn.prototype.set=function(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=qi&&t===T?\"__lodash_hash_undefined__\":t,this},Tn.prototype.clear=function(){this.__data__=[],this.size=0},Tn.prototype.delete=function(n){var t=this.__data__;return n=ft(t,n),!(0>n)&&(n==t.length-1?t.pop():bi.call(t,n,1),\n--this.size,true)},Tn.prototype.get=function(n){var t=this.__data__;return n=ft(t,n),0>n?T:t[n][1]},Tn.prototype.has=function(n){return-1<ft(this.__data__,n)},Tn.prototype.set=function(n,t){var r=this.__data__,e=ft(r,n);return 0>e?(++this.size,r.push([n,t])):r[e][1]=t,this},Fn.prototype.clear=function(){this.size=0,this.__data__={hash:new Mn,map:new(Fi||Tn),string:new Mn}},Fn.prototype.delete=function(n){return n=be(this,n).delete(n),this.size-=n?1:0,n},Fn.prototype.get=function(n){return be(this,n).get(n);\n},Fn.prototype.has=function(n){return be(this,n).has(n)},Fn.prototype.set=function(n,t){var r=be(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this},Nn.prototype.add=Nn.prototype.push=function(n){return this.__data__.set(n,\"__lodash_hash_undefined__\"),this},Nn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.clear=function(){this.__data__=new Tn,this.size=0},Zn.prototype.delete=function(n){var t=this.__data__;return n=t.delete(n),this.size=t.size,n},Zn.prototype.get=function(n){\nreturn this.__data__.get(n)},Zn.prototype.has=function(n){return this.__data__.has(n)},Zn.prototype.set=function(n,t){var r=this.__data__;if(r instanceof Tn){var e=r.__data__;if(!Fi||199>e.length)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new Fn(e)}return r.set(n,t),this.size=r.size,this};var eo=Fr(mt),uo=Fr(At,true),io=Nr(),oo=Nr(true),fo=Vi?function(n,t){return Vi.set(n,t),n}:Tu,co=mi?function(n,t){return mi(n,\"toString\",{configurable:true,enumerable:false,value:Mu(t),writable:true})}:Tu,ao=Ai||function(n){\nreturn $n.clearTimeout(n)},lo=Pi&&1/U(new Pi([,-0]))[1]==$?function(n){return new Pi(n)}:Nu,so=Vi?function(n){return Vi.get(n)}:Nu,ho=Ii?function(n){return null==n?[]:(n=Yu(n),i(Ii(n),function(t){return yi.call(n,t)}))}:Zu,po=Ii?function(n){for(var t=[];n;)a(t,ho(n)),n=gi(n);return t}:Zu,_o=Ot;($i&&\"[object DataView]\"!=_o(new $i(new ArrayBuffer(1)))||Fi&&\"[object Map]\"!=_o(new Fi)||Ni&&\"[object Promise]\"!=_o(Ni.resolve())||Pi&&\"[object Set]\"!=_o(new Pi)||Zi&&\"[object WeakMap]\"!=_o(new Zi))&&(_o=function(n){\nvar t=Ot(n);if(n=(n=\"[object Object]\"==t?n.constructor:T)?Me(n):\"\")switch(n){case Gi:return\"[object DataView]\";case Hi:return\"[object Map]\";case Ji:return\"[object Promise]\";case Yi:return\"[object Set]\";case Qi:return\"[object WeakMap]\"}return t});var vo=ei?pu:qu,go=Ue(fo),yo=ki||function(n,t){return $n.setTimeout(n,t)},bo=Ue(co),xo=function(n){n=fu(n,function(n){return 500===t.size&&t.clear(),n});var t=n.cache;return n}(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(tn,function(n,r,e,u){\nt.push(e?u.replace(hn,\"$1\"):r||n)}),t}),jo=fr(function(n,t){return su(n)?yt(n,wt(t,1,su,true)):[]}),wo=fr(function(n,t){var r=qe(t);return su(r)&&(r=T),su(n)?yt(n,wt(t,1,su,true),ye(r,2)):[]}),mo=fr(function(n,t){var r=qe(t);return su(r)&&(r=T),su(n)?yt(n,wt(t,1,su,true),T,r):[]}),Ao=fr(function(n){var t=c(n,Er);return t.length&&t[0]===n[0]?Wt(t):[]}),Eo=fr(function(n){var t=qe(n),r=c(n,Er);return t===qe(r)?t=T:r.pop(),r.length&&r[0]===n[0]?Wt(r,ye(t,2)):[]}),ko=fr(function(n){var t=qe(n),r=c(n,Er);return(t=typeof t==\"function\"?t:T)&&r.pop(),\nr.length&&r[0]===n[0]?Wt(r,T,t):[]}),So=fr(Ve),Oo=pe(function(n,t){var r=null==n?0:n.length,e=ht(n,t);return ur(n,c(t,function(n){return Se(n,r)?+n:n}).sort(Wr)),e}),Io=fr(function(n){return br(wt(n,1,su,true))}),Ro=fr(function(n){var t=qe(n);return su(t)&&(t=T),br(wt(n,1,su,true),ye(t,2))}),zo=fr(function(n){var t=qe(n),t=typeof t==\"function\"?t:T;return br(wt(n,1,su,true),T,t)}),Wo=fr(function(n,t){return su(n)?yt(n,t):[]}),Bo=fr(function(n){return mr(i(n,su))}),Lo=fr(function(n){var t=qe(n);return su(t)&&(t=T),\nmr(i(n,su),ye(t,2))}),Uo=fr(function(n){var t=qe(n),t=typeof t==\"function\"?t:T;return mr(i(n,su),T,t)}),Co=fr(Ge),Do=fr(function(n){var t=n.length,t=1<t?n[t-1]:T,t=typeof t==\"function\"?(n.pop(),t):T;return He(n,t)}),Mo=pe(function(n){function t(t){return ht(t,n)}var r=n.length,e=r?n[0]:0,u=this.__wrapped__;return!(1<r||this.__actions__.length)&&u instanceof Un&&Se(e)?(u=u.slice(e,+e+(r?1:0)),u.__actions__.push({func:Ye,args:[t],thisArg:T}),new On(u,this.__chain__).thru(function(n){return r&&!n.length&&n.push(T),\nn})):this.thru(t)}),To=Tr(function(n,t,r){ii.call(n,r)?++n[r]:st(n,r,1)}),$o=Gr(Fe),Fo=Gr(Ne),No=Tr(function(n,t,r){ii.call(n,r)?n[r].push(t):st(n,r,[t])}),Po=fr(function(t,r,e){var u=-1,i=typeof r==\"function\",o=lu(t)?Vu(t.length):[];return eo(t,function(t){o[++u]=i?n(r,t,e):Lt(t,r,e)}),o}),Zo=Tr(function(n,t,r){st(n,r,t)}),qo=Tr(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),Vo=fr(function(n,t){if(null==n)return[];var r=t.length;return 1<r&&Oe(n,t[0],t[1])?t=[]:2<r&&Oe(t[0],t[1],t[2])&&(t=[t[0]]),\nXt(n,wt(t,1),[])}),Ko=Ei||function(){return $n.Date.now()},Go=fr(function(n,t,r){var e=1;if(r.length)var u=L(r,de(Go)),e=32|e;return fe(n,e,t,r,u)}),Ho=fr(function(n,t,r){var e=3;if(r.length)var u=L(r,de(Ho)),e=32|e;return fe(t,e,n,r,u)}),Jo=fr(function(n,t){return dt(n,1,t)}),Yo=fr(function(n,t,r){return dt(n,ku(t)||0,r)});fu.Cache=Fn;var Qo=fr(function(t,r){r=1==r.length&&of(r[0])?c(r[0],k(ye())):c(wt(r,1),k(ye()));var e=r.length;return fr(function(u){for(var i=-1,o=Ui(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);\nreturn n(t,this,u)})}),Xo=fr(function(n,t){return fe(n,32,T,t,L(t,de(Xo)))}),nf=fr(function(n,t){return fe(n,64,T,t,L(t,de(nf)))}),tf=pe(function(n,t){return fe(n,256,T,T,T,t)}),rf=ee(It),ef=ee(function(n,t){return n>=t}),uf=Ut(function(){return arguments}())?Ut:function(n){return du(n)&&ii.call(n,\"callee\")&&!yi.call(n,\"callee\")},of=Vu.isArray,ff=Vn?k(Vn):Ct,cf=Ri||qu,af=Kn?k(Kn):Dt,lf=Gn?k(Gn):Tt,sf=Hn?k(Hn):Nt,hf=Jn?k(Jn):Pt,pf=Yn?k(Yn):Zt,_f=ee(Kt),vf=ee(function(n,t){return n<=t}),gf=$r(function(n,t){\nif(ze(t)||lu(t))Cr(t,zu(t),n);else for(var r in t)ii.call(t,r)&&ot(n,r,t[r])}),df=$r(function(n,t){Cr(t,Wu(t),n)}),yf=$r(function(n,t,r,e){Cr(t,Wu(t),n,e)}),bf=$r(function(n,t,r,e){Cr(t,zu(t),n,e)}),xf=pe(ht),jf=fr(function(n,t){n=Yu(n);var r=-1,e=t.length,u=2<e?t[2]:T;for(u&&Oe(t[0],t[1],u)&&(e=1);++r<e;)for(var u=t[r],i=Wu(u),o=-1,f=i.length;++o<f;){var c=i[o],a=n[c];(a===T||au(a,ri[c])&&!ii.call(n,c))&&(n[c]=u[c])}return n}),wf=fr(function(t){return t.push(T,ae),n(Sf,T,t)}),mf=Yr(function(n,t,r){\nnull!=t&&typeof t.toString!=\"function\"&&(t=ci.call(t)),n[t]=r},Mu(Tu)),Af=Yr(function(n,t,r){null!=t&&typeof t.toString!=\"function\"&&(t=ci.call(t)),ii.call(n,t)?n[t].push(r):n[t]=[r]},ye),Ef=fr(Lt),kf=$r(function(n,t,r){Yt(n,t,r)}),Sf=$r(function(n,t,r,e){Yt(n,t,r,e)}),Of=pe(function(n,t){var r={};if(null==n)return r;var e=false;t=c(t,function(t){return t=Sr(t,n),e||(e=1<t.length),t}),Cr(n,ve(n),r),e&&(r=_t(r,7,le));for(var u=t.length;u--;)xr(r,t[u]);return r}),If=pe(function(n,t){return null==n?{}:nr(n,t);\n}),Rf=oe(zu),zf=oe(Wu),Wf=qr(function(n,t,r){return t=t.toLowerCase(),n+(r?Uu(t):t)}),Bf=qr(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Lf=qr(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Uf=Zr(\"toLowerCase\"),Cf=qr(function(n,t,r){return n+(r?\"_\":\"\")+t.toLowerCase()}),Df=qr(function(n,t,r){return n+(r?\" \":\"\")+Tf(t)}),Mf=qr(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Tf=Zr(\"toUpperCase\"),$f=fr(function(t,r){try{return n(t,T,r)}catch(n){return hu(n)?n:new Gu(n)}}),Ff=pe(function(n,t){\nreturn r(t,function(t){t=De(t),st(n,t,Go(n[t],n))}),n}),Nf=Hr(),Pf=Hr(true),Zf=fr(function(n,t){return function(r){return Lt(r,n,t)}}),qf=fr(function(n,t){return function(r){return Lt(n,r,t)}}),Vf=Xr(c),Kf=Xr(u),Gf=Xr(h),Hf=re(),Jf=re(true),Yf=Qr(function(n,t){return n+t},0),Qf=ie(\"ceil\"),Xf=Qr(function(n,t){return n/t},1),nc=ie(\"floor\"),tc=Qr(function(n,t){return n*t},1),rc=ie(\"round\"),ec=Qr(function(n,t){return n-t},0);return An.after=function(n,t){if(typeof t!=\"function\")throw new ni(\"Expected a function\");\nreturn n=Au(n),function(){if(1>--n)return t.apply(this,arguments)}},An.ary=ru,An.assign=gf,An.assignIn=df,An.assignInWith=yf,An.assignWith=bf,An.at=xf,An.before=eu,An.bind=Go,An.bindAll=Ff,An.bindKey=Ho,An.castArray=function(){if(!arguments.length)return[];var n=arguments[0];return of(n)?n:[n]},An.chain=Je,An.chunk=function(n,t,r){if(t=(r?Oe(n,t,r):t===T)?1:Li(Au(t),0),r=null==n?0:n.length,!r||1>t)return[];for(var e=0,u=0,i=Vu(Si(r/t));e<r;)i[u++]=hr(n,e,e+=t);return i},An.compact=function(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){\nvar i=n[t];i&&(u[e++]=i)}return u},An.concat=function(){var n=arguments.length;if(!n)return[];for(var t=Vu(n-1),r=arguments[0];n--;)t[n-1]=arguments[n];return a(of(r)?Ur(r):[r],wt(t,1))},An.cond=function(t){var r=null==t?0:t.length,e=ye();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new ni(\"Expected a function\");return[e(n[0]),n[1]]}):[],fr(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})},An.conforms=function(n){return vt(_t(n,1))},An.constant=Mu,\nAn.countBy=To,An.create=function(n,t){var r=ro(n);return null==t?r:at(r,t)},An.curry=uu,An.curryRight=iu,An.debounce=ou,An.defaults=jf,An.defaultsDeep=wf,An.defer=Jo,An.delay=Yo,An.difference=jo,An.differenceBy=wo,An.differenceWith=mo,An.drop=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),hr(n,0>t?0:t,e)):[]},An.dropRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),t=e-t,hr(n,0,0>t?0:t)):[]},An.dropRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true,true):[];\n},An.dropWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),true):[]},An.fill=function(n,t,r,e){var u=null==n?0:n.length;if(!u)return[];for(r&&typeof r!=\"number\"&&Oe(n,t,r)&&(r=0,e=u),u=n.length,r=Au(r),0>r&&(r=-r>u?0:u+r),e=e===T||e>u?u:Au(e),0>e&&(e+=u),e=r>e?0:Eu(e);r<e;)n[r++]=t;return n},An.filter=function(n,t){return(of(n)?i:jt)(n,ye(t,3))},An.flatMap=function(n,t){return wt(tu(n,t),1)},An.flatMapDeep=function(n,t){return wt(tu(n,t),$)},An.flatMapDepth=function(n,t,r){return r=r===T?1:Au(r),\nwt(tu(n,t),r)},An.flatten=Pe,An.flattenDeep=function(n){return(null==n?0:n.length)?wt(n,$):[]},An.flattenDepth=function(n,t){return null!=n&&n.length?(t=t===T?1:Au(t),wt(n,t)):[]},An.flip=function(n){return fe(n,512)},An.flow=Nf,An.flowRight=Pf,An.fromPairs=function(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e},An.functions=function(n){return null==n?[]:Et(n,zu(n))},An.functionsIn=function(n){return null==n?[]:Et(n,Wu(n))},An.groupBy=No,An.initial=function(n){\nreturn(null==n?0:n.length)?hr(n,0,-1):[]},An.intersection=Ao,An.intersectionBy=Eo,An.intersectionWith=ko,An.invert=mf,An.invertBy=Af,An.invokeMap=Po,An.iteratee=$u,An.keyBy=Zo,An.keys=zu,An.keysIn=Wu,An.map=tu,An.mapKeys=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,t(n,e,u),n)}),r},An.mapValues=function(n,t){var r={};return t=ye(t,3),mt(n,function(n,e,u){st(r,e,t(n,e,u))}),r},An.matches=function(n){return Ht(_t(n,1))},An.matchesProperty=function(n,t){return Jt(n,_t(t,1))},An.memoize=fu,\nAn.merge=kf,An.mergeWith=Sf,An.method=Zf,An.methodOf=qf,An.mixin=Fu,An.negate=cu,An.nthArg=function(n){return n=Au(n),fr(function(t){return Qt(t,n)})},An.omit=Of,An.omitBy=function(n,t){return Bu(n,cu(ye(t)))},An.once=function(n){return eu(2,n)},An.orderBy=function(n,t,r,e){return null==n?[]:(of(t)||(t=null==t?[]:[t]),r=e?T:r,of(r)||(r=null==r?[]:[r]),Xt(n,t,r))},An.over=Vf,An.overArgs=Qo,An.overEvery=Kf,An.overSome=Gf,An.partial=Xo,An.partialRight=nf,An.partition=qo,An.pick=If,An.pickBy=Bu,An.property=Pu,\nAn.propertyOf=function(n){return function(t){return null==n?T:kt(n,t)}},An.pull=So,An.pullAll=Ve,An.pullAllBy=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,ye(r,2)):n},An.pullAllWith=function(n,t,r){return n&&n.length&&t&&t.length?er(n,t,T,r):n},An.pullAt=Oo,An.range=Hf,An.rangeRight=Jf,An.rearg=tf,An.reject=function(n,t){return(of(n)?i:jt)(n,cu(ye(t,3)))},An.remove=function(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=ye(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),\nu.push(e))}return ur(n,u),r},An.rest=function(n,t){if(typeof n!=\"function\")throw new ni(\"Expected a function\");return t=t===T?t:Au(t),fr(n,t)},An.reverse=Ke,An.sampleSize=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:Au(t),(of(n)?et:ar)(n,t)},An.set=function(n,t,r){return null==n?n:lr(n,t,r)},An.setWith=function(n,t,r,e){return e=typeof e==\"function\"?e:T,null==n?n:lr(n,t,r,e)},An.shuffle=function(n){return(of(n)?ut:sr)(n)},An.slice=function(n,t,r){var e=null==n?0:n.length;return e?(r&&typeof r!=\"number\"&&Oe(n,t,r)?(t=0,\nr=e):(t=null==t?0:Au(t),r=r===T?e:Au(r)),hr(n,t,r)):[]},An.sortBy=Vo,An.sortedUniq=function(n){return n&&n.length?gr(n):[]},An.sortedUniqBy=function(n,t){return n&&n.length?gr(n,ye(t,2)):[]},An.split=function(n,t,r){return r&&typeof r!=\"number\"&&Oe(n,t,r)&&(t=r=T),r=r===T?4294967295:r>>>0,r?(n=Ou(n))&&(typeof t==\"string\"||null!=t&&!sf(t))&&(t=yr(t),!t&&Rn.test(n))?Or(M(n),0,r):n.split(t,r):[]},An.spread=function(t,r){if(typeof t!=\"function\")throw new ni(\"Expected a function\");return r=null==r?0:Li(Au(r),0),\nfr(function(e){var u=e[r];return e=Or(e,0,r),u&&a(e,u),n(t,this,e)})},An.tail=function(n){var t=null==n?0:n.length;return t?hr(n,1,t):[]},An.take=function(n,t,r){return n&&n.length?(t=r||t===T?1:Au(t),hr(n,0,0>t?0:t)):[]},An.takeRight=function(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===T?1:Au(t),t=e-t,hr(n,0>t?0:t,e)):[]},An.takeRightWhile=function(n,t){return n&&n.length?jr(n,ye(t,3),false,true):[]},An.takeWhile=function(n,t){return n&&n.length?jr(n,ye(t,3)):[]},An.tap=function(n,t){return t(n),\nn},An.throttle=function(n,t,r){var e=true,u=true;if(typeof n!=\"function\")throw new ni(\"Expected a function\");return gu(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),ou(n,t,{leading:e,maxWait:t,trailing:u})},An.thru=Ye,An.toArray=wu,An.toPairs=Rf,An.toPairsIn=zf,An.toPath=function(n){return of(n)?c(n,De):ju(n)?[n]:Ur(xo(Ou(n)))},An.toPlainObject=Su,An.transform=function(n,t,e){var u=of(n),i=u||cf(n)||pf(n);if(t=ye(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:gu(n)&&pu(o)?ro(gi(n)):{};\n}return(i?r:mt)(n,function(n,r,u){return t(e,n,r,u)}),e},An.unary=function(n){return ru(n,1)},An.union=Io,An.unionBy=Ro,An.unionWith=zo,An.uniq=function(n){return n&&n.length?br(n):[]},An.uniqBy=function(n,t){return n&&n.length?br(n,ye(t,2)):[]},An.uniqWith=function(n,t){return t=typeof t==\"function\"?t:T,n&&n.length?br(n,T,t):[]},An.unset=function(n,t){return null==n||xr(n,t)},An.unzip=Ge,An.unzipWith=He,An.update=function(n,t,r){return null==n?n:lr(n,t,kr(r)(kt(n,t)),void 0)},An.updateWith=function(n,t,r,e){\nreturn e=typeof e==\"function\"?e:T,null!=n&&(n=lr(n,t,kr(r)(kt(n,t)),e)),n},An.values=Lu,An.valuesIn=function(n){return null==n?[]:S(n,Wu(n))},An.without=Wo,An.words=Du,An.wrap=function(n,t){return Xo(kr(t),n)},An.xor=Bo,An.xorBy=Lo,An.xorWith=Uo,An.zip=Co,An.zipObject=function(n,t){return Ar(n||[],t||[],ot)},An.zipObjectDeep=function(n,t){return Ar(n||[],t||[],lr)},An.zipWith=Do,An.entries=Rf,An.entriesIn=zf,An.extend=df,An.extendWith=yf,Fu(An,An),An.add=Yf,An.attempt=$f,An.camelCase=Wf,An.capitalize=Uu,\nAn.ceil=Qf,An.clamp=function(n,t,r){return r===T&&(r=t,t=T),r!==T&&(r=ku(r),r=r===r?r:0),t!==T&&(t=ku(t),t=t===t?t:0),pt(ku(n),t,r)},An.clone=function(n){return _t(n,4)},An.cloneDeep=function(n){return _t(n,5)},An.cloneDeepWith=function(n,t){return t=typeof t==\"function\"?t:T,_t(n,5,t)},An.cloneWith=function(n,t){return t=typeof t==\"function\"?t:T,_t(n,4,t)},An.conformsTo=function(n,t){return null==t||gt(n,t,zu(t))},An.deburr=Cu,An.defaultTo=function(n,t){return null==n||n!==n?t:n},An.divide=Xf,An.endsWith=function(n,t,r){\nn=Ou(n),t=yr(t);var e=n.length,e=r=r===T?e:pt(Au(r),0,e);return r-=t.length,0<=r&&n.slice(r,e)==t},An.eq=au,An.escape=function(n){return(n=Ou(n))&&H.test(n)?n.replace(K,nt):n},An.escapeRegExp=function(n){return(n=Ou(n))&&en.test(n)?n.replace(rn,\"\\\\$&\"):n},An.every=function(n,t,r){var e=of(n)?u:bt;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.find=$o,An.findIndex=Fe,An.findKey=function(n,t){return p(n,ye(t,3),mt)},An.findLast=Fo,An.findLastIndex=Ne,An.findLastKey=function(n,t){return p(n,ye(t,3),At);\n},An.floor=nc,An.forEach=Xe,An.forEachRight=nu,An.forIn=function(n,t){return null==n?n:io(n,ye(t,3),Wu)},An.forInRight=function(n,t){return null==n?n:oo(n,ye(t,3),Wu)},An.forOwn=function(n,t){return n&&mt(n,ye(t,3))},An.forOwnRight=function(n,t){return n&&At(n,ye(t,3))},An.get=Iu,An.gt=rf,An.gte=ef,An.has=function(n,t){return null!=n&&we(n,t,Rt)},An.hasIn=Ru,An.head=Ze,An.identity=Tu,An.includes=function(n,t,r,e){return n=lu(n)?n:Lu(n),r=r&&!e?Au(r):0,e=n.length,0>r&&(r=Li(e+r,0)),xu(n)?r<=e&&-1<n.indexOf(t,r):!!e&&-1<v(n,t,r);\n},An.indexOf=function(n,t,r){var e=null==n?0:n.length;return e?(r=null==r?0:Au(r),0>r&&(r=Li(e+r,0)),v(n,t,r)):-1},An.inRange=function(n,t,r){return t=mu(t),r===T?(r=t,t=0):r=mu(r),n=ku(n),n>=Ui(t,r)&&n<Li(t,r)},An.invoke=Ef,An.isArguments=uf,An.isArray=of,An.isArrayBuffer=ff,An.isArrayLike=lu,An.isArrayLikeObject=su,An.isBoolean=function(n){return true===n||false===n||du(n)&&\"[object Boolean]\"==Ot(n)},An.isBuffer=cf,An.isDate=af,An.isElement=function(n){return du(n)&&1===n.nodeType&&!bu(n)},An.isEmpty=function(n){\nif(null==n)return true;if(lu(n)&&(of(n)||typeof n==\"string\"||typeof n.splice==\"function\"||cf(n)||pf(n)||uf(n)))return!n.length;var t=_o(n);if(\"[object Map]\"==t||\"[object Set]\"==t)return!n.size;if(ze(n))return!Vt(n).length;for(var r in n)if(ii.call(n,r))return false;return true},An.isEqual=function(n,t){return Mt(n,t)},An.isEqualWith=function(n,t,r){var e=(r=typeof r==\"function\"?r:T)?r(n,t):T;return e===T?Mt(n,t,T,r):!!e},An.isError=hu,An.isFinite=function(n){return typeof n==\"number\"&&zi(n)},An.isFunction=pu,\nAn.isInteger=_u,An.isLength=vu,An.isMap=lf,An.isMatch=function(n,t){return n===t||$t(n,t,xe(t))},An.isMatchWith=function(n,t,r){return r=typeof r==\"function\"?r:T,$t(n,t,xe(t),r)},An.isNaN=function(n){return yu(n)&&n!=+n},An.isNative=function(n){if(vo(n))throw new Gu(\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\");return Ft(n)},An.isNil=function(n){return null==n},An.isNull=function(n){return null===n},An.isNumber=yu,An.isObject=gu,An.isObjectLike=du,An.isPlainObject=bu,An.isRegExp=sf,\nAn.isSafeInteger=function(n){return _u(n)&&-9007199254740991<=n&&9007199254740991>=n},An.isSet=hf,An.isString=xu,An.isSymbol=ju,An.isTypedArray=pf,An.isUndefined=function(n){return n===T},An.isWeakMap=function(n){return du(n)&&\"[object WeakMap]\"==_o(n)},An.isWeakSet=function(n){return du(n)&&\"[object WeakSet]\"==Ot(n)},An.join=function(n,t){return null==n?\"\":Wi.call(n,t)},An.kebabCase=Bf,An.last=qe,An.lastIndexOf=function(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;if(r!==T&&(u=Au(r),u=0>u?Li(e+u,0):Ui(u,e-1)),\nt===t){for(r=u+1;r--&&n[r]!==t;);n=r}else n=_(n,d,u,true);return n},An.lowerCase=Lf,An.lowerFirst=Uf,An.lt=_f,An.lte=vf,An.max=function(n){return n&&n.length?xt(n,Tu,It):T},An.maxBy=function(n,t){return n&&n.length?xt(n,ye(t,2),It):T},An.mean=function(n){return y(n,Tu)},An.meanBy=function(n,t){return y(n,ye(t,2))},An.min=function(n){return n&&n.length?xt(n,Tu,Kt):T},An.minBy=function(n,t){return n&&n.length?xt(n,ye(t,2),Kt):T},An.stubArray=Zu,An.stubFalse=qu,An.stubObject=function(){return{}},An.stubString=function(){\nreturn\"\"},An.stubTrue=function(){return true},An.multiply=tc,An.nth=function(n,t){return n&&n.length?Qt(n,Au(t)):T},An.noConflict=function(){return $n._===this&&($n._=li),this},An.noop=Nu,An.now=Ko,An.pad=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return!t||e>=t?n:(t=(t-e)/2,ne(Oi(t),r)+n+ne(Si(t),r))},An.padEnd=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return t&&e<t?n+ne(t-e,r):n},An.padStart=function(n,t,r){n=Ou(n);var e=(t=Au(t))?D(n):0;return t&&e<t?ne(t-e,r)+n:n},An.parseInt=function(n,t,r){\nreturn r||null==t?t=0:t&&(t=+t),Di(Ou(n).replace(on,\"\"),t||0)},An.random=function(n,t,r){if(r&&typeof r!=\"boolean\"&&Oe(n,t,r)&&(t=r=T),r===T&&(typeof t==\"boolean\"?(r=t,t=T):typeof n==\"boolean\"&&(r=n,n=T)),n===T&&t===T?(n=0,t=1):(n=mu(n),t===T?(t=n,n=0):t=mu(t)),n>t){var e=n;n=t,t=e}return r||n%1||t%1?(r=Mi(),Ui(n+r*(t-n+Cn(\"1e-\"+((r+\"\").length-1))),t)):ir(n,t)},An.reduce=function(n,t,r){var e=of(n)?l:j,u=3>arguments.length;return e(n,ye(t,4),r,u,eo)},An.reduceRight=function(n,t,r){var e=of(n)?s:j,u=3>arguments.length;\nreturn e(n,ye(t,4),r,u,uo)},An.repeat=function(n,t,r){return t=(r?Oe(n,t,r):t===T)?1:Au(t),or(Ou(n),t)},An.replace=function(){var n=arguments,t=Ou(n[0]);return 3>n.length?t:t.replace(n[1],n[2])},An.result=function(n,t,r){t=Sr(t,n);var e=-1,u=t.length;for(u||(u=1,n=T);++e<u;){var i=null==n?T:n[De(t[e])];i===T&&(e=u,i=r),n=pu(i)?i.call(n):i}return n},An.round=rc,An.runInContext=x,An.sample=function(n){return(of(n)?Qn:cr)(n)},An.size=function(n){if(null==n)return 0;if(lu(n))return xu(n)?D(n):n.length;\nvar t=_o(n);return\"[object Map]\"==t||\"[object Set]\"==t?n.size:Vt(n).length},An.snakeCase=Cf,An.some=function(n,t,r){var e=of(n)?h:pr;return r&&Oe(n,t,r)&&(t=T),e(n,ye(t,3))},An.sortedIndex=function(n,t){return _r(n,t)},An.sortedIndexBy=function(n,t,r){return vr(n,t,ye(r,2))},An.sortedIndexOf=function(n,t){var r=null==n?0:n.length;if(r){var e=_r(n,t);if(e<r&&au(n[e],t))return e}return-1},An.sortedLastIndex=function(n,t){return _r(n,t,true)},An.sortedLastIndexBy=function(n,t,r){return vr(n,t,ye(r,2),true);\n},An.sortedLastIndexOf=function(n,t){if(null==n?0:n.length){var r=_r(n,t,true)-1;if(au(n[r],t))return r}return-1},An.startCase=Df,An.startsWith=function(n,t,r){return n=Ou(n),r=null==r?0:pt(Au(r),0,n.length),t=yr(t),n.slice(r,r+t.length)==t},An.subtract=ec,An.sum=function(n){return n&&n.length?m(n,Tu):0},An.sumBy=function(n,t){return n&&n.length?m(n,ye(t,2)):0},An.template=function(n,t,r){var e=An.templateSettings;r&&Oe(n,t,r)&&(t=T),n=Ou(n),t=yf({},t,e,ce),r=yf({},t.imports,e.imports,ce);var u,i,o=zu(r),f=S(r,o),c=0;\nr=t.interpolate||jn;var a=\"__p+='\";r=Qu((t.escape||jn).source+\"|\"+r.source+\"|\"+(r===Q?pn:jn).source+\"|\"+(t.evaluate||jn).source+\"|$\",\"g\");var l=\"sourceURL\"in t?\"//# sourceURL=\"+t.sourceURL+\"\\n\":\"\";if(n.replace(r,function(t,r,e,o,f,l){return e||(e=o),a+=n.slice(c,l).replace(wn,z),r&&(u=true,a+=\"'+__e(\"+r+\")+'\"),f&&(i=true,a+=\"';\"+f+\";\\n__p+='\"),e&&(a+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),c=l+t.length,t}),a+=\"';\",(t=t.variable)||(a=\"with(obj){\"+a+\"}\"),a=(i?a.replace(P,\"\"):a).replace(Z,\"$1\").replace(q,\"$1;\"),\na=\"function(\"+(t||\"obj\")+\"){\"+(t?\"\":\"obj||(obj={});\")+\"var __t,__p=''\"+(u?\",__e=_.escape\":\"\")+(i?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+a+\"return __p}\",t=$f(function(){return Hu(o,l+\"return \"+a).apply(T,f)}),t.source=a,hu(t))throw t;return t},An.times=function(n,t){if(n=Au(n),1>n||9007199254740991<n)return[];var r=4294967295,e=Ui(n,4294967295);for(t=ye(t),n-=4294967295,e=A(e,t);++r<n;)t(r);return e},An.toFinite=mu,An.toInteger=Au,An.toLength=Eu,An.toLower=function(n){\nreturn Ou(n).toLowerCase()},An.toNumber=ku,An.toSafeInteger=function(n){return n?pt(Au(n),-9007199254740991,9007199254740991):0===n?n:0},An.toString=Ou,An.toUpper=function(n){return Ou(n).toUpperCase()},An.trim=function(n,t,r){return(n=Ou(n))&&(r||t===T)?n.replace(un,\"\"):n&&(t=yr(t))?(n=M(n),r=M(t),t=I(n,r),r=R(n,r)+1,Or(n,t,r).join(\"\")):n},An.trimEnd=function(n,t,r){return(n=Ou(n))&&(r||t===T)?n.replace(fn,\"\"):n&&(t=yr(t))?(n=M(n),t=R(n,M(t))+1,Or(n,0,t).join(\"\")):n},An.trimStart=function(n,t,r){\nreturn(n=Ou(n))&&(r||t===T)?n.replace(on,\"\"):n&&(t=yr(t))?(n=M(n),t=I(n,M(t)),Or(n,t).join(\"\")):n},An.truncate=function(n,t){var r=30,e=\"...\";if(gu(t))var u=\"separator\"in t?t.separator:u,r=\"length\"in t?Au(t.length):r,e=\"omission\"in t?yr(t.omission):e;n=Ou(n);var i=n.length;if(Rn.test(n))var o=M(n),i=o.length;if(r>=i)return n;if(i=r-D(e),1>i)return e;if(r=o?Or(o,0,i).join(\"\"):n.slice(0,i),u===T)return r+e;if(o&&(i+=r.length-i),sf(u)){if(n.slice(i).search(u)){var f=r;for(u.global||(u=Qu(u.source,Ou(_n.exec(u))+\"g\")),\nu.lastIndex=0;o=u.exec(f);)var c=o.index;r=r.slice(0,c===T?i:c)}}else n.indexOf(yr(u),i)!=i&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},An.unescape=function(n){return(n=Ou(n))&&G.test(n)?n.replace(V,tt):n},An.uniqueId=function(n){var t=++oi;return Ou(n)+t},An.upperCase=Mf,An.upperFirst=Tf,An.each=Xe,An.eachRight=nu,An.first=Ze,Fu(An,function(){var n={};return mt(An,function(t,r){ii.call(An.prototype,r)||(n[r]=t)}),n}(),{chain:false}),An.VERSION=\"4.17.10\",r(\"bind bindKey curry curryRight partial partialRight\".split(\" \"),function(n){\nAn[n].placeholder=An}),r([\"drop\",\"take\"],function(n,t){Un.prototype[n]=function(r){r=r===T?1:Li(Au(r),0);var e=this.__filtered__&&!t?new Un(this):this.clone();return e.__filtered__?e.__takeCount__=Ui(r,e.__takeCount__):e.__views__.push({size:Ui(r,4294967295),type:n+(0>e.__dir__?\"Right\":\"\")}),e},Un.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=1==r||3==r;Un.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({\niteratee:ye(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){var r=\"take\"+(t?\"Right\":\"\");Un.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Un.prototype[n]=function(){return this.__filtered__?new Un(this):this[r](1)}}),Un.prototype.compact=function(){return this.filter(Tu)},Un.prototype.find=function(n){return this.filter(n).head()},Un.prototype.findLast=function(n){return this.reverse().find(n);\n},Un.prototype.invokeMap=fr(function(n,t){return typeof n==\"function\"?new Un(this):this.map(function(r){return Lt(r,n,t)})}),Un.prototype.reject=function(n){return this.filter(cu(ye(n)))},Un.prototype.slice=function(n,t){n=Au(n);var r=this;return r.__filtered__&&(0<n||0>t)?new Un(r):(0>n?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==T&&(t=Au(t),r=0>t?r.dropRight(-t):r.take(t-n)),r)},Un.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Un.prototype.toArray=function(){return this.take(4294967295);\n},mt(Un.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=An[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);u&&(An.prototype[t]=function(){function t(n){return n=u.apply(An,a([n],f)),e&&h?n[0]:n}var o=this.__wrapped__,f=e?[1]:arguments,c=o instanceof Un,l=f[0],s=c||of(o);s&&r&&typeof l==\"function\"&&1!=l.length&&(c=s=false);var h=this.__chain__,p=!!this.__actions__.length,l=i&&!h,c=c&&!p;return!i&&s?(o=c?o:new Un(this),o=n.apply(o,f),o.__actions__.push({\nfunc:Ye,args:[t],thisArg:T}),new On(o,h)):l&&c?n.apply(this,f):(o=this.thru(t),l?e?o.value()[0]:o.value():o)})}),r(\"pop push shift sort splice unshift\".split(\" \"),function(n){var t=ti[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);An.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(of(u)?u:[],n)}return this[r](function(r){return t.apply(of(r)?r:[],n)})}}),mt(Un.prototype,function(n,t){var r=An[t];if(r){var e=r.name+\"\";\n(Ki[e]||(Ki[e]=[])).push({name:t,func:r})}}),Ki[Jr(T,2).name]=[{name:\"wrapper\",func:T}],Un.prototype.clone=function(){var n=new Un(this.__wrapped__);return n.__actions__=Ur(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Ur(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Ur(this.__views__),n},Un.prototype.reverse=function(){if(this.__filtered__){var n=new Un(this);n.__dir__=-1,n.__filtered__=true}else n=this.clone(),n.__dir__*=-1;return n;\n},Un.prototype.value=function(){var n,t=this.__wrapped__.value(),r=this.__dir__,e=of(t),u=0>r,i=e?t.length:0;n=i;for(var o=this.__views__,f=0,c=-1,a=o.length;++c<a;){var l=o[c],s=l.size;switch(l.type){case\"drop\":f+=s;break;case\"dropRight\":n-=s;break;case\"take\":n=Ui(n,f+s);break;case\"takeRight\":f=Li(f,n-s)}}if(n={start:f,end:n},o=n.start,f=n.end,n=f-o,o=u?f:o-1,f=this.__iteratees__,c=f.length,a=0,l=Ui(n,this.__takeCount__),!e||!u&&i==n&&l==n)return wr(t,this.__actions__);e=[];n:for(;n--&&a<l;){for(o+=r,\nu=-1,i=t[o];++u<c;){var h=f[u],s=h.type,h=(0,h.iteratee)(i);if(2==s)i=h;else if(!h){if(1==s)continue n;break n}}e[a++]=i}return e},An.prototype.at=Mo,An.prototype.chain=function(){return Je(this)},An.prototype.commit=function(){return new On(this.value(),this.__chain__)},An.prototype.next=function(){this.__values__===T&&(this.__values__=wu(this.value()));var n=this.__index__>=this.__values__.length;return{done:n,value:n?T:this.__values__[this.__index__++]}},An.prototype.plant=function(n){for(var t,r=this;r instanceof En;){\nvar e=$e(r);e.__index__=0,e.__values__=T,t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},An.prototype.reverse=function(){var n=this.__wrapped__;return n instanceof Un?(this.__actions__.length&&(n=new Un(this)),n=n.reverse(),n.__actions__.push({func:Ye,args:[Ke],thisArg:T}),new On(n,this.__chain__)):this.thru(Ke)},An.prototype.toJSON=An.prototype.valueOf=An.prototype.value=function(){return wr(this.__wrapped__,this.__actions__)},An.prototype.first=An.prototype.head,ji&&(An.prototype[ji]=Qe),\nAn}();typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?($n._=rt, define(function(){return rt})):Nn?((Nn.exports=rt)._=rt,Fn._=rt):$n._=rt}).call(this);\n","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;","/** @license React v16.3.2\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var ba=require(\"fbjs/lib/invariant\"),ea=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),A=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),fa=require(\"fbjs/lib/getActiveElement\"),ha=require(\"fbjs/lib/shallowEqual\"),ja=require(\"fbjs/lib/containsNode\"),ka=require(\"fbjs/lib/emptyObject\");\nfunction D(a){for(var b=arguments.length-1,c=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ea?void 0:D(\"227\");\nfunction ma(a,b,c,d,e,f,h,g,k){this._hasCaughtError=!1;this._caughtError=null;var v=Array.prototype.slice.call(arguments,3);try{b.apply(c,v)}catch(l){this._caughtError=l,this._hasCaughtError=!0}}\nvar E={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,h,g,k){ma.apply(E,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,h,g,k){E.invokeGuardedCallback.apply(this,arguments);if(E.hasCaughtError()){var v=E.clearCaughtError();E._hasRethrowError||(E._hasRethrowError=!0,E._rethrowError=v)}},rethrowCaughtError:function(){return na.apply(E,arguments)},hasCaughtError:function(){return E._hasCaughtError},clearCaughtError:function(){if(E._hasCaughtError){var a=\nE._caughtError;E._caughtError=null;E._hasCaughtError=!1;return a}D(\"198\")}};function na(){if(E._hasRethrowError){var a=E._rethrowError;E._rethrowError=null;E._hasRethrowError=!1;throw a;}}var oa=null,pa={};\nfunction qa(){if(oa)for(var a in pa){var b=pa[a],c=oa.indexOf(a);-1<c?void 0:D(\"96\",a);if(!ra[c]){b.extractEvents?void 0:D(\"97\",a);ra[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],h=b,g=d;sa.hasOwnProperty(g)?D(\"99\",g):void 0;sa[g]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ta(k[e],h,g);e=!0}else f.registrationName?(ta(f.registrationName,h,g),e=!0):e=!1;e?void 0:D(\"98\",d,a)}}}}\nfunction ta(a,b,c){ua[a]?D(\"100\",a):void 0;ua[a]=b;va[a]=b.eventTypes[c].dependencies}var ra=[],sa={},ua={},va={};function wa(a){oa?D(\"101\"):void 0;oa=Array.prototype.slice.call(a);qa()}function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];pa.hasOwnProperty(c)&&pa[c]===d||(pa[c]?D(\"102\",c):void 0,pa[c]=d,b=!0)}b&&qa()}\nvar Ca=Object.freeze({plugins:ra,eventNameDispatchConfigs:sa,registrationNameModules:ua,registrationNameDependencies:va,possibleRegistrationNames:null,injectEventPluginOrder:wa,injectEventPluginsByName:xa}),Da=null,Ea=null,Fa=null;function Ga(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Fa(d);E.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Ha(a,b){null==b?D(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ia(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ja=null;\nfunction Ka(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ga(a,b,c[e],d[e]);else c&&Ga(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function La(a){return Ka(a,!0)}function Ma(a){return Ka(a,!1)}var Na={injectEventPluginOrder:wa,injectEventPluginsByName:xa};\nfunction Oa(a,b){var c=a.stateNode;if(!c)return null;var d=Da(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?D(\"231\",b,typeof c):void 0;\nreturn c}function Pa(a,b){null!==a&&(Ja=Ha(Ja,a));a=Ja;Ja=null;a&&(b?Ia(a,La):Ia(a,Ma),Ja?D(\"95\"):void 0,E.rethrowCaughtError())}function Qa(a,b,c,d){for(var e=null,f=0;f<ra.length;f++){var h=ra[f];h&&(h=h.extractEvents(a,b,c,d))&&(e=Ha(e,h))}Pa(e,!1)}var Ra=Object.freeze({injection:Na,getListener:Oa,runEventsInBatch:Pa,runExtractedEventsInBatch:Qa}),Sa=Math.random().toString(36).slice(2),F=\"__reactInternalInstance$\"+Sa,Ta=\"__reactEventHandlers$\"+Sa;\nfunction Ua(a){if(a[F])return a[F];for(;!a[F];)if(a.parentNode)a=a.parentNode;else return null;a=a[F];return 5===a.tag||6===a.tag?a:null}function Va(a){if(5===a.tag||6===a.tag)return a.stateNode;D(\"33\")}function Xa(a){return a[Ta]||null}var bb=Object.freeze({precacheFiberNode:function(a,b){b[F]=a},getClosestInstanceFromNode:Ua,getInstanceFromNode:function(a){a=a[F];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Va,getFiberCurrentPropsFromNode:Xa,updateFiberProps:function(a,b){a[Ta]=b}});\nfunction L(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function cb(a,b,c){for(var d=[];a;)d.push(a),a=L(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function db(a,b,c){if(b=Oa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a)}function eb(a){a&&a.dispatchConfig.phasedRegistrationNames&&cb(a._targetInst,db,a)}\nfunction fb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?L(b):null;cb(b,db,a)}}function gb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Oa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Ha(c._dispatchListeners,b),c._dispatchInstances=Ha(c._dispatchInstances,a))}function hb(a){a&&a.dispatchConfig.registrationName&&gb(a._targetInst,null,a)}function ib(a){Ia(a,eb)}\nfunction jb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,h=0,g=e;g;g=L(g))h++;g=0;for(var k=f;k;k=L(k))g++;for(;0<h-g;)e=L(e),h--;for(;0<g-h;)f=L(f),g--;for(;h--;){if(e===f||e===f.alternate)break a;e=L(e);f=L(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){h=c.alternate;if(null!==h&&h===f)break;e.push(c);c=L(c)}for(c=[];d&&d!==f;){h=d.alternate;if(null!==h&&h===f)break;c.push(d);d=L(d)}for(d=0;d<e.length;d++)gb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)gb(c[a],\"captured\",b)}\nvar kb=Object.freeze({accumulateTwoPhaseDispatches:ib,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ia(a,fb)},accumulateEnterLeaveDispatches:jb,accumulateDirectDispatches:function(a){Ia(a,hb)}}),lb=null;function mb(){!lb&&m.canUseDOM&&(lb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return lb}var M={_root:null,_startText:null,_fallbackText:null};\nfunction nb(){if(M._fallbackText)return M._fallbackText;var a,b=M._startText,c=b.length,d,e=ob(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var h=c-a;for(d=1;d<=h&&b[c-d]===e[f-d];d++);M._fallbackText=e.slice(a,1<d?1-d:void 0);return M._fallbackText}function ob(){return\"value\"in M._root?M._root.value:M._root[mb()]}\nvar pb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),qb={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction N(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nA(N.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<pb.length;a++)this[pb[a]]=null}});N.Interface=qb;N.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;A(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=A({},d.Interface,a);c.extend=d.extend;rb(c);return c};rb(N);\nfunction sb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function tb(a){a instanceof this?void 0:D(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function rb(a){a.eventPool=[];a.getPooled=sb;a.release=tb}var ub=N.extend({data:null}),vb=N.extend({data:null}),wb=[9,13,27,32],xb=m.canUseDOM&&\"CompositionEvent\"in window,yb=null;m.canUseDOM&&\"documentMode\"in document&&(yb=document.documentMode);\nvar zb=m.canUseDOM&&\"TextEvent\"in window&&!yb,Ab=m.canUseDOM&&(!xb||yb&&8<yb&&11>=yb),Bb=String.fromCharCode(32),Kb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},Lb=!1;\nfunction Mb(a,b){switch(a){case \"topKeyUp\":return-1!==wb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function Nb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Ob=!1;function Pb(a,b){switch(a){case \"topCompositionEnd\":return Nb(b);case \"topKeyPress\":if(32!==b.which)return null;Lb=!0;return Bb;case \"topTextInput\":return a=b.data,a===Bb&&Lb?null:a;default:return null}}\nfunction Qb(a,b){if(Ob)return\"topCompositionEnd\"===a||!xb&&Mb(a,b)?(a=nb(),M._root=null,M._startText=null,M._fallbackText=null,Ob=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return Ab?null:b.data;default:return null}}\nvar Rb={eventTypes:Kb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(xb)b:{switch(a){case \"topCompositionStart\":e=Kb.compositionStart;break b;case \"topCompositionEnd\":e=Kb.compositionEnd;break b;case \"topCompositionUpdate\":e=Kb.compositionUpdate;break b}e=void 0}else Ob?Mb(a,c)&&(e=Kb.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(e=Kb.compositionStart);e?(Ab&&(Ob||e!==Kb.compositionStart?e===Kb.compositionEnd&&Ob&&(f=nb()):(M._root=d,M._startText=ob(),Ob=!0)),e=ub.getPooled(e,\nb,c,d),f?e.data=f:(f=Nb(c),null!==f&&(e.data=f)),ib(e),f=e):f=null;(a=zb?Pb(a,c):Qb(a,c))?(b=vb.getPooled(Kb.beforeInput,b,c,d),b.data=a,ib(b)):b=null;return null===f?b:null===b?f:[f,b]}},Sb=null,Tb={injectFiberControlledHostComponent:function(a){Sb=a}},Ub=null,Vb=null;function Wb(a){if(a=Ea(a)){Sb&&\"function\"===typeof Sb.restoreControlledState?void 0:D(\"194\");var b=Da(a.stateNode);Sb.restoreControlledState(a.stateNode,a.type,b)}}function Xb(a){Ub?Vb?Vb.push(a):Vb=[a]:Ub=a}\nfunction Yb(){return null!==Ub||null!==Vb}function Zb(){if(Ub){var a=Ub,b=Vb;Vb=Ub=null;Wb(a);if(b)for(a=0;a<b.length;a++)Wb(b[a])}}var $b=Object.freeze({injection:Tb,enqueueStateRestore:Xb,needsStateRestore:Yb,restoreStateIfNeeded:Zb});function ac(a,b){return a(b)}function bc(a,b,c){return a(b,c)}function cc(){}var dc=!1;function ec(a,b){if(dc)return a(b);dc=!0;try{return ac(a,b)}finally{dc=!1,Yb()&&(cc(),Zb())}}\nvar fc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!fc[a.type]:\"textarea\"===b?!0:!1}function hc(a){a=a.target||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction ic(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function jc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction kc(a){var b=jc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction lc(a){a._valueTracker||(a._valueTracker=kc(a))}function mc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=jc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar nc=ea.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,O=\"function\"===typeof Symbol&&Symbol[\"for\"],oc=O?Symbol[\"for\"](\"react.element\"):60103,pc=O?Symbol[\"for\"](\"react.call\"):60104,qc=O?Symbol[\"for\"](\"react.return\"):60105,rc=O?Symbol[\"for\"](\"react.portal\"):60106,sc=O?Symbol[\"for\"](\"react.fragment\"):60107,tc=O?Symbol[\"for\"](\"react.strict_mode\"):60108,uc=O?Symbol[\"for\"](\"react.provider\"):60109,vc=O?Symbol[\"for\"](\"react.context\"):60110,wc=O?Symbol[\"for\"](\"react.async_mode\"):60111,\nxc=O?Symbol[\"for\"](\"react.forward_ref\"):60112,yc=\"function\"===typeof Symbol&&Symbol.iterator;function zc(a){if(null===a||\"undefined\"===typeof a)return null;a=yc&&a[yc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Ac(a){a=a.type;if(\"function\"===typeof a)return a.displayName||a.name;if(\"string\"===typeof a)return a;switch(a){case sc:return\"ReactFragment\";case rc:return\"ReactPortal\";case pc:return\"ReactCall\";case qc:return\"ReactReturn\"}if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case xc:return a=a.render.displayName||a.render.name||\"\",\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\"}return null}\nfunction Bc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=Ac(a);var f=null;c&&(f=Ac(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a[\"return\"]}while(a);return b}\nvar Cc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Dc={},Ec={};function Fc(a){if(Ec.hasOwnProperty(a))return!0;if(Dc.hasOwnProperty(a))return!1;if(Cc.test(a))return Ec[a]=!0;Dc[a]=!0;return!1}\nfunction Gc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Hc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Gc(a,b,c,d))return!0;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction U(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var V={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){V[a]=new U(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];V[b]=new U(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){V[a]=new U(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){V[a]=new U(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){V[a]=new U(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){V[a]=new U(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){V[a]=new U(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){V[a]=new U(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){V[a]=new U(a,5,!1,a.toLowerCase(),null)});var Sc=/[\\-:]([a-z])/g;function Tc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Sc,\nTc);V[b]=new U(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Sc,Tc);V[b]=new U(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});V.tabIndex=new U(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Uc(a,b,c,d){var e=V.hasOwnProperty(b)?V[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Hc(b,c,e,d)&&(c=null),d||null===e?Fc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Vc(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Xc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Yc(a,b){b=b.checked;null!=b&&Uc(a,\"checked\",b,!1)}\nfunction Zc(a,b){Yc(a,b);var c=Xc(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?$c(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&$c(a,b.type,Xc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction ad(a,b){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\"))\"\"===a.value&&(a.value=\"\"+a._wrapperState.initialValue),a.defaultValue=\"\"+a._wrapperState.initialValue;b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function $c(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Xc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var bd={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};function cd(a,b,c){a=N.getPooled(bd.change,a,b,c);a.type=\"change\";Xb(c);ib(a);return a}var dd=null,ed=null;function fd(a){Pa(a,!1)}\nfunction gd(a){var b=Va(a);if(mc(b))return a}function hd(a,b){if(\"topChange\"===a)return b}var id=!1;m.canUseDOM&&(id=ic(\"input\")&&(!document.documentMode||9<document.documentMode));function jd(){dd&&(dd.detachEvent(\"onpropertychange\",kd),ed=dd=null)}function kd(a){\"value\"===a.propertyName&&gd(ed)&&(a=cd(ed,a,hc(a)),ec(fd,a))}function ld(a,b,c){\"topFocus\"===a?(jd(),dd=b,ed=c,dd.attachEvent(\"onpropertychange\",kd)):\"topBlur\"===a&&jd()}\nfunction md(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return gd(ed)}function nd(a,b){if(\"topClick\"===a)return gd(b)}function od(a,b){if(\"topInput\"===a||\"topChange\"===a)return gd(b)}\nvar pd={eventTypes:bd,_isInputEventSupported:id,extractEvents:function(a,b,c,d){var e=b?Va(b):window,f=void 0,h=void 0,g=e.nodeName&&e.nodeName.toLowerCase();\"select\"===g||\"input\"===g&&\"file\"===e.type?f=hd:gc(e)?id?f=od:(f=md,h=ld):(g=e.nodeName)&&\"input\"===g.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=nd);if(f&&(f=f(a,b)))return cd(f,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&$c(e,\"number\",e.value)}},qd=N.extend({view:null,\ndetail:null}),rd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function sd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=rd[a])?!!b[a]:!1}function td(){return sd}\nvar ud=qd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:td,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),vd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},wd={eventTypes:vd,extractEvents:function(a,\nb,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?Ua(b):null):a=null;if(a===b)return null;var f=null==a?e:Va(a);e=null==b?e:Va(b);var h=ud.getPooled(vd.mouseLeave,a,c,d);h.type=\"mouseleave\";h.target=f;h.relatedTarget=e;c=ud.getPooled(vd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=\nf;jb(h,c,a,b);return[h,c]}};function xd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function yd(a){return(a=a._reactInternalFiber)?2===xd(a):!1}function zd(a){2!==xd(a)?D(\"188\"):void 0}\nfunction Ad(a){var b=a.alternate;if(!b)return b=xd(a),3===b?D(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var h=e.child;h;){if(h===c)return zd(e),a;if(h===d)return zd(e),b;h=h.sibling}D(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{h=!1;for(var g=e.child;g;){if(g===c){h=!0;c=e;d=f;break}if(g===d){h=!0;d=e;c=f;break}g=g.sibling}if(!h){for(g=f.child;g;){if(g===c){h=!0;c=f;d=e;break}if(g===d){h=!0;d=f;c=e;break}g=g.sibling}h?\nvoid 0:D(\"189\")}}c.alternate!==d?D(\"190\"):void 0}3!==c.tag?D(\"188\"):void 0;return c.stateNode.current===c?a:b}function Bd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction Cd(a){a=Ad(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var Dd=N.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ed=N.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Fd=qd.extend({relatedTarget:null});\nfunction Gd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar Hd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Id={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Jd=qd.extend({key:function(a){if(a.key){var b=Hd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Gd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Id[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:td,charCode:function(a){return\"keypress\"===\na.type?Gd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?Gd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Kd=ud.extend({dataTransfer:null}),Ld=qd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:td}),Md=N.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Nd=ud.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),Od={},Pd={};function Qd(a,b){var c=a[0].toUpperCase()+a.slice(1),d=\"on\"+c;c=\"top\"+c;b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Od[a]=b;Pd[c]=b}\n\"blur cancel click close contextMenu copy cut doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play rateChange reset seeked submit touchCancel touchEnd touchStart volumeChange\".split(\" \").forEach(function(a){Qd(a,!0)});\n\"abort animationEnd animationIteration animationStart canPlay canPlayThrough drag dragEnter dragExit dragLeave dragOver durationChange emptied encrypted ended error load loadedData loadedMetadata loadStart mouseMove mouseOut mouseOver playing progress scroll seeking stalled suspend timeUpdate toggle touchMove transitionEnd waiting wheel\".split(\" \").forEach(function(a){Qd(a,!1)});\nvar Rd={eventTypes:Od,isInteractiveTopLevelEventType:function(a){a=Pd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Pd[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Gd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Jd;break;case \"topBlur\":case \"topFocus\":a=Fd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=\nud;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=Kd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=Ld;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Dd;break;case \"topTransitionEnd\":a=Md;break;case \"topScroll\":a=qd;break;case \"topWheel\":a=Nd;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ed;break;default:a=\nN}b=a.getPooled(e,b,c,d);ib(b);return b}},Sd=Rd.isInteractiveTopLevelEventType,Td=[];function Ud(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Ua(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Qa(a.topLevelType,b,a.nativeEvent,hc(a.nativeEvent))}var Vd=!0;function Wd(a){Vd=!!a}\nfunction W(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!1)}function Zd(a,b,c){if(!c)return null;a=(Sd(a)?Xd:Yd).bind(null,a);c.addEventListener(b,a,!0)}function Xd(a,b){bc(Yd,a,b)}\nfunction Yd(a,b){if(Vd){var c=hc(b);c=Ua(c);null!==c&&\"number\"===typeof c.tag&&2!==xd(c)&&(c=null);if(Td.length){var d=Td.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{ec(Ud,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Td.length&&Td.push(a)}}}\nvar $d=Object.freeze({get _enabled(){return Vd},setEnabled:Wd,isEnabled:function(){return Vd},trapBubbledEvent:W,trapCapturedEvent:Zd,dispatchEvent:Yd});function ae(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar be={animationend:ae(\"Animation\",\"AnimationEnd\"),animationiteration:ae(\"Animation\",\"AnimationIteration\"),animationstart:ae(\"Animation\",\"AnimationStart\"),transitionend:ae(\"Transition\",\"TransitionEnd\")},ce={},de={};m.canUseDOM&&(de=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete be.animationend.animation,delete be.animationiteration.animation,delete be.animationstart.animation),\"TransitionEvent\"in window||delete be.transitionend.transition);\nfunction ee(a){if(ce[a])return ce[a];if(!be[a])return a;var b=be[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in de)return ce[a]=b[c];return a}\nvar fe={topAnimationEnd:ee(\"animationend\"),topAnimationIteration:ee(\"animationiteration\"),topAnimationStart:ee(\"animationstart\"),topBlur:\"blur\",topCancel:\"cancel\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",topCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",\ntopDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoad:\"load\",topLoadStart:\"loadstart\",topMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topScroll:\"scroll\",topSelectionChange:\"selectionchange\",topTextInput:\"textInput\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:ee(\"transitionend\"),topWheel:\"wheel\"},ge={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",\ntopStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\"},he={},ie=0,je=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function ke(a){Object.prototype.hasOwnProperty.call(a,je)||(a[je]=ie++,he[a[je]]={});return he[a[je]]}function le(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction me(a,b){var c=le(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=le(c)}}function ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar oe=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,pe={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},qe=null,re=null,se=null,te=!1;\nfunction ue(a,b){if(te||null==qe||qe!==fa())return null;var c=qe;\"selectionStart\"in c&&ne(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return se&&ha(se,c)?null:(se=c,a=N.getPooled(pe.select,re,a,b),a.type=\"select\",a.target=qe,ib(a),a)}\nvar ve={eventTypes:pe,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=ke(e);f=va.onSelect;for(var h=0;h<f.length;h++){var g=f[h];if(!e.hasOwnProperty(g)||!e[g]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Va(b):window;switch(a){case \"topFocus\":if(gc(e)||\"true\"===e.contentEditable)qe=e,re=b,se=null;break;case \"topBlur\":se=re=qe=null;break;case \"topMouseDown\":te=!0;break;case \"topContextMenu\":case \"topMouseUp\":return te=!1,ue(c,d);case \"topSelectionChange\":if(oe)break;\ncase \"topKeyDown\":case \"topKeyUp\":return ue(c,d)}return null}};Na.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));Da=bb.getFiberCurrentPropsFromNode;Ea=bb.getInstanceFromNode;Fa=bb.getNodeFromInstance;Na.injectEventPluginsByName({SimpleEventPlugin:Rd,EnterLeaveEventPlugin:wd,ChangeEventPlugin:pd,SelectEventPlugin:ve,BeforeInputEventPlugin:Rb});\nfunction xe(a,b,c,d){this.tag=a;this.key=c;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction ze(a,b,c){var d=a.alternate;null===d?(d=new xe(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Ae(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case sc:return Be(a.children,b,c,e);case wc:f=11;b|=3;break;case tc:f=11;b|=2;break;case pc:f=7;break;case qc:f=9;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case uc:f=13;break;case vc:f=12;break;case xc:f=14;break;default:if(\"number\"===typeof d.tag)return b=d,b.pendingProps=a,b.expirationTime=c,\nb;D(\"130\",null==d?d:typeof d,\"\")}else D(\"130\",null==d?d:typeof d,\"\")}b=new xe(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Be(a,b,c,d){a=new xe(10,a,d,b);a.expirationTime=c;return a}function Ce(a,b,c){a=new xe(6,a,null,b);a.expirationTime=c;return a}function De(a,b,c){b=new xe(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var Ee=null,Fe=null;\nfunction Ge(a){return function(b){try{return a(b)}catch(c){}}}function He(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ee=Ge(function(a){return b.onCommitFiberRoot(c,a)});Fe=Ge(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Ie(a){\"function\"===typeof Ee&&Ee(a)}function Je(a){\"function\"===typeof Fe&&Fe(a)}new Set;\nfunction Ke(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1,capturedValues:null}}function Le(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}var Me=void 0,Ne=void 0;\nfunction Oe(a){Me=Ne=null;var b=a.alternate,c=a.updateQueue;null===c&&(c=a.updateQueue=Ke(null));null!==b?(a=b.updateQueue,null===a&&(a=b.updateQueue=Ke(null))):a=null;Me=c;Ne=a!==c?a:null}function Pe(a,b){Oe(a);a=Me;var c=Ne;null===c?Le(a,b):null===a.last||null===c.last?(Le(a,b),Le(c,b)):(Le(a,b),c.last=b)}function Qe(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Re(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,capturedValues:c.capturedValues,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var h=!0,g=c.first,k=!1;null!==g;){var v=g.expirationTime;if(v>f){var l=c.expirationTime;if(0===l||l>v)c.expirationTime=v;k||(k=!0,c.baseState=a)}else{k||\n(c.first=g.next,null===c.first&&(c.last=null));if(g.isReplace)a=Qe(g,d,a,e),h=!0;else if(v=Qe(g,d,a,e))a=h?A({},a,v):A(a,v),h=!1;g.isForced&&(c.hasForceUpdate=!0);null!==g.callback&&(v=c.callbackList,null===v&&(v=c.callbackList=[]),v.push(g));null!==g.capturedValue&&(v=c.capturedValues,null===v?c.capturedValues=[g.capturedValue]:v.push(g.capturedValue))}g=g.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||null!==c.capturedValues||(b.updateQueue=null);k||(c.baseState=a);\nreturn a}function Se(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?D(\"191\",e):void 0;e.call(b)}}\nfunction Te(a,b,c,d,e){function f(a,b,c,d,e,f){if(null===b||null!==a.updateQueue&&a.updateQueue.hasForceUpdate)return!0;var n=a.stateNode;a=a.type;return\"function\"===typeof n.shouldComponentUpdate?n.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ha(b,c)||!ha(d,e):!0}function h(a,b){b.updater=r;a.stateNode=b;b._reactInternalFiber=a}function g(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&\nb.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&r.enqueueReplaceState(b,b.state,null)}function k(a,b,c,d){a=a.type;if(\"function\"===typeof a.getDerivedStateFromProps)return a.getDerivedStateFromProps.call(null,c,d)}var v=a.cacheContext,l=a.getMaskedContext,p=a.getUnmaskedContext,z=a.isContextConsumer,B=a.hasContextChanged,r={isMounted:yd,enqueueSetState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!1,isForced:!1,\ncapturedValue:null,next:null});b(a,f)},enqueueReplaceState:function(a,d,e){a=a._reactInternalFiber;e=void 0===e?null:e;var f=c(a);Pe(a,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,capturedValue:null,next:null});b(a,f)},enqueueForceUpdate:function(a,d){a=a._reactInternalFiber;d=void 0===d?null:d;var e=c(a);Pe(a,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,capturedValue:null,next:null});b(a,e)}};return{adoptClassInstance:h,callGetDerivedStateFromProps:k,\nconstructClassInstance:function(a,b){var c=a.type,d=p(a),e=z(a),f=e?l(a,d):ka;c=new c(b,f);var n=null!==c.state&&void 0!==c.state?c.state:null;h(a,c);a.memoizedState=n;b=k(a,c,b,n);null!==b&&void 0!==b&&(a.memoizedState=A({},a.memoizedState,b));e&&v(a,d,f);return c},mountClassInstance:function(a,b){var c=a.type,d=a.alternate,e=a.stateNode,f=a.pendingProps,n=p(a);e.props=f;e.state=a.memoizedState;e.refs=ka;e.context=l(a,n);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\n\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(c=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),c!==e.state&&r.enqueueReplaceState(e,e.state,null),c=a.updateQueue,null!==c&&(e.state=Re(d,a,c,e,f,b)));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)},resumeMountClassInstance:function(a,b){var c=a.type,n=a.stateNode;n.props=a.memoizedProps;n.state=\na.memoizedState;var h=a.memoizedProps,r=a.pendingProps,z=n.context,q=p(a);q=l(a,q);(c=\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof n.getSnapshotBeforeUpdate)||\"function\"!==typeof n.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof n.componentWillReceiveProps||(h!==r||z!==q)&&g(a,n,r,q);z=a.memoizedState;b=null!==a.updateQueue?Re(null,a,a.updateQueue,n,r,b):z;var u=void 0;h!==r&&(u=k(a,n,r,b));if(null!==u&&void 0!==u){b=null===b||void 0===b?u:A({},b,u);var t=a.updateQueue;\nnull!==t&&(t.baseState=A({},t.baseState,u))}if(!(h!==r||z!==b||B()||null!==a.updateQueue&&a.updateQueue.hasForceUpdate))return\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),!1;(h=f(a,h,r,z,b,q))?(c||\"function\"!==typeof n.UNSAFE_componentWillMount&&\"function\"!==typeof n.componentWillMount||(\"function\"===typeof n.componentWillMount&&n.componentWillMount(),\"function\"===typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount()),\"function\"===typeof n.componentDidMount&&(a.effectTag|=\n4)):(\"function\"===typeof n.componentDidMount&&(a.effectTag|=4),d(a,r),e(a,b));n.props=r;n.state=b;n.context=q;return h},updateClassInstance:function(a,b,c){var n=b.type,x=b.stateNode;x.props=b.memoizedProps;x.state=b.memoizedState;var h=b.memoizedProps,r=b.pendingProps,q=x.context,u=p(b);u=l(b,u);(n=\"function\"===typeof n.getDerivedStateFromProps||\"function\"===typeof x.getSnapshotBeforeUpdate)||\"function\"!==typeof x.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof x.componentWillReceiveProps||\n(h!==r||q!==u)&&g(b,x,r,u);q=b.memoizedState;c=null!==b.updateQueue?Re(a,b,b.updateQueue,x,r,c):q;var t=void 0;h!==r&&(t=k(b,x,r,c));if(null!==t&&void 0!==t){c=null===c||void 0===c?t:A({},c,t);var y=b.updateQueue;null!==y&&(y.baseState=A({},y.baseState,t))}if(!(h!==r||q!==c||B()||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=2048),!1;(t=f(b,h,r,q,c,u))?(n||\"function\"!==typeof x.UNSAFE_componentWillUpdate&&\"function\"!==typeof x.componentWillUpdate||(\"function\"===typeof x.componentWillUpdate&&x.componentWillUpdate(r,c,u),\"function\"===typeof x.UNSAFE_componentWillUpdate&&x.UNSAFE_componentWillUpdate(r,c,u)),\"function\"===typeof x.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof x.getSnapshotBeforeUpdate&&(b.effectTag|=2048)):(\"function\"!==typeof x.componentDidUpdate||h===a.memoizedProps&&\nq===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof x.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.effectTag|=2048),d(b,r),e(b,c));x.props=r;x.state=c;x.context=u;return t}}}var Ue=Array.isArray;\nfunction Ve(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?D(\"110\"):void 0,d=c.stateNode);d?void 0:D(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ka?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?D(\"148\"):void 0;c._owner?void 0:D(\"254\",a)}return a}\nfunction We(a,b){\"textarea\"!==a.type&&D(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Xe(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=ze(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function h(b){a&&null===b.alternate&&(b.effectTag=2);return b}function g(a,b,c,d){if(null===b||6!==b.tag)return b=Ce(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ve(a,b,c),d[\"return\"]=a,d;d=Ae(c,a.mode,d);d.ref=Ve(a,b,c);d[\"return\"]=a;return d}function v(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDe(c,a.mode,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function l(a,b,c,d,f){if(null===b||10!==b.tag)return b=Be(c,a.mode,d,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ce(\"\"+b,a.mode,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case oc:return c=Ae(b,a.mode,c),c.ref=Ve(a,null,b),c[\"return\"]=a,c;case rc:return b=De(b,a.mode,c),b[\"return\"]=a,b}if(Ue(b)||zc(b))return b=Be(b,\na.mode,c,null),b[\"return\"]=a,b;We(a,b)}return null}function z(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:g(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case oc:return c.key===e?c.type===sc?l(a,b,c.props.children,d,e):k(a,b,c,d):null;case rc:return c.key===e?v(a,b,c,d):null}if(Ue(c)||zc(c))return null!==e?null:l(a,b,c,d,null);We(a,c)}return null}function B(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,g(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case oc:return a=a.get(null===d.key?c:d.key)||null,d.type===sc?l(b,a,d.props.children,e,d.key):k(b,a,d,e);case rc:return a=a.get(null===d.key?c:d.key)||null,v(b,a,d,e)}if(Ue(d)||zc(d))return a=a.get(c)||null,l(b,a,d,e,null);We(b,d)}return null}function r(e,l,g,h){for(var r=null,k=null,q=l,u=l=0,t=null;null!==q&&u<g.length;u++){q.index>u?(t=q,q=null):t=q.sibling;var n=z(e,q,g[u],h);if(null===n){null===q&&(q=t);break}a&&q&&null===\nn.alternate&&b(e,q);l=f(n,l,u);null===k?r=n:k.sibling=n;k=n;q=t}if(u===g.length)return c(e,q),r;if(null===q){for(;u<g.length;u++)if(q=p(e,g[u],h))l=f(q,l,u),null===k?r=q:k.sibling=q,k=q;return r}for(q=d(e,q);u<g.length;u++)if(t=B(q,e,u,g[u],h)){if(a&&null!==t.alternate)q[\"delete\"](null===t.key?u:t.key);l=f(t,l,u);null===k?r=t:k.sibling=t;k=t}a&&q.forEach(function(a){return b(e,a)});return r}function Q(e,l,g,h){var r=zc(g);\"function\"!==typeof r?D(\"150\"):void 0;g=r.call(g);null==g?D(\"151\"):void 0;for(var k=\nr=null,q=l,u=l=0,t=null,n=g.next();null!==q&&!n.done;u++,n=g.next()){q.index>u?(t=q,q=null):t=q.sibling;var H=z(e,q,n.value,h);if(null===H){q||(q=t);break}a&&q&&null===H.alternate&&b(e,q);l=f(H,l,u);null===k?r=H:k.sibling=H;k=H;q=t}if(n.done)return c(e,q),r;if(null===q){for(;!n.done;u++,n=g.next())n=p(e,n.value,h),null!==n&&(l=f(n,l,u),null===k?r=n:k.sibling=n,k=n);return r}for(q=d(e,q);!n.done;u++,n=g.next())if(n=B(q,e,u,n.value,h),null!==n){if(a&&null!==n.alternate)q[\"delete\"](null===n.key?u:n.key);\nl=f(n,l,u);null===k?r=n:k.sibling=n;k=n}a&&q.forEach(function(a){return b(e,a)});return r}return function(a,d,f,l){\"object\"===typeof f&&null!==f&&f.type===sc&&null===f.key&&(f=f.props.children);var g=\"object\"===typeof f&&null!==f;if(g)switch(f.$$typeof){case oc:a:{var k=f.key;for(g=d;null!==g;){if(g.key===k)if(10===g.tag?f.type===sc:g.type===f.type){c(a,g.sibling);d=e(g,f.type===sc?f.props.children:f.props,l);d.ref=Ve(a,g,f);d[\"return\"]=a;a=d;break a}else{c(a,g);break}else b(a,g);g=g.sibling}f.type===\nsc?(d=Be(f.props.children,a.mode,l,f.key),d[\"return\"]=a,a=d):(l=Ae(f,a.mode,l),l.ref=Ve(a,d,f),l[\"return\"]=a,a=l)}return h(a);case rc:a:{for(g=f.key;null!==d;){if(d.key===g)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],l);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=De(f,a.mode,l);d[\"return\"]=a;a=d}return h(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&\n6===d.tag?(c(a,d.sibling),d=e(d,f,l),d[\"return\"]=a,a=d):(c(a,d),d=Ce(f,a.mode,l),d[\"return\"]=a,a=d),h(a);if(Ue(f))return r(a,d,f,l);if(zc(f))return Q(a,d,f,l);g&&We(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:l=a.type,D(\"152\",l.displayName||l.name||\"Component\")}return c(a,d)}}var Ye=Xe(!0),Ze=Xe(!1);\nfunction $e(a,b,c,d,e,f,h){function g(a,b,c){k(a,b,c,b.expirationTime)}function k(a,b,c,d){b.child=null===a?Ze(b,null,c,d):Ye(b,a.child,c,d)}function v(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function l(a,b,c,d,e,f){v(a,b);if(!c&&!e)return d&&y(b,!1),r(a,b);c=b.stateNode;nc.current=b;var l=e?null:c.render();b.effectTag|=1;e&&(k(a,b,null,f),b.child=null);k(a,b,l,f);b.memoizedState=c.state;b.memoizedProps=c.props;d&&y(b,!0);return b.child}function p(a){var b=a.stateNode;\nb.pendingContext?t(a,b.pendingContext,b.pendingContext!==b.context):b.context&&t(a,b.context,!1);Y(a,b.containerInfo)}function z(a,b,c,d){var e=a.child;for(null!==e&&(e[\"return\"]=a);null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var l=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==l&&(0===l.expirationTime||l.expirationTime>d)&&(l.expirationTime=d);else if(null!==l&&(0===l.expirationTime||l.expirationTime>d))l.expirationTime=\nd;else break;f=f[\"return\"]}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=e.child}if(null!==f)f[\"return\"]=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){f=e;break}f=f[\"return\"]}e=f}}function B(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps;if(!q()&&f===e)return b.stateNode=0,G(b),r(a,b);var l=e.value;b.memoizedProps=e;if(null===f)l=1073741823;else if(f.value===e.value){if(f.children===e.children)return b.stateNode=0,G(b),\nr(a,b);l=0}else{var h=f.value;if(h===l&&(0!==h||1/h===1/l)||h!==h&&l!==l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b);l=0}else if(l=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,l):1073741823,l|=0,0===l){if(f.children===e.children)return b.stateNode=0,G(b),r(a,b)}else z(b,d,l,c)}b.stateNode=l;G(b);g(a,b,e.children);return b.child}function r(a,b){null!==a&&b.child!==a.child?D(\"153\"):void 0;if(null!==b.child){a=b.child;var c=ze(a,a.pendingProps,a.expirationTime);\nb.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=ze(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}var Q=a.shouldSetTextContent,n=a.shouldDeprioritizeSubtree,x=b.pushHostContext,Y=b.pushHostContainer,G=d.pushProvider,R=c.getMaskedContext,S=c.getUnmaskedContext,q=c.hasContextChanged,u=c.pushContextProvider,t=c.pushTopLevelContextObject,y=c.invalidateContextProvider,H=e.enterHydrationState,Wa=e.resetHydrationState,Cb=e.tryToClaimNextHydratableInstance;\na=Te(c,f,h,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var Jc=a.adoptClassInstance,Kc=a.callGetDerivedStateFromProps,Lc=a.constructClassInstance,Db=a.mountClassInstance,Mc=a.resumeMountClassInstance,Eb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:p(b);break;case 2:u(b);break;case 4:Y(b,b.stateNode.containerInfo);break;case 13:G(b)}return null}switch(b.tag){case 0:null!==a?D(\"155\"):void 0;var d=b.type,\ne=b.pendingProps,f=S(b);f=R(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,\"function\"===typeof f.getDerivedStateFromProps&&(e=Kc(b,d,e,b.memoizedState),null!==e&&void 0!==e&&(b.memoizedState=A({},b.memoizedState,e))),e=u(b),Jc(b,d),Db(b,c),a=l(a,b,!0,e,!1,c)):(b.tag=1,g(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,q()||\nb.memoizedProps!==c?(d=S(b),d=R(b,d),e=e(c,d),b.effectTag|=1,g(a,b,e),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 2:e=u(b);null===a?null===b.stateNode?(Lc(b,b.pendingProps),Db(b,c),d=!0):d=Mc(b,c):d=Eb(a,b,c);f=!1;var h=b.updateQueue;null!==h&&null!==h.capturedValues&&(f=d=!0);return l(a,b,d,e,f,c);case 3:a:if(p(b),d=b.updateQueue,null!==d){f=b.memoizedState;e=Re(a,b,d,null,null,c);b.memoizedState=e;d=b.updateQueue;if(null!==d&&null!==d.capturedValues)d=null;else if(f===e){Wa();a=r(a,b);break a}else d=\ne.element;f=b.stateNode;(null===a||null===a.child)&&f.hydrate&&H(b)?(b.effectTag|=2,b.child=Ze(b,null,d,c)):(Wa(),g(a,b,d));b.memoizedState=e;a=b.child}else Wa(),a=r(a,b);return a;case 5:a:{x(b);null===a&&Cb(b);e=b.type;h=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!q()&&h===d){if(h=b.mode&1&&n(e,d))b.expirationTime=1073741823;if(!h||1073741823!==c){a=r(a,b);break a}}h=d.children;Q(e,d)?h=null:f&&Q(e,f)&&(b.effectTag|=16);v(a,b);1073741823!==c&&b.mode&1&&n(e,d)?(b.expirationTime=\n1073741823,b.memoizedProps=d,a=null):(g(a,b,h),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Cb(b),b.memoizedProps=b.pendingProps,null;case 8:b.tag=7;case 7:return e=b.pendingProps,q()||b.memoizedProps!==e||(e=b.memoizedProps),d=e.children,b.stateNode=null===a?Ze(b,b.stateNode,d,c):Ye(b,a.stateNode,d,c),b.memoizedProps=e,b.stateNode;case 9:return null;case 4:return Y(b,b.stateNode.containerInfo),e=b.pendingProps,q()||b.memoizedProps!==e?(null===a?b.child=Ye(b,null,e,c):g(a,b,e),b.memoizedProps=\ne,a=b.child):a=r(a,b),a;case 14:return c=b.type.render,c=c(b.pendingProps,b.ref),g(a,b,c),b.memoizedProps=c,b.child;case 10:return c=b.pendingProps,q()||b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 11:return c=b.pendingProps.children,q()||null!==c&&b.memoizedProps!==c?(g(a,b,c),b.memoizedProps=c,a=b.child):a=r(a,b),a;case 13:return B(a,b,c);case 12:a:{d=b.type;f=b.pendingProps;h=b.memoizedProps;e=d._currentValue;var t=d._changedBits;if(q()||0!==t||h!==f){b.memoizedProps=\nf;var k=f.unstable_observedBits;if(void 0===k||null===k)k=1073741823;b.stateNode=k;if(0!==(t&k))z(b,d,t,c);else if(h===f){a=r(a,b);break a}c=f.children;c=c(e);g(a,b,c);a=b.child}else a=r(a,b)}return a;default:D(\"156\")}}}}\nfunction af(a,b,c,d,e){function f(a){a.effectTag|=4}var h=a.createInstance,g=a.createTextInstance,k=a.appendInitialChild,v=a.finalizeInitialChildren,l=a.prepareUpdate,p=a.persistence,z=b.getRootHostContainer,B=b.popHostContext,r=b.getHostContext,Q=b.popHostContainer,n=c.popContextProvider,x=c.popTopLevelContextObject,Y=d.popProvider,G=e.prepareToHydrateHostInstance,R=e.prepareToHydrateHostTextInstance,S=e.popHydrationState,q=void 0,u=void 0,t=void 0;a.mutation?(q=function(){},u=function(a,b,c){(b.updateQueue=\nc)&&f(b)},t=function(a,b,c,d){c!==d&&f(b)}):p?D(\"235\"):D(\"236\");return{completeWork:function(a,b,c){var d=b.pendingProps;switch(b.tag){case 1:return null;case 2:return n(b),a=b.stateNode,d=b.updateQueue,null!==d&&null!==d.capturedValues&&(b.effectTag&=-65,\"function\"===typeof a.componentDidCatch?b.effectTag|=256:d.capturedValues=null),null;case 3:Q(b);x(b);d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)S(b),b.effectTag&=-3;q(b);a=b.updateQueue;\nnull!==a&&null!==a.capturedValues&&(b.effectTag|=256);return null;case 5:B(b);c=z();var e=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,H=b.stateNode,y=r();H=l(H,e,p,d,c,y);u(a,b,H,e,p,d,c,y);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!d)return null===b.stateNode?D(\"166\"):void 0,null;a=r();if(S(b))G(b,c,a)&&f(b);else{p=h(e,d,c,a,b);a:for(y=b.child;null!==y;){if(5===y.tag||6===y.tag)k(p,y.stateNode);else if(4!==y.tag&&null!==y.child){y.child[\"return\"]=y;y=y.child;continue}if(y===b)break;\nfor(;null===y.sibling;){if(null===y[\"return\"]||y[\"return\"]===b)break a;y=y[\"return\"]}y.sibling[\"return\"]=y[\"return\"];y=y.sibling}v(p,e,d,c,a)&&f(b);b.stateNode=p}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)t(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d)return null===b.stateNode?D(\"166\"):void 0,null;a=z();c=r();S(b)?R(b)&&f(b):b.stateNode=g(d,a,c,b)}return null;case 7:(d=b.memoizedProps)?void 0:D(\"165\");b.tag=8;e=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==\np;){if(5===p.tag||6===p.tag||4===p.tag)D(\"247\");else if(9===p.tag)e.push(p.pendingProps.value);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=d.handler;d=p(d.props,e);b.child=Ye(b,null!==a?a.child:null,d,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 14:return null;case 10:return null;case 11:return null;case 4:return Q(b),q(b),null;\ncase 13:return Y(b),null;case 12:return null;case 0:D(\"167\");default:D(\"156\")}}}}\nfunction bf(a,b,c,d,e){var f=a.popHostContainer,h=a.popHostContext,g=b.popContextProvider,k=b.popTopLevelContextObject,v=c.popProvider;return{throwException:function(a,b,c){b.effectTag|=512;b.firstEffect=b.lastEffect=null;b={value:c,source:b,stack:Bc(b)};do{switch(a.tag){case 3:Oe(a);a.updateQueue.capturedValues=[b];a.effectTag|=1024;return;case 2:if(c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&!e(c)){Oe(a);c=a.updateQueue;var d=c.capturedValues;null===d?\nc.capturedValues=[b]:d.push(b);a.effectTag|=1024;return}}a=a[\"return\"]}while(null!==a)},unwindWork:function(a){switch(a.tag){case 2:g(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return f(a),k(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return h(a),null;case 4:return f(a),null;case 13:return v(a),null;default:return null}},unwindInterruptedWork:function(a){switch(a.tag){case 2:g(a);break;case 3:f(a);k(a);break;case 5:h(a);break;case 4:f(a);break;case 13:v(a)}}}}\nfunction cf(a,b){var c=b.source;null===b.stack&&Bc(c);null!==c&&Ac(c);b=b.value;null!==a&&2===a.tag&&Ac(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}\nfunction df(a,b,c,d,e){function f(a){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(t){b(a,t)}else c.current=null}function h(a){\"function\"===typeof Je&&Je(a);switch(a.tag){case 2:f(a);var c=a.stateNode;if(\"function\"===typeof c.componentWillUnmount)try{c.props=a.memoizedProps,c.state=a.memoizedState,c.componentWillUnmount()}catch(t){b(a,t)}break;case 5:f(a);break;case 7:g(a.stateNode);break;case 4:p&&v(a)}}function g(a){for(var b=a;;)if(h(b),null===b.child||p&&4===b.tag){if(b===\na)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function k(a){return 5===a.tag||3===a.tag||4===a.tag}function v(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?D(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c[\"return\"]}c=!0}if(5===\nb.tag||6===b.tag)g(b),e?S(d,b.stateNode):R(d,b.stateNode);else if(4===b.tag?d=b.stateNode.containerInfo:h(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var l=a.getPublicInstance,p=a.mutation;a=a.persistence;p||(a?D(\"235\"):D(\"236\"));var z=p.commitMount,B=p.commitUpdate,r=p.resetTextContent,Q=p.commitTextUpdate,n=p.appendChild,\nx=p.appendChildToContainer,Y=p.insertBefore,G=p.insertInContainerBefore,R=p.removeChild,S=p.removeChildFromContainer;return{commitBeforeMutationLifeCycles:function(a,b){switch(b.tag){case 2:if(b.effectTag&2048&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;a.props=b.memoizedProps;a.state=b.memoizedState;b=a.getSnapshotBeforeUpdate(c,d);a.__reactInternalSnapshotBeforeUpdate=b}break;case 3:case 5:case 6:case 4:break;default:D(\"163\")}},commitResetTextContent:function(a){r(a.stateNode)},\ncommitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(k(b)){var c=b;break a}b=b[\"return\"]}D(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D(\"161\")}c.effectTag&16&&(r(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||k(c[\"return\"])){c=null;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==\nc.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):Y(b,e.stateNode,c):d?x(b,e.stateNode):n(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===a)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){v(a);\na[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&B(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D(\"162\"):void 0;c=b.memoizedProps;Q(b.stateNode,null!==a?a.memoizedProps:c,c);break;case 3:break;default:D(\"163\")}},commitLifeCycles:function(a,b,c){switch(c.tag){case 2:a=\nc.stateNode;if(c.effectTag&4)if(null===b)a.props=c.memoizedProps,a.state=c.memoizedState,a.componentDidMount();else{var d=b.memoizedProps;b=b.memoizedState;a.props=c.memoizedProps;a.state=c.memoizedState;a.componentDidUpdate(d,b,a.__reactInternalSnapshotBeforeUpdate)}c=c.updateQueue;null!==c&&Se(c,a);break;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=l(c.child.stateNode);break;case 2:a=c.child.stateNode}Se(b,a)}break;case 5:a=c.stateNode;null===b&&c.effectTag&\n4&&z(a,c.type,c.memoizedProps,c);break;case 6:break;case 4:break;default:D(\"163\")}},commitErrorLogging:function(a,b){switch(a.tag){case 2:var c=a.type;b=a.stateNode;var d=a.updateQueue;null===d||null===d.capturedValues?D(\"264\"):void 0;var f=d.capturedValues;d.capturedValues=null;\"function\"!==typeof c.getDerivedStateFromCatch&&e(b);b.props=a.memoizedProps;b.state=a.memoizedState;for(c=0;c<f.length;c++){d=f[c];var l=d.value,g=d.stack;cf(a,d);b.componentDidCatch(l,{componentStack:null!==g?g:\"\"})}break;\ncase 3:c=a.updateQueue;null===c||null===c.capturedValues?D(\"264\"):void 0;f=c.capturedValues;c.capturedValues=null;for(c=0;c<f.length;c++)d=f[c],cf(a,d),b(d.value);break;default:D(\"265\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=l(c);break;default:a=c}\"function\"===typeof b?b(a):b.current=a}},commitDetachRef:function(a){a=a.ref;null!==a&&(\"function\"===typeof a?a(null):a.current=null)}}}var ef={};\nfunction ff(a,b){function c(a){a===ef?D(\"174\"):void 0;return a}var d=a.getChildHostContext,e=a.getRootHostContext;a=b.createCursor;var f=b.push,h=b.pop,g=a(ef),k=a(ef),v=a(ef);return{getHostContext:function(){return c(g.current)},getRootHostContainer:function(){return c(v.current)},popHostContainer:function(a){h(g,a);h(k,a);h(v,a)},popHostContext:function(a){k.current===a&&(h(g,a),h(k,a))},pushHostContainer:function(a,b){f(v,b,a);f(k,a,a);f(g,ef,a);b=e(b);h(g,a);f(g,b,a)},pushHostContext:function(a){var b=\nc(v.current),e=c(g.current);b=d(e,a.type,b);e!==b&&(f(k,a,a),f(g,b,a))}}}\nfunction gf(a){function b(a,b){var c=new xe(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=h(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];p=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D(\"175\")},prepareToHydrateHostTextInstance:function(){D(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,h=a.canHydrateTextInstance,g=a.getNextHydratableSibling,k=a.getFirstHydratableChild,v=a.hydrateInstance,l=a.hydrateTextInstance,p=null,z=null,B=!1;return{enterHydrationState:function(a){z=\nk(a.stateNode.containerInfo);p=a;return B=!0},resetHydrationState:function(){z=p=null;B=!1},tryToClaimNextHydratableInstance:function(a){if(B){var d=z;if(d){if(!c(a,d)){d=g(d);if(!d||!c(a,d)){a.effectTag|=2;B=!1;p=a;return}b(p,z)}p=a;z=k(d)}else a.effectTag|=2,B=!1,p=a}},prepareToHydrateHostInstance:function(a,b,c){b=v(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return l(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\np)return!1;if(!B)return d(a),B=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=z;c;)b(a,c),c=g(c);d(a);z=p?g(a.stateNode):null;return!0}}}\nfunction hf(a){function b(a,b,c){a=a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext=b;a.__reactInternalMemoizedMaskedChildContext=c}function c(a){return 2===a.tag&&null!=a.type.childContextTypes}function d(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D(\"108\",Ac(a)||\"Unknown\",e);return A({},b,c)}var e=a.createCursor,f=a.push,h=a.pop,g=e(ka),k=e(!1),v=ka;return{getUnmaskedContext:function(a){return c(a)?\nv:g.current},cacheContext:b,getMaskedContext:function(a,c){var d=a.type.contextTypes;if(!d)return ka;var e=a.stateNode;if(e&&e.__reactInternalMemoizedUnmaskedChildContext===c)return e.__reactInternalMemoizedMaskedChildContext;var f={},g;for(g in d)f[g]=c[g];e&&b(a,c,f);return f},hasContextChanged:function(){return k.current},isContextConsumer:function(a){return 2===a.tag&&null!=a.type.contextTypes},isContextProvider:c,popContextProvider:function(a){c(a)&&(h(k,a),h(g,a))},popTopLevelContextObject:function(a){h(k,\na);h(g,a)},pushTopLevelContextObject:function(a,b,c){null!=g.cursor?D(\"168\"):void 0;f(g,b,a);f(k,c,a)},processChildContext:d,pushContextProvider:function(a){if(!c(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ka;v=g.current;f(g,b,a);f(k,k.current,a);return!0},invalidateContextProvider:function(a,b){var c=a.stateNode;c?void 0:D(\"169\");if(b){var e=d(a,v);c.__reactInternalMemoizedMergedChildContext=e;h(k,a);h(g,a);f(g,e,a)}else h(k,a);f(k,b,a)},findCurrentUnmaskedContext:function(a){for(2!==\nxd(a)||2!==a.tag?D(\"170\"):void 0;3!==a.tag;){if(c(a))return a.stateNode.__reactInternalMemoizedMergedChildContext;(a=a[\"return\"])?void 0:D(\"171\")}return a.stateNode.context}}}\nfunction jf(a){var b=a.createCursor,c=a.push,d=a.pop,e=b(null),f=b(null),h=b(0);return{pushProvider:function(a){var b=a.type._context;c(h,b._changedBits,a);c(f,b._currentValue,a);c(e,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode},popProvider:function(a){var b=h.current,c=f.current;d(e,a);d(f,a);d(h,a);a=a.type._context;a._currentValue=c;a._changedBits=b}}}\nfunction kf(){var a=[],b=-1;return{createCursor:function(a){return{current:a}},isEmpty:function(){return-1===b},pop:function(c){0>b||(c.current=a[b],a[b]=null,b--)},push:function(c,d){b++;a[b]=c.current;c.current=d},checkThatStackIsEmpty:function(){},resetStackAfterFatalErrorInDev:function(){}}}\nfunction lf(a){function b(){if(null!==I)for(var a=I[\"return\"];null!==a;)Lc(a),a=a[\"return\"];Ya=null;Z=0;I=null;Nc=!1}function c(a){return null!==ya&&ya.has(a)}function d(a){for(;;){var b=a.alternate,c=a[\"return\"],d=a.sibling;if(0===(a.effectTag&512)){b=Cb(b,a,Z);var e=a;if(1073741823===Z||1073741823!==e.expirationTime){b:switch(e.tag){case 3:case 2:var f=e.updateQueue;f=null===f?0:f.expirationTime;break b;default:f=0}for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=\ng.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{Nc=!0;break}}else{a=Kc(a);if(null!==a)return a.effectTag&=2559,a;null!==c&&(c.firstEffect=c.lastEffect=\nnull,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}function e(a){var b=Wa(a.alternate,a,Z);null===b&&(b=d(a));nc.current=null;return b}function f(a,c,f){ca?D(\"243\"):void 0;ca=!0;if(c!==Z||a!==Ya||null===I)b(),Ya=a,Z=c,I=ze(Ya.current,null,Z),a.pendingCommitExpirationTime=0;var g=!1;do{try{if(f)for(;null!==I&&!S();)I=e(I);else for(;null!==I;)I=e(I)}catch(Oc){if(null===I){g=!0;q(Oc);break}f=I;var h=f[\"return\"];if(null===h){g=!0;q(Oc);break}Jc(h,f,Oc);I=d(f)}break}while(1);\nca=!1;if(g||null!==I)return null;if(Nc)return a.pendingCommitExpirationTime=c,a.current.alternate;D(\"262\")}function h(a,b,c,d){a={value:c,source:a,stack:Bc(a)};Pe(b,{expirationTime:d,partialState:null,callback:null,isReplace:!1,isForced:!1,capturedValue:a,next:null});v(b,d)}function g(a,b){a:{ca&&!Za?D(\"263\"):void 0;for(var d=a[\"return\"];null!==d;){switch(d.tag){case 2:var e=d.stateNode;if(\"function\"===typeof d.type.getDerivedStateFromCatch||\"function\"===typeof e.componentDidCatch&&!c(e)){h(a,d,b,\n1);a=void 0;break a}break;case 3:h(a,d,b,1);a=void 0;break a}d=d[\"return\"]}3===a.tag&&h(a,a,b,1);a=void 0}return a}function k(a){a=0!==ia?ia:ca?Za?1:Z:a.mode&1?za?10*(((l()+15)/10|0)+1):25*(((l()+500)/25|0)+1):1;za&&(0===da||a>da)&&(da=a);return a}function v(a,c){a:{for(;null!==a;){if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>c)&&(a.alternate.expirationTime=c);if(null===a[\"return\"])if(3===a.tag){var d=\na.stateNode;!ca&&0!==Z&&c<Z&&b();ca&&!Za&&Ya===d||B(d,c);Fb>xg&&D(\"185\")}else{c=void 0;break a}a=a[\"return\"]}c=void 0}return c}function l(){ye=Ic()-Pc;return yg=(ye/10|0)+2}function p(a,b,c,d,e){var f=ia;ia=1;try{return a(b,c,d,e)}finally{ia=f}}function z(a){if(0!==Gb){if(a>Gb)return;mg(Qc)}var b=Ic()-Pc;Gb=a;Qc=lg(Q,{timeout:10*(a-2)-b})}function B(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===K?(la=K=a,a.nextScheduledRoot=a):(K=K.nextScheduledRoot=a,K.nextScheduledRoot=la);\nelse{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}T||(J?Hb&&(aa=a,P=1,G(a,1,!1)):1===b?n():z(b))}function r(){var a=0,b=null;if(null!==K)for(var c=K,d=la;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===K?D(\"244\"):void 0;if(d===d.nextScheduledRoot){la=K=d.nextScheduledRoot=null;break}else if(d===la)la=e=d.nextScheduledRoot,K.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===K){K=c;K.nextScheduledRoot=la;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=\nd.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===K)break;c=d;d=d.nextScheduledRoot}}c=aa;null!==c&&c===b&&1===a?Fb++:Fb=0;aa=b;P=a}function Q(a){x(0,!0,a)}function n(){x(1,!1,null)}function x(a,b,c){$a=c;r();if(b)for(;null!==aa&&0!==P&&(0===a||a>=P)&&(!Ib||l()>=P);)G(aa,P,!Ib),r();else for(;null!==aa&&0!==P&&(0===a||a>=P);)G(aa,P,!1),r();null!==$a&&(Gb=0,Qc=-1);0!==P&&z(P);$a=null;Ib=!1;Y()}function Y(){Fb=0;if(null!==Aa){var a=Aa;Aa=null;for(var b=\n0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(wg){Ba||(Ba=!0,Jb=wg)}}}if(Ba)throw a=Jb,Jb=null,Ba=!1,a;}function G(a,b,c){T?D(\"245\"):void 0;T=!0;c?(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!0),null!==c&&(S()?a.finishedWork=c:R(a,c,b)))):(c=a.finishedWork,null!==c?R(a,c,b):(a.finishedWork=null,c=f(a,b,!1),null!==c&&R(a,c,b)));T=!1}function R(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Aa?Aa=[d]:Aa.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=\n0;return}a.finishedWork=null;Za=ca=!0;c=b.stateNode;c.current===b?D(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?D(\"261\"):void 0;c.pendingCommitExpirationTime=0;var e=l();nc.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var f=b.firstEffect}else f=b;else f=b.firstEffect;zg(c.containerInfo);for(w=f;null!==w;){var h=!1,k=void 0;try{for(;null!==w;)w.effectTag&2048&&Db(w.alternate,w),w=w.nextEffect}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==\nw&&(w=w.nextEffect))}for(w=f;null!==w;){h=!1;k=void 0;try{for(;null!==w;){var p=w.effectTag;p&16&&Mc(w);if(p&128){var n=w.alternate;null!==n&&kg(n)}switch(p&14){case 2:Eb(w);w.effectTag&=-3;break;case 6:Eb(w);w.effectTag&=-3;we(w.alternate,w);break;case 4:we(w.alternate,w);break;case 8:gg(w)}w=w.nextEffect}}catch(ab){h=!0,k=ab}h&&(null===w?D(\"178\"):void 0,g(w,k),null!==w&&(w=w.nextEffect))}Ag(c.containerInfo);c.current=b;for(w=f;null!==w;){p=!1;n=void 0;try{for(f=c,h=e,k=d;null!==w;){var r=w.effectTag;\nr&36&&hg(f,w.alternate,w,h,k);r&256&&ig(w,q);r&128&&jg(w);var t=w.nextEffect;w.nextEffect=null;w=t}}catch(ab){p=!0,n=ab}p&&(null===w?D(\"178\"):void 0,g(w,n),null!==w&&(w=w.nextEffect))}ca=Za=!1;\"function\"===typeof Ie&&Ie(b.stateNode);b=c.current.expirationTime;0===b&&(ya=null);a.remainingExpirationTime=b}function S(){return null===$a||$a.timeRemaining()>Bg?!1:Ib=!0}function q(a){null===aa?D(\"246\"):void 0;aa.remainingExpirationTime=0;Ba||(Ba=!0,Jb=a)}var u=kf(),t=ff(a,u),y=hf(u);u=jf(u);var H=gf(a),\nWa=$e(a,t,y,u,H,v,k).beginWork,Cb=af(a,t,y,u,H).completeWork;t=bf(t,y,u,v,c);var Jc=t.throwException,Kc=t.unwindWork,Lc=t.unwindInterruptedWork;t=df(a,g,v,k,function(a){null===ya?ya=new Set([a]):ya.add(a)},l);var Db=t.commitBeforeMutationLifeCycles,Mc=t.commitResetTextContent,Eb=t.commitPlacement,gg=t.commitDeletion,we=t.commitWork,hg=t.commitLifeCycles,ig=t.commitErrorLogging,jg=t.commitAttachRef,kg=t.commitDetachRef,Ic=a.now,lg=a.scheduleDeferredCallback,mg=a.cancelDeferredCallback,zg=a.prepareForCommit,\nAg=a.resetAfterCommit,Pc=Ic(),yg=2,ye=Pc,Rc=0,ia=0,ca=!1,I=null,Ya=null,Z=0,w=null,Za=!1,Nc=!1,ya=null,la=null,K=null,Gb=0,Qc=-1,T=!1,aa=null,P=0,da=0,Ib=!1,Ba=!1,Jb=null,$a=null,J=!1,Hb=!1,za=!1,Aa=null,xg=1E3,Fb=0,Bg=1;return{recalculateCurrentTime:l,computeExpirationForFiber:k,scheduleWork:v,requestWork:B,flushRoot:function(a,b){T?D(\"253\"):void 0;aa=a;P=b;G(a,b,!1);n();Y()},batchedUpdates:function(a,b){var c=J;J=!0;try{return a(b)}finally{(J=c)||T||n()}},unbatchedUpdates:function(a,b){if(J&&!Hb){Hb=\n!0;try{return a(b)}finally{Hb=!1}}return a(b)},flushSync:function(a,b){T?D(\"187\"):void 0;var c=J;J=!0;try{return p(a,b)}finally{J=c,n()}},flushControlled:function(a){var b=J;J=!0;try{p(a)}finally{(J=b)||T||x(1,!1,null)}},deferredUpdates:function(a){var b=ia;ia=25*(((l()+500)/25|0)+1);try{return a()}finally{ia=b}},syncUpdates:p,interactiveUpdates:function(a,b,c){if(za)return a(b,c);J||T||0===da||(x(da,!1,null),da=0);var d=za,e=J;J=za=!0;try{return a(b,c)}finally{za=d,(J=e)||T||n()}},flushInteractiveUpdates:function(){T||\n0===da||(x(da,!1,null),da=0)},computeUniqueAsyncExpiration:function(){var a=25*(((l()+500)/25|0)+1);a<=Rc&&(a=Rc+1);return Rc=a},legacyContext:y}}\nfunction mf(a){function b(a,b,c,d,e,h){d=b.current;if(c){c=c._reactInternalFiber;var l=g(c);c=k(c)?v(c,l):l}else c=ka;null===b.context?b.context=c:b.pendingContext=c;b=h;Pe(d,{expirationTime:e,partialState:{element:a},callback:void 0===b?null:b,isReplace:!1,isForced:!1,capturedValue:null,next:null});f(d,e);return e}var c=a.getPublicInstance;a=lf(a);var d=a.recalculateCurrentTime,e=a.computeExpirationForFiber,f=a.scheduleWork,h=a.legacyContext,g=h.findCurrentUnmaskedContext,k=h.isContextProvider,v=\nh.processChildContext;return{createContainer:function(a,b,c){b=new xe(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a},updateContainer:function(a,c,f,h){var g=c.current,k=d();g=e(g);return b(a,c,f,k,g,h)},updateContainerAtExpirationTime:function(a,c,e,f,g){var h=d();return b(a,c,e,h,f,g)},flushRoot:a.flushRoot,\nrequestWork:a.requestWork,computeUniqueAsyncExpiration:a.computeUniqueAsyncExpiration,batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,syncUpdates:a.syncUpdates,interactiveUpdates:a.interactiveUpdates,flushInteractiveUpdates:a.flushInteractiveUpdates,flushControlled:a.flushControlled,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},\nfindHostInstance:function(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?D(\"188\"):D(\"268\",Object.keys(a)));a=Bd(b);return null===a?null:a.stateNode},findHostInstanceWithNoPortals:function(a){a=Cd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var b=a.findFiberByHostInstance;return He(A({},a,{findHostInstanceByFiber:function(a){a=Bd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}}}\nvar nf=Object.freeze({default:mf}),of=nf&&mf||nf,pf=of[\"default\"]?of[\"default\"]:of;function qf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:rc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var rf=\"object\"===typeof performance&&\"function\"===typeof performance.now,sf=void 0;sf=rf?function(){return performance.now()}:function(){return Date.now()};var tf=void 0,uf=void 0;\nif(m.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var vf=null,wf=!1,xf=-1,yf=!1,zf=0,Af=33,Bf=33,Cf=void 0;Cf=rf?{didTimeout:!1,timeRemaining:function(){var a=zf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=zf-Date.now();return 0<a?a:0}};var Df=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Df){wf=!1;a=sf();if(0>=zf-a)if(-1!==\nxf&&xf<=a)Cf.didTimeout=!0;else{yf||(yf=!0,requestAnimationFrame(Ef));return}else Cf.didTimeout=!1;xf=-1;a=vf;vf=null;null!==a&&a(Cf)}},!1);var Ef=function(a){yf=!1;var b=a-zf+Bf;b<Bf&&Af<Bf?(8>b&&(b=8),Bf=b<Af?Af:b):Af=b;zf=a+Bf;wf||(wf=!0,window.postMessage(Df,\"*\"))};tf=function(a,b){vf=a;null!=b&&\"number\"===typeof b.timeout&&(xf=sf()+b.timeout);yf||(yf=!0,requestAnimationFrame(Ef));return 0};uf=function(){vf=null;wf=!1;xf=-1}}else tf=window.requestIdleCallback,uf=window.cancelIdleCallback;else tf=\nfunction(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity},didTimeout:!1})})},uf=function(a){clearTimeout(a)};function Ff(a){var b=\"\";ea.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function Gf(a,b){a=A({children:void 0},b);if(b=Ff(b.children))a.children=b;return a}\nfunction Hf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction If(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Jf(a,b){null!=b.dangerouslySetInnerHTML?D(\"91\"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Kf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Lf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Mf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Nf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Of(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Pf(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Of(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Qf=void 0,Rf=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Nf.svg||\"innerHTML\"in a)a.innerHTML=b;else{Qf=Qf||document.createElement(\"div\");Qf.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=Qf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Sf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Tf={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Uf=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Tf).forEach(function(a){Uf.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Tf[b]=Tf[a]})});\nfunction Vf(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Tf.hasOwnProperty(e)&&Tf[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Wf=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Xf(a,b,c){b&&(Wf[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:D(\"61\")),null!=b.style&&\"object\"!==typeof b.style?D(\"62\",c()):void 0)}\nfunction Yf(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Zf=C.thatReturns(\"\");\nfunction $f(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=ke(a);b=va[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?Zd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(Zd(\"topFocus\",\"focus\",a),Zd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(ic(\"cancel\",!0)&&Zd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(ic(\"close\",!0)&&Zd(\"topClose\",\"close\",a),c.topClose=!0):fe.hasOwnProperty(e)&&W(e,fe[e],a),c[e]=!0)}}\nfunction ag(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Nf.html&&(d=Of(a));d===Nf.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function bg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction cg(a,b,c,d){var e=Yf(b,c);switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);f=c;break;case \"source\":W(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);f=c;break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":W(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Wc(a,c);f=Vc(a,c);W(\"topInvalid\",\n\"invalid\",a);$f(d,\"onChange\");break;case \"option\":f=Gf(a,c);break;case \"select\":If(a,c);f=A({},c,{value:void 0});W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;case \"textarea\":Kf(a,c);f=Jf(a,c);W(\"topInvalid\",\"invalid\",a);$f(d,\"onChange\");break;default:f=c}Xf(b,f,Zf);var h=f,g;for(g in h)if(h.hasOwnProperty(g)){var k=h[g];\"style\"===g?Vf(a,k,Zf):\"dangerouslySetInnerHTML\"===g?(k=k?k.__html:void 0,null!=k&&Rf(a,k)):\"children\"===g?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Sf(a,k):\"number\"===typeof k&&\nSf(a,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(ua.hasOwnProperty(g)?null!=k&&$f(d,g):null!=k&&Uc(a,g,k,e))}switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Hf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Hf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=C)}}\nfunction dg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Vc(a,c);d=Vc(a,d);f=[];break;case \"option\":c=Gf(a,c);d=Gf(a,d);f=[];break;case \"select\":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":c=Jf(a,c);d=Jf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}Xf(b,d,Zf);b=a=void 0;var h=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var g=c[a];for(b in g)g.hasOwnProperty(b)&&(h||\n(h={}),h[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ua.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];g=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==g&&(null!=k||null!=g))if(\"style\"===a)if(g){for(b in g)!g.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(h||(h={}),h[b]=\"\");for(b in k)k.hasOwnProperty(b)&&g[b]!==k[b]&&(h||(h={}),h[b]=k[b])}else h||(f||(f=[]),f.push(a,h)),\nh=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,g=g?g.__html:void 0,null!=k&&g!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?g===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ua.hasOwnProperty(a)?(null!=k&&$f(e,a),f||g===k||(f=[])):(f=f||[]).push(a,k))}h&&(f=f||[]).push(\"style\",h);return f}\nfunction eg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Yc(a,e);Yf(c,d);d=Yf(c,e);for(var f=0;f<b.length;f+=2){var h=b[f],g=b[f+1];\"style\"===h?Vf(a,g,Zf):\"dangerouslySetInnerHTML\"===h?Rf(a,g):\"children\"===h?Sf(a,g):Uc(a,h,g,d)}switch(c){case \"input\":Zc(a,e);break;case \"textarea\":Lf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Hf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nHf(a,!!e.multiple,e.defaultValue,!0):Hf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction fg(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":W(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in ge)ge.hasOwnProperty(f)&&W(f,ge[f],a);break;case \"source\":W(\"topError\",\"error\",a);break;case \"img\":case \"image\":case \"link\":W(\"topError\",\"error\",a);W(\"topLoad\",\"load\",a);break;case \"form\":W(\"topReset\",\"reset\",a);W(\"topSubmit\",\"submit\",a);break;case \"details\":W(\"topToggle\",\"toggle\",a);break;case \"input\":Wc(a,c);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"select\":If(a,\nc);W(\"topInvalid\",\"invalid\",a);$f(e,\"onChange\");break;case \"textarea\":Kf(a,c),W(\"topInvalid\",\"invalid\",a),$f(e,\"onChange\")}Xf(b,c,Zf);d=null;for(var h in c)c.hasOwnProperty(h)&&(f=c[h],\"children\"===h?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):ua.hasOwnProperty(h)&&null!=f&&$f(e,h));switch(b){case \"input\":lc(a);ad(a,c);break;case \"textarea\":lc(a);Mf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function ng(a,b){return a.nodeValue!==b}\nvar og=Object.freeze({createElement:ag,createTextNode:bg,setInitialProperties:cg,diffProperties:dg,updateProperties:eg,diffHydratedProperties:fg,diffHydratedText:ng,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Zc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Xa(d);e?void 0:D(\"90\");mc(d);Zc(d,e)}}}break;case \"textarea\":Lf(a,c);break;case \"select\":b=c.value,null!=b&&Hf(a,!!c.multiple,b,!1)}}});Tb.injectFiberControlledHostComponent(og);var pg=null,qg=null;\nfunction rg(a){this._expirationTime=X.computeUniqueAsyncExpiration();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}rg.prototype.render=function(a){this._defer?void 0:D(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new sg;X.updateContainerAtExpirationTime(a,b,null,c,d._onCommit);return d};\nrg.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nrg.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:D(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?D(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;X.flushRoot(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};rg.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function sg(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}sg.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nsg.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?D(\"191\",c):void 0;c()}}};function tg(a,b,c){this._internalRoot=X.createContainer(a,b,c)}tg.prototype.render=function(a,b){var c=this._internalRoot,d=new sg;b=void 0===b?null:b;null!==b&&d.then(b);X.updateContainer(a,c,null,d._onCommit);return d};\ntg.prototype.unmount=function(a){var b=this._internalRoot,c=new sg;a=void 0===a?null:a;null!==a&&c.then(a);X.updateContainer(null,b,null,c._onCommit);return c};tg.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new sg;c=void 0===c?null:c;null!==c&&e.then(c);X.updateContainer(b,d,a,e._onCommit);return e};\ntg.prototype.createBatch=function(){var a=new rg(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ug(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction vg(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nvar X=pf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Pf(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Pf(a,b)}return a},getChildHostContext:function(a,b){return Pf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){pg=Vd;var a=fa();if(ne(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(B){b=null;break a}var f=0,h=-1,g=-1,k=0,v=0,l=a,p=null;b:for(;;){for(var z;;){l!==b||0!==d&&3!==l.nodeType||(h=f+d);l!==e||0!==c&&3!==l.nodeType||(g=f+c);3===l.nodeType&&(f+=l.nodeValue.length);if(null===(z=l.firstChild))break;p=l;l=z}for(;;){if(l===a)break b;p===b&&++k===d&&(h=f);p===e&&++v===c&&(g=f);if(null!==(z=l.nextSibling))break;l=p;p=l.parentNode}l=z}b=-1===h||-1===g?null:\n{start:h,end:g}}else b=null}b=b||{start:0,end:0}}else b=null;qg={focusedElem:a,selectionRange:b};Wd(!1)},resetAfterCommit:function(){var a=qg,b=fa(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ja(document.documentElement,c)){if(ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[mb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=me(c,a);var f=me(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var h=document.createRange();h.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(h),b.extend(f.node,f.offset)):(h.setEnd(f.node,f.offset),b.addRange(h))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,\na.element.scrollTop=a.top}qg=null;Wd(pg);pg=null},createInstance:function(a,b,c,d,e){a=ag(a,b,c,d);a[F]=e;a[Ta]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){cg(a,b,c,d);return vg(b,c)},prepareUpdate:function(a,b,c,d,e){return dg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===\ntypeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=bg(a,b);a[F]=d;return a},now:sf,mutation:{commitMount:function(a,b,c){vg(b,c)&&a.focus()},commitUpdate:function(a,b,c,d,e){a[Ta]=e;eg(a,b,c,d,e)},resetTextContent:function(a){Sf(a,\"\")},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},\ninsertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,b){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=\na.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[F]=f;a[Ta]=c;return fg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[F]=c;return ng(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},\ndidNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:tf,cancelDeferredCallback:uf}),Cg=X;ac=Cg.batchedUpdates;bc=Cg.interactiveUpdates;cc=Cg.flushInteractiveUpdates;\nfunction Dg(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new tg(a,!1,b)}\nfunction Eg(a,b,c,d,e){ug(c)?void 0:D(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var h=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);h.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Dg(c,d);if(\"function\"===typeof e){var g=e;e=function(){var a=X.getPublicRootInstance(f._internalRoot);g.call(a)}}X.unbatchedUpdates(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return X.getPublicRootInstance(f._internalRoot)}\nfunction Fg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ug(b)?void 0:D(\"200\");return qf(a,b,null,c)}\nvar Gg={createPortal:Fg,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:X.findHostInstance(a)},hydrate:function(a,b,c){return Eg(null,a,b,!0,c)},render:function(a,b,c){return Eg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D(\"38\"):void 0;return Eg(a,b,c,!1,d)},unmountComponentAtNode:function(a){ug(a)?void 0:D(\"40\");return a._reactRootContainer?(X.unbatchedUpdates(function(){Eg(null,null,a,!1,function(){a._reactRootContainer=\nnull})}),!0):!1},unstable_createPortal:function(){return Fg.apply(void 0,arguments)},unstable_batchedUpdates:X.batchedUpdates,unstable_deferredUpdates:X.deferredUpdates,flushSync:X.flushSync,unstable_flushControlled:X.flushControlled,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ra,EventPluginRegistry:Ca,EventPropagators:kb,ReactControlledComponent:$b,ReactDOMComponentTree:bb,ReactDOMEventListener:$d},unstable_createRoot:function(a,b){return new tg(a,!0,null!=b&&!0===b.hydrate)}};\nX.injectIntoDevTools({findFiberByHostInstance:Ua,bundleType:0,version:\"16.3.2\",rendererPackageName:\"react-dom\"});var Hg=Object.freeze({default:Gg}),Ig=Hg&&Gg||Hg;module.exports=Ig[\"default\"]?Ig[\"default\"]:Ig;\n","/** @license React v16.3.2\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol[\"for\"],t=r?Symbol[\"for\"](\"react.element\"):60103,u=r?Symbol[\"for\"](\"react.portal\"):60106,v=r?Symbol[\"for\"](\"react.fragment\"):60107,w=r?Symbol[\"for\"](\"react.strict_mode\"):60108,x=r?Symbol[\"for\"](\"react.provider\"):60109,y=r?Symbol[\"for\"](\"react.context\"):60110,z=r?Symbol[\"for\"](\"react.async_mode\"):60111,A=r?Symbol[\"for\"](\"react.forward_ref\"):\n60112,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=arguments.length-1,e=\"http://reactjs.org/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};\nfunction E(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?C(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||D}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];d.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:I.current}}\nfunction M(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var N=/\\/+/g,O=[];function P(a,b,e,c){if(O.length){var d=O.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function Q(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>O.length&&O.push(a)}\nfunction R(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+S(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+S(d,h);g+=R(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+S(d,h++),g+=R(d,f,e,c);else\"object\"===d&&(e=\"\"+a,C(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function S(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function T(a,b){a.func.call(a.context,b,a.count++)}\nfunction U(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,e,q.thatReturnsArgument):null!=a&&(M(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(N,\"$\\x26/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function V(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(N,\"$\\x26/\")+\"/\");b=P(b,g,c,d);null==a||R(a,\"\",U,b);Q(b)}\nvar W={Children:{map:function(a,b,e){if(null==a)return a;var c=[];V(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=P(null,null,b,e);null==a||R(a,\"\",T,b);Q(b)},count:function(a){return null==a?0:R(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];V(a,b,null,q.thatReturnsArgument);return b},only:function(a){M(a)?void 0:C(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:y,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_changedBits:0,Provider:null,Consumer:null};a.Provider={$$typeof:x,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:A,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:z,createElement:L,cloneElement:function(a,b,e){null===a||void 0===a?C(\"267\",a):void 0;var c=void 0,d=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);var k=void 0;a.type&&a.type.defaultProps&&\n(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];d.children=k}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:M,version:\"16.3.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,assign:m}},X=Object.freeze({default:W}),\nY=X&&W||X;module.exports=Y[\"default\"]?Y[\"default\"]:Y;\n"],"sourceRoot":""}